"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.decodeMulti = void 0;
const abi_1 = require("@ethersproject/abi");
const address_1 = require("@ethersproject/address");
const bignumber_1 = require("@ethersproject/bignumber");
const encodeMulti_1 = require("./encodeMulti");
const unpack = (packed, startIndex) => {
    // read operation from first 8 bits (= 2 hex digits)
    const operation = parseInt(packed.substring(startIndex, startIndex + 2), 16);
    // the next 40 characters are the to address
    const to = (0, address_1.getAddress)(`0x${packed.substring(startIndex + 2, startIndex + 42)}`);
    // then comes the uint256 value (= 64 hex digits)
    const value = bignumber_1.BigNumber.from(`0x${packed.substring(startIndex + 42, startIndex + 106)}`).toHexString();
    // and the uint256 data length (= 64 hex digits)
    const hexDataLength = parseInt(packed.substring(startIndex + 106, startIndex + 170), 16);
    const endIndex = startIndex + 170 + hexDataLength * 2; // * 2 because each hex item is represented with 2 digits
    const data = `0x${packed.substring(startIndex + 170, endIndex)}`;
    return {
        operation,
        to,
        value,
        data,
        endIndex,
    };
};
const decodeMulti = (data) => {
    const multiSendContract = new abi_1.Interface(encodeMulti_1.MULTI_SEND_ABI);
    const tx = multiSendContract.parseTransaction({ data });
    const [transactionsEncoded] = tx.args;
    const result = [];
    let startIndex = 2; // skip over 0x
    while (startIndex < transactionsEncoded.length) {
        const _a = unpack(transactionsEncoded, startIndex), { endIndex } = _a, tx = __rest(_a, ["endIndex"]);
        result.push(tx);
        startIndex = endIndex;
    }
    return result;
};
exports.decodeMulti = decodeMulti;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjb2RlTXVsdGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZGVjb2RlTXVsdGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSw0Q0FBOEM7QUFDOUMsb0RBQW1EO0FBQ25ELHdEQUFvRDtBQUVwRCwrQ0FBOEM7QUFHOUMsTUFBTSxNQUFNLEdBQUcsQ0FBQyxNQUFjLEVBQUUsVUFBa0IsRUFBRSxFQUFFO0lBQ3BELG9EQUFvRDtJQUNwRCxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEVBQUUsVUFBVSxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFBO0lBQzVFLDRDQUE0QztJQUM1QyxNQUFNLEVBQUUsR0FBRyxJQUFBLG9CQUFVLEVBQ25CLEtBQUssTUFBTSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEdBQUcsQ0FBQyxFQUFFLFVBQVUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUN6RCxDQUFBO0lBQ0QsaURBQWlEO0lBQ2pELE1BQU0sS0FBSyxHQUFHLHFCQUFTLENBQUMsSUFBSSxDQUMxQixLQUFLLE1BQU0sQ0FBQyxTQUFTLENBQUMsVUFBVSxHQUFHLEVBQUUsRUFBRSxVQUFVLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FDM0QsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtJQUVmLGdEQUFnRDtJQUNoRCxNQUFNLGFBQWEsR0FBRyxRQUFRLENBQzVCLE1BQU0sQ0FBQyxTQUFTLENBQUMsVUFBVSxHQUFHLEdBQUcsRUFBRSxVQUFVLEdBQUcsR0FBRyxDQUFDLEVBQ3BELEVBQUUsQ0FDSCxDQUFBO0lBQ0QsTUFBTSxRQUFRLEdBQUcsVUFBVSxHQUFHLEdBQUcsR0FBRyxhQUFhLEdBQUcsQ0FBQyxDQUFBLENBQUMseURBQXlEO0lBQy9HLE1BQU0sSUFBSSxHQUFHLEtBQUssTUFBTSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEdBQUcsR0FBRyxFQUFFLFFBQVEsQ0FBQyxFQUFFLENBQUE7SUFDaEUsT0FBTztRQUNMLFNBQVM7UUFDVCxFQUFFO1FBQ0YsS0FBSztRQUNMLElBQUk7UUFDSixRQUFRO0tBQ1QsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQUVNLE1BQU0sV0FBVyxHQUFHLENBQUMsSUFBWSxFQUFxQixFQUFFO0lBQzdELE1BQU0saUJBQWlCLEdBQUcsSUFBSSxlQUFTLENBQUMsNEJBQWMsQ0FBQyxDQUFBO0lBQ3ZELE1BQU0sRUFBRSxHQUFHLGlCQUFpQixDQUFDLGdCQUFnQixDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQTtJQUN2RCxNQUFNLENBQUMsbUJBQW1CLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFBO0lBQ3JDLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQTtJQUVqQixJQUFJLFVBQVUsR0FBRyxDQUFDLENBQUEsQ0FBQyxlQUFlO0lBQ2xDLE9BQU8sVUFBVSxHQUFHLG1CQUFtQixDQUFDLE1BQU0sRUFBRTtRQUM5QyxNQUFNLEtBQXNCLE1BQU0sQ0FBQyxtQkFBbUIsRUFBRSxVQUFVLENBQUMsRUFBN0QsRUFBRSxRQUFRLE9BQW1ELEVBQTlDLEVBQUUsY0FBakIsWUFBbUIsQ0FBMEMsQ0FBQTtRQUNuRSxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQ2YsVUFBVSxHQUFHLFFBQVEsQ0FBQTtLQUN0QjtJQUNELE9BQU8sTUFBTSxDQUFBO0FBQ2YsQ0FBQyxDQUFBO0FBYlksUUFBQSxXQUFXLGVBYXZCIn0=