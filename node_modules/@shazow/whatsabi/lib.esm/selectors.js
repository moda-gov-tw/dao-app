import { FunctionFragment } from "ethers";
import { keccak256 } from "./utils.js";
import { abiFromBytecode } from "./disasm.js";
// Load function selectors mapping from ABI, parsed using ethers.js
// Mapping is selector hash to signature
export function selectorsFromABI(abi) {
    const r = {};
    for (const el of abi) {
        if (typeof (el) !== "string" && el.type !== "function")
            continue;
        const f = FunctionFragment.from(el).format();
        r[keccak256(f).substring(0, 10)] = f;
    }
    return r;
}
// Load function selectors from EVM bytecode by parsing JUMPI instructions
export function selectorsFromBytecode(code) {
    const abi = abiFromBytecode(code);
    if (abi.length === 0)
        return [];
    let selectors = [];
    for (const a of abi) {
        if (a.type !== "function")
            continue;
        selectors.push(a.selector);
    }
    return selectors;
}
//# sourceMappingURL=selectors.js.map