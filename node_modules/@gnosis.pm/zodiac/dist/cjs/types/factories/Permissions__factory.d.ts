import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { Permissions, PermissionsInterface } from "../Permissions";
export declare class Permissions__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "ArraysDifferentLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CalldataOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DelegateCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "FunctionNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "FunctionSignatureTooShort";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoMembership";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotEnoughCompValuesForOneOf";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ParameterGreaterThanAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ParameterLessThanAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ParameterNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ParameterNotOneOfAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ScopeMaxParametersExceeded";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SendNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TargetAddressNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnacceptableMultiSendOffset";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnsuitableDynamic32CompValueSize";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnsuitableOneOfComparison";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnsuitableRelativeComparison";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnsuitableStaticCompValueSize";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "role";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "targetAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "enum ExecutionOptions";
            readonly name: "options";
            readonly type: "uint8";
        }];
        readonly name: "AllowTarget";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "role";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "targetAddress";
            readonly type: "address";
        }];
        readonly name: "RevokeTarget";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "role";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "targetAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes4";
            readonly name: "selector";
            readonly type: "bytes4";
        }, {
            readonly indexed: false;
            readonly internalType: "enum ExecutionOptions";
            readonly name: "options";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "resultingScopeConfig";
            readonly type: "uint256";
        }];
        readonly name: "ScopeAllowFunction";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "role";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "targetAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes4";
            readonly name: "functionSig";
            readonly type: "bytes4";
        }, {
            readonly indexed: false;
            readonly internalType: "bool[]";
            readonly name: "isParamScoped";
            readonly type: "bool[]";
        }, {
            readonly indexed: false;
            readonly internalType: "enum ParameterType[]";
            readonly name: "paramType";
            readonly type: "uint8[]";
        }, {
            readonly indexed: false;
            readonly internalType: "enum Comparison[]";
            readonly name: "paramComp";
            readonly type: "uint8[]";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes[]";
            readonly name: "compValue";
            readonly type: "bytes[]";
        }, {
            readonly indexed: false;
            readonly internalType: "enum ExecutionOptions";
            readonly name: "options";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "resultingScopeConfig";
            readonly type: "uint256";
        }];
        readonly name: "ScopeFunction";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "role";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "targetAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes4";
            readonly name: "functionSig";
            readonly type: "bytes4";
        }, {
            readonly indexed: false;
            readonly internalType: "enum ExecutionOptions";
            readonly name: "options";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "resultingScopeConfig";
            readonly type: "uint256";
        }];
        readonly name: "ScopeFunctionExecutionOptions";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "role";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "targetAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes4";
            readonly name: "functionSig";
            readonly type: "bytes4";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "enum ParameterType";
            readonly name: "paramType";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "enum Comparison";
            readonly name: "paramComp";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "compValue";
            readonly type: "bytes";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "resultingScopeConfig";
            readonly type: "uint256";
        }];
        readonly name: "ScopeParameter";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "role";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "targetAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes4";
            readonly name: "functionSig";
            readonly type: "bytes4";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "enum ParameterType";
            readonly name: "paramType";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes[]";
            readonly name: "compValues";
            readonly type: "bytes[]";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "resultingScopeConfig";
            readonly type: "uint256";
        }];
        readonly name: "ScopeParameterAsOneOf";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "role";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "targetAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes4";
            readonly name: "selector";
            readonly type: "bytes4";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "resultingScopeConfig";
            readonly type: "uint256";
        }];
        readonly name: "ScopeRevokeFunction";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "role";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "targetAddress";
            readonly type: "address";
        }];
        readonly name: "ScopeTarget";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "role";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "targetAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes4";
            readonly name: "functionSig";
            readonly type: "bytes4";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "resultingScopeConfig";
            readonly type: "uint256";
        }];
        readonly name: "UnscopeParameter";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "targetAddress";
            readonly type: "address";
        }, {
            readonly internalType: "bytes4";
            readonly name: "functionSig";
            readonly type: "bytes4";
        }, {
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }];
        readonly name: "keyForCompValues";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "targetAddress";
            readonly type: "address";
        }, {
            readonly internalType: "bytes4";
            readonly name: "functionSig";
            readonly type: "bytes4";
        }];
        readonly name: "keyForFunctions";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): PermissionsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Permissions;
}
