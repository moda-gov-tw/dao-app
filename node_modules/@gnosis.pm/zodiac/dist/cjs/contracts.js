"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MasterCopyInitData = exports.ContractFactories = exports.ContractAbis = exports.ContractAddresses = exports.ContractVersions = exports.MasterCopyAddresses = exports.SupportedNetworks = void 0;
const Bridge_json_1 = __importDefault(require("./abi/Bridge.json"));
const CirculatingSupplyErc20_json_1 = __importDefault(require("./abi/CirculatingSupplyErc20.json"));
const CirculatingSupplyErc721_json_1 = __importDefault(require("./abi/CirculatingSupplyErc721.json"));
const Connext_json_1 = __importDefault(require("./abi/Connext.json"));
const Delay_json_1 = __importDefault(require("./abi/Delay.json"));
const Erc20Votes_json_1 = __importDefault(require("./abi/Erc20Votes.json"));
const Erc721Votes_json_1 = __importDefault(require("./abi/Erc721Votes.json"));
const ExitErc20_json_1 = __importDefault(require("./abi/ExitErc20.json"));
const ExitErc721_json_1 = __importDefault(require("./abi/ExitErc721.json"));
const Integrity_json_1 = __importDefault(require("./abi/Integrity.json"));
const MetaGuard_json_1 = __importDefault(require("./abi/MetaGuard.json"));
const ModuleProxyFactory_json_1 = __importDefault(require("./abi/ModuleProxyFactory.json"));
const MultisendEncoder_json_1 = __importDefault(require("./abi/MultisendEncoder.json"));
const OptimisticGovernor_json_1 = __importDefault(require("./abi/OptimisticGovernor.json"));
const OzGovernor_json_1 = __importDefault(require("./abi/OzGovernor.json"));
const Packer_json_1 = __importDefault(require("./abi/Packer.json"));
const Permissions_json_1 = __importDefault(require("./abi/Permissions.json"));
const RealityErc20_json_1 = __importDefault(require("./abi/RealityErc20.json"));
const RealityEth_json_1 = __importDefault(require("./abi/RealityEth.json"));
const Roles_json_1 = __importDefault(require("./abi/Roles.json"));
const ScopeGuard_json_1 = __importDefault(require("./abi/ScopeGuard.json"));
const Tellor_json_1 = __importDefault(require("./abi/Tellor.json"));
const types_1 = require("./factory/types");
const BridgeInitData = __importStar(require("./initData/Bridge"));
const CirculatingSupplyErc20InitData = __importStar(require("./initData/CirculatingSupplyErc20"));
const CirculatingSupplyErc721InitData = __importStar(require("./initData/CirculatingSupplyErc721"));
const ConnextInitData = __importStar(require("./initData/Connext"));
const DelayInitData = __importStar(require("./initData/Delay"));
const Erc20VotesInitData = __importStar(require("./initData/Erc20Votes"));
const Erc721VotesInitData = __importStar(require("./initData/Erc721Votes"));
const ExitErc20InitData = __importStar(require("./initData/ExitErc20"));
const ExitErc721InitData = __importStar(require("./initData/ExitErc721"));
const IntegrityInitData = __importStar(require("./initData/Integrity"));
const ModuleProxyFactoryInitData = __importStar(require("./initData/ModuleProxyFactory"));
const MultisendEncoderInitData = __importStar(require("./initData/MultisendEncoder"));
const OzGovernorInitData = __importStar(require("./initData/OzGovernor"));
const PackerInitData = __importStar(require("./initData/Packer"));
const PermissionsInitData = __importStar(require("./initData/Permissions"));
const RealityErc20InitData = __importStar(require("./initData/RealityErc20"));
const RealityEthInitData = __importStar(require("./initData/RealityEth"));
const RolesInitData = __importStar(require("./initData/Roles"));
const ScopeGuardInitData = __importStar(require("./initData/ScopeGuard"));
const types_2 = require("./types");
var SupportedNetworks;
(function (SupportedNetworks) {
    SupportedNetworks[SupportedNetworks["Mainnet"] = 1] = "Mainnet";
    SupportedNetworks[SupportedNetworks["GnosisChain"] = 100] = "GnosisChain";
    SupportedNetworks[SupportedNetworks["Goerli"] = 5] = "Goerli";
    SupportedNetworks[SupportedNetworks["ArbitrumOne"] = 42161] = "ArbitrumOne";
    SupportedNetworks[SupportedNetworks["Optimism"] = 10] = "Optimism";
    SupportedNetworks[SupportedNetworks["Polygon"] = 137] = "Polygon";
    SupportedNetworks[SupportedNetworks["Mumbai"] = 80001] = "Mumbai";
    SupportedNetworks[SupportedNetworks["Avalanche"] = 43114] = "Avalanche";
    SupportedNetworks[SupportedNetworks["BinanceSmartChain"] = 56] = "BinanceSmartChain";
    SupportedNetworks[SupportedNetworks["HardhatNetwork"] = 31337] = "HardhatNetwork";
    SupportedNetworks[SupportedNetworks["LineaGoerli"] = 59140] = "LineaGoerli";
    SupportedNetworks[SupportedNetworks["Sepolia"] = 11155111] = "Sepolia";
})(SupportedNetworks || (exports.SupportedNetworks = SupportedNetworks = {}));
// const canonicalMasterCopyAddress = (contract: KnownContracts) => {
//   const { initCode, salt } = MasterCopyInitData[contract];
//   return getCreate2Address(SingletonFactoryAddress, salt, keccak256(initCode));
// };
/** The canonical mastercopy addresses when deployed using the singleton factory.  */
const CanonicalAddresses = {
    [types_1.KnownContracts.META_GUARD]: {
        "1.0.0": "0xe2847462a574bfd43014d1c7BB6De5769C294691",
    },
    [types_1.KnownContracts.REALITY_ETH]: {
        "2.0.0": "0x4e35DA39Fa5893a70A40Ce964F993d891E607cC0",
    },
    [types_1.KnownContracts.REALITY_ERC20]: {
        "2.0.0": "0x7276813b21623d89BA8984B225d5792943DD7dbF",
    },
    [types_1.KnownContracts.BRIDGE]: {
        "1.0.0": "0x03B5eBD2CB2e3339E93774A1Eb7c8634B8C393A9",
    },
    [types_1.KnownContracts.DELAY]: {
        "1.0.0": "0xD62129BF40CD1694b3d9D9847367783a1A4d5cB4",
    },
    [types_1.KnownContracts.FACTORY]: {
        "1.0.0": "0x00000000062c52e29e8029dc2413172f6d619d85",
        "1.1.0": "0x00000000000DC7F163742Eb4aBEf650037b1f588",
        "1.2.0": "0x000000000000aDdB49795b0f9bA5BC298cDda236",
    },
    [types_1.KnownContracts.EXIT_ERC20]: {
        "1.0.0": "0x35E35dcDc7Cd112B93C7c55987C86e5D6D419C69",
        "1.1.0": "0x33bCa41bda8A3983afbAd8fc8936Ce2Fb29121da",
        "1.2.0": "0x3ed380a282aDfA3460da28560ebEB2F6D967C9f5",
    },
    [types_1.KnownContracts.EXIT_ERC721]: {
        "1.1.0": "0xD3579C14a4181EfC3DF35C3103D20823A8C8d718",
        "1.2.0": "0xE0eCE32Eb4BE4E9224dcec6a4FcB335c1fe05CDe",
    },
    [types_1.KnownContracts.CIRCULATING_SUPPLY_ERC20]: {
        "1.0.0": "0xd7a85e7D0813F8440602E243Acb67df3CCeb5a60",
        "1.1.0": "0xb50fab2e2892E3323A5300870C042B428B564FE3",
        "1.2.0": "0x5Ed57C291a184cc244F5c9B5E9F11a8DD08BBd12",
    },
    [types_1.KnownContracts.CIRCULATING_SUPPLY_ERC721]: {
        "1.1.0": "0x71530ec830CBE363bab28F4EC52964a550C0AB1E",
        "1.2.0": "0xBD34D00dC0ae37C687F784A11FA6a0F2c5726Ba3",
    },
    [types_1.KnownContracts.SCOPE_GUARD]: {
        "1.0.0": "0xeF27fcd3965a866b22Fb2d7C689De9AB7e611f1F",
    },
    [types_1.KnownContracts.ROLES]: {
        "1.0.0": "0x85388a8cd772b19a468F982Dc264C238856939C9",
        "1.1.0": "0xD8DfC1d938D7D163C5231688341e9635E9011889",
        "2.0.0": "0xb8bB41FA7E5e64452DBCA1C8A0e7058D43abAf4f",
    },
    [types_1.KnownContracts.PERMISSIONS]: {
        "1.0.0": "0x33D1C5A5B6a7f3885c7467e829aaa21698937597",
    },
    [types_1.KnownContracts.TELLOR]: {
        "2.1.0": "0xa89EC2C1e218CfBb0F82829E95352CeAbDEe9A69",
    },
    [types_1.KnownContracts.OPTIMISTIC_GOVERNOR]: {
        "1.0.0": "",
    },
    [types_1.KnownContracts.OZ_GOVERNOR]: {
        "1.0.0": "0xe28c39FAC73cce2B33C4C003049e2F3AE43f77d5",
    },
    [types_1.KnownContracts.ERC20_VOTES]: {
        "1.0.0": "0x752c61de75ADA0F8a33e048d2F773f51172f033e",
    },
    [types_1.KnownContracts.ERC721_VOTES]: {
        "1.0.0": "0xeFf38b2eBB95ACBA09761246045743f40e762568",
    },
    [types_1.KnownContracts.MULTISEND_ENCODER]: {
        "1.0.0": "0xb67EDe523171325345780fA3016b7F5221293df0",
    },
    [types_1.KnownContracts.CONNEXT]: {
        "1.0.0": "0x7dE07b9De0bf0FABf31A188DE1527034b2aF36dB",
    },
    [types_1.KnownContracts.PACKER]: {
        "2.0.0": "0x60E89c71882e88f16772490d2f05819d9521EAb1",
    },
    [types_1.KnownContracts.INTEGRITY]: {
        "2.0.0": "0x52c342e002C5F7CF14Ef89b5e04Cf6D53c7F8e72",
    },
};
/**
 * Canonical addresses of head versions of each contract.
 * This export will be removed in a future version. Use `ContractAddresses` instead.
 * @deprecated
 **/
exports.MasterCopyAddresses = Object.fromEntries(Object.entries(CanonicalAddresses).map(([key, value]) => [
    key,
    Object.values(value).pop() || "",
]));
/** Addresses of all deployed contracts in all versions */
exports.ContractVersions = {
    [SupportedNetworks.Mainnet]: Object.assign(Object.assign({}, CanonicalAddresses), { [types_1.KnownContracts.OPTIMISTIC_GOVERNOR]: {
            "1.2.0": "0x28CeBFE94a03DbCA9d17143e9d2Bd1155DC26D5d",
        }, [types_1.KnownContracts.TELLOR]: {
            "2.1.0": "0xaB80413Ab8C4aF91Af5F349352a0c92CF3A30D18",
        } }),
    [SupportedNetworks.Goerli]: Object.assign(Object.assign({}, CanonicalAddresses), { [types_1.KnownContracts.OPTIMISTIC_GOVERNOR]: {
            "1.2.0": "0x07a7Be7AA4AaD42696A17e974486cb64A4daC47b",
        }, [types_1.KnownContracts.TELLOR]: {
            "2.1.0": "0x4FCba614bf5df50b2575a5825adbc4739aE6FDF5",
        } }),
    [SupportedNetworks.BinanceSmartChain]: CanonicalAddresses,
    [SupportedNetworks.GnosisChain]: Object.assign(Object.assign({}, CanonicalAddresses), { [types_1.KnownContracts.OPTIMISTIC_GOVERNOR]: {
            "1.2.0": "0x972396Ab668cd11dc1F6321A5ae30c6A8d3759F0",
        } }),
    [SupportedNetworks.Polygon]: Object.assign(Object.assign({}, CanonicalAddresses), { [types_1.KnownContracts.OPTIMISTIC_GOVERNOR]: {
            "1.2.0": "0x3Cc4b597E9c3f51288c6Cd0c087DC14c3FfdD966",
        } }),
    [SupportedNetworks.HardhatNetwork]: CanonicalAddresses,
    [SupportedNetworks.Mumbai]: CanonicalAddresses,
    [SupportedNetworks.ArbitrumOne]: Object.assign(Object.assign({}, CanonicalAddresses), { [types_1.KnownContracts.OPTIMISTIC_GOVERNOR]: {
            "1.2.0": "0x30679ca4ea452d3df8a6c255a806e08810321763",
        } }),
    [SupportedNetworks.Optimism]: Object.assign(Object.assign({}, CanonicalAddresses), { [types_1.KnownContracts.OPTIMISTIC_GOVERNOR]: {
            "1.2.0": "0x357fe84E438B3150d2F68AB9167bdb8f881f3b9A",
        } }),
    [SupportedNetworks.Avalanche]: Object.assign(Object.assign({}, CanonicalAddresses), { [types_1.KnownContracts.TELLOR]: {}, [types_1.KnownContracts.OPTIMISTIC_GOVERNOR]: {
            "1.2.0": "0xEF8b46765ae805537053C59f826C3aD61924Db45",
        } }),
    [SupportedNetworks.LineaGoerli]: CanonicalAddresses,
    [SupportedNetworks.Sepolia]: CanonicalAddresses,
};
/** Addresses of the head versions of all contracts */
exports.ContractAddresses = Object.fromEntries(Object.entries(exports.ContractVersions).map(([network, contracts]) => [
    network,
    Object.fromEntries(Object.entries(contracts).map(([contract, versions]) => [
        contract,
        Object.values(versions).pop() || "",
    ])),
]));
exports.ContractAbis = {
    [types_1.KnownContracts.BRIDGE]: Bridge_json_1.default,
    [types_1.KnownContracts.CIRCULATING_SUPPLY_ERC20]: CirculatingSupplyErc20_json_1.default,
    [types_1.KnownContracts.CIRCULATING_SUPPLY_ERC721]: CirculatingSupplyErc721_json_1.default,
    [types_1.KnownContracts.DELAY]: Delay_json_1.default,
    [types_1.KnownContracts.ERC20_VOTES]: Erc20Votes_json_1.default,
    [types_1.KnownContracts.ERC721_VOTES]: Erc721Votes_json_1.default,
    [types_1.KnownContracts.EXIT_ERC20]: ExitErc20_json_1.default,
    [types_1.KnownContracts.EXIT_ERC721]: ExitErc721_json_1.default,
    [types_1.KnownContracts.FACTORY]: ModuleProxyFactory_json_1.default,
    [types_1.KnownContracts.META_GUARD]: MetaGuard_json_1.default,
    [types_1.KnownContracts.OPTIMISTIC_GOVERNOR]: OptimisticGovernor_json_1.default,
    [types_1.KnownContracts.OZ_GOVERNOR]: OzGovernor_json_1.default,
    [types_1.KnownContracts.REALITY_ERC20]: RealityErc20_json_1.default,
    [types_1.KnownContracts.REALITY_ETH]: RealityEth_json_1.default,
    [types_1.KnownContracts.ROLES]: Roles_json_1.default,
    [types_1.KnownContracts.SCOPE_GUARD]: ScopeGuard_json_1.default,
    [types_1.KnownContracts.TELLOR]: Tellor_json_1.default,
    [types_1.KnownContracts.MULTISEND_ENCODER]: MultisendEncoder_json_1.default,
    [types_1.KnownContracts.PERMISSIONS]: Permissions_json_1.default,
    [types_1.KnownContracts.CONNEXT]: Connext_json_1.default,
    [types_1.KnownContracts.PACKER]: Packer_json_1.default,
    [types_1.KnownContracts.INTEGRITY]: Integrity_json_1.default,
};
exports.ContractFactories = {
    [types_1.KnownContracts.BRIDGE]: types_2.factories.Bridge__factory,
    [types_1.KnownContracts.CIRCULATING_SUPPLY_ERC20]: types_2.factories.CirculatingSupplyErc20__factory,
    [types_1.KnownContracts.CIRCULATING_SUPPLY_ERC721]: types_2.factories.CirculatingSupplyErc721__factory,
    [types_1.KnownContracts.DELAY]: types_2.factories.Delay__factory,
    [types_1.KnownContracts.ERC20_VOTES]: types_2.factories.Erc20Votes__factory,
    [types_1.KnownContracts.ERC721_VOTES]: types_2.factories.Erc721Votes__factory,
    [types_1.KnownContracts.EXIT_ERC20]: types_2.factories.ExitErc20__factory,
    [types_1.KnownContracts.EXIT_ERC721]: types_2.factories.ExitErc721__factory,
    [types_1.KnownContracts.FACTORY]: types_2.factories.ModuleProxyFactory__factory,
    [types_1.KnownContracts.META_GUARD]: types_2.factories.MetaGuard__factory,
    [types_1.KnownContracts.OPTIMISTIC_GOVERNOR]: types_2.factories.OptimisticGovernor__factory,
    [types_1.KnownContracts.OZ_GOVERNOR]: types_2.factories.OzGovernor__factory,
    [types_1.KnownContracts.REALITY_ERC20]: types_2.factories.RealityErc20__factory,
    [types_1.KnownContracts.REALITY_ETH]: types_2.factories.RealityEth__factory,
    [types_1.KnownContracts.ROLES]: types_2.factories.Roles__factory,
    [types_1.KnownContracts.SCOPE_GUARD]: types_2.factories.ScopeGuard__factory,
    [types_1.KnownContracts.TELLOR]: types_2.factories.Tellor__factory,
    [types_1.KnownContracts.MULTISEND_ENCODER]: types_2.factories.MultisendEncoder__factory,
    [types_1.KnownContracts.PERMISSIONS]: types_2.factories.Permissions__factory,
    [types_1.KnownContracts.CONNEXT]: types_2.factories.Connext__factory,
    [types_1.KnownContracts.PACKER]: types_2.factories.Packer__factory,
    [types_1.KnownContracts.INTEGRITY]: types_2.factories.Integrity__factory,
};
exports.MasterCopyInitData = {
    [types_1.KnownContracts.BRIDGE]: BridgeInitData,
    [types_1.KnownContracts.CIRCULATING_SUPPLY_ERC20]: CirculatingSupplyErc20InitData,
    [types_1.KnownContracts.CIRCULATING_SUPPLY_ERC721]: CirculatingSupplyErc721InitData,
    [types_1.KnownContracts.DELAY]: DelayInitData,
    [types_1.KnownContracts.ERC20_VOTES]: Erc20VotesInitData,
    [types_1.KnownContracts.ERC721_VOTES]: Erc721VotesInitData,
    [types_1.KnownContracts.EXIT_ERC20]: ExitErc20InitData,
    [types_1.KnownContracts.EXIT_ERC721]: ExitErc721InitData,
    [types_1.KnownContracts.FACTORY]: ModuleProxyFactoryInitData,
    [types_1.KnownContracts.META_GUARD]: undefined,
    [types_1.KnownContracts.OPTIMISTIC_GOVERNOR]: undefined,
    [types_1.KnownContracts.OZ_GOVERNOR]: OzGovernorInitData,
    [types_1.KnownContracts.REALITY_ERC20]: RealityErc20InitData,
    [types_1.KnownContracts.REALITY_ETH]: RealityEthInitData,
    [types_1.KnownContracts.ROLES]: RolesInitData,
    [types_1.KnownContracts.SCOPE_GUARD]: ScopeGuardInitData,
    [types_1.KnownContracts.TELLOR]: undefined,
    [types_1.KnownContracts.MULTISEND_ENCODER]: MultisendEncoderInitData,
    [types_1.KnownContracts.PERMISSIONS]: PermissionsInitData,
    [types_1.KnownContracts.CONNEXT]: ConnextInitData,
    [types_1.KnownContracts.PACKER]: PackerInitData,
    [types_1.KnownContracts.INTEGRITY]: IntegrityInitData,
};
