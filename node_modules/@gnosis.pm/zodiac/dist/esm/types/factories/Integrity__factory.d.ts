import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { Integrity, IntegrityInterface } from "../Integrity";
export declare class Integrity__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "NotBFS";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }];
        readonly name: "UnsuitableChildCount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }];
        readonly name: "UnsuitableChildTypeTree";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }];
        readonly name: "UnsuitableCompValue";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }];
        readonly name: "UnsuitableParameterType";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }];
        readonly name: "UnsuitableParent";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnsuitableRootNode";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }];
        readonly name: "UnsupportedOperator";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "parent";
                readonly type: "uint8";
            }, {
                readonly internalType: "enum ParameterType";
                readonly name: "paramType";
                readonly type: "ParameterType";
            }, {
                readonly internalType: "enum Operator";
                readonly name: "operator";
                readonly type: "Operator";
            }, {
                readonly internalType: "bytes";
                readonly name: "compValue";
                readonly type: "bytes";
            }];
            readonly internalType: "struct ConditionFlat[]";
            readonly name: "conditions";
            readonly type: "tuple[]";
        }];
        readonly name: "enforce";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): IntegrityInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Integrity;
}
