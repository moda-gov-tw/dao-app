import {
  require_tslib
} from "./chunk-L3R5IPTY.js";
import {
  __commonJS
} from "./chunk-LMAYTEU7.js";

// node_modules/@daohaus/abis/src/abi/baal.json
var require_baal = __commonJS({
  "node_modules/@daohaus/abis/src/abi/baal.json"(exports, module) {
    module.exports = [
      { inputs: [], stateMutability: "nonpayable", type: "constructor" },
      {
        inputs: [
          { internalType: "address", name: "guard_", type: "address" }
        ],
        name: "NotIERC165Compliant",
        type: "error"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "previousAvatar",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "newAvatar",
            type: "address"
          }
        ],
        name: "AvatarSet",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "uint256",
            name: "proposal",
            type: "uint256"
          }
        ],
        name: "CancelProposal",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "guard",
            type: "address"
          }
        ],
        name: "ChangedGuard",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "uint32",
            name: "voting",
            type: "uint32"
          },
          {
            indexed: false,
            internalType: "uint32",
            name: "grace",
            type: "uint32"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "newOffering",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "quorum",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "sponsor",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "minRetention",
            type: "uint256"
          }
        ],
        name: "GovernanceConfigSet",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "uint8",
            name: "version",
            type: "uint8"
          }
        ],
        name: "Initialized",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "bool",
            name: "adminLock",
            type: "bool"
          }
        ],
        name: "LockAdmin",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "bool",
            name: "governorLock",
            type: "bool"
          }
        ],
        name: "LockGovernor",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "bool",
            name: "managerLock",
            type: "bool"
          }
        ],
        name: "LockManager",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "bool",
            name: "paused",
            type: "bool"
          }
        ],
        name: "LootPaused",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "uint256",
            name: "proposal",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "bool",
            name: "passed",
            type: "bool"
          },
          {
            indexed: false,
            internalType: "bool",
            name: "actionFailed",
            type: "bool"
          }
        ],
        name: "ProcessProposal",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "member",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: true,
            internalType: "uint256",
            name: "lootToBurn",
            type: "uint256"
          },
          {
            indexed: true,
            internalType: "uint256",
            name: "sharesToBurn",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "address[]",
            name: "tokens",
            type: "address[]"
          }
        ],
        name: "Ragequit",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "forwarder",
            type: "address"
          }
        ],
        name: "SetTrustedForwarder",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "bool",
            name: "lootPaused",
            type: "bool"
          },
          {
            indexed: false,
            internalType: "bool",
            name: "sharesPaused",
            type: "bool"
          },
          {
            indexed: false,
            internalType: "uint32",
            name: "gracePeriod",
            type: "uint32"
          },
          {
            indexed: false,
            internalType: "uint32",
            name: "votingPeriod",
            type: "uint32"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "proposalOffering",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "quorumPercent",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "sponsorThreshold",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "minRetentionPercent",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "string",
            name: "name",
            type: "string"
          },
          {
            indexed: false,
            internalType: "string",
            name: "symbol",
            type: "string"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "totalShares",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "totalLoot",
            type: "uint256"
          }
        ],
        name: "SetupComplete",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "shaman",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "permission",
            type: "uint256"
          }
        ],
        name: "ShamanSet",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "bool",
            name: "paused",
            type: "bool"
          }
        ],
        name: "SharesPaused",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "member",
            type: "address"
          },
          {
            indexed: true,
            internalType: "uint256",
            name: "proposal",
            type: "uint256"
          },
          {
            indexed: true,
            internalType: "uint256",
            name: "votingStarts",
            type: "uint256"
          }
        ],
        name: "SponsorProposal",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "uint256",
            name: "proposal",
            type: "uint256"
          },
          {
            indexed: true,
            internalType: "bytes32",
            name: "proposalDataHash",
            type: "bytes32"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "bytes",
            name: "proposalData",
            type: "bytes"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "expiration",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "baalGas",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "bool",
            name: "selfSponsor",
            type: "bool"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "string",
            name: "details",
            type: "string"
          }
        ],
        name: "SubmitProposal",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "member",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "balance",
            type: "uint256"
          },
          {
            indexed: true,
            internalType: "uint256",
            name: "proposal",
            type: "uint256"
          },
          {
            indexed: true,
            internalType: "bool",
            name: "approved",
            type: "bool"
          }
        ],
        name: "SubmitVote",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "previousTarget",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "newTarget",
            type: "address"
          }
        ],
        name: "TargetSet",
        type: "event"
      },
      {
        inputs: [],
        name: "adminLock",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "avatar",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address[]", name: "from", type: "address[]" },
          { internalType: "uint256[]", name: "amount", type: "uint256[]" }
        ],
        name: "burnLoot",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address[]", name: "from", type: "address[]" },
          { internalType: "uint256[]", name: "amount", type: "uint256[]" }
        ],
        name: "burnShares",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [{ internalType: "uint32", name: "id", type: "uint32" }],
        name: "cancelProposal",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "bytes[]", name: "_calls", type: "bytes[]" },
          { internalType: "address", name: "_target", type: "address" }
        ],
        name: "encodeMultisend",
        outputs: [
          { internalType: "bytes", name: "encodedMultisend", type: "bytes" }
        ],
        stateMutability: "pure",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "_to", type: "address" },
          { internalType: "uint256", name: "_value", type: "uint256" },
          { internalType: "bytes", name: "_data", type: "bytes" }
        ],
        name: "executeAsBaal",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "getGuard",
        outputs: [
          { internalType: "address", name: "_guard", type: "address" }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [{ internalType: "uint32", name: "id", type: "uint32" }],
        name: "getProposalStatus",
        outputs: [{ internalType: "bool[4]", name: "", type: "bool[4]" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "governorLock",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "gracePeriod",
        outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "guard",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "bytes", name: "_transactions", type: "bytes" }
        ],
        name: "hashOperation",
        outputs: [
          { internalType: "bytes32", name: "hash", type: "bytes32" }
        ],
        stateMutability: "pure",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "shaman", type: "address" }
        ],
        name: "isAdmin",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "shaman", type: "address" }
        ],
        name: "isGovernor",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "shaman", type: "address" }
        ],
        name: "isManager",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "forwarder", type: "address" }
        ],
        name: "isTrustedForwarder",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "latestSponsoredProposalId",
        outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "lockAdmin",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "lockGovernor",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "lockManager",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "lootToken",
        outputs: [
          { internalType: "contract IBaalToken", name: "", type: "address" }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "managerLock",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "", type: "address" },
          { internalType: "uint32", name: "", type: "uint32" }
        ],
        name: "memberVoted",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "minRetentionPercent",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address[]", name: "to", type: "address[]" },
          { internalType: "uint256[]", name: "amount", type: "uint256[]" }
        ],
        name: "mintLoot",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address[]", name: "to", type: "address[]" },
          { internalType: "uint256[]", name: "amount", type: "uint256[]" }
        ],
        name: "mintShares",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "multisendLibrary",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "uint32", name: "id", type: "uint32" },
          { internalType: "bytes", name: "proposalData", type: "bytes" }
        ],
        name: "processProposal",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "proposalCount",
        outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "proposalOffering",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        name: "proposals",
        outputs: [
          { internalType: "uint32", name: "id", type: "uint32" },
          { internalType: "uint32", name: "prevProposalId", type: "uint32" },
          { internalType: "uint32", name: "votingStarts", type: "uint32" },
          { internalType: "uint32", name: "votingEnds", type: "uint32" },
          { internalType: "uint32", name: "graceEnds", type: "uint32" },
          { internalType: "uint32", name: "expiration", type: "uint32" },
          { internalType: "uint256", name: "baalGas", type: "uint256" },
          { internalType: "uint256", name: "yesVotes", type: "uint256" },
          { internalType: "uint256", name: "noVotes", type: "uint256" },
          {
            internalType: "uint256",
            name: "maxTotalSharesAndLootAtVote",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "maxTotalSharesAtSponsor",
            type: "uint256"
          },
          { internalType: "address", name: "sponsor", type: "address" },
          {
            internalType: "bytes32",
            name: "proposalDataHash",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "quorumPercent",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "to", type: "address" },
          { internalType: "uint256", name: "sharesToBurn", type: "uint256" },
          { internalType: "uint256", name: "lootToBurn", type: "uint256" },
          { internalType: "address[]", name: "tokens", type: "address[]" }
        ],
        name: "ragequit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "bool", name: "pauseShares", type: "bool" },
          { internalType: "bool", name: "pauseLoot", type: "bool" }
        ],
        name: "setAdminConfig",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "_avatar", type: "address" }
        ],
        name: "setAvatar",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "bytes", name: "_governanceConfig", type: "bytes" }
        ],
        name: "setGovernanceConfig",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "_guard", type: "address" }
        ],
        name: "setGuard",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address[]", name: "_shamans", type: "address[]" },
          {
            internalType: "uint256[]",
            name: "_permissions",
            type: "uint256[]"
          }
        ],
        name: "setShamans",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "_target", type: "address" }
        ],
        name: "setTarget",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "_trustedForwarderAddress",
            type: "address"
          }
        ],
        name: "setTrustedForwarder",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes",
            name: "_initializationParams",
            type: "bytes"
          }
        ],
        name: "setUp",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [{ internalType: "address", name: "", type: "address" }],
        name: "shamans",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "sharesToken",
        outputs: [
          { internalType: "contract IBaalToken", name: "", type: "address" }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [{ internalType: "uint32", name: "id", type: "uint32" }],
        name: "sponsorProposal",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "sponsorThreshold",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [{ internalType: "uint32", name: "id", type: "uint32" }],
        name: "state",
        outputs: [
          { internalType: "enum Baal.ProposalState", name: "", type: "uint8" }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "bytes", name: "proposalData", type: "bytes" },
          { internalType: "uint32", name: "expiration", type: "uint32" },
          { internalType: "uint256", name: "baalGas", type: "uint256" },
          { internalType: "string", name: "details", type: "string" }
        ],
        name: "submitProposal",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "payable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "uint32", name: "id", type: "uint32" },
          { internalType: "bool", name: "approved", type: "bool" }
        ],
        name: "submitVote",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "voter", type: "address" },
          { internalType: "uint256", name: "expiry", type: "uint256" },
          { internalType: "uint256", name: "nonce", type: "uint256" },
          { internalType: "uint32", name: "id", type: "uint32" },
          { internalType: "bool", name: "approved", type: "bool" },
          { internalType: "uint8", name: "v", type: "uint8" },
          { internalType: "bytes32", name: "r", type: "bytes32" },
          { internalType: "bytes32", name: "s", type: "bytes32" }
        ],
        name: "submitVoteWithSig",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "target",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "totalLoot",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "totalShares",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "totalSupply",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "newOwner", type: "address" }
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "trustedForwarder",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "versionRecipient",
        outputs: [{ internalType: "string", name: "", type: "string" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [{ internalType: "address", name: "", type: "address" }],
        name: "votingNonces",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "votingPeriod",
        outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
        stateMutability: "view",
        type: "function"
      }
    ];
  }
});

// node_modules/@daohaus/abis/src/abi/baalSummoner.json
var require_baalSummoner = __commonJS({
  "node_modules/@daohaus/abis/src/abi/baalSummoner.json"(exports, module) {
    module.exports = [
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "previousAdmin",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "newAdmin",
            type: "address"
          }
        ],
        name: "AdminChanged",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "beacon",
            type: "address"
          }
        ],
        name: "BeaconUpgraded",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "bytes32",
            name: "referrer",
            type: "bytes32"
          },
          {
            indexed: false,
            internalType: "address",
            name: "daoAddress",
            type: "address"
          }
        ],
        name: "DaoReferral",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "baalSafe",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "moduleAddr",
            type: "address"
          }
        ],
        name: "DeployBaalSafe",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "lootToken",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "sharesToken",
            type: "address"
          }
        ],
        name: "DeployBaalTokens",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "uint8",
            name: "version",
            type: "uint8"
          }
        ],
        name: "Initialized",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "uint256",
            name: "version",
            type: "uint256"
          }
        ],
        name: "SetAddrsVersion",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "baal",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "loot",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "shares",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "safe",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "forwarder",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "existingAddrs",
            type: "uint256"
          }
        ],
        name: "SummonBaal",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "implementation",
            type: "address"
          }
        ],
        name: "Upgraded",
        type: "event"
      },
      {
        inputs: [],
        name: "addrsVersion",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "_moduleAddr", type: "address" }
        ],
        name: "deployAndSetupSafe",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "string", name: "_name", type: "string" },
          { internalType: "string", name: "_symbol", type: "string" }
        ],
        name: "deployTokens",
        outputs: [
          { internalType: "address", name: "lootToken", type: "address" },
          { internalType: "address", name: "sharesToken", type: "address" }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "bytes[]", name: "_calls", type: "bytes[]" },
          { internalType: "address", name: "_target", type: "address" }
        ],
        name: "encodeMultisend",
        outputs: [
          { internalType: "bytes", name: "encodedMultisend", type: "bytes" }
        ],
        stateMutability: "pure",
        type: "function"
      },
      {
        inputs: [],
        name: "gnosisFallbackLibrary",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "gnosisMultisendLibrary",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "gnosisSingleton",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "lootSingleton",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "proxiableUUID",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address payable",
            name: "_template",
            type: "address"
          },
          {
            internalType: "address",
            name: "_gnosisSingleton",
            type: "address"
          },
          {
            internalType: "address",
            name: "_gnosisFallbackLibrary",
            type: "address"
          },
          {
            internalType: "address",
            name: "_gnosisMultisendLibrary",
            type: "address"
          },
          {
            internalType: "address",
            name: "_gnosisSafeProxyFactory",
            type: "address"
          },
          {
            internalType: "address",
            name: "_moduleProxyFactory",
            type: "address"
          },
          {
            internalType: "address",
            name: "_lootSingleton",
            type: "address"
          },
          {
            internalType: "address",
            name: "_sharesSingleton",
            type: "address"
          }
        ],
        name: "setAddrs",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "sharesSingleton",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes",
            name: "initializationParams",
            type: "bytes"
          },
          {
            internalType: "bytes[]",
            name: "initializationActions",
            type: "bytes[]"
          },
          { internalType: "uint256", name: "_saltNonce", type: "uint256" }
        ],
        name: "summonBaal",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes",
            name: "initializationParams",
            type: "bytes"
          },
          {
            internalType: "bytes[]",
            name: "initializationActions",
            type: "bytes[]"
          },
          { internalType: "uint256", name: "_saltNonce", type: "uint256" },
          { internalType: "bytes32", name: "referrer", type: "bytes32" }
        ],
        name: "summonBaalFromReferrer",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "payable",
        type: "function"
      },
      {
        inputs: [],
        name: "template",
        outputs: [
          { internalType: "address payable", name: "", type: "address" }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "newOwner", type: "address" }
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "newImplementation",
            type: "address"
          }
        ],
        name: "upgradeTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "newImplementation",
            type: "address"
          },
          { internalType: "bytes", name: "data", type: "bytes" }
        ],
        name: "upgradeToAndCall",
        outputs: [],
        stateMutability: "payable",
        type: "function"
      }
    ];
  }
});

// node_modules/@daohaus/abis/src/abi/baalAdvTokenSummoner.json
var require_baalAdvTokenSummoner = __commonJS({
  "node_modules/@daohaus/abis/src/abi/baalAdvTokenSummoner.json"(exports, module) {
    module.exports = [
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "previousAdmin",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "newAdmin",
            type: "address"
          }
        ],
        name: "AdminChanged",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "beacon",
            type: "address"
          }
        ],
        name: "BeaconUpgraded",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "lootToken",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "sharesToken",
            type: "address"
          }
        ],
        name: "DeployBaalTokens",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "uint8",
            name: "version",
            type: "uint8"
          }
        ],
        name: "Initialized",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "implementation",
            type: "address"
          }
        ],
        name: "Upgraded",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "summoner",
            type: "address"
          }
        ],
        name: "setSummoner",
        type: "event"
      },
      {
        inputs: [],
        name: "_baalSummoner",
        outputs: [
          {
            internalType: "contract IBaalSummoner",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "proxiableUUID",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "baalSummoner", type: "address" }
        ],
        name: "setSummonerAddr",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "_safeAddr", type: "address" },
          {
            internalType: "address",
            name: "_forwarderAddr",
            type: "address"
          },
          { internalType: "uint256", name: "_saltNonce", type: "uint256" },
          {
            internalType: "bytes",
            name: "initializationMintParams",
            type: "bytes"
          },
          {
            internalType: "bytes",
            name: "initializationTokenParams",
            type: "bytes"
          },
          {
            internalType: "bytes[]",
            name: "postInitializationActions",
            type: "bytes[]"
          }
        ],
        name: "summonBaalFromReferrer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "newOwner", type: "address" }
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "newImplementation",
            type: "address"
          }
        ],
        name: "upgradeTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "newImplementation",
            type: "address"
          },
          { internalType: "bytes", name: "data", type: "bytes" }
        ],
        name: "upgradeToAndCall",
        outputs: [],
        stateMutability: "payable",
        type: "function"
      }
    ];
  }
});

// node_modules/@daohaus/abis/src/abi/gnosisMultisend.json
var require_gnosisMultisend = __commonJS({
  "node_modules/@daohaus/abis/src/abi/gnosisMultisend.json"(exports, module) {
    module.exports = [
      {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [
          {
            internalType: "bytes",
            name: "transactions",
            type: "bytes"
          }
        ],
        name: "multiSend",
        outputs: [],
        stateMutability: "payable",
        type: "function"
      }
    ];
  }
});

// node_modules/@daohaus/abis/src/abi/gnosisProxy.json
var require_gnosisProxy = __commonJS({
  "node_modules/@daohaus/abis/src/abi/gnosisProxy.json"(exports, module) {
    module.exports = [
      {
        constant: true,
        inputs: [],
        name: "masterCopy",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "_masterCopy",
            type: "address"
          }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        payable: true,
        stateMutability: "payable",
        type: "fallback"
      }
    ];
  }
});

// node_modules/@daohaus/abis/src/abi/gnosisSignLib.json
var require_gnosisSignLib = __commonJS({
  "node_modules/@daohaus/abis/src/abi/gnosisSignLib.json"(exports, module) {
    module.exports = [
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "bytes32",
            name: "msgHash",
            type: "bytes32"
          }
        ],
        name: "SignMsg",
        type: "event"
      },
      {
        inputs: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          }
        ],
        name: "getMessageHash",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes",
            name: "_data",
            type: "bytes"
          }
        ],
        name: "signMessage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ];
  }
});

// node_modules/@daohaus/abis/src/abi/loot.json
var require_loot = __commonJS({
  "node_modules/@daohaus/abis/src/abi/loot.json"(exports, module) {
    module.exports = [
      { inputs: [], stateMutability: "nonpayable", type: "constructor" },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "previousAdmin",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "newAdmin",
            type: "address"
          }
        ],
        name: "AdminChanged",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "beacon",
            type: "address"
          }
        ],
        name: "BeaconUpgraded",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "uint8",
            name: "version",
            type: "uint8"
          }
        ],
        name: "Initialized",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "account",
            type: "address"
          }
        ],
        name: "Paused",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Snapshot",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "account",
            type: "address"
          }
        ],
        name: "Unpaused",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "implementation",
            type: "address"
          }
        ],
        name: "Upgraded",
        type: "event"
      },
      {
        inputs: [],
        name: "DOMAIN_SEPARATOR",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "address", name: "spender", type: "address" }
        ],
        name: "allowance",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "spender", type: "address" },
          { internalType: "uint256", name: "amount", type: "uint256" }
        ],
        name: "approve",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "account", type: "address" }
        ],
        name: "balanceOf",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "account", type: "address" },
          { internalType: "uint256", name: "snapshotId", type: "uint256" }
        ],
        name: "balanceOfAt",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "account", type: "address" },
          { internalType: "uint256", name: "amount", type: "uint256" }
        ],
        name: "burn",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "decimals",
        outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "spender", type: "address" },
          {
            internalType: "uint256",
            name: "subtractedValue",
            type: "uint256"
          }
        ],
        name: "decreaseAllowance",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "getCurrentSnapshotId",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "spender", type: "address" },
          { internalType: "uint256", name: "addedValue", type: "uint256" }
        ],
        name: "increaseAllowance",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "recipient", type: "address" },
          { internalType: "uint256", name: "amount", type: "uint256" }
        ],
        name: "mint",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "name",
        outputs: [{ internalType: "string", name: "", type: "string" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "owner", type: "address" }
        ],
        name: "nonces",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "paused",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "address", name: "spender", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "uint256", name: "deadline", type: "uint256" },
          { internalType: "uint8", name: "v", type: "uint8" },
          { internalType: "bytes32", name: "r", type: "bytes32" },
          { internalType: "bytes32", name: "s", type: "bytes32" }
        ],
        name: "permit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "proxiableUUID",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "string", name: "name_", type: "string" },
          { internalType: "string", name: "symbol_", type: "string" }
        ],
        name: "setUp",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "snapshot",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "symbol",
        outputs: [{ internalType: "string", name: "", type: "string" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "totalSupply",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "uint256", name: "snapshotId", type: "uint256" }
        ],
        name: "totalSupplyAt",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "to", type: "address" },
          { internalType: "uint256", name: "amount", type: "uint256" }
        ],
        name: "transfer",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "from", type: "address" },
          { internalType: "address", name: "to", type: "address" },
          { internalType: "uint256", name: "amount", type: "uint256" }
        ],
        name: "transferFrom",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "newOwner", type: "address" }
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "newImplementation",
            type: "address"
          }
        ],
        name: "upgradeTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "newImplementation",
            type: "address"
          },
          { internalType: "bytes", name: "data", type: "bytes" }
        ],
        name: "upgradeToAndCall",
        outputs: [],
        stateMutability: "payable",
        type: "function"
      }
    ];
  }
});

// node_modules/@daohaus/abis/src/abi/poster.json
var require_poster = __commonJS({
  "node_modules/@daohaus/abis/src/abi/poster.json"(exports, module) {
    module.exports = [
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "user",
            type: "address"
          },
          {
            indexed: false,
            internalType: "string",
            name: "content",
            type: "string"
          },
          {
            indexed: true,
            internalType: "string",
            name: "tag",
            type: "string"
          }
        ],
        name: "NewPost",
        type: "event"
      },
      {
        inputs: [
          {
            internalType: "string",
            name: "content",
            type: "string"
          },
          {
            internalType: "string",
            name: "tag",
            type: "string"
          }
        ],
        name: "post",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ];
  }
});

// node_modules/@daohaus/abis/src/abi/shares.json
var require_shares = __commonJS({
  "node_modules/@daohaus/abis/src/abi/shares.json"(exports, module) {
    module.exports = [
      { inputs: [], stateMutability: "nonpayable", type: "constructor" },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "previousAdmin",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "newAdmin",
            type: "address"
          }
        ],
        name: "AdminChanged",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "beacon",
            type: "address"
          }
        ],
        name: "BeaconUpgraded",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "delegator",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "fromDelegate",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "toDelegate",
            type: "address"
          }
        ],
        name: "DelegateChanged",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "delegate",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "previousBalance",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "newBalance",
            type: "uint256"
          }
        ],
        name: "DelegateVotesChanged",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "uint8",
            name: "version",
            type: "uint8"
          }
        ],
        name: "Initialized",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "account",
            type: "address"
          }
        ],
        name: "Paused",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Snapshot",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "account",
            type: "address"
          }
        ],
        name: "Unpaused",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "implementation",
            type: "address"
          }
        ],
        name: "Upgraded",
        type: "event"
      },
      {
        inputs: [],
        name: "DOMAIN_SEPARATOR",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "address", name: "spender", type: "address" }
        ],
        name: "allowance",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "spender", type: "address" },
          { internalType: "uint256", name: "amount", type: "uint256" }
        ],
        name: "approve",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "account", type: "address" }
        ],
        name: "balanceOf",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "account", type: "address" },
          { internalType: "uint256", name: "snapshotId", type: "uint256" }
        ],
        name: "balanceOfAt",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "account", type: "address" },
          { internalType: "uint256", name: "amount", type: "uint256" }
        ],
        name: "burn",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "", type: "address" },
          { internalType: "uint256", name: "", type: "uint256" }
        ],
        name: "checkpoints",
        outputs: [
          { internalType: "uint32", name: "fromTimePoint", type: "uint32" },
          { internalType: "uint256", name: "votes", type: "uint256" }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "decimals",
        outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "spender", type: "address" },
          {
            internalType: "uint256",
            name: "subtractedValue",
            type: "uint256"
          }
        ],
        name: "decreaseAllowance",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "delegatee", type: "address" }
        ],
        name: "delegate",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "delegatee", type: "address" },
          { internalType: "uint256", name: "nonce", type: "uint256" },
          { internalType: "uint256", name: "expiry", type: "uint256" },
          { internalType: "uint8", name: "v", type: "uint8" },
          { internalType: "bytes32", name: "r", type: "bytes32" },
          { internalType: "bytes32", name: "s", type: "bytes32" }
        ],
        name: "delegateBySig",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [{ internalType: "address", name: "", type: "address" }],
        name: "delegates",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [{ internalType: "address", name: "", type: "address" }],
        name: "delegationNonces",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "delegatee", type: "address" },
          { internalType: "uint256", name: "nCheckpoints", type: "uint256" }
        ],
        name: "getCheckpoint",
        outputs: [
          {
            components: [
              {
                internalType: "uint32",
                name: "fromTimePoint",
                type: "uint32"
              },
              { internalType: "uint256", name: "votes", type: "uint256" }
            ],
            internalType: "struct BaalVotes.Checkpoint",
            name: "",
            type: "tuple"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "getCurrentSnapshotId",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "account", type: "address" },
          { internalType: "uint256", name: "timePoint", type: "uint256" }
        ],
        name: "getPastVotes",
        outputs: [
          { internalType: "uint256", name: "votes", type: "uint256" }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "account", type: "address" }
        ],
        name: "getVotes",
        outputs: [
          { internalType: "uint256", name: "votes", type: "uint256" }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "spender", type: "address" },
          { internalType: "uint256", name: "addedValue", type: "uint256" }
        ],
        name: "increaseAllowance",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "recipient", type: "address" },
          { internalType: "uint256", name: "amount", type: "uint256" }
        ],
        name: "mint",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "name",
        outputs: [{ internalType: "string", name: "", type: "string" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "owner", type: "address" }
        ],
        name: "nonces",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "now",
        outputs: [
          { internalType: "uint256", name: "timePoint", type: "uint256" }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [{ internalType: "address", name: "", type: "address" }],
        name: "numCheckpoints",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "paused",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "address", name: "spender", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "uint256", name: "deadline", type: "uint256" },
          { internalType: "uint8", name: "v", type: "uint8" },
          { internalType: "bytes32", name: "r", type: "bytes32" },
          { internalType: "bytes32", name: "s", type: "bytes32" }
        ],
        name: "permit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "proxiableUUID",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "string", name: "name_", type: "string" },
          { internalType: "string", name: "symbol_", type: "string" }
        ],
        name: "setUp",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "snapshot",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "symbol",
        outputs: [{ internalType: "string", name: "", type: "string" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "totalSupply",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "uint256", name: "snapshotId", type: "uint256" }
        ],
        name: "totalSupplyAt",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "to", type: "address" },
          { internalType: "uint256", name: "amount", type: "uint256" }
        ],
        name: "transfer",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "from", type: "address" },
          { internalType: "address", name: "to", type: "address" },
          { internalType: "uint256", name: "amount", type: "uint256" }
        ],
        name: "transferFrom",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "newOwner", type: "address" }
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "newImplementation",
            type: "address"
          }
        ],
        name: "upgradeTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "newImplementation",
            type: "address"
          },
          { internalType: "bytes", name: "data", type: "bytes" }
        ],
        name: "upgradeToAndCall",
        outputs: [],
        stateMutability: "payable",
        type: "function"
      }
    ];
  }
});

// node_modules/@daohaus/abis/src/abi/superFluidProxy.json
var require_superFluidProxy = __commonJS({
  "node_modules/@daohaus/abis/src/abi/superFluidProxy.json"(exports, module) {
    module.exports = [
      {
        inputs: [],
        name: "getCodeAddress",
        outputs: [
          {
            internalType: "address",
            name: "codeAddress",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      }
    ];
  }
});

// node_modules/@daohaus/abis/src/abi/tributeMinion.json
var require_tributeMinion = __commonJS({
  "node_modules/@daohaus/abis/src/abi/tributeMinion.json"(exports, module) {
    module.exports = [
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "baal",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint32",
            name: "proposalId",
            type: "uint32"
          },
          {
            indexed: false,
            internalType: "address",
            name: "applicant",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "safe",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "EscrowReleased",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "baal",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "token",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "proposalId",
            type: "uint256"
          }
        ],
        name: "TributeProposal",
        type: "event"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "baal",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "loot",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "proposalId",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "escrow",
            type: "address"
          }
        ],
        name: "encodeTributeProposal",
        outputs: [
          {
            internalType: "bytes",
            name: "",
            type: "bytes"
          }
        ],
        stateMutability: "pure",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "escrows",
        outputs: [
          {
            internalType: "address",
            name: "token",
            type: "address"
          },
          {
            internalType: "address",
            name: "applicant",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "released",
            type: "bool"
          },
          {
            internalType: "address",
            name: "safe",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "_baal",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "_proposalId",
            type: "uint32"
          }
        ],
        name: "releaseEscrow",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "contract Baal",
            name: "baal",
            type: "address"
          },
          {
            internalType: "address",
            name: "token",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "loot",
            type: "uint256"
          },
          {
            internalType: "uint32",
            name: "expiration",
            type: "uint32"
          },
          {
            internalType: "uint256",
            name: "baalgas",
            type: "uint256"
          },
          {
            internalType: "string",
            name: "details",
            type: "string"
          }
        ],
        name: "submitTributeProposal",
        outputs: [],
        stateMutability: "payable",
        type: "function"
      }
    ];
  }
});

// node_modules/@daohaus/abis/src/abi/erc20a.json
var require_erc20a = __commonJS({
  "node_modules/@daohaus/abis/src/abi/erc20a.json"(exports, module) {
    module.exports = [
      {
        constant: true,
        inputs: [],
        name: "name",
        outputs: [{ name: "", type: "string" }],
        payable: false,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "guy", type: "address" },
          { name: "wad", type: "uint256" }
        ],
        name: "approve",
        outputs: [{ name: "", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: true,
        inputs: [],
        name: "totalSupply",
        outputs: [{ name: "", type: "uint256" }],
        payable: false,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "src", type: "address" },
          { name: "dst", type: "address" },
          { name: "wad", type: "uint256" }
        ],
        name: "transferFrom",
        outputs: [{ name: "", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [{ name: "wad", type: "uint256" }],
        name: "withdraw",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: true,
        inputs: [],
        name: "decimals",
        outputs: [{ name: "", type: "uint8" }],
        payable: false,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: true,
        inputs: [{ name: "", type: "address" }],
        name: "balanceOf",
        outputs: [{ name: "", type: "uint256" }],
        payable: false,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: true,
        inputs: [],
        name: "symbol",
        outputs: [{ name: "", type: "string" }],
        payable: false,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "dst", type: "address" },
          { name: "wad", type: "uint256" }
        ],
        name: "transfer",
        outputs: [{ name: "", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [],
        name: "deposit",
        outputs: [],
        payable: true,
        stateMutability: "payable",
        type: "function"
      },
      {
        constant: true,
        inputs: [
          { name: "", type: "address" },
          { name: "", type: "address" }
        ],
        name: "allowance",
        outputs: [{ name: "", type: "uint256" }],
        payable: false,
        stateMutability: "view",
        type: "function"
      },
      { payable: true, stateMutability: "payable", type: "fallback" },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "src", type: "address" },
          { indexed: true, name: "guy", type: "address" },
          { indexed: false, name: "wad", type: "uint256" }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "src", type: "address" },
          { indexed: true, name: "dst", type: "address" },
          { indexed: false, name: "wad", type: "uint256" }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "dst", type: "address" },
          { indexed: false, name: "wad", type: "uint256" }
        ],
        name: "Deposit",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "src", type: "address" },
          { indexed: false, name: "wad", type: "uint256" }
        ],
        name: "Withdrawal",
        type: "event"
      }
    ];
  }
});

// node_modules/@daohaus/abis/src/abi/erc721.json
var require_erc721 = __commonJS({
  "node_modules/@daohaus/abis/src/abi/erc721.json"(exports, module) {
    module.exports = [
      {
        constant: false,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256"
          }
        ],
        name: "approve",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256"
          }
        ],
        name: "mint",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256"
          }
        ],
        name: "safeTransferFrom",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "_data",
            type: "bytes"
          }
        ],
        name: "safeTransferFrom",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool"
          }
        ],
        name: "setApprovalForAll",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256"
          }
        ],
        name: "transferFrom",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: true,
            internalType: "uint256",
            name: "tokenId",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "approved",
            type: "address"
          },
          {
            indexed: true,
            internalType: "uint256",
            name: "tokenId",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "operator",
            type: "address"
          },
          {
            indexed: false,
            internalType: "bool",
            name: "approved",
            type: "bool"
          }
        ],
        name: "ApprovalForAll",
        type: "event"
      },
      {
        constant: true,
        inputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address"
          }
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: true,
        inputs: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256"
          }
        ],
        name: "getApproved",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: true,
        inputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            internalType: "address",
            name: "operator",
            type: "address"
          }
        ],
        name: "isApprovedForAll",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: true,
        inputs: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256"
          }
        ],
        name: "ownerOf",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: true,
        inputs: [
          {
            internalType: "bytes4",
            name: "interfaceId",
            type: "bytes4"
          }
        ],
        name: "supportsInterface",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
      }
    ];
  }
});

// node_modules/@daohaus/abis/src/abi/vaultSummoner.json
var require_vaultSummoner = __commonJS({
  "node_modules/@daohaus/abis/src/abi/vaultSummoner.json"(exports, module) {
    module.exports = [
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "previousAdmin",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "newAdmin",
            type: "address"
          }
        ],
        name: "AdminChanged",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "beacon",
            type: "address"
          }
        ],
        name: "BeaconUpgraded",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "uint8",
            name: "version",
            type: "uint8"
          }
        ],
        name: "Initialized",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "daoAddress",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "delegate",
            type: "address"
          }
        ],
        name: "SetDelegate",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            components: [
              { internalType: "uint256", name: "id", type: "uint256" },
              { internalType: "bool", name: "active", type: "bool" },
              {
                internalType: "address",
                name: "daoAddress",
                type: "address"
              },
              {
                internalType: "address",
                name: "vaultAddress",
                type: "address"
              },
              { internalType: "string", name: "name", type: "string" }
            ],
            indexed: false,
            internalType: "struct BaalAndVaultSummoner.Vault",
            name: "vault",
            type: "tuple"
          }
        ],
        name: "SetVault",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "implementation",
            type: "address"
          }
        ],
        name: "Upgraded",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "summoner",
            type: "address"
          }
        ],
        name: "setSummoner",
        type: "event"
      },
      {
        inputs: [],
        name: "_baalSummoner",
        outputs: [
          {
            internalType: "contract IBaalSummoner",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "address", name: "daoAddress", type: "address" }
        ],
        name: "deactivateVaultAsDao",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [{ internalType: "address", name: "", type: "address" }],
        name: "delegates",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "proxiableUUID",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "daoAddress", type: "address" },
          { internalType: "address", name: "delegate", type: "address" }
        ],
        name: "setDelegate",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "daoAddress", type: "address" },
          { internalType: "address", name: "vaultAddress", type: "address" },
          { internalType: "string", name: "name", type: "string" }
        ],
        name: "setNewVault",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "baalSummoner", type: "address" }
        ],
        name: "setSummonerAddr",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "bool", name: "active", type: "bool" }
        ],
        name: "setVault",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes",
            name: "initializationParams",
            type: "bytes"
          },
          {
            internalType: "bytes[]",
            name: "initializationActions",
            type: "bytes[]"
          },
          { internalType: "uint256", name: "saltNonce", type: "uint256" },
          { internalType: "bytes32", name: "referrer", type: "bytes32" },
          { internalType: "string", name: "name", type: "string" }
        ],
        name: "summonBaalAndVault",
        outputs: [
          { internalType: "address", name: "_daoAddress", type: "address" },
          { internalType: "address", name: "_vaultAddress", type: "address" }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "daoAddress", type: "address" },
          { internalType: "string", name: "name", type: "string" }
        ],
        name: "summonVault",
        outputs: [
          { internalType: "address", name: "_vaultAddress", type: "address" }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "newOwner", type: "address" }
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "newImplementation",
            type: "address"
          }
        ],
        name: "upgradeTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "newImplementation",
            type: "address"
          },
          { internalType: "bytes", name: "data", type: "bytes" }
        ],
        name: "upgradeToAndCall",
        outputs: [],
        stateMutability: "payable",
        type: "function"
      },
      {
        inputs: [],
        name: "vaultIdx",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        name: "vaults",
        outputs: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "bool", name: "active", type: "bool" },
          { internalType: "address", name: "daoAddress", type: "address" },
          { internalType: "address", name: "vaultAddress", type: "address" },
          { internalType: "string", name: "name", type: "string" }
        ],
        stateMutability: "view",
        type: "function"
      }
    ];
  }
});

// node_modules/@daohaus/abis/src/abi/gnosisModule.json
var require_gnosisModule = __commonJS({
  "node_modules/@daohaus/abis/src/abi/gnosisModule.json"(exports, module) {
    module.exports = [
      { inputs: [], stateMutability: "nonpayable", type: "constructor" },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "owner",
            type: "address"
          }
        ],
        name: "AddedOwner",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "bytes32",
            name: "approvedHash",
            type: "bytes32"
          },
          {
            indexed: true,
            internalType: "address",
            name: "owner",
            type: "address"
          }
        ],
        name: "ApproveHash",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "handler",
            type: "address"
          }
        ],
        name: "ChangedFallbackHandler",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "guard",
            type: "address"
          }
        ],
        name: "ChangedGuard",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "uint256",
            name: "threshold",
            type: "uint256"
          }
        ],
        name: "ChangedThreshold",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        name: "DisabledModule",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        name: "EnabledModule",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "bytes32",
            name: "txHash",
            type: "bytes32"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "payment",
            type: "uint256"
          }
        ],
        name: "ExecutionFailure",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        name: "ExecutionFromModuleFailure",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        name: "ExecutionFromModuleSuccess",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "bytes32",
            name: "txHash",
            type: "bytes32"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "payment",
            type: "uint256"
          }
        ],
        name: "ExecutionSuccess",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "owner",
            type: "address"
          }
        ],
        name: "RemovedOwner",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "SafeReceived",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "initiator",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address[]",
            name: "owners",
            type: "address[]"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "threshold",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "address",
            name: "initializer",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "fallbackHandler",
            type: "address"
          }
        ],
        name: "SafeSetup",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "bytes32",
            name: "msgHash",
            type: "bytes32"
          }
        ],
        name: "SignMsg",
        type: "event"
      },
      { stateMutability: "nonpayable", type: "fallback" },
      {
        inputs: [],
        name: "VERSION",
        outputs: [{ internalType: "string", name: "", type: "string" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "uint256", name: "_threshold", type: "uint256" }
        ],
        name: "addOwnerWithThreshold",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "bytes32", name: "hashToApprove", type: "bytes32" }
        ],
        name: "approveHash",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "", type: "address" },
          { internalType: "bytes32", name: "", type: "bytes32" }
        ],
        name: "approvedHashes",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "uint256", name: "_threshold", type: "uint256" }
        ],
        name: "changeThreshold",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "bytes32", name: "dataHash", type: "bytes32" },
          { internalType: "bytes", name: "data", type: "bytes" },
          { internalType: "bytes", name: "signatures", type: "bytes" },
          {
            internalType: "uint256",
            name: "requiredSignatures",
            type: "uint256"
          }
        ],
        name: "checkNSignatures",
        outputs: [],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "bytes32", name: "dataHash", type: "bytes32" },
          { internalType: "bytes", name: "data", type: "bytes" },
          { internalType: "bytes", name: "signatures", type: "bytes" }
        ],
        name: "checkSignatures",
        outputs: [],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "prevModule", type: "address" },
          { internalType: "address", name: "module", type: "address" }
        ],
        name: "disableModule",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "domainSeparator",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "module", type: "address" }
        ],
        name: "enableModule",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "to", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
          {
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8"
          },
          { internalType: "uint256", name: "safeTxGas", type: "uint256" },
          { internalType: "uint256", name: "baseGas", type: "uint256" },
          { internalType: "uint256", name: "gasPrice", type: "uint256" },
          { internalType: "address", name: "gasToken", type: "address" },
          {
            internalType: "address",
            name: "refundReceiver",
            type: "address"
          },
          { internalType: "uint256", name: "_nonce", type: "uint256" }
        ],
        name: "encodeTransactionData",
        outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "to", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
          {
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8"
          },
          { internalType: "uint256", name: "safeTxGas", type: "uint256" },
          { internalType: "uint256", name: "baseGas", type: "uint256" },
          { internalType: "uint256", name: "gasPrice", type: "uint256" },
          { internalType: "address", name: "gasToken", type: "address" },
          {
            internalType: "address payable",
            name: "refundReceiver",
            type: "address"
          },
          { internalType: "bytes", name: "signatures", type: "bytes" }
        ],
        name: "execTransaction",
        outputs: [{ internalType: "bool", name: "success", type: "bool" }],
        stateMutability: "payable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "to", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
          {
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8"
          }
        ],
        name: "execTransactionFromModule",
        outputs: [{ internalType: "bool", name: "success", type: "bool" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "to", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
          {
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8"
          }
        ],
        name: "execTransactionFromModuleReturnData",
        outputs: [
          { internalType: "bool", name: "success", type: "bool" },
          { internalType: "bytes", name: "returnData", type: "bytes" }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "getChainId",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "start", type: "address" },
          { internalType: "uint256", name: "pageSize", type: "uint256" }
        ],
        name: "getModulesPaginated",
        outputs: [
          { internalType: "address[]", name: "array", type: "address[]" },
          { internalType: "address", name: "next", type: "address" }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "getOwners",
        outputs: [
          { internalType: "address[]", name: "", type: "address[]" }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "uint256", name: "offset", type: "uint256" },
          { internalType: "uint256", name: "length", type: "uint256" }
        ],
        name: "getStorageAt",
        outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "getThreshold",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "to", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
          {
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8"
          },
          { internalType: "uint256", name: "safeTxGas", type: "uint256" },
          { internalType: "uint256", name: "baseGas", type: "uint256" },
          { internalType: "uint256", name: "gasPrice", type: "uint256" },
          { internalType: "address", name: "gasToken", type: "address" },
          {
            internalType: "address",
            name: "refundReceiver",
            type: "address"
          },
          { internalType: "uint256", name: "_nonce", type: "uint256" }
        ],
        name: "getTransactionHash",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "module", type: "address" }
        ],
        name: "isModuleEnabled",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "owner", type: "address" }
        ],
        name: "isOwner",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "nonce",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "prevOwner", type: "address" },
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "uint256", name: "_threshold", type: "uint256" }
        ],
        name: "removeOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "to", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
          {
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8"
          }
        ],
        name: "requiredTxGas",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "handler", type: "address" }
        ],
        name: "setFallbackHandler",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "guard", type: "address" }
        ],
        name: "setGuard",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address[]", name: "_owners", type: "address[]" },
          { internalType: "uint256", name: "_threshold", type: "uint256" },
          { internalType: "address", name: "to", type: "address" },
          { internalType: "bytes", name: "data", type: "bytes" },
          {
            internalType: "address",
            name: "fallbackHandler",
            type: "address"
          },
          { internalType: "address", name: "paymentToken", type: "address" },
          { internalType: "uint256", name: "payment", type: "uint256" },
          {
            internalType: "address payable",
            name: "paymentReceiver",
            type: "address"
          }
        ],
        name: "setup",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        name: "signedMessages",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "targetContract",
            type: "address"
          },
          { internalType: "bytes", name: "calldataPayload", type: "bytes" }
        ],
        name: "simulateAndRevert",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          { internalType: "address", name: "prevOwner", type: "address" },
          { internalType: "address", name: "oldOwner", type: "address" },
          { internalType: "address", name: "newOwner", type: "address" }
        ],
        name: "swapOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      { stateMutability: "payable", type: "receive" }
    ];
  }
});

// node_modules/@daohaus/abis/src/lib/abis.js
var require_abis = __commonJS({
  "node_modules/@daohaus/abis/src/lib/abis.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.LOCAL_ABI = void 0;
    var tslib_1 = require_tslib();
    var baal_json_1 = tslib_1.__importDefault(require_baal());
    var baalSummoner_json_1 = tslib_1.__importDefault(require_baalSummoner());
    var baalAdvTokenSummoner_json_1 = tslib_1.__importDefault(require_baalAdvTokenSummoner());
    var gnosisMultisend_json_1 = tslib_1.__importDefault(require_gnosisMultisend());
    var gnosisProxy_json_1 = tslib_1.__importDefault(require_gnosisProxy());
    var gnosisSignLib_json_1 = tslib_1.__importDefault(require_gnosisSignLib());
    var loot_json_1 = tslib_1.__importDefault(require_loot());
    var poster_json_1 = tslib_1.__importDefault(require_poster());
    var shares_json_1 = tslib_1.__importDefault(require_shares());
    var superFluidProxy_json_1 = tslib_1.__importDefault(require_superFluidProxy());
    var tributeMinion_json_1 = tslib_1.__importDefault(require_tributeMinion());
    var erc20a_json_1 = tslib_1.__importDefault(require_erc20a());
    var erc721_json_1 = tslib_1.__importDefault(require_erc721());
    var vaultSummoner_json_1 = tslib_1.__importDefault(require_vaultSummoner());
    var gnosisModule_json_1 = tslib_1.__importDefault(require_gnosisModule());
    exports.LOCAL_ABI = {
      BAAL: baal_json_1.default,
      BAAL_SUMMONER: baalSummoner_json_1.default,
      BAAL_ADV_TOKEN_SUMMONER: baalAdvTokenSummoner_json_1.default,
      GNOSIS_MULTISEND: gnosisMultisend_json_1.default,
      GNOSIS_MODULE: gnosisModule_json_1.default,
      GNOSIS_PROXY: gnosisProxy_json_1.default,
      GNOSIS_SIGNLIB: gnosisSignLib_json_1.default,
      LOOT: loot_json_1.default,
      POSTER: poster_json_1.default,
      SHARES: shares_json_1.default,
      SUPERFLUID_PROXY: superFluidProxy_json_1.default,
      TRIBUTE_MINION: tributeMinion_json_1.default,
      ERC20: erc20a_json_1.default,
      ERC721: erc721_json_1.default,
      VAULT_SUMMONER: vaultSummoner_json_1.default
    };
  }
});

// node_modules/@daohaus/abis/src/index.js
var require_src = __commonJS({
  "node_modules/@daohaus/abis/src/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_abis(), exports);
  }
});

export {
  require_src
};
//# sourceMappingURL=chunk-R7RRHWOA.js.map
