import {
  require_ri
} from "./chunk-BS4HP37B.js";
import {
  Je,
  Xe,
  at,
  ct,
  nt,
  st
} from "./chunk-AS6NKUTQ.js";
import {
  _extends,
  _inheritsLoose
} from "./chunk-KNI3CCJ4.js";
import {
  _assertThisInitialized,
  _getPrototypeOf,
  _isNativeReflectConstruct,
  init_assertThisInitialized,
  init_getPrototypeOf,
  init_isNativeReflectConstruct,
  require_src as require_src2
} from "./chunk-KYOZVWPW.js";
import {
  _setPrototypeOf,
  init_setPrototypeOf
} from "./chunk-365EK2P6.js";
import {
  require_react_dom
} from "./chunk-JM7HR6U7.js";
import {
  require_jsx_runtime
} from "./chunk-GYNMGCXV.js";
import {
  require_react
} from "./chunk-T5BEU6ZH.js";
import {
  require_src
} from "./chunk-EBQ4QPBR.js";
import {
  __commonJS,
  __export,
  __toESM
} from "./chunk-LMAYTEU7.js";

// node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports, module) {
    (function() {
      "use strict";
      var hasOwn3 = {}.hasOwnProperty;
      var nativeCodeString = "[native code]";
      function classNames2() {
        var classes = [];
        for (var i = 0; i < arguments.length; i++) {
          var arg = arguments[i];
          if (!arg)
            continue;
          var argType = typeof arg;
          if (argType === "string" || argType === "number") {
            classes.push(arg);
          } else if (Array.isArray(arg)) {
            if (arg.length) {
              var inner = classNames2.apply(null, arg);
              if (inner) {
                classes.push(inner);
              }
            }
          } else if (argType === "object") {
            if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
              classes.push(arg.toString());
              continue;
            }
            for (var key in arg) {
              if (hasOwn3.call(arg, key) && arg[key]) {
                classes.push(key);
              }
            }
          }
        }
        return classes.join(" ");
      }
      if (typeof module !== "undefined" && module.exports) {
        classNames2.default = classNames2;
        module.exports = classNames2;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames2;
        });
      } else {
        window.classNames = classNames2;
      }
    })();
  }
});

// node_modules/ethereum-blockies-base64/dist/main.js
var require_main = __commonJS({
  "node_modules/ethereum-blockies-base64/dist/main.js"(exports, module) {
    (function webpackUniversalModuleDefinition(root, factory) {
      if (typeof exports === "object" && typeof module === "object")
        module.exports = factory();
      else if (typeof define === "function" && define.amd)
        define([], factory);
      else if (typeof exports === "object")
        exports["ethereum-blockies-base64"] = factory();
      else
        root["ethereum-blockies-base64"] = factory();
    })(exports, function() {
      return function(modules) {
        var installedModules = {};
        function __webpack_require__(moduleId) {
          if (installedModules[moduleId])
            return installedModules[moduleId].exports;
          var module2 = installedModules[moduleId] = {
            exports: {},
            id: moduleId,
            loaded: false
          };
          modules[moduleId].call(module2.exports, module2, module2.exports, __webpack_require__);
          module2.loaded = true;
          return module2.exports;
        }
        __webpack_require__.m = modules;
        __webpack_require__.c = installedModules;
        __webpack_require__.p = "";
        return __webpack_require__(0);
      }([
        function(module2, exports2, __webpack_require__) {
          const pnglib = __webpack_require__(1);
          const hsl2rgb = __webpack_require__(2);
          const randseed = new Array(4);
          function seedrand(seed) {
            for (let i = 0; i < randseed.length; i++) {
              randseed[i] = 0;
            }
            for (let i = 0; i < seed.length; i++) {
              randseed[i % 4] = (randseed[i % 4] << 5) - randseed[i % 4] + seed.charCodeAt(i);
            }
          }
          function rand() {
            const t = randseed[0] ^ randseed[0] << 11;
            randseed[0] = randseed[1];
            randseed[1] = randseed[2];
            randseed[2] = randseed[3];
            randseed[3] = randseed[3] ^ randseed[3] >> 19 ^ t ^ t >> 8;
            return (randseed[3] >>> 0) / (1 << 31 >>> 0);
          }
          function createColor() {
            const h = Math.floor(rand() * 360);
            const s = rand() * 60 + 40;
            const l = (rand() + rand() + rand() + rand()) * 25;
            return [h / 360, s / 100, l / 100];
          }
          function createImageData(size2) {
            const width = size2;
            const height = size2;
            const dataWidth = Math.ceil(width / 2);
            const mirrorWidth = width - dataWidth;
            const data2 = [];
            for (let y = 0; y < height; y++) {
              let row = [];
              for (let x = 0; x < dataWidth; x++) {
                row[x] = Math.floor(rand() * 2.3);
              }
              const r = row.slice(0, mirrorWidth).reverse();
              row = row.concat(r);
              for (let i = 0; i < row.length; i++) {
                data2.push(row[i]);
              }
            }
            return data2;
          }
          function fillRect(png, x, y, w, h, color) {
            for (let i = 0; i < w; i++) {
              for (let j = 0; j < h; j++) {
                png.buffer[png.index(x + i, y + j)] = color;
              }
            }
          }
          function buildOpts(opts) {
            if (!opts.seed) {
              throw new Error("No seed provided");
            }
            seedrand(opts.seed);
            return Object.assign({
              size: 8,
              scale: 16,
              color: createColor(),
              bgcolor: createColor(),
              spotcolor: createColor()
            }, opts);
          }
          function makeBlockie2(address) {
            const opts = buildOpts({ seed: address.toLowerCase() });
            const imageData = createImageData(opts.size);
            const width = Math.sqrt(imageData.length);
            const p = new pnglib(opts.size * opts.scale, opts.size * opts.scale, 3);
            const bgcolor = p.color(...hsl2rgb(...opts.bgcolor));
            const color = p.color(...hsl2rgb(...opts.color));
            const spotcolor = p.color(...hsl2rgb(...opts.spotcolor));
            for (let i = 0; i < imageData.length; i++) {
              const row = Math.floor(i / width);
              const col = i % width;
              if (imageData[i]) {
                const pngColor = imageData[i] == 1 ? color : spotcolor;
                fillRect(p, col * opts.scale, row * opts.scale, opts.scale, opts.scale, pngColor);
              }
            }
            return `data:image/png;base64,${p.getBase64()}`;
          }
          module2.exports = makeBlockie2;
        },
        function(module2, exports2) {
          module2.exports = function(width, height, depth) {
            function write(buffer, offs) {
              for (var i2 = 2; i2 < arguments.length; i2++) {
                for (var j2 = 0; j2 < arguments[i2].length; j2++) {
                  buffer[offs++] = arguments[i2].charAt(j2);
                }
              }
            }
            function byte2(w) {
              return String.fromCharCode(w >> 8 & 255, w & 255);
            }
            function byte4(w) {
              return String.fromCharCode(w >> 24 & 255, w >> 16 & 255, w >> 8 & 255, w & 255);
            }
            function byte2lsb(w) {
              return String.fromCharCode(w & 255, w >> 8 & 255);
            }
            this.width = width;
            this.height = height;
            this.depth = depth;
            this.pix_size = height * (width + 1);
            this.data_size = 2 + this.pix_size + 5 * Math.floor((65534 + this.pix_size) / 65535) + 4;
            this.ihdr_offs = 0;
            this.ihdr_size = 4 + 4 + 13 + 4;
            this.plte_offs = this.ihdr_offs + this.ihdr_size;
            this.plte_size = 4 + 4 + 3 * depth + 4;
            this.trns_offs = this.plte_offs + this.plte_size;
            this.trns_size = 4 + 4 + depth + 4;
            this.idat_offs = this.trns_offs + this.trns_size;
            this.idat_size = 4 + 4 + this.data_size + 4;
            this.iend_offs = this.idat_offs + this.idat_size;
            this.iend_size = 4 + 4 + 4;
            this.buffer_size = this.iend_offs + this.iend_size;
            this.buffer = new Array();
            this.palette = new Object();
            this.pindex = 0;
            var _crc32 = new Array();
            for (var i = 0; i < this.buffer_size; i++) {
              this.buffer[i] = "\0";
            }
            write(this.buffer, this.ihdr_offs, byte4(this.ihdr_size - 12), "IHDR", byte4(width), byte4(height), "\b");
            write(this.buffer, this.plte_offs, byte4(this.plte_size - 12), "PLTE");
            write(this.buffer, this.trns_offs, byte4(this.trns_size - 12), "tRNS");
            write(this.buffer, this.idat_offs, byte4(this.idat_size - 12), "IDAT");
            write(this.buffer, this.iend_offs, byte4(this.iend_size - 12), "IEND");
            var header = 8 + (7 << 4) << 8 | 3 << 6;
            header += 31 - header % 31;
            write(this.buffer, this.idat_offs + 8, byte2(header));
            for (var i = 0; (i << 16) - 1 < this.pix_size; i++) {
              var size2, bits;
              if (i + 65535 < this.pix_size) {
                size2 = 65535;
                bits = "\0";
              } else {
                size2 = this.pix_size - (i << 16) - i;
                bits = "";
              }
              write(this.buffer, this.idat_offs + 8 + 2 + (i << 16) + (i << 2), bits, byte2lsb(size2), byte2lsb(~size2));
            }
            for (var i = 0; i < 256; i++) {
              var c = i;
              for (var j = 0; j < 8; j++) {
                if (c & 1) {
                  c = -306674912 ^ c >> 1 & 2147483647;
                } else {
                  c = c >> 1 & 2147483647;
                }
              }
              _crc32[i] = c;
            }
            this.index = function(x, y) {
              var i2 = y * (this.width + 1) + x + 1;
              var j2 = this.idat_offs + 8 + 2 + 5 * Math.floor(i2 / 65535 + 1) + i2;
              return j2;
            };
            this.color = function(red2, green2, blue2, alpha) {
              alpha = alpha >= 0 ? alpha : 255;
              var color = ((alpha << 8 | red2) << 8 | green2) << 8 | blue2;
              if (typeof this.palette[color] == "undefined") {
                if (this.pindex == this.depth)
                  return "\0";
                var ndx = this.plte_offs + 8 + 3 * this.pindex;
                this.buffer[ndx + 0] = String.fromCharCode(red2);
                this.buffer[ndx + 1] = String.fromCharCode(green2);
                this.buffer[ndx + 2] = String.fromCharCode(blue2);
                this.buffer[this.trns_offs + 8 + this.pindex] = String.fromCharCode(alpha);
                this.palette[color] = String.fromCharCode(this.pindex++);
              }
              return this.palette[color];
            };
            this.getBase64 = function() {
              var s = this.getDump();
              var ch = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
              var c1, c2, c3, e1, e2, e3, e4;
              var l = s.length;
              var i2 = 0;
              var r = "";
              do {
                c1 = s.charCodeAt(i2);
                e1 = c1 >> 2;
                c2 = s.charCodeAt(i2 + 1);
                e2 = (c1 & 3) << 4 | c2 >> 4;
                c3 = s.charCodeAt(i2 + 2);
                if (l < i2 + 2) {
                  e3 = 64;
                } else {
                  e3 = (c2 & 15) << 2 | c3 >> 6;
                }
                if (l < i2 + 3) {
                  e4 = 64;
                } else {
                  e4 = c3 & 63;
                }
                r += ch.charAt(e1) + ch.charAt(e2) + ch.charAt(e3) + ch.charAt(e4);
              } while ((i2 += 3) < l);
              return r;
            };
            this.getDump = function() {
              var BASE = 65521;
              var NMAX = 5552;
              var s1 = 1;
              var s2 = 0;
              var n = NMAX;
              for (var y = 0; y < this.height; y++) {
                for (var x = -1; x < this.width; x++) {
                  s1 += this.buffer[this.index(x, y)].charCodeAt(0);
                  s2 += s1;
                  if ((n -= 1) == 0) {
                    s1 %= BASE;
                    s2 %= BASE;
                    n = NMAX;
                  }
                }
              }
              s1 %= BASE;
              s2 %= BASE;
              write(this.buffer, this.idat_offs + this.idat_size - 8, byte4(s2 << 16 | s1));
              function crc32(png, offs, size3) {
                var crc = -1;
                for (var i2 = 4; i2 < size3 - 4; i2 += 1) {
                  crc = _crc32[(crc ^ png[offs + i2].charCodeAt(0)) & 255] ^ crc >> 8 & 16777215;
                }
                write(png, offs + size3 - 4, byte4(crc ^ -1));
              }
              crc32(this.buffer, this.ihdr_offs, this.ihdr_size);
              crc32(this.buffer, this.plte_offs, this.plte_size);
              crc32(this.buffer, this.trns_offs, this.trns_size);
              crc32(this.buffer, this.idat_offs, this.idat_size);
              crc32(this.buffer, this.iend_offs, this.iend_size);
              return "\x89PNG\r\n\n" + this.buffer.join("");
            };
          };
        },
        function(module2, exports2) {
          function hue2rgb(p, q, t) {
            if (t < 0)
              t += 1;
            if (t > 1)
              t -= 1;
            if (t < 1 / 6)
              return p + (q - p) * 6 * t;
            if (t < 1 / 2)
              return q;
            if (t < 2 / 3)
              return p + (q - p) * (2 / 3 - t) * 6;
            return p;
          }
          function hsl2rgb(h, s, l) {
            let r, g, b;
            if (s == 0) {
              r = g = b = l;
            } else {
              const q = l < 0.5 ? l * (1 + s) : l + s - l * s;
              const p = 2 * l - q;
              r = hue2rgb(p, q, h + 1 / 3);
              g = hue2rgb(p, q, h);
              b = hue2rgb(p, q, h - 1 / 3);
            }
            return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), 255];
          }
          module2.exports = hsl2rgb;
        }
      ]);
    });
  }
});

// node_modules/@daohaus/ui/index.js
var import_jsx_runtime = __toESM(require_jsx_runtime());

// node_modules/@radix-ui/react-avatar/dist/index.mjs
var import_react7 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-context/dist/index.mjs
var import_react = __toESM(require_react(), 1);
function $c512c27ab02ef895$export$fd42f52fd3ae1109(rootComponentName, defaultContext) {
  const Context = (0, import_react.createContext)(defaultContext);
  function Provider2(props) {
    const { children, ...context } = props;
    const value = (0, import_react.useMemo)(
      () => context,
      Object.values(context)
    );
    return (0, import_react.createElement)(Context.Provider, {
      value
    }, children);
  }
  function useContext2(consumerName) {
    const context = (0, import_react.useContext)(Context);
    if (context)
      return context;
    if (defaultContext !== void 0)
      return defaultContext;
    throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
  }
  Provider2.displayName = rootComponentName + "Provider";
  return [
    Provider2,
    useContext2
  ];
}
function $c512c27ab02ef895$export$50c7b4e9d9f19c1(scopeName, createContextScopeDeps = []) {
  let defaultContexts = [];
  function $c512c27ab02ef895$export$fd42f52fd3ae11092(rootComponentName, defaultContext) {
    const BaseContext = (0, import_react.createContext)(defaultContext);
    const index2 = defaultContexts.length;
    defaultContexts = [
      ...defaultContexts,
      defaultContext
    ];
    function Provider2(props) {
      const { scope, children, ...context } = props;
      const Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index2]) || BaseContext;
      const value = (0, import_react.useMemo)(
        () => context,
        Object.values(context)
      );
      return (0, import_react.createElement)(Context.Provider, {
        value
      }, children);
    }
    function useContext2(consumerName, scope) {
      const Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index2]) || BaseContext;
      const context = (0, import_react.useContext)(Context);
      if (context)
        return context;
      if (defaultContext !== void 0)
        return defaultContext;
      throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
    }
    Provider2.displayName = rootComponentName + "Provider";
    return [
      Provider2,
      useContext2
    ];
  }
  const createScope = () => {
    const scopeContexts = defaultContexts.map((defaultContext) => {
      return (0, import_react.createContext)(defaultContext);
    });
    return function useScope(scope) {
      const contexts = (scope === null || scope === void 0 ? void 0 : scope[scopeName]) || scopeContexts;
      return (0, import_react.useMemo)(
        () => ({
          [`__scope${scopeName}`]: {
            ...scope,
            [scopeName]: contexts
          }
        }),
        [
          scope,
          contexts
        ]
      );
    };
  };
  createScope.scopeName = scopeName;
  return [
    $c512c27ab02ef895$export$fd42f52fd3ae11092,
    $c512c27ab02ef895$var$composeContextScopes(createScope, ...createContextScopeDeps)
  ];
}
function $c512c27ab02ef895$var$composeContextScopes(...scopes) {
  const baseScope = scopes[0];
  if (scopes.length === 1)
    return baseScope;
  const createScope1 = () => {
    const scopeHooks = scopes.map(
      (createScope) => ({
        useScope: createScope(),
        scopeName: createScope.scopeName
      })
    );
    return function useComposedScopes(overrideScopes) {
      const nextScopes1 = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {
        const scopeProps = useScope(overrideScopes);
        const currentScope = scopeProps[`__scope${scopeName}`];
        return {
          ...nextScopes,
          ...currentScope
        };
      }, {});
      return (0, import_react.useMemo)(
        () => ({
          [`__scope${baseScope.scopeName}`]: nextScopes1
        }),
        [
          nextScopes1
        ]
      );
    };
  };
  createScope1.scopeName = baseScope.scopeName;
  return createScope1;
}

// node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs
var import_react2 = __toESM(require_react(), 1);
function $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback) {
  const callbackRef = (0, import_react2.useRef)(callback);
  (0, import_react2.useEffect)(() => {
    callbackRef.current = callback;
  });
  return (0, import_react2.useMemo)(
    () => (...args) => {
      var _callbackRef$current;
      return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);
    },
    []
  );
}

// node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs
var import_react3 = __toESM(require_react(), 1);
var $9f79659886946c16$export$e5c5a5f917a5871c = Boolean(globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) ? import_react3.useLayoutEffect : () => {
};

// node_modules/@radix-ui/react-primitive/dist/index.mjs
var import_react6 = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);

// node_modules/@radix-ui/react-slot/dist/index.mjs
var import_react5 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-compose-refs/dist/index.mjs
var import_react4 = __toESM(require_react(), 1);
function $6ed0406888f73fc4$var$setRef(ref, value) {
  if (typeof ref === "function")
    ref(value);
  else if (ref !== null && ref !== void 0)
    ref.current = value;
}
function $6ed0406888f73fc4$export$43e446d32b3d21af(...refs) {
  return (node) => refs.forEach(
    (ref) => $6ed0406888f73fc4$var$setRef(ref, node)
  );
}
function $6ed0406888f73fc4$export$c7b2cbe3552a0d05(...refs) {
  return (0, import_react4.useCallback)($6ed0406888f73fc4$export$43e446d32b3d21af(...refs), refs);
}

// node_modules/@radix-ui/react-slot/dist/index.mjs
var $5e63c961fc1ce211$export$8c6ed5c666ac1360 = (0, import_react5.forwardRef)((props, forwardedRef) => {
  const { children, ...slotProps } = props;
  const childrenArray = import_react5.Children.toArray(children);
  const slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable);
  if (slottable) {
    const newElement = slottable.props.children;
    const newChildren = childrenArray.map((child) => {
      if (child === slottable) {
        if (import_react5.Children.count(newElement) > 1)
          return import_react5.Children.only(null);
        return (0, import_react5.isValidElement)(newElement) ? newElement.props.children : null;
      } else
        return child;
    });
    return (0, import_react5.createElement)($5e63c961fc1ce211$var$SlotClone, _extends({}, slotProps, {
      ref: forwardedRef
    }), (0, import_react5.isValidElement)(newElement) ? (0, import_react5.cloneElement)(newElement, void 0, newChildren) : null);
  }
  return (0, import_react5.createElement)($5e63c961fc1ce211$var$SlotClone, _extends({}, slotProps, {
    ref: forwardedRef
  }), children);
});
$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName = "Slot";
var $5e63c961fc1ce211$var$SlotClone = (0, import_react5.forwardRef)((props, forwardedRef) => {
  const { children, ...slotProps } = props;
  if ((0, import_react5.isValidElement)(children))
    return (0, import_react5.cloneElement)(children, {
      ...$5e63c961fc1ce211$var$mergeProps(slotProps, children.props),
      ref: forwardedRef ? $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, children.ref) : children.ref
    });
  return import_react5.Children.count(children) > 1 ? import_react5.Children.only(null) : null;
});
$5e63c961fc1ce211$var$SlotClone.displayName = "SlotClone";
var $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 = ({ children }) => {
  return (0, import_react5.createElement)(import_react5.Fragment, null, children);
};
function $5e63c961fc1ce211$var$isSlottable(child) {
  return (0, import_react5.isValidElement)(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d45;
}
function $5e63c961fc1ce211$var$mergeProps(slotProps, childProps) {
  const overrideProps = {
    ...childProps
  };
  for (const propName in childProps) {
    const slotPropValue = slotProps[propName];
    const childPropValue = childProps[propName];
    const isHandler = /^on[A-Z]/.test(propName);
    if (isHandler) {
      if (slotPropValue && childPropValue)
        overrideProps[propName] = (...args) => {
          childPropValue(...args);
          slotPropValue(...args);
        };
      else if (slotPropValue)
        overrideProps[propName] = slotPropValue;
    } else if (propName === "style")
      overrideProps[propName] = {
        ...slotPropValue,
        ...childPropValue
      };
    else if (propName === "className")
      overrideProps[propName] = [
        slotPropValue,
        childPropValue
      ].filter(Boolean).join(" ");
  }
  return {
    ...slotProps,
    ...overrideProps
  };
}

// node_modules/@radix-ui/react-primitive/dist/index.mjs
var $8927f6f2acc4f386$var$NODES = [
  "a",
  "button",
  "div",
  "form",
  "h2",
  "h3",
  "img",
  "input",
  "label",
  "li",
  "nav",
  "ol",
  "p",
  "span",
  "svg",
  "ul"
];
var $8927f6f2acc4f386$export$250ffa63cdc0d034 = $8927f6f2acc4f386$var$NODES.reduce((primitive, node) => {
  const Node2 = (0, import_react6.forwardRef)((props, forwardedRef) => {
    const { asChild, ...primitiveProps } = props;
    const Comp = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : node;
    (0, import_react6.useEffect)(() => {
      window[Symbol.for("radix-ui")] = true;
    }, []);
    return (0, import_react6.createElement)(Comp, _extends({}, primitiveProps, {
      ref: forwardedRef
    }));
  });
  Node2.displayName = `Primitive.${node}`;
  return {
    ...primitive,
    [node]: Node2
  };
}, {});
function $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event) {
  if (target)
    (0, import_react_dom.flushSync)(
      () => target.dispatchEvent(event)
    );
}

// node_modules/@radix-ui/react-avatar/dist/index.mjs
var $cddcb0b647441e34$var$AVATAR_NAME = "Avatar";
var [$cddcb0b647441e34$var$createAvatarContext, $cddcb0b647441e34$export$90370d16b488820f] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($cddcb0b647441e34$var$AVATAR_NAME);
var [$cddcb0b647441e34$var$AvatarProvider, $cddcb0b647441e34$var$useAvatarContext] = $cddcb0b647441e34$var$createAvatarContext($cddcb0b647441e34$var$AVATAR_NAME);
var $cddcb0b647441e34$export$e2255cf6045e8d47 = (0, import_react7.forwardRef)((props, forwardedRef) => {
  const { __scopeAvatar, ...avatarProps } = props;
  const [imageLoadingStatus, setImageLoadingStatus] = (0, import_react7.useState)("idle");
  return (0, import_react7.createElement)($cddcb0b647441e34$var$AvatarProvider, {
    scope: __scopeAvatar,
    imageLoadingStatus,
    onImageLoadingStatusChange: setImageLoadingStatus
  }, (0, import_react7.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({}, avatarProps, {
    ref: forwardedRef
  })));
});
Object.assign($cddcb0b647441e34$export$e2255cf6045e8d47, {
  displayName: $cddcb0b647441e34$var$AVATAR_NAME
});
var $cddcb0b647441e34$var$IMAGE_NAME = "AvatarImage";
var $cddcb0b647441e34$export$2cd8ae1985206fe8 = (0, import_react7.forwardRef)((props, forwardedRef) => {
  const { __scopeAvatar, src, onLoadingStatusChange = () => {
  }, ...imageProps } = props;
  const context = $cddcb0b647441e34$var$useAvatarContext($cddcb0b647441e34$var$IMAGE_NAME, __scopeAvatar);
  const imageLoadingStatus = $cddcb0b647441e34$var$useImageLoadingStatus(src);
  const handleLoadingStatusChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a((status) => {
    onLoadingStatusChange(status);
    context.onImageLoadingStatusChange(status);
  });
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (imageLoadingStatus !== "idle")
      handleLoadingStatusChange(imageLoadingStatus);
  }, [
    imageLoadingStatus,
    handleLoadingStatusChange
  ]);
  return imageLoadingStatus === "loaded" ? (0, import_react7.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.img, _extends({}, imageProps, {
    ref: forwardedRef,
    src
  })) : null;
});
Object.assign($cddcb0b647441e34$export$2cd8ae1985206fe8, {
  displayName: $cddcb0b647441e34$var$IMAGE_NAME
});
var $cddcb0b647441e34$var$FALLBACK_NAME = "AvatarFallback";
var $cddcb0b647441e34$export$69fffb6a9571fbfe = (0, import_react7.forwardRef)((props, forwardedRef) => {
  const { __scopeAvatar, delayMs, ...fallbackProps } = props;
  const context = $cddcb0b647441e34$var$useAvatarContext($cddcb0b647441e34$var$FALLBACK_NAME, __scopeAvatar);
  const [canRender, setCanRender] = (0, import_react7.useState)(delayMs === void 0);
  (0, import_react7.useEffect)(() => {
    if (delayMs !== void 0) {
      const timerId = window.setTimeout(
        () => setCanRender(true),
        delayMs
      );
      return () => window.clearTimeout(timerId);
    }
  }, [
    delayMs
  ]);
  return canRender && context.imageLoadingStatus !== "loaded" ? (0, import_react7.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({}, fallbackProps, {
    ref: forwardedRef
  })) : null;
});
Object.assign($cddcb0b647441e34$export$69fffb6a9571fbfe, {
  displayName: $cddcb0b647441e34$var$FALLBACK_NAME
});
function $cddcb0b647441e34$var$useImageLoadingStatus(src) {
  const [loadingStatus, setLoadingStatus] = (0, import_react7.useState)("idle");
  (0, import_react7.useEffect)(() => {
    if (!src) {
      setLoadingStatus("error");
      return;
    }
    let isMounted = true;
    const image = new window.Image();
    const updateStatus = (status) => () => {
      if (!isMounted)
        return;
      setLoadingStatus(status);
    };
    setLoadingStatus("loading");
    image.onload = updateStatus("loaded");
    image.onerror = updateStatus("error");
    image.src = src;
    return () => {
      isMounted = false;
    };
  }, [
    src
  ]);
  return loadingStatus;
}
var $cddcb0b647441e34$export$be92b6f5f03c0fe9 = $cddcb0b647441e34$export$e2255cf6045e8d47;
var $cddcb0b647441e34$export$3e431a229df88919 = $cddcb0b647441e34$export$2cd8ae1985206fe8;
var $cddcb0b647441e34$export$fb8d7f40caaeea67 = $cddcb0b647441e34$export$69fffb6a9571fbfe;

// node_modules/@daohaus/ui/index.js
var import_react40 = __toESM(require_react());
var import_classnames = __toESM(require_classnames());
var import_ri = __toESM(require_ri());

// node_modules/@radix-ui/react-accessible-icon/dist/index.mjs
var import_react9 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-visually-hidden/dist/index.mjs
var import_react8 = __toESM(require_react(), 1);
var $ea1ef594cf570d83$var$NAME = "VisuallyHidden";
var $ea1ef594cf570d83$export$439d29a4e110a164 = (0, import_react8.forwardRef)((props, forwardedRef) => {
  return (0, import_react8.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({}, props, {
    ref: forwardedRef,
    style: {
      position: "absolute",
      border: 0,
      width: 1,
      height: 1,
      padding: 0,
      margin: -1,
      overflow: "hidden",
      clip: "rect(0, 0, 0, 0)",
      whiteSpace: "nowrap",
      wordWrap: "normal",
      ...props.style
    }
  }));
});
Object.assign($ea1ef594cf570d83$export$439d29a4e110a164, {
  displayName: $ea1ef594cf570d83$var$NAME
});
var $ea1ef594cf570d83$export$be92b6f5f03c0fe9 = $ea1ef594cf570d83$export$439d29a4e110a164;

// node_modules/@radix-ui/react-accessible-icon/dist/index.mjs
var $08b6689415b2f49a$var$NAME = "AccessibleIcon";
var $08b6689415b2f49a$export$5aec92af04ace2d2 = ({ children, label }) => {
  const child = import_react9.Children.only(children);
  return (0, import_react9.createElement)(import_react9.Fragment, null, (0, import_react9.cloneElement)(child, {
    "aria-hidden": "true",
    focusable: "false"
  }), (0, import_react9.createElement)($ea1ef594cf570d83$export$be92b6f5f03c0fe9, null, label));
};
Object.assign($08b6689415b2f49a$export$5aec92af04ace2d2, {
  displayName: $08b6689415b2f49a$var$NAME
});
var $08b6689415b2f49a$export$be92b6f5f03c0fe9 = $08b6689415b2f49a$export$5aec92af04ace2d2;

// node_modules/@radix-ui/react-checkbox/dist/index.mjs
var import_react14 = __toESM(require_react(), 1);

// node_modules/@radix-ui/primitive/dist/index.mjs
function $e42e1063c40fb3ef$export$b9ecd428b558ff10(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {
  return function handleEvent(event) {
    originalEventHandler === null || originalEventHandler === void 0 || originalEventHandler(event);
    if (checkForDefaultPrevented === false || !event.defaultPrevented)
      return ourEventHandler === null || ourEventHandler === void 0 ? void 0 : ourEventHandler(event);
  };
}

// node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs
var import_react10 = __toESM(require_react(), 1);
function $71cd76cc60e0454e$export$6f32135080cb4c3({ prop, defaultProp, onChange = () => {
} }) {
  const [uncontrolledProp, setUncontrolledProp] = $71cd76cc60e0454e$var$useUncontrolledState({
    defaultProp,
    onChange
  });
  const isControlled = prop !== void 0;
  const value1 = isControlled ? prop : uncontrolledProp;
  const handleChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onChange);
  const setValue = (0, import_react10.useCallback)((nextValue) => {
    if (isControlled) {
      const setter = nextValue;
      const value = typeof nextValue === "function" ? setter(prop) : nextValue;
      if (value !== prop)
        handleChange(value);
    } else
      setUncontrolledProp(nextValue);
  }, [
    isControlled,
    prop,
    setUncontrolledProp,
    handleChange
  ]);
  return [
    value1,
    setValue
  ];
}
function $71cd76cc60e0454e$var$useUncontrolledState({ defaultProp, onChange }) {
  const uncontrolledState = (0, import_react10.useState)(defaultProp);
  const [value] = uncontrolledState;
  const prevValueRef = (0, import_react10.useRef)(value);
  const handleChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onChange);
  (0, import_react10.useEffect)(() => {
    if (prevValueRef.current !== value) {
      handleChange(value);
      prevValueRef.current = value;
    }
  }, [
    value,
    prevValueRef,
    handleChange
  ]);
  return uncontrolledState;
}

// node_modules/@radix-ui/react-use-previous/dist/index.mjs
var import_react11 = __toESM(require_react(), 1);
function $010c2913dbd2fe3d$export$5cae361ad82dce8b(value) {
  const ref = (0, import_react11.useRef)({
    value,
    previous: value
  });
  return (0, import_react11.useMemo)(() => {
    if (ref.current.value !== value) {
      ref.current.previous = ref.current.value;
      ref.current.value = value;
    }
    return ref.current.previous;
  }, [
    value
  ]);
}

// node_modules/@radix-ui/react-use-size/dist/index.mjs
var import_react12 = __toESM(require_react(), 1);
function $db6c3485150b8e66$export$1ab7ae714698c4b8(element) {
  const [size2, setSize] = (0, import_react12.useState)(void 0);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (element) {
      setSize({
        width: element.offsetWidth,
        height: element.offsetHeight
      });
      const resizeObserver = new ResizeObserver((entries) => {
        if (!Array.isArray(entries))
          return;
        if (!entries.length)
          return;
        const entry = entries[0];
        let width;
        let height;
        if ("borderBoxSize" in entry) {
          const borderSizeEntry = entry["borderBoxSize"];
          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;
          width = borderSize["inlineSize"];
          height = borderSize["blockSize"];
        } else {
          width = element.offsetWidth;
          height = element.offsetHeight;
        }
        setSize({
          width,
          height
        });
      });
      resizeObserver.observe(element, {
        box: "border-box"
      });
      return () => resizeObserver.unobserve(element);
    } else
      setSize(void 0);
  }, [
    element
  ]);
  return size2;
}

// node_modules/@radix-ui/react-presence/dist/index.mjs
var import_react13 = __toESM(require_react(), 1);
var import_react_dom2 = __toESM(require_react_dom(), 1);
function $fe963b355347cc68$export$3e6543de14f8614f(initialState, machine) {
  return (0, import_react13.useReducer)((state, event) => {
    const nextState = machine[state][event];
    return nextState !== null && nextState !== void 0 ? nextState : state;
  }, initialState);
}
var $921a889cee6df7e8$export$99c2b779aa4e8b8b = (props) => {
  const { present, children } = props;
  const presence = $921a889cee6df7e8$var$usePresence(present);
  const child = typeof children === "function" ? children({
    present: presence.isPresent
  }) : import_react13.Children.only(children);
  const ref = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(presence.ref, child.ref);
  const forceMount = typeof children === "function";
  return forceMount || presence.isPresent ? (0, import_react13.cloneElement)(child, {
    ref
  }) : null;
};
$921a889cee6df7e8$export$99c2b779aa4e8b8b.displayName = "Presence";
function $921a889cee6df7e8$var$usePresence(present) {
  const [node1, setNode] = (0, import_react13.useState)();
  const stylesRef = (0, import_react13.useRef)({});
  const prevPresentRef = (0, import_react13.useRef)(present);
  const prevAnimationNameRef = (0, import_react13.useRef)("none");
  const initialState = present ? "mounted" : "unmounted";
  const [state, send] = $fe963b355347cc68$export$3e6543de14f8614f(initialState, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: {
      MOUNT: "mounted"
    }
  });
  (0, import_react13.useEffect)(() => {
    const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
    prevAnimationNameRef.current = state === "mounted" ? currentAnimationName : "none";
  }, [
    state
  ]);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    const styles = stylesRef.current;
    const wasPresent = prevPresentRef.current;
    const hasPresentChanged = wasPresent !== present;
    if (hasPresentChanged) {
      const prevAnimationName = prevAnimationNameRef.current;
      const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(styles);
      if (present)
        send("MOUNT");
      else if (currentAnimationName === "none" || (styles === null || styles === void 0 ? void 0 : styles.display) === "none")
        send("UNMOUNT");
      else {
        const isAnimating = prevAnimationName !== currentAnimationName;
        if (wasPresent && isAnimating)
          send("ANIMATION_OUT");
        else
          send("UNMOUNT");
      }
      prevPresentRef.current = present;
    }
  }, [
    present,
    send
  ]);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (node1) {
      const handleAnimationEnd = (event) => {
        const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
        const isCurrentAnimation = currentAnimationName.includes(event.animationName);
        if (event.target === node1 && isCurrentAnimation)
          (0, import_react_dom2.flushSync)(
            () => send("ANIMATION_END")
          );
      };
      const handleAnimationStart = (event) => {
        if (event.target === node1)
          prevAnimationNameRef.current = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
      };
      node1.addEventListener("animationstart", handleAnimationStart);
      node1.addEventListener("animationcancel", handleAnimationEnd);
      node1.addEventListener("animationend", handleAnimationEnd);
      return () => {
        node1.removeEventListener("animationstart", handleAnimationStart);
        node1.removeEventListener("animationcancel", handleAnimationEnd);
        node1.removeEventListener("animationend", handleAnimationEnd);
      };
    } else
      send("ANIMATION_END");
  }, [
    node1,
    send
  ]);
  return {
    isPresent: [
      "mounted",
      "unmountSuspended"
    ].includes(state),
    ref: (0, import_react13.useCallback)((node) => {
      if (node)
        stylesRef.current = getComputedStyle(node);
      setNode(node);
    }, [])
  };
}
function $921a889cee6df7e8$var$getAnimationName(styles) {
  return (styles === null || styles === void 0 ? void 0 : styles.animationName) || "none";
}

// node_modules/@radix-ui/react-checkbox/dist/index.mjs
var $e698a72e93240346$var$CHECKBOX_NAME = "Checkbox";
var [$e698a72e93240346$var$createCheckboxContext, $e698a72e93240346$export$b566c4ff5488ea01] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($e698a72e93240346$var$CHECKBOX_NAME);
var [$e698a72e93240346$var$CheckboxProvider, $e698a72e93240346$var$useCheckboxContext] = $e698a72e93240346$var$createCheckboxContext($e698a72e93240346$var$CHECKBOX_NAME);
var $e698a72e93240346$export$48513f6b9f8ce62d = (0, import_react14.forwardRef)((props, forwardedRef) => {
  const { __scopeCheckbox, name, checked: checkedProp, defaultChecked, required, disabled, value = "on", onCheckedChange, ...checkboxProps } = props;
  const [button, setButton] = (0, import_react14.useState)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setButton(node)
  );
  const hasConsumerStoppedPropagationRef = (0, import_react14.useRef)(false);
  const isFormControl = button ? Boolean(button.closest("form")) : true;
  const [checked = false, setChecked] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: checkedProp,
    defaultProp: defaultChecked,
    onChange: onCheckedChange
  });
  const initialCheckedStateRef = (0, import_react14.useRef)(checked);
  (0, import_react14.useEffect)(() => {
    const form = button === null || button === void 0 ? void 0 : button.form;
    if (form) {
      const reset = () => setChecked(initialCheckedStateRef.current);
      form.addEventListener("reset", reset);
      return () => form.removeEventListener("reset", reset);
    }
  }, [
    button,
    setChecked
  ]);
  return (0, import_react14.createElement)($e698a72e93240346$var$CheckboxProvider, {
    scope: __scopeCheckbox,
    state: checked,
    disabled
  }, (0, import_react14.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button",
    role: "checkbox",
    "aria-checked": $e698a72e93240346$var$isIndeterminate(checked) ? "mixed" : checked,
    "aria-required": required,
    "data-state": $e698a72e93240346$var$getState(checked),
    "data-disabled": disabled ? "" : void 0,
    disabled,
    value
  }, checkboxProps, {
    ref: composedRefs,
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      if (event.key === "Enter")
        event.preventDefault();
    }),
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, (event) => {
      setChecked(
        (prevChecked) => $e698a72e93240346$var$isIndeterminate(prevChecked) ? true : !prevChecked
      );
      if (isFormControl) {
        hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
        if (!hasConsumerStoppedPropagationRef.current)
          event.stopPropagation();
      }
    })
  })), isFormControl && (0, import_react14.createElement)($e698a72e93240346$var$BubbleInput, {
    control: button,
    bubbles: !hasConsumerStoppedPropagationRef.current,
    name,
    value,
    checked,
    required,
    disabled,
    style: {
      transform: "translateX(-100%)"
    }
  }));
});
Object.assign($e698a72e93240346$export$48513f6b9f8ce62d, {
  displayName: $e698a72e93240346$var$CHECKBOX_NAME
});
var $e698a72e93240346$var$INDICATOR_NAME = "CheckboxIndicator";
var $e698a72e93240346$export$59aad738f51d1c05 = (0, import_react14.forwardRef)((props, forwardedRef) => {
  const { __scopeCheckbox, forceMount, ...indicatorProps } = props;
  const context = $e698a72e93240346$var$useCheckboxContext($e698a72e93240346$var$INDICATOR_NAME, __scopeCheckbox);
  return (0, import_react14.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || $e698a72e93240346$var$isIndeterminate(context.state) || context.state === true
  }, (0, import_react14.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({
    "data-state": $e698a72e93240346$var$getState(context.state),
    "data-disabled": context.disabled ? "" : void 0
  }, indicatorProps, {
    ref: forwardedRef,
    style: {
      pointerEvents: "none",
      ...props.style
    }
  })));
});
Object.assign($e698a72e93240346$export$59aad738f51d1c05, {
  displayName: $e698a72e93240346$var$INDICATOR_NAME
});
var $e698a72e93240346$var$BubbleInput = (props) => {
  const { control, checked, bubbles = true, ...inputProps } = props;
  const ref = (0, import_react14.useRef)(null);
  const prevChecked = $010c2913dbd2fe3d$export$5cae361ad82dce8b(checked);
  const controlSize = $db6c3485150b8e66$export$1ab7ae714698c4b8(control);
  (0, import_react14.useEffect)(() => {
    const input = ref.current;
    const inputProto = window.HTMLInputElement.prototype;
    const descriptor = Object.getOwnPropertyDescriptor(inputProto, "checked");
    const setChecked = descriptor.set;
    if (prevChecked !== checked && setChecked) {
      const event = new Event("click", {
        bubbles
      });
      input.indeterminate = $e698a72e93240346$var$isIndeterminate(checked);
      setChecked.call(input, $e698a72e93240346$var$isIndeterminate(checked) ? false : checked);
      input.dispatchEvent(event);
    }
  }, [
    prevChecked,
    checked,
    bubbles
  ]);
  return (0, import_react14.createElement)("input", _extends({
    type: "checkbox",
    "aria-hidden": true,
    defaultChecked: $e698a72e93240346$var$isIndeterminate(checked) ? false : checked
  }, inputProps, {
    tabIndex: -1,
    ref,
    style: {
      ...props.style,
      ...controlSize,
      position: "absolute",
      pointerEvents: "none",
      opacity: 0,
      margin: 0
    }
  }));
};
function $e698a72e93240346$var$isIndeterminate(checked) {
  return checked === "indeterminate";
}
function $e698a72e93240346$var$getState(checked) {
  return $e698a72e93240346$var$isIndeterminate(checked) ? "indeterminate" : checked ? "checked" : "unchecked";
}
var $e698a72e93240346$export$be92b6f5f03c0fe9 = $e698a72e93240346$export$48513f6b9f8ce62d;
var $e698a72e93240346$export$adb584737d712b70 = $e698a72e93240346$export$59aad738f51d1c05;

// node_modules/@radix-ui/react-tooltip/dist/index.mjs
var import_react21 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs
var import_react16 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs
var import_react15 = __toESM(require_react(), 1);
function $addc16e1bbe58fd0$export$3a72a57244d6e765(onEscapeKeyDownProp, ownerDocument = globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) {
  const onEscapeKeyDown = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onEscapeKeyDownProp);
  (0, import_react15.useEffect)(() => {
    const handleKeyDown = (event) => {
      if (event.key === "Escape")
        onEscapeKeyDown(event);
    };
    ownerDocument.addEventListener("keydown", handleKeyDown);
    return () => ownerDocument.removeEventListener("keydown", handleKeyDown);
  }, [
    onEscapeKeyDown,
    ownerDocument
  ]);
}

// node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs
var $5cb92bef7577960e$var$DISMISSABLE_LAYER_NAME = "DismissableLayer";
var $5cb92bef7577960e$var$CONTEXT_UPDATE = "dismissableLayer.update";
var $5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE = "dismissableLayer.pointerDownOutside";
var $5cb92bef7577960e$var$FOCUS_OUTSIDE = "dismissableLayer.focusOutside";
var $5cb92bef7577960e$var$originalBodyPointerEvents;
var $5cb92bef7577960e$var$DismissableLayerContext = (0, import_react16.createContext)({
  layers: /* @__PURE__ */ new Set(),
  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
  branches: /* @__PURE__ */ new Set()
});
var $5cb92bef7577960e$export$177fb62ff3ec1f22 = (0, import_react16.forwardRef)((props, forwardedRef) => {
  var _node$ownerDocument;
  const { disableOutsidePointerEvents = false, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, ...layerProps } = props;
  const context = (0, import_react16.useContext)($5cb92bef7577960e$var$DismissableLayerContext);
  const [node1, setNode] = (0, import_react16.useState)(null);
  const ownerDocument = (_node$ownerDocument = node1 === null || node1 === void 0 ? void 0 : node1.ownerDocument) !== null && _node$ownerDocument !== void 0 ? _node$ownerDocument : globalThis === null || globalThis === void 0 ? void 0 : globalThis.document;
  const [, force] = (0, import_react16.useState)({});
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setNode(node)
  );
  const layers = Array.from(context.layers);
  const [highestLayerWithOutsidePointerEventsDisabled] = [
    ...context.layersWithOutsidePointerEventsDisabled
  ].slice(-1);
  const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled);
  const index2 = node1 ? layers.indexOf(node1) : -1;
  const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;
  const isPointerEventsEnabled = index2 >= highestLayerWithOutsidePointerEventsDisabledIndex;
  const pointerDownOutside = $5cb92bef7577960e$var$usePointerDownOutside((event) => {
    const target = event.target;
    const isPointerDownOnBranch = [
      ...context.branches
    ].some(
      (branch) => branch.contains(target)
    );
    if (!isPointerEventsEnabled || isPointerDownOnBranch)
      return;
    onPointerDownOutside === null || onPointerDownOutside === void 0 || onPointerDownOutside(event);
    onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);
    if (!event.defaultPrevented)
      onDismiss === null || onDismiss === void 0 || onDismiss();
  }, ownerDocument);
  const focusOutside = $5cb92bef7577960e$var$useFocusOutside((event) => {
    const target = event.target;
    const isFocusInBranch = [
      ...context.branches
    ].some(
      (branch) => branch.contains(target)
    );
    if (isFocusInBranch)
      return;
    onFocusOutside === null || onFocusOutside === void 0 || onFocusOutside(event);
    onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);
    if (!event.defaultPrevented)
      onDismiss === null || onDismiss === void 0 || onDismiss();
  }, ownerDocument);
  $addc16e1bbe58fd0$export$3a72a57244d6e765((event) => {
    const isHighestLayer = index2 === context.layers.size - 1;
    if (!isHighestLayer)
      return;
    onEscapeKeyDown === null || onEscapeKeyDown === void 0 || onEscapeKeyDown(event);
    if (!event.defaultPrevented && onDismiss) {
      event.preventDefault();
      onDismiss();
    }
  }, ownerDocument);
  (0, import_react16.useEffect)(() => {
    if (!node1)
      return;
    if (disableOutsidePointerEvents) {
      if (context.layersWithOutsidePointerEventsDisabled.size === 0) {
        $5cb92bef7577960e$var$originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;
        ownerDocument.body.style.pointerEvents = "none";
      }
      context.layersWithOutsidePointerEventsDisabled.add(node1);
    }
    context.layers.add(node1);
    $5cb92bef7577960e$var$dispatchUpdate();
    return () => {
      if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1)
        ownerDocument.body.style.pointerEvents = $5cb92bef7577960e$var$originalBodyPointerEvents;
    };
  }, [
    node1,
    ownerDocument,
    disableOutsidePointerEvents,
    context
  ]);
  (0, import_react16.useEffect)(() => {
    return () => {
      if (!node1)
        return;
      context.layers.delete(node1);
      context.layersWithOutsidePointerEventsDisabled.delete(node1);
      $5cb92bef7577960e$var$dispatchUpdate();
    };
  }, [
    node1,
    context
  ]);
  (0, import_react16.useEffect)(() => {
    const handleUpdate = () => force({});
    document.addEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate);
    return () => document.removeEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate);
  }, []);
  return (0, import_react16.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, layerProps, {
    ref: composedRefs,
    style: {
      pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? "auto" : "none" : void 0,
      ...props.style
    },
    onFocusCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocusCapture, focusOutside.onFocusCapture),
    onBlurCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlurCapture, focusOutside.onBlurCapture),
    onPointerDownCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)
  }));
});
Object.assign($5cb92bef7577960e$export$177fb62ff3ec1f22, {
  displayName: $5cb92bef7577960e$var$DISMISSABLE_LAYER_NAME
});
var $5cb92bef7577960e$var$BRANCH_NAME = "DismissableLayerBranch";
var $5cb92bef7577960e$export$4d5eb2109db14228 = (0, import_react16.forwardRef)((props, forwardedRef) => {
  const context = (0, import_react16.useContext)($5cb92bef7577960e$var$DismissableLayerContext);
  const ref = (0, import_react16.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  (0, import_react16.useEffect)(() => {
    const node = ref.current;
    if (node) {
      context.branches.add(node);
      return () => {
        context.branches.delete(node);
      };
    }
  }, [
    context.branches
  ]);
  return (0, import_react16.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, props, {
    ref: composedRefs
  }));
});
Object.assign($5cb92bef7577960e$export$4d5eb2109db14228, {
  displayName: $5cb92bef7577960e$var$BRANCH_NAME
});
function $5cb92bef7577960e$var$usePointerDownOutside(onPointerDownOutside, ownerDocument = globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) {
  const handlePointerDownOutside = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onPointerDownOutside);
  const isPointerInsideReactTreeRef = (0, import_react16.useRef)(false);
  const handleClickRef = (0, import_react16.useRef)(() => {
  });
  (0, import_react16.useEffect)(() => {
    const handlePointerDown = (event) => {
      if (event.target && !isPointerInsideReactTreeRef.current) {
        let handleAndDispatchPointerDownOutsideEvent = function() {
          $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail, {
            discrete: true
          });
        };
        const eventDetail = {
          originalEvent: event
        };
        if (event.pointerType === "touch") {
          ownerDocument.removeEventListener("click", handleClickRef.current);
          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;
          ownerDocument.addEventListener("click", handleClickRef.current, {
            once: true
          });
        } else
          handleAndDispatchPointerDownOutsideEvent();
      }
      isPointerInsideReactTreeRef.current = false;
    };
    const timerId = window.setTimeout(() => {
      ownerDocument.addEventListener("pointerdown", handlePointerDown);
    }, 0);
    return () => {
      window.clearTimeout(timerId);
      ownerDocument.removeEventListener("pointerdown", handlePointerDown);
      ownerDocument.removeEventListener("click", handleClickRef.current);
    };
  }, [
    ownerDocument,
    handlePointerDownOutside
  ]);
  return {
    onPointerDownCapture: () => isPointerInsideReactTreeRef.current = true
  };
}
function $5cb92bef7577960e$var$useFocusOutside(onFocusOutside, ownerDocument = globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) {
  const handleFocusOutside = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onFocusOutside);
  const isFocusInsideReactTreeRef = (0, import_react16.useRef)(false);
  (0, import_react16.useEffect)(() => {
    const handleFocus = (event) => {
      if (event.target && !isFocusInsideReactTreeRef.current) {
        const eventDetail = {
          originalEvent: event
        };
        $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {
          discrete: false
        });
      }
    };
    ownerDocument.addEventListener("focusin", handleFocus);
    return () => ownerDocument.removeEventListener("focusin", handleFocus);
  }, [
    ownerDocument,
    handleFocusOutside
  ]);
  return {
    onFocusCapture: () => isFocusInsideReactTreeRef.current = true,
    onBlurCapture: () => isFocusInsideReactTreeRef.current = false
  };
}
function $5cb92bef7577960e$var$dispatchUpdate() {
  const event = new CustomEvent($5cb92bef7577960e$var$CONTEXT_UPDATE);
  document.dispatchEvent(event);
}
function $5cb92bef7577960e$var$handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
  const target = detail.originalEvent.target;
  const event = new CustomEvent(name, {
    bubbles: false,
    cancelable: true,
    detail
  });
  if (handler)
    target.addEventListener(name, handler, {
      once: true
    });
  if (discrete)
    $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event);
  else
    target.dispatchEvent(event);
}
var $5cb92bef7577960e$export$be92b6f5f03c0fe9 = $5cb92bef7577960e$export$177fb62ff3ec1f22;
var $5cb92bef7577960e$export$aecb2ddcb55c95be = $5cb92bef7577960e$export$4d5eb2109db14228;

// node_modules/@radix-ui/react-id/dist/index.mjs
var $2AODx$react = __toESM(require_react(), 1);
var $1746a345f3d73bb7$var$useReactId = $2AODx$react["useId".toString()] || (() => void 0);
var $1746a345f3d73bb7$var$count = 0;
function $1746a345f3d73bb7$export$f680877a34711e37(deterministicId) {
  const [id2, setId] = $2AODx$react.useState($1746a345f3d73bb7$var$useReactId());
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (!deterministicId)
      setId(
        (reactId) => reactId !== null && reactId !== void 0 ? reactId : String($1746a345f3d73bb7$var$count++)
      );
  }, [
    deterministicId
  ]);
  return deterministicId || (id2 ? `radix-${id2}` : "");
}

// node_modules/@radix-ui/react-popper/dist/index.mjs
var import_react19 = __toESM(require_react(), 1);

// node_modules/@floating-ui/utils/dist/floating-ui.utils.esm.js
var sides = ["top", "right", "bottom", "left"];
var alignments = ["start", "end"];
var placements = sides.reduce((acc, side) => acc.concat(side, side + "-" + alignments[0], side + "-" + alignments[1]), []);
var min = Math.min;
var max = Math.max;
var round = Math.round;
var floor = Math.floor;
var createCoords = (v) => ({
  x: v,
  y: v
});
var oppositeSideMap = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
var oppositeAlignmentMap = {
  start: "end",
  end: "start"
};
function clamp(start, value, end) {
  return max(start, min(value, end));
}
function evaluate(value, param) {
  return typeof value === "function" ? value(param) : value;
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getOppositeAxis(axis) {
  return axis === "x" ? "y" : "x";
}
function getAxisLength(axis) {
  return axis === "y" ? "height" : "width";
}
function getSideAxis(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "y" : "x";
}
function getAlignmentAxis(placement) {
  return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const length = getAxisLength(alignmentAxis);
  let mainAlignmentSide = alignmentAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];
}
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
}
function getSideList(side, isStart, rtl) {
  const lr = ["left", "right"];
  const rl = ["right", "left"];
  const tb = ["top", "bottom"];
  const bt = ["bottom", "top"];
  switch (side) {
    case "top":
    case "bottom":
      if (rtl)
        return isStart ? rl : lr;
      return isStart ? lr : rl;
    case "left":
    case "right":
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  const alignment = getAlignment(placement);
  let list = getSideList(getSide(placement), direction === "start", rtl);
  if (alignment) {
    list = list.map((side) => side + "-" + alignment);
    if (flipAlignment) {
      list = list.concat(list.map(getOppositeAlignmentPlacement));
    }
  }
  return list;
}
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getPaddingObject(padding) {
  return typeof padding !== "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  return {
    ...rect,
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  };
}

// node_modules/@floating-ui/core/dist/floating-ui.core.esm.js
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref;
  const sideAxis = getSideAxis(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const alignLength = getAxisLength(alignmentAxis);
  const side = getSide(placement);
  const isVertical = sideAxis === "y";
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;
  let coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
var computePosition = async (reference, floating, config) => {
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2
  } = config;
  const validMiddleware = middleware.filter(Boolean);
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
  let rects = await platform2.getElementRects({
    reference,
    floating,
    strategy
  });
  let {
    x,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < validMiddleware.length; i++) {
    const {
      name,
      fn
    } = validMiddleware[i];
    const {
      x: nextX,
      y: nextY,
      data: data2,
      reset
    } = await fn({
      x,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference,
        floating
      }
    });
    x = nextX != null ? nextX : x;
    y = nextY != null ? nextY : y;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data2
      }
    };
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === "object") {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform2.getElementRects({
            reference,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x,
          y
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
      continue;
    }
  }
  return {
    x,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
async function detectOverflow(state, options) {
  var _await$platform$isEle;
  if (options === void 0) {
    options = {};
  }
  const {
    x,
    y,
    platform: platform2,
    rects,
    elements,
    strategy
  } = state;
  const {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = false,
    padding = 0
  } = evaluate(options, state);
  const paddingObject = getPaddingObject(padding);
  const altContext = elementContext === "floating" ? "reference" : "floating";
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = rectToClientRect(await platform2.getClippingRect({
    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  }));
  const rect = elementContext === "floating" ? {
    ...rects.floating,
    x,
    y
  } : rects.reference;
  const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating));
  const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  };
  const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}
var arrow = (options) => ({
  name: "arrow",
  options,
  async fn(state) {
    const {
      x,
      y,
      placement,
      rects,
      platform: platform2,
      elements
    } = state;
    const {
      element,
      padding = 0
    } = evaluate(options, state) || {};
    if (element == null) {
      return {};
    }
    const paddingObject = getPaddingObject(padding);
    const coords = {
      x,
      y
    };
    const axis = getAlignmentAxis(placement);
    const length = getAxisLength(axis);
    const arrowDimensions = await platform2.getDimensions(element);
    const isYAxis = axis === "y";
    const minProp = isYAxis ? "top" : "left";
    const maxProp = isYAxis ? "bottom" : "right";
    const clientProp = isYAxis ? "clientHeight" : "clientWidth";
    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
    const startDiff = coords[axis] - rects.reference[axis];
    const arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element));
    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
    if (!clientSize || !await (platform2.isElement == null ? void 0 : platform2.isElement(arrowOffsetParent))) {
      clientSize = elements.floating[clientProp] || rects.floating[length];
    }
    const centerToReference = endDiff / 2 - startDiff / 2;
    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;
    const minPadding = min(paddingObject[minProp], largestPossiblePadding);
    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);
    const min$12 = minPadding;
    const max3 = clientSize - arrowDimensions[length] - maxPadding;
    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
    const offset2 = clamp(min$12, center, max3);
    const shouldAddOffset = getAlignment(placement) != null && center != offset2 && rects.reference[length] / 2 - (center < min$12 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;
    const alignmentOffset = shouldAddOffset ? center < min$12 ? min$12 - center : max3 - center : 0;
    return {
      [axis]: coords[axis] - alignmentOffset,
      data: {
        [axis]: offset2,
        centerOffset: center - offset2 + alignmentOffset
      }
    };
  }
});
var flip = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "flip",
    options,
    async fn(state) {
      var _middlewareData$flip;
      const {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform: platform2,
        elements
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = "bestFit",
        fallbackAxisSideDirection = "none",
        flipAlignment = true,
        ...detectOverflowOptions
      } = evaluate(options, state);
      const side = getSide(placement);
      const isBasePlacement = getSide(initialPlacement) === initialPlacement;
      const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== "none") {
        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
      }
      const placements2 = [initialPlacement, ...fallbackPlacements];
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis) {
        overflows.push(overflow[side]);
      }
      if (checkCrossAxis) {
        const sides2 = getAlignmentSides(placement, rects, rtl);
        overflows.push(overflow[sides2[0]], overflow[sides2[1]]);
      }
      overflowsData = [...overflowsData, {
        placement,
        overflows
      }];
      if (!overflows.every((side2) => side2 <= 0)) {
        var _middlewareData$flip2, _overflowsData$filter;
        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
        const nextPlacement = placements2[nextIndex];
        if (nextPlacement) {
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        }
        let resetPlacement = (_overflowsData$filter = overflowsData.filter((d) => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
        if (!resetPlacement) {
          switch (fallbackStrategy) {
            case "bestFit": {
              var _overflowsData$map$so;
              const placement2 = (_overflowsData$map$so = overflowsData.map((d) => [d.placement, d.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];
              if (placement2) {
                resetPlacement = placement2;
              }
              break;
            }
            case "initialPlacement":
              resetPlacement = initialPlacement;
              break;
          }
        }
        if (placement !== resetPlacement) {
          return {
            reset: {
              placement: resetPlacement
            }
          };
        }
      }
      return {};
    }
  };
};
function getSideOffsets(overflow, rect) {
  return {
    top: overflow.top - rect.height,
    right: overflow.right - rect.width,
    bottom: overflow.bottom - rect.height,
    left: overflow.left - rect.width
  };
}
function isAnySideFullyClipped(overflow) {
  return sides.some((side) => overflow[side] >= 0);
}
var hide = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "hide",
    options,
    async fn(state) {
      const {
        rects
      } = state;
      const {
        strategy = "referenceHidden",
        ...detectOverflowOptions
      } = evaluate(options, state);
      switch (strategy) {
        case "referenceHidden": {
          const overflow = await detectOverflow(state, {
            ...detectOverflowOptions,
            elementContext: "reference"
          });
          const offsets = getSideOffsets(overflow, rects.reference);
          return {
            data: {
              referenceHiddenOffsets: offsets,
              referenceHidden: isAnySideFullyClipped(offsets)
            }
          };
        }
        case "escaped": {
          const overflow = await detectOverflow(state, {
            ...detectOverflowOptions,
            altBoundary: true
          });
          const offsets = getSideOffsets(overflow, rects.floating);
          return {
            data: {
              escapedOffsets: offsets,
              escaped: isAnySideFullyClipped(offsets)
            }
          };
        }
        default: {
          return {};
        }
      }
    }
  };
};
async function convertValueToCoords(state, options) {
  const {
    placement,
    platform: platform2,
    elements
  } = state;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
  const side = getSide(placement);
  const alignment = getAlignment(placement);
  const isVertical = getSideAxis(placement) === "y";
  const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = evaluate(options, state);
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...rawValue
  };
  if (alignment && typeof alignmentAxis === "number") {
    crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
var offset = function(options) {
  if (options === void 0) {
    options = 0;
  }
  return {
    name: "offset",
    options,
    async fn(state) {
      const {
        x,
        y
      } = state;
      const diffCoords = await convertValueToCoords(state, options);
      return {
        x: x + diffCoords.x,
        y: y + diffCoords.y,
        data: diffCoords
      };
    }
  };
};
var shift = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "shift",
    options,
    async fn(state) {
      const {
        x,
        y,
        placement
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = false,
        limiter = {
          fn: (_ref) => {
            let {
              x: x2,
              y: y2
            } = _ref;
            return {
              x: x2,
              y: y2
            };
          }
        },
        ...detectOverflowOptions
      } = evaluate(options, state);
      const coords = {
        x,
        y
      };
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const crossAxis = getSideAxis(getSide(placement));
      const mainAxis = getOppositeAxis(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      if (checkMainAxis) {
        const minSide = mainAxis === "y" ? "top" : "left";
        const maxSide = mainAxis === "y" ? "bottom" : "right";
        const min3 = mainAxisCoord + overflow[minSide];
        const max3 = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = clamp(min3, mainAxisCoord, max3);
      }
      if (checkCrossAxis) {
        const minSide = crossAxis === "y" ? "top" : "left";
        const maxSide = crossAxis === "y" ? "bottom" : "right";
        const min3 = crossAxisCoord + overflow[minSide];
        const max3 = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = clamp(min3, crossAxisCoord, max3);
      }
      const limitedCoords = limiter.fn({
        ...state,
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      });
      return {
        ...limitedCoords,
        data: {
          x: limitedCoords.x - x,
          y: limitedCoords.y - y
        }
      };
    }
  };
};
var limitShift = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    options,
    fn(state) {
      const {
        x,
        y,
        placement,
        rects,
        middlewareData
      } = state;
      const {
        offset: offset2 = 0,
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true
      } = evaluate(options, state);
      const coords = {
        x,
        y
      };
      const crossAxis = getSideAxis(placement);
      const mainAxis = getOppositeAxis(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      const rawOffset = evaluate(offset2, state);
      const computedOffset = typeof rawOffset === "number" ? {
        mainAxis: rawOffset,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...rawOffset
      };
      if (checkMainAxis) {
        const len = mainAxis === "y" ? "height" : "width";
        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;
        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
        if (mainAxisCoord < limitMin) {
          mainAxisCoord = limitMin;
        } else if (mainAxisCoord > limitMax) {
          mainAxisCoord = limitMax;
        }
      }
      if (checkCrossAxis) {
        var _middlewareData$offse, _middlewareData$offse2;
        const len = mainAxis === "y" ? "width" : "height";
        const isOriginSide = ["top", "left"].includes(getSide(placement));
        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);
        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);
        if (crossAxisCoord < limitMin) {
          crossAxisCoord = limitMin;
        } else if (crossAxisCoord > limitMax) {
          crossAxisCoord = limitMax;
        }
      }
      return {
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      };
    }
  };
};
var size = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "size",
    options,
    async fn(state) {
      const {
        placement,
        rects,
        platform: platform2,
        elements
      } = state;
      const {
        apply = () => {
        },
        ...detectOverflowOptions
      } = evaluate(options, state);
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const side = getSide(placement);
      const alignment = getAlignment(placement);
      const isYAxis = getSideAxis(placement) === "y";
      const {
        width,
        height
      } = rects.floating;
      let heightSide;
      let widthSide;
      if (side === "top" || side === "bottom") {
        heightSide = side;
        widthSide = alignment === (await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)) ? "start" : "end") ? "left" : "right";
      } else {
        widthSide = side;
        heightSide = alignment === "end" ? "top" : "bottom";
      }
      const overflowAvailableHeight = height - overflow[heightSide];
      const overflowAvailableWidth = width - overflow[widthSide];
      const noShift = !state.middlewareData.shift;
      let availableHeight = overflowAvailableHeight;
      let availableWidth = overflowAvailableWidth;
      if (isYAxis) {
        const maximumClippingWidth = width - overflow.left - overflow.right;
        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;
      } else {
        const maximumClippingHeight = height - overflow.top - overflow.bottom;
        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;
      }
      if (noShift && !alignment) {
        const xMin = max(overflow.left, 0);
        const xMax = max(overflow.right, 0);
        const yMin = max(overflow.top, 0);
        const yMax = max(overflow.bottom, 0);
        if (isYAxis) {
          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));
        } else {
          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));
        }
      }
      await apply({
        ...state,
        availableWidth,
        availableHeight
      });
      const nextDimensions = await platform2.getDimensions(elements.floating);
      if (width !== nextDimensions.width || height !== nextDimensions.height) {
        return {
          reset: {
            rects: true
          }
        };
      }
      return {};
    }
  };
};

// node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.esm.js
function getNodeName(node) {
  if (isNode(node)) {
    return (node.nodeName || "").toLowerCase();
  }
  return "#document";
}
function getWindow(node) {
  var _node$ownerDocument;
  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
  var _ref;
  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode(value) {
  return value instanceof Node || value instanceof getWindow(value).Node;
}
function isElement(value) {
  return value instanceof Element || value instanceof getWindow(value).Element;
}
function isHTMLElement(value) {
  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;
}
function isShadowRoot(value) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle2(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement(element) {
  return ["table", "td", "th"].includes(getNodeName(element));
}
function isContainingBlock(element) {
  const webkit = isWebKit();
  const css = getComputedStyle2(element);
  return css.transform !== "none" || css.perspective !== "none" || (css.containerType ? css.containerType !== "normal" : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== "none" : false) || !webkit && (css.filter ? css.filter !== "none" : false) || ["transform", "perspective", "filter"].some((value) => (css.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css.contain || "").includes(value));
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else {
      currentNode = getParentNode(currentNode);
    }
  }
  return null;
}
function isWebKit() {
  if (typeof CSS === "undefined" || !CSS.supports)
    return false;
  return CSS.supports("-webkit-backdrop-filter", "none");
}
function isLastTraversableNode(node) {
  return ["html", "body", "#document"].includes(getNodeName(node));
}
function getComputedStyle2(element) {
  return getWindow(element).getComputedStyle(element);
}
function getNodeScroll(element) {
  if (isElement(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.pageXOffset,
    scrollTop: element.pageYOffset
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html") {
    return node;
  }
  const result = node.assignedSlot || node.parentNode || isShadowRoot(node) && node.host || getDocumentElement(node);
  return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return node.ownerDocument ? node.ownerDocument.body : node.body;
  }
  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list) {
  var _node$ownerDocument2;
  if (list === void 0) {
    list = [];
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
  const win = getWindow(scrollableAncestor);
  if (isBody) {
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));
}

// node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js
function getCssDimensions(element) {
  const css = getComputedStyle2(element);
  let width = parseFloat(css.width) || 0;
  let height = parseFloat(css.height) || 0;
  const hasOffset = isHTMLElement(element);
  const offsetWidth = hasOffset ? element.offsetWidth : width;
  const offsetHeight = hasOffset ? element.offsetHeight : height;
  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
  if (shouldFallback) {
    width = offsetWidth;
    height = offsetHeight;
  }
  return {
    width,
    height,
    $: shouldFallback
  };
}
function unwrapElement(element) {
  return !isElement(element) ? element.contextElement : element;
}
function getScale(element) {
  const domElement = unwrapElement(element);
  if (!isHTMLElement(domElement)) {
    return createCoords(1);
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width,
    height,
    $: $2
  } = getCssDimensions(domElement);
  let x = ($2 ? round(rect.width) : rect.width) / width;
  let y = ($2 ? round(rect.height) : rect.height) / height;
  if (!x || !Number.isFinite(x)) {
    x = 1;
  }
  if (!y || !Number.isFinite(y)) {
    y = 1;
  }
  return {
    x,
    y
  };
}
var noOffsets = createCoords(0);
function getVisualOffsets(element) {
  const win = getWindow(element);
  if (!isWebKit() || !win.visualViewport) {
    return noOffsets;
  }
  return {
    x: win.visualViewport.offsetLeft,
    y: win.visualViewport.offsetTop
  };
}
function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {
    return false;
  }
  return isFixed;
}
function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  const domElement = unwrapElement(element);
  let scale = createCoords(1);
  if (includeScale) {
    if (offsetParent) {
      if (isElement(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element);
    }
  }
  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);
  let x = (clientRect.left + visualOffsets.x) / scale.x;
  let y = (clientRect.top + visualOffsets.y) / scale.y;
  let width = clientRect.width / scale.x;
  let height = clientRect.height / scale.y;
  if (domElement) {
    const win = getWindow(domElement);
    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;
    let currentIFrame = win.frameElement;
    while (currentIFrame && offsetParent && offsetWin !== win) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css = getComputedStyle2(currentIFrame);
      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x *= iframeScale.x;
      y *= iframeScale.y;
      width *= iframeScale.x;
      height *= iframeScale.y;
      x += left;
      y += top;
      currentIFrame = getWindow(currentIFrame).frameElement;
    }
  }
  return rectToClientRect({
    width,
    height,
    x,
    y
  });
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  if (offsetParent === documentElement) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale = createCoords(1);
  const offsets = createCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y
  };
}
function getClientRects(element) {
  return Array.from(element.getClientRects());
}
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
}
function getDocumentRect(element) {
  const html2 = getDocumentElement(element);
  const scroll = getNodeScroll(element);
  const body = element.ownerDocument.body;
  const width = max(html2.scrollWidth, html2.clientWidth, body.scrollWidth, body.clientWidth);
  const height = max(html2.scrollHeight, html2.clientHeight, body.scrollHeight, body.clientHeight);
  let x = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y = -scroll.scrollTop;
  if (getComputedStyle2(body).direction === "rtl") {
    x += max(html2.clientWidth, body.clientWidth) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getViewportRect(element, strategy) {
  const win = getWindow(element);
  const html2 = getDocumentElement(element);
  const visualViewport = win.visualViewport;
  let width = html2.clientWidth;
  let height = html2.clientHeight;
  let x = 0;
  let y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const visualViewportBased = isWebKit();
    if (!visualViewportBased || visualViewportBased && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getInnerBoundingClientRect(element, strategy) {
  const clientRect = getBoundingClientRect(element, true, strategy === "fixed");
  const top = clientRect.top + element.clientTop;
  const left = clientRect.left + element.clientLeft;
  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);
  const width = element.clientWidth * scale.x;
  const height = element.clientHeight * scale.y;
  const x = left * scale.x;
  const y = top * scale.y;
  return {
    width,
    height,
    x,
    y
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === "viewport") {
    rect = getViewportRect(element, strategy);
  } else if (clippingAncestor === "document") {
    rect = getDocumentRect(getDocumentElement(element));
  } else if (isElement(clippingAncestor)) {
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  } else {
    const visualOffsets = getVisualOffsets(element);
    rect = {
      ...clippingAncestor,
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y
    };
  }
  return rectToClientRect(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  const parentNode = getParentNode(element);
  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {
    return false;
  }
  return getComputedStyle2(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
}
function getClippingElementAncestors(element, cache) {
  const cachedResult = cache.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  let result = getOverflowAncestors(element).filter((el) => isElement(el) && getNodeName(el) !== "body");
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = getComputedStyle2(element).position === "fixed";
  let currentNode = elementIsFixed ? getParentNode(element) : element;
  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {
    const computedStyle = getComputedStyle2(currentNode);
    const currentNodeIsContaining = isContainingBlock(currentNode);
    if (!currentNodeIsContaining && computedStyle.position === "fixed") {
      currentContainingBlockComputedStyle = null;
    }
    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
    if (shouldDropCurrentNode) {
      result = result.filter((ancestor) => ancestor !== currentNode);
    } else {
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = getParentNode(currentNode);
  }
  cache.set(element, result);
  return result;
}
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const elementClippingAncestors = boundary === "clippingAncestors" ? getClippingElementAncestors(element, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
function getDimensions(element) {
  return getCssDimensions(element);
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  const isFixed = strategy === "fixed";
  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = createCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isOffsetParentAnElement) {
      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
function getTrueOffsetParent(element, polyfill) {
  if (!isHTMLElement(element) || getComputedStyle2(element).position === "fixed") {
    return null;
  }
  if (polyfill) {
    return polyfill(element);
  }
  return element.offsetParent;
}
function getOffsetParent(element, polyfill) {
  const window2 = getWindow(element);
  if (!isHTMLElement(element)) {
    return window2;
  }
  let offsetParent = getTrueOffsetParent(element, polyfill);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle2(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent, polyfill);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle2(offsetParent).position === "static" && !isContainingBlock(offsetParent))) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}
var getElementRects = async function(_ref) {
  let {
    reference,
    floating,
    strategy
  } = _ref;
  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
  const getDimensionsFn = this.getDimensions;
  return {
    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),
    floating: {
      x: 0,
      y: 0,
      ...await getDimensionsFn(floating)
    }
  };
};
function isRTL(element) {
  return getComputedStyle2(element).direction === "rtl";
}
var platform = {
  convertOffsetParentRelativeRectToViewportRelativeRect,
  getDocumentElement,
  getClippingRect,
  getOffsetParent,
  getElementRects,
  getClientRects,
  getDimensions,
  getScale,
  isElement,
  isRTL
};
function observeMove(element, onMove) {
  let io = null;
  let timeoutId;
  const root = getDocumentElement(element);
  function cleanup() {
    clearTimeout(timeoutId);
    io && io.disconnect();
    io = null;
  }
  function refresh(skip, threshold) {
    if (skip === void 0) {
      skip = false;
    }
    if (threshold === void 0) {
      threshold = 1;
    }
    cleanup();
    const {
      left,
      top,
      width,
      height
    } = element.getBoundingClientRect();
    if (!skip) {
      onMove();
    }
    if (!width || !height) {
      return;
    }
    const insetTop = floor(top);
    const insetRight = floor(root.clientWidth - (left + width));
    const insetBottom = floor(root.clientHeight - (top + height));
    const insetLeft = floor(left);
    const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
    const options = {
      rootMargin,
      threshold: max(0, min(1, threshold)) || 1
    };
    let isFirstUpdate = true;
    function handleObserve(entries) {
      const ratio = entries[0].intersectionRatio;
      if (ratio !== threshold) {
        if (!isFirstUpdate) {
          return refresh();
        }
        if (!ratio) {
          timeoutId = setTimeout(() => {
            refresh(false, 1e-7);
          }, 100);
        } else {
          refresh(false, ratio);
        }
      }
      isFirstUpdate = false;
    }
    try {
      io = new IntersectionObserver(handleObserve, {
        ...options,
        root: root.ownerDocument
      });
    } catch (e) {
      io = new IntersectionObserver(handleObserve, options);
    }
    io.observe(element);
  }
  refresh(true);
  return cleanup;
}
function autoUpdate(reference, floating, update, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    ancestorScroll = true,
    ancestorResize = true,
    elementResize = typeof ResizeObserver === "function",
    layoutShift = typeof IntersectionObserver === "function",
    animationFrame = false
  } = options;
  const referenceEl = unwrapElement(reference);
  const ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
  ancestors.forEach((ancestor) => {
    ancestorScroll && ancestor.addEventListener("scroll", update, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener("resize", update);
  });
  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
  let reobserveFrame = -1;
  let resizeObserver = null;
  if (elementResize) {
    resizeObserver = new ResizeObserver((_ref) => {
      let [firstEntry] = _ref;
      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {
        resizeObserver.unobserve(floating);
        cancelAnimationFrame(reobserveFrame);
        reobserveFrame = requestAnimationFrame(() => {
          resizeObserver && resizeObserver.observe(floating);
        });
      }
      update();
    });
    if (referenceEl && !animationFrame) {
      resizeObserver.observe(referenceEl);
    }
    resizeObserver.observe(floating);
  }
  let frameId;
  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    const nextRefRect = getBoundingClientRect(reference);
    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {
      update();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  update();
  return () => {
    ancestors.forEach((ancestor) => {
      ancestorScroll && ancestor.removeEventListener("scroll", update);
      ancestorResize && ancestor.removeEventListener("resize", update);
    });
    cleanupIo && cleanupIo();
    resizeObserver && resizeObserver.disconnect();
    resizeObserver = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}
var computePosition2 = (reference, floating, options) => {
  const cache = /* @__PURE__ */ new Map();
  const mergedOptions = {
    platform,
    ...options
  };
  const platformWithCache = {
    ...mergedOptions.platform,
    _c: cache
  };
  return computePosition(reference, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};

// node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js
var React = __toESM(require_react());
var import_react17 = __toESM(require_react());
var ReactDOM = __toESM(require_react_dom());
var arrow2 = (options) => {
  function isRef(value) {
    return {}.hasOwnProperty.call(value, "current");
  }
  return {
    name: "arrow",
    options,
    fn(state) {
      const {
        element,
        padding
      } = typeof options === "function" ? options(state) : options;
      if (element && isRef(element)) {
        if (element.current != null) {
          return arrow({
            element: element.current,
            padding
          }).fn(state);
        }
        return {};
      } else if (element) {
        return arrow({
          element,
          padding
        }).fn(state);
      }
      return {};
    }
  };
};
var index = typeof document !== "undefined" ? import_react17.useLayoutEffect : import_react17.useEffect;
function deepEqual(a, b) {
  if (a === b) {
    return true;
  }
  if (typeof a !== typeof b) {
    return false;
  }
  if (typeof a === "function" && a.toString() === b.toString()) {
    return true;
  }
  let length, i, keys3;
  if (a && b && typeof a == "object") {
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length)
        return false;
      for (i = length; i-- !== 0; ) {
        if (!deepEqual(a[i], b[i])) {
          return false;
        }
      }
      return true;
    }
    keys3 = Object.keys(a);
    length = keys3.length;
    if (length !== Object.keys(b).length) {
      return false;
    }
    for (i = length; i-- !== 0; ) {
      if (!{}.hasOwnProperty.call(b, keys3[i])) {
        return false;
      }
    }
    for (i = length; i-- !== 0; ) {
      const key = keys3[i];
      if (key === "_owner" && a.$$typeof) {
        continue;
      }
      if (!deepEqual(a[key], b[key])) {
        return false;
      }
    }
    return true;
  }
  return a !== a && b !== b;
}
function getDPR(element) {
  if (typeof window === "undefined") {
    return 1;
  }
  const win = element.ownerDocument.defaultView || window;
  return win.devicePixelRatio || 1;
}
function roundByDPR(element, value) {
  const dpr = getDPR(element);
  return Math.round(value * dpr) / dpr;
}
function useLatestRef(value) {
  const ref = React.useRef(value);
  index(() => {
    ref.current = value;
  });
  return ref;
}
function useFloating(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2,
    elements: {
      reference: externalReference,
      floating: externalFloating
    } = {},
    transform = true,
    whileElementsMounted,
    open: open2
  } = options;
  const [data2, setData] = React.useState({
    x: 0,
    y: 0,
    strategy,
    placement,
    middlewareData: {},
    isPositioned: false
  });
  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);
  if (!deepEqual(latestMiddleware, middleware)) {
    setLatestMiddleware(middleware);
  }
  const [_reference, _setReference] = React.useState(null);
  const [_floating, _setFloating] = React.useState(null);
  const setReference = React.useCallback((node) => {
    if (node != referenceRef.current) {
      referenceRef.current = node;
      _setReference(node);
    }
  }, [_setReference]);
  const setFloating = React.useCallback((node) => {
    if (node !== floatingRef.current) {
      floatingRef.current = node;
      _setFloating(node);
    }
  }, [_setFloating]);
  const referenceEl = externalReference || _reference;
  const floatingEl = externalFloating || _floating;
  const referenceRef = React.useRef(null);
  const floatingRef = React.useRef(null);
  const dataRef = React.useRef(data2);
  const whileElementsMountedRef = useLatestRef(whileElementsMounted);
  const platformRef = useLatestRef(platform2);
  const update = React.useCallback(() => {
    if (!referenceRef.current || !floatingRef.current) {
      return;
    }
    const config = {
      placement,
      strategy,
      middleware: latestMiddleware
    };
    if (platformRef.current) {
      config.platform = platformRef.current;
    }
    computePosition2(referenceRef.current, floatingRef.current, config).then((data3) => {
      const fullData = {
        ...data3,
        isPositioned: true
      };
      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {
        dataRef.current = fullData;
        ReactDOM.flushSync(() => {
          setData(fullData);
        });
      }
    });
  }, [latestMiddleware, placement, strategy, platformRef]);
  index(() => {
    if (open2 === false && dataRef.current.isPositioned) {
      dataRef.current.isPositioned = false;
      setData((data3) => ({
        ...data3,
        isPositioned: false
      }));
    }
  }, [open2]);
  const isMountedRef = React.useRef(false);
  index(() => {
    isMountedRef.current = true;
    return () => {
      isMountedRef.current = false;
    };
  }, []);
  index(() => {
    if (referenceEl)
      referenceRef.current = referenceEl;
    if (floatingEl)
      floatingRef.current = floatingEl;
    if (referenceEl && floatingEl) {
      if (whileElementsMountedRef.current) {
        return whileElementsMountedRef.current(referenceEl, floatingEl, update);
      } else {
        update();
      }
    }
  }, [referenceEl, floatingEl, update, whileElementsMountedRef]);
  const refs = React.useMemo(() => ({
    reference: referenceRef,
    floating: floatingRef,
    setReference,
    setFloating
  }), [setReference, setFloating]);
  const elements = React.useMemo(() => ({
    reference: referenceEl,
    floating: floatingEl
  }), [referenceEl, floatingEl]);
  const floatingStyles = React.useMemo(() => {
    const initialStyles = {
      position: strategy,
      left: 0,
      top: 0
    };
    if (!elements.floating) {
      return initialStyles;
    }
    const x = roundByDPR(elements.floating, data2.x);
    const y = roundByDPR(elements.floating, data2.y);
    if (transform) {
      return {
        ...initialStyles,
        transform: "translate(" + x + "px, " + y + "px)",
        ...getDPR(elements.floating) >= 1.5 && {
          willChange: "transform"
        }
      };
    }
    return {
      position: strategy,
      left: x,
      top: y
    };
  }, [strategy, transform, elements.floating, data2.x, data2.y]);
  return React.useMemo(() => ({
    ...data2,
    update,
    refs,
    elements,
    floatingStyles
  }), [data2, update, refs, elements, floatingStyles]);
}

// node_modules/@radix-ui/react-arrow/dist/index.mjs
var import_react18 = __toESM(require_react(), 1);
var $7e8f5cd07187803e$var$NAME = "Arrow";
var $7e8f5cd07187803e$export$21b07c8f274aebd5 = (0, import_react18.forwardRef)((props, forwardedRef) => {
  const { children, width = 10, height = 5, ...arrowProps } = props;
  return (0, import_react18.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.svg, _extends({}, arrowProps, {
    ref: forwardedRef,
    width,
    height,
    viewBox: "0 0 30 10",
    preserveAspectRatio: "none"
  }), props.asChild ? children : (0, import_react18.createElement)("polygon", {
    points: "0,0 30,0 15,10"
  }));
});
Object.assign($7e8f5cd07187803e$export$21b07c8f274aebd5, {
  displayName: $7e8f5cd07187803e$var$NAME
});
var $7e8f5cd07187803e$export$be92b6f5f03c0fe9 = $7e8f5cd07187803e$export$21b07c8f274aebd5;

// node_modules/@radix-ui/react-popper/dist/index.mjs
var $cf1ac5d9fe0e8206$var$POPPER_NAME = "Popper";
var [$cf1ac5d9fe0e8206$var$createPopperContext, $cf1ac5d9fe0e8206$export$722aac194ae923] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($cf1ac5d9fe0e8206$var$POPPER_NAME);
var [$cf1ac5d9fe0e8206$var$PopperProvider, $cf1ac5d9fe0e8206$var$usePopperContext] = $cf1ac5d9fe0e8206$var$createPopperContext($cf1ac5d9fe0e8206$var$POPPER_NAME);
var $cf1ac5d9fe0e8206$export$badac9ada3a0bdf9 = (props) => {
  const { __scopePopper, children } = props;
  const [anchor, setAnchor] = (0, import_react19.useState)(null);
  return (0, import_react19.createElement)($cf1ac5d9fe0e8206$var$PopperProvider, {
    scope: __scopePopper,
    anchor,
    onAnchorChange: setAnchor
  }, children);
};
Object.assign($cf1ac5d9fe0e8206$export$badac9ada3a0bdf9, {
  displayName: $cf1ac5d9fe0e8206$var$POPPER_NAME
});
var $cf1ac5d9fe0e8206$var$ANCHOR_NAME = "PopperAnchor";
var $cf1ac5d9fe0e8206$export$ecd4e1ccab6ed6d = (0, import_react19.forwardRef)((props, forwardedRef) => {
  const { __scopePopper, virtualRef, ...anchorProps } = props;
  const context = $cf1ac5d9fe0e8206$var$usePopperContext($cf1ac5d9fe0e8206$var$ANCHOR_NAME, __scopePopper);
  const ref = (0, import_react19.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  (0, import_react19.useEffect)(() => {
    context.onAnchorChange((virtualRef === null || virtualRef === void 0 ? void 0 : virtualRef.current) || ref.current);
  });
  return virtualRef ? null : (0, import_react19.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, anchorProps, {
    ref: composedRefs
  }));
});
Object.assign($cf1ac5d9fe0e8206$export$ecd4e1ccab6ed6d, {
  displayName: $cf1ac5d9fe0e8206$var$ANCHOR_NAME
});
var $cf1ac5d9fe0e8206$var$CONTENT_NAME = "PopperContent";
var [$cf1ac5d9fe0e8206$var$PopperContentProvider, $cf1ac5d9fe0e8206$var$useContentContext] = $cf1ac5d9fe0e8206$var$createPopperContext($cf1ac5d9fe0e8206$var$CONTENT_NAME);
var $cf1ac5d9fe0e8206$export$bc4ae5855d3c4fc = (0, import_react19.forwardRef)((props, forwardedRef) => {
  var _arrowSize$width, _arrowSize$height, _middlewareData$arrow, _middlewareData$arrow2, _middlewareData$arrow3, _middlewareData$trans, _middlewareData$trans2, _middlewareData$hide;
  const { __scopePopper, side = "bottom", sideOffset = 0, align = "center", alignOffset = 0, arrowPadding = 0, collisionBoundary = [], collisionPadding: collisionPaddingProp = 0, sticky = "partial", hideWhenDetached = false, avoidCollisions = true, onPlaced, ...contentProps } = props;
  const context = $cf1ac5d9fe0e8206$var$usePopperContext($cf1ac5d9fe0e8206$var$CONTENT_NAME, __scopePopper);
  const [content, setContent] = (0, import_react19.useState)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContent(node)
  );
  const [arrow3, setArrow] = (0, import_react19.useState)(null);
  const arrowSize = $db6c3485150b8e66$export$1ab7ae714698c4b8(arrow3);
  const arrowWidth = (_arrowSize$width = arrowSize === null || arrowSize === void 0 ? void 0 : arrowSize.width) !== null && _arrowSize$width !== void 0 ? _arrowSize$width : 0;
  const arrowHeight = (_arrowSize$height = arrowSize === null || arrowSize === void 0 ? void 0 : arrowSize.height) !== null && _arrowSize$height !== void 0 ? _arrowSize$height : 0;
  const desiredPlacement = side + (align !== "center" ? "-" + align : "");
  const collisionPadding = typeof collisionPaddingProp === "number" ? collisionPaddingProp : {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...collisionPaddingProp
  };
  const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [
    collisionBoundary
  ];
  const hasExplicitBoundaries = boundary.length > 0;
  const detectOverflowOptions = {
    padding: collisionPadding,
    boundary: boundary.filter($cf1ac5d9fe0e8206$var$isNotNull),
    altBoundary: hasExplicitBoundaries
  };
  const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({
    strategy: "fixed",
    placement: desiredPlacement,
    whileElementsMounted: autoUpdate,
    elements: {
      reference: context.anchor
    },
    middleware: [
      offset({
        mainAxis: sideOffset + arrowHeight,
        alignmentAxis: alignOffset
      }),
      avoidCollisions && shift({
        mainAxis: true,
        crossAxis: false,
        limiter: sticky === "partial" ? limitShift() : void 0,
        ...detectOverflowOptions
      }),
      avoidCollisions && flip({
        ...detectOverflowOptions
      }),
      size({
        ...detectOverflowOptions,
        apply: ({ elements, rects, availableWidth, availableHeight }) => {
          const { width: anchorWidth, height: anchorHeight } = rects.reference;
          const contentStyle = elements.floating.style;
          contentStyle.setProperty("--radix-popper-available-width", `${availableWidth}px`);
          contentStyle.setProperty("--radix-popper-available-height", `${availableHeight}px`);
          contentStyle.setProperty("--radix-popper-anchor-width", `${anchorWidth}px`);
          contentStyle.setProperty("--radix-popper-anchor-height", `${anchorHeight}px`);
        }
      }),
      arrow3 && arrow2({
        element: arrow3,
        padding: arrowPadding
      }),
      $cf1ac5d9fe0e8206$var$transformOrigin({
        arrowWidth,
        arrowHeight
      }),
      hideWhenDetached && hide({
        strategy: "referenceHidden"
      })
    ]
  });
  const [placedSide, placedAlign] = $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement);
  const handlePlaced = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onPlaced);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (isPositioned)
      handlePlaced === null || handlePlaced === void 0 || handlePlaced();
  }, [
    isPositioned,
    handlePlaced
  ]);
  const arrowX = (_middlewareData$arrow = middlewareData.arrow) === null || _middlewareData$arrow === void 0 ? void 0 : _middlewareData$arrow.x;
  const arrowY = (_middlewareData$arrow2 = middlewareData.arrow) === null || _middlewareData$arrow2 === void 0 ? void 0 : _middlewareData$arrow2.y;
  const cannotCenterArrow = ((_middlewareData$arrow3 = middlewareData.arrow) === null || _middlewareData$arrow3 === void 0 ? void 0 : _middlewareData$arrow3.centerOffset) !== 0;
  const [contentZIndex, setContentZIndex] = (0, import_react19.useState)();
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (content)
      setContentZIndex(window.getComputedStyle(content).zIndex);
  }, [
    content
  ]);
  return (0, import_react19.createElement)("div", {
    ref: refs.setFloating,
    "data-radix-popper-content-wrapper": "",
    style: {
      ...floatingStyles,
      transform: isPositioned ? floatingStyles.transform : "translate(0, -200%)",
      minWidth: "max-content",
      zIndex: contentZIndex,
      ["--radix-popper-transform-origin"]: [
        (_middlewareData$trans = middlewareData.transformOrigin) === null || _middlewareData$trans === void 0 ? void 0 : _middlewareData$trans.x,
        (_middlewareData$trans2 = middlewareData.transformOrigin) === null || _middlewareData$trans2 === void 0 ? void 0 : _middlewareData$trans2.y
      ].join(" ")
    },
    dir: props.dir
  }, (0, import_react19.createElement)($cf1ac5d9fe0e8206$var$PopperContentProvider, {
    scope: __scopePopper,
    placedSide,
    onArrowChange: setArrow,
    arrowX,
    arrowY,
    shouldHideArrow: cannotCenterArrow
  }, (0, import_react19.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    "data-side": placedSide,
    "data-align": placedAlign
  }, contentProps, {
    ref: composedRefs,
    style: {
      ...contentProps.style,
      animation: !isPositioned ? "none" : void 0,
      opacity: (_middlewareData$hide = middlewareData.hide) !== null && _middlewareData$hide !== void 0 && _middlewareData$hide.referenceHidden ? 0 : void 0
    }
  }))));
});
Object.assign($cf1ac5d9fe0e8206$export$bc4ae5855d3c4fc, {
  displayName: $cf1ac5d9fe0e8206$var$CONTENT_NAME
});
var $cf1ac5d9fe0e8206$var$ARROW_NAME = "PopperArrow";
var $cf1ac5d9fe0e8206$var$OPPOSITE_SIDE = {
  top: "bottom",
  right: "left",
  bottom: "top",
  left: "right"
};
var $cf1ac5d9fe0e8206$export$79d62cd4e10a3fd0 = (0, import_react19.forwardRef)(function $cf1ac5d9fe0e8206$export$79d62cd4e10a3fd02(props, forwardedRef) {
  const { __scopePopper, ...arrowProps } = props;
  const contentContext = $cf1ac5d9fe0e8206$var$useContentContext($cf1ac5d9fe0e8206$var$ARROW_NAME, __scopePopper);
  const baseSide = $cf1ac5d9fe0e8206$var$OPPOSITE_SIDE[contentContext.placedSide];
  return (0, import_react19.createElement)("span", {
    ref: contentContext.onArrowChange,
    style: {
      position: "absolute",
      left: contentContext.arrowX,
      top: contentContext.arrowY,
      [baseSide]: 0,
      transformOrigin: {
        top: "",
        right: "0 0",
        bottom: "center 0",
        left: "100% 0"
      }[contentContext.placedSide],
      transform: {
        top: "translateY(100%)",
        right: "translateY(50%) rotate(90deg) translateX(-50%)",
        bottom: `rotate(180deg)`,
        left: "translateY(50%) rotate(-90deg) translateX(50%)"
      }[contentContext.placedSide],
      visibility: contentContext.shouldHideArrow ? "hidden" : void 0
    }
  }, (0, import_react19.createElement)($7e8f5cd07187803e$export$be92b6f5f03c0fe9, _extends({}, arrowProps, {
    ref: forwardedRef,
    style: {
      ...arrowProps.style,
      display: "block"
    }
  })));
});
Object.assign($cf1ac5d9fe0e8206$export$79d62cd4e10a3fd0, {
  displayName: $cf1ac5d9fe0e8206$var$ARROW_NAME
});
function $cf1ac5d9fe0e8206$var$isNotNull(value) {
  return value !== null;
}
var $cf1ac5d9fe0e8206$var$transformOrigin = (options) => ({
  name: "transformOrigin",
  options,
  fn(data2) {
    var _middlewareData$arrow4, _middlewareData$arrow5, _middlewareData$arrow6, _middlewareData$arrow7, _middlewareData$arrow8;
    const { placement, rects, middlewareData } = data2;
    const cannotCenterArrow = ((_middlewareData$arrow4 = middlewareData.arrow) === null || _middlewareData$arrow4 === void 0 ? void 0 : _middlewareData$arrow4.centerOffset) !== 0;
    const isArrowHidden = cannotCenterArrow;
    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;
    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;
    const [placedSide, placedAlign] = $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement);
    const noArrowAlign = {
      start: "0%",
      center: "50%",
      end: "100%"
    }[placedAlign];
    const arrowXCenter = ((_middlewareData$arrow5 = (_middlewareData$arrow6 = middlewareData.arrow) === null || _middlewareData$arrow6 === void 0 ? void 0 : _middlewareData$arrow6.x) !== null && _middlewareData$arrow5 !== void 0 ? _middlewareData$arrow5 : 0) + arrowWidth / 2;
    const arrowYCenter = ((_middlewareData$arrow7 = (_middlewareData$arrow8 = middlewareData.arrow) === null || _middlewareData$arrow8 === void 0 ? void 0 : _middlewareData$arrow8.y) !== null && _middlewareData$arrow7 !== void 0 ? _middlewareData$arrow7 : 0) + arrowHeight / 2;
    let x = "";
    let y = "";
    if (placedSide === "bottom") {
      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;
      y = `${-arrowHeight}px`;
    } else if (placedSide === "top") {
      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;
      y = `${rects.floating.height + arrowHeight}px`;
    } else if (placedSide === "right") {
      x = `${-arrowHeight}px`;
      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;
    } else if (placedSide === "left") {
      x = `${rects.floating.width + arrowHeight}px`;
      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;
    }
    return {
      data: {
        x,
        y
      }
    };
  }
});
function $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement) {
  const [side, align = "center"] = placement.split("-");
  return [
    side,
    align
  ];
}
var $cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9 = $cf1ac5d9fe0e8206$export$badac9ada3a0bdf9;
var $cf1ac5d9fe0e8206$export$b688253958b8dfe7 = $cf1ac5d9fe0e8206$export$ecd4e1ccab6ed6d;
var $cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2 = $cf1ac5d9fe0e8206$export$bc4ae5855d3c4fc;
var $cf1ac5d9fe0e8206$export$21b07c8f274aebd5 = $cf1ac5d9fe0e8206$export$79d62cd4e10a3fd0;

// node_modules/@radix-ui/react-portal/dist/index.mjs
var import_react20 = __toESM(require_react(), 1);
var import_react_dom4 = __toESM(require_react_dom(), 1);
var $f1701beae083dbae$var$PORTAL_NAME = "Portal";
var $f1701beae083dbae$export$602eac185826482c = (0, import_react20.forwardRef)((props, forwardedRef) => {
  var _globalThis$document;
  const { container = globalThis === null || globalThis === void 0 ? void 0 : (_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : _globalThis$document.body, ...portalProps } = props;
  return container ? import_react_dom4.default.createPortal((0, import_react20.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, portalProps, {
    ref: forwardedRef
  })), container) : null;
});
Object.assign($f1701beae083dbae$export$602eac185826482c, {
  displayName: $f1701beae083dbae$var$PORTAL_NAME
});

// node_modules/@radix-ui/react-tooltip/dist/index.mjs
var [$a093c7e1ec25a057$var$createTooltipContext, $a093c7e1ec25a057$export$1c540a2224f0d865] = $c512c27ab02ef895$export$50c7b4e9d9f19c1("Tooltip", [
  $cf1ac5d9fe0e8206$export$722aac194ae923
]);
var $a093c7e1ec25a057$var$usePopperScope = $cf1ac5d9fe0e8206$export$722aac194ae923();
var $a093c7e1ec25a057$var$PROVIDER_NAME = "TooltipProvider";
var $a093c7e1ec25a057$var$DEFAULT_DELAY_DURATION = 700;
var $a093c7e1ec25a057$var$TOOLTIP_OPEN = "tooltip.open";
var [$a093c7e1ec25a057$var$TooltipProviderContextProvider, $a093c7e1ec25a057$var$useTooltipProviderContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$PROVIDER_NAME);
var $a093c7e1ec25a057$export$f78649fb9ca566b8 = (props) => {
  const { __scopeTooltip, delayDuration = $a093c7e1ec25a057$var$DEFAULT_DELAY_DURATION, skipDelayDuration = 300, disableHoverableContent = false, children } = props;
  const [isOpenDelayed, setIsOpenDelayed] = (0, import_react21.useState)(true);
  const isPointerInTransitRef = (0, import_react21.useRef)(false);
  const skipDelayTimerRef = (0, import_react21.useRef)(0);
  (0, import_react21.useEffect)(() => {
    const skipDelayTimer = skipDelayTimerRef.current;
    return () => window.clearTimeout(skipDelayTimer);
  }, []);
  return (0, import_react21.createElement)($a093c7e1ec25a057$var$TooltipProviderContextProvider, {
    scope: __scopeTooltip,
    isOpenDelayed,
    delayDuration,
    onOpen: (0, import_react21.useCallback)(() => {
      window.clearTimeout(skipDelayTimerRef.current);
      setIsOpenDelayed(false);
    }, []),
    onClose: (0, import_react21.useCallback)(() => {
      window.clearTimeout(skipDelayTimerRef.current);
      skipDelayTimerRef.current = window.setTimeout(
        () => setIsOpenDelayed(true),
        skipDelayDuration
      );
    }, [
      skipDelayDuration
    ]),
    isPointerInTransitRef,
    onPointerInTransitChange: (0, import_react21.useCallback)((inTransit) => {
      isPointerInTransitRef.current = inTransit;
    }, []),
    disableHoverableContent
  }, children);
};
Object.assign($a093c7e1ec25a057$export$f78649fb9ca566b8, {
  displayName: $a093c7e1ec25a057$var$PROVIDER_NAME
});
var $a093c7e1ec25a057$var$TOOLTIP_NAME = "Tooltip";
var [$a093c7e1ec25a057$var$TooltipContextProvider, $a093c7e1ec25a057$var$useTooltipContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$TOOLTIP_NAME);
var $a093c7e1ec25a057$export$28c660c63b792dea = (props) => {
  const { __scopeTooltip, children, open: openProp, defaultOpen = false, onOpenChange, disableHoverableContent: disableHoverableContentProp, delayDuration: delayDurationProp } = props;
  const providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$TOOLTIP_NAME, props.__scopeTooltip);
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const [trigger, setTrigger] = (0, import_react21.useState)(null);
  const contentId = $1746a345f3d73bb7$export$f680877a34711e37();
  const openTimerRef = (0, import_react21.useRef)(0);
  const disableHoverableContent = disableHoverableContentProp !== null && disableHoverableContentProp !== void 0 ? disableHoverableContentProp : providerContext.disableHoverableContent;
  const delayDuration = delayDurationProp !== null && delayDurationProp !== void 0 ? delayDurationProp : providerContext.delayDuration;
  const wasOpenDelayedRef = (0, import_react21.useRef)(false);
  const [open1 = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: (open2) => {
      if (open2) {
        providerContext.onOpen();
        document.dispatchEvent(new CustomEvent($a093c7e1ec25a057$var$TOOLTIP_OPEN));
      } else
        providerContext.onClose();
      onOpenChange === null || onOpenChange === void 0 || onOpenChange(open2);
    }
  });
  const stateAttribute = (0, import_react21.useMemo)(() => {
    return open1 ? wasOpenDelayedRef.current ? "delayed-open" : "instant-open" : "closed";
  }, [
    open1
  ]);
  const handleOpen = (0, import_react21.useCallback)(() => {
    window.clearTimeout(openTimerRef.current);
    wasOpenDelayedRef.current = false;
    setOpen(true);
  }, [
    setOpen
  ]);
  const handleClose = (0, import_react21.useCallback)(() => {
    window.clearTimeout(openTimerRef.current);
    setOpen(false);
  }, [
    setOpen
  ]);
  const handleDelayedOpen = (0, import_react21.useCallback)(() => {
    window.clearTimeout(openTimerRef.current);
    openTimerRef.current = window.setTimeout(() => {
      wasOpenDelayedRef.current = true;
      setOpen(true);
    }, delayDuration);
  }, [
    delayDuration,
    setOpen
  ]);
  (0, import_react21.useEffect)(() => {
    return () => window.clearTimeout(openTimerRef.current);
  }, []);
  return (0, import_react21.createElement)($cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9, popperScope, (0, import_react21.createElement)($a093c7e1ec25a057$var$TooltipContextProvider, {
    scope: __scopeTooltip,
    contentId,
    open: open1,
    stateAttribute,
    trigger,
    onTriggerChange: setTrigger,
    onTriggerEnter: (0, import_react21.useCallback)(() => {
      if (providerContext.isOpenDelayed)
        handleDelayedOpen();
      else
        handleOpen();
    }, [
      providerContext.isOpenDelayed,
      handleDelayedOpen,
      handleOpen
    ]),
    onTriggerLeave: (0, import_react21.useCallback)(() => {
      if (disableHoverableContent)
        handleClose();
      else
        window.clearTimeout(openTimerRef.current);
    }, [
      handleClose,
      disableHoverableContent
    ]),
    onOpen: handleOpen,
    onClose: handleClose,
    disableHoverableContent
  }, children));
};
Object.assign($a093c7e1ec25a057$export$28c660c63b792dea, {
  displayName: $a093c7e1ec25a057$var$TOOLTIP_NAME
});
var $a093c7e1ec25a057$var$TRIGGER_NAME = "TooltipTrigger";
var $a093c7e1ec25a057$export$8c610744efcf8a1d = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const { __scopeTooltip, ...triggerProps } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$TRIGGER_NAME, __scopeTooltip);
  const providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$TRIGGER_NAME, __scopeTooltip);
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const ref = (0, import_react21.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onTriggerChange);
  const isPointerDownRef = (0, import_react21.useRef)(false);
  const hasPointerMoveOpenedRef = (0, import_react21.useRef)(false);
  const handlePointerUp = (0, import_react21.useCallback)(
    () => isPointerDownRef.current = false,
    []
  );
  (0, import_react21.useEffect)(() => {
    return () => document.removeEventListener("pointerup", handlePointerUp);
  }, [
    handlePointerUp
  ]);
  return (0, import_react21.createElement)($cf1ac5d9fe0e8206$export$b688253958b8dfe7, _extends({
    asChild: true
  }, popperScope), (0, import_react21.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    "aria-describedby": context.open ? context.contentId : void 0,
    "data-state": context.stateAttribute
  }, triggerProps, {
    ref: composedRefs,
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, (event) => {
      if (event.pointerType === "touch")
        return;
      if (!hasPointerMoveOpenedRef.current && !providerContext.isPointerInTransitRef.current) {
        context.onTriggerEnter();
        hasPointerMoveOpenedRef.current = true;
      }
    }),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, () => {
      context.onTriggerLeave();
      hasPointerMoveOpenedRef.current = false;
    }),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, () => {
      isPointerDownRef.current = true;
      document.addEventListener("pointerup", handlePointerUp, {
        once: true
      });
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocus, () => {
      if (!isPointerDownRef.current)
        context.onOpen();
    }),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlur, context.onClose),
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onClose)
  })));
});
Object.assign($a093c7e1ec25a057$export$8c610744efcf8a1d, {
  displayName: $a093c7e1ec25a057$var$TRIGGER_NAME
});
var $a093c7e1ec25a057$var$PORTAL_NAME = "TooltipPortal";
var [$a093c7e1ec25a057$var$PortalProvider, $a093c7e1ec25a057$var$usePortalContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$PORTAL_NAME, {
  forceMount: void 0
});
var $a093c7e1ec25a057$export$7b36b8f925ab7497 = (props) => {
  const { __scopeTooltip, forceMount, children, container } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$PORTAL_NAME, __scopeTooltip);
  return (0, import_react21.createElement)($a093c7e1ec25a057$var$PortalProvider, {
    scope: __scopeTooltip,
    forceMount
  }, (0, import_react21.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, (0, import_react21.createElement)($f1701beae083dbae$export$602eac185826482c, {
    asChild: true,
    container
  }, children)));
};
Object.assign($a093c7e1ec25a057$export$7b36b8f925ab7497, {
  displayName: $a093c7e1ec25a057$var$PORTAL_NAME
});
var $a093c7e1ec25a057$var$CONTENT_NAME = "TooltipContent";
var $a093c7e1ec25a057$export$e9003e2be37ec060 = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const portalContext = $a093c7e1ec25a057$var$usePortalContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  const { forceMount = portalContext.forceMount, side = "top", ...contentProps } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  return (0, import_react21.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, context.disableHoverableContent ? (0, import_react21.createElement)($a093c7e1ec25a057$var$TooltipContentImpl, _extends({
    side
  }, contentProps, {
    ref: forwardedRef
  })) : (0, import_react21.createElement)($a093c7e1ec25a057$var$TooltipContentHoverable, _extends({
    side
  }, contentProps, {
    ref: forwardedRef
  })));
});
var $a093c7e1ec25a057$var$TooltipContentHoverable = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  const providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  const ref = (0, import_react21.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const [pointerGraceArea, setPointerGraceArea] = (0, import_react21.useState)(null);
  const { trigger, onClose } = context;
  const content = ref.current;
  const { onPointerInTransitChange } = providerContext;
  const handleRemoveGraceArea = (0, import_react21.useCallback)(() => {
    setPointerGraceArea(null);
    onPointerInTransitChange(false);
  }, [
    onPointerInTransitChange
  ]);
  const handleCreateGraceArea = (0, import_react21.useCallback)((event, hoverTarget) => {
    const currentTarget = event.currentTarget;
    const exitPoint = {
      x: event.clientX,
      y: event.clientY
    };
    const exitSide = $a093c7e1ec25a057$var$getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect());
    const paddedExitPoints = $a093c7e1ec25a057$var$getPaddedExitPoints(exitPoint, exitSide);
    const hoverTargetPoints = $a093c7e1ec25a057$var$getPointsFromRect(hoverTarget.getBoundingClientRect());
    const graceArea = $a093c7e1ec25a057$var$getHull([
      ...paddedExitPoints,
      ...hoverTargetPoints
    ]);
    setPointerGraceArea(graceArea);
    onPointerInTransitChange(true);
  }, [
    onPointerInTransitChange
  ]);
  (0, import_react21.useEffect)(() => {
    return () => handleRemoveGraceArea();
  }, [
    handleRemoveGraceArea
  ]);
  (0, import_react21.useEffect)(() => {
    if (trigger && content) {
      const handleTriggerLeave = (event) => handleCreateGraceArea(event, content);
      const handleContentLeave = (event) => handleCreateGraceArea(event, trigger);
      trigger.addEventListener("pointerleave", handleTriggerLeave);
      content.addEventListener("pointerleave", handleContentLeave);
      return () => {
        trigger.removeEventListener("pointerleave", handleTriggerLeave);
        content.removeEventListener("pointerleave", handleContentLeave);
      };
    }
  }, [
    trigger,
    content,
    handleCreateGraceArea,
    handleRemoveGraceArea
  ]);
  (0, import_react21.useEffect)(() => {
    if (pointerGraceArea) {
      const handleTrackPointerGrace = (event) => {
        const target = event.target;
        const pointerPosition = {
          x: event.clientX,
          y: event.clientY
        };
        const hasEnteredTarget = (trigger === null || trigger === void 0 ? void 0 : trigger.contains(target)) || (content === null || content === void 0 ? void 0 : content.contains(target));
        const isPointerOutsideGraceArea = !$a093c7e1ec25a057$var$isPointInPolygon(pointerPosition, pointerGraceArea);
        if (hasEnteredTarget)
          handleRemoveGraceArea();
        else if (isPointerOutsideGraceArea) {
          handleRemoveGraceArea();
          onClose();
        }
      };
      document.addEventListener("pointermove", handleTrackPointerGrace);
      return () => document.removeEventListener("pointermove", handleTrackPointerGrace);
    }
  }, [
    trigger,
    content,
    pointerGraceArea,
    onClose,
    handleRemoveGraceArea
  ]);
  return (0, import_react21.createElement)($a093c7e1ec25a057$var$TooltipContentImpl, _extends({}, props, {
    ref: composedRefs
  }));
});
var [$a093c7e1ec25a057$var$VisuallyHiddenContentContextProvider, $a093c7e1ec25a057$var$useVisuallyHiddenContentContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$TOOLTIP_NAME, {
  isInside: false
});
var $a093c7e1ec25a057$var$TooltipContentImpl = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const { __scopeTooltip, children, "aria-label": ariaLabel, onEscapeKeyDown, onPointerDownOutside, ...contentProps } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, __scopeTooltip);
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const { onClose } = context;
  (0, import_react21.useEffect)(() => {
    document.addEventListener($a093c7e1ec25a057$var$TOOLTIP_OPEN, onClose);
    return () => document.removeEventListener($a093c7e1ec25a057$var$TOOLTIP_OPEN, onClose);
  }, [
    onClose
  ]);
  (0, import_react21.useEffect)(() => {
    if (context.trigger) {
      const handleScroll2 = (event) => {
        const target = event.target;
        if (target !== null && target !== void 0 && target.contains(context.trigger))
          onClose();
      };
      window.addEventListener("scroll", handleScroll2, {
        capture: true
      });
      return () => window.removeEventListener("scroll", handleScroll2, {
        capture: true
      });
    }
  }, [
    context.trigger,
    onClose
  ]);
  return (0, import_react21.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, {
    asChild: true,
    disableOutsidePointerEvents: false,
    onEscapeKeyDown,
    onPointerDownOutside,
    onFocusOutside: (event) => event.preventDefault(),
    onDismiss: onClose
  }, (0, import_react21.createElement)($cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2, _extends({
    "data-state": context.stateAttribute
  }, popperScope, contentProps, {
    ref: forwardedRef,
    style: {
      ...contentProps.style,
      "--radix-tooltip-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-tooltip-content-available-width": "var(--radix-popper-available-width)",
      "--radix-tooltip-content-available-height": "var(--radix-popper-available-height)",
      "--radix-tooltip-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-tooltip-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }), (0, import_react21.createElement)($5e63c961fc1ce211$export$d9f1ccf0bdb05d45, null, children), (0, import_react21.createElement)($a093c7e1ec25a057$var$VisuallyHiddenContentContextProvider, {
    scope: __scopeTooltip,
    isInside: true
  }, (0, import_react21.createElement)($ea1ef594cf570d83$export$be92b6f5f03c0fe9, {
    id: context.contentId,
    role: "tooltip"
  }, ariaLabel || children))));
});
Object.assign($a093c7e1ec25a057$export$e9003e2be37ec060, {
  displayName: $a093c7e1ec25a057$var$CONTENT_NAME
});
var $a093c7e1ec25a057$var$ARROW_NAME = "TooltipArrow";
var $a093c7e1ec25a057$export$c27ee0ad710f7559 = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const { __scopeTooltip, ...arrowProps } = props;
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const visuallyHiddenContentContext = $a093c7e1ec25a057$var$useVisuallyHiddenContentContext($a093c7e1ec25a057$var$ARROW_NAME, __scopeTooltip);
  return visuallyHiddenContentContext.isInside ? null : (0, import_react21.createElement)($cf1ac5d9fe0e8206$export$21b07c8f274aebd5, _extends({}, popperScope, arrowProps, {
    ref: forwardedRef
  }));
});
Object.assign($a093c7e1ec25a057$export$c27ee0ad710f7559, {
  displayName: $a093c7e1ec25a057$var$ARROW_NAME
});
function $a093c7e1ec25a057$var$getExitSideFromRect(point, rect) {
  const top = Math.abs(rect.top - point.y);
  const bottom = Math.abs(rect.bottom - point.y);
  const right = Math.abs(rect.right - point.x);
  const left = Math.abs(rect.left - point.x);
  switch (Math.min(top, bottom, right, left)) {
    case left:
      return "left";
    case right:
      return "right";
    case top:
      return "top";
    case bottom:
      return "bottom";
    default:
      throw new Error("unreachable");
  }
}
function $a093c7e1ec25a057$var$getPaddedExitPoints(exitPoint, exitSide, padding = 5) {
  const paddedExitPoints = [];
  switch (exitSide) {
    case "top":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y + padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y + padding
      });
      break;
    case "bottom":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y - padding
      });
      break;
    case "left":
      paddedExitPoints.push({
        x: exitPoint.x + padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y + padding
      });
      break;
    case "right":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x - padding,
        y: exitPoint.y + padding
      });
      break;
  }
  return paddedExitPoints;
}
function $a093c7e1ec25a057$var$getPointsFromRect(rect) {
  const { top, right, bottom, left } = rect;
  return [
    {
      x: left,
      y: top
    },
    {
      x: right,
      y: top
    },
    {
      x: right,
      y: bottom
    },
    {
      x: left,
      y: bottom
    }
  ];
}
function $a093c7e1ec25a057$var$isPointInPolygon(point, polygon) {
  const { x, y } = point;
  let inside = false;
  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {
    const xi = polygon[i].x;
    const yi = polygon[i].y;
    const xj = polygon[j].x;
    const yj = polygon[j].y;
    const intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;
    if (intersect)
      inside = !inside;
  }
  return inside;
}
function $a093c7e1ec25a057$var$getHull(points) {
  const newPoints = points.slice();
  newPoints.sort((a, b) => {
    if (a.x < b.x)
      return -1;
    else if (a.x > b.x)
      return 1;
    else if (a.y < b.y)
      return -1;
    else if (a.y > b.y)
      return 1;
    else
      return 0;
  });
  return $a093c7e1ec25a057$var$getHullPresorted(newPoints);
}
function $a093c7e1ec25a057$var$getHullPresorted(points) {
  if (points.length <= 1)
    return points.slice();
  const upperHull = [];
  for (let i = 0; i < points.length; i++) {
    const p = points[i];
    while (upperHull.length >= 2) {
      const q = upperHull[upperHull.length - 1];
      const r = upperHull[upperHull.length - 2];
      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))
        upperHull.pop();
      else
        break;
    }
    upperHull.push(p);
  }
  upperHull.pop();
  const lowerHull = [];
  for (let i1 = points.length - 1; i1 >= 0; i1--) {
    const p = points[i1];
    while (lowerHull.length >= 2) {
      const q = lowerHull[lowerHull.length - 1];
      const r = lowerHull[lowerHull.length - 2];
      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))
        lowerHull.pop();
      else
        break;
    }
    lowerHull.push(p);
  }
  lowerHull.pop();
  if (upperHull.length === 1 && lowerHull.length === 1 && upperHull[0].x === lowerHull[0].x && upperHull[0].y === lowerHull[0].y)
    return upperHull;
  else
    return upperHull.concat(lowerHull);
}
var $a093c7e1ec25a057$export$2881499e37b75b9a = $a093c7e1ec25a057$export$f78649fb9ca566b8;
var $a093c7e1ec25a057$export$be92b6f5f03c0fe9 = $a093c7e1ec25a057$export$28c660c63b792dea;
var $a093c7e1ec25a057$export$41fb9f06171c75f4 = $a093c7e1ec25a057$export$8c610744efcf8a1d;
var $a093c7e1ec25a057$export$602eac185826482c = $a093c7e1ec25a057$export$7b36b8f925ab7497;
var $a093c7e1ec25a057$export$7c6e2c02157bb7d2 = $a093c7e1ec25a057$export$e9003e2be37ec060;
var $a093c7e1ec25a057$export$21b07c8f274aebd5 = $a093c7e1ec25a057$export$c27ee0ad710f7559;

// node_modules/@radix-ui/react-separator/dist/index.mjs
var import_react22 = __toESM(require_react(), 1);
var $89eedd556c436f6a$var$NAME = "Separator";
var $89eedd556c436f6a$var$DEFAULT_ORIENTATION = "horizontal";
var $89eedd556c436f6a$var$ORIENTATIONS = [
  "horizontal",
  "vertical"
];
var $89eedd556c436f6a$export$1ff3c3f08ae963c0 = (0, import_react22.forwardRef)((props, forwardedRef) => {
  const { decorative, orientation: orientationProp = $89eedd556c436f6a$var$DEFAULT_ORIENTATION, ...domProps } = props;
  const orientation = $89eedd556c436f6a$var$isValidOrientation(orientationProp) ? orientationProp : $89eedd556c436f6a$var$DEFAULT_ORIENTATION;
  const ariaOrientation = orientation === "vertical" ? orientation : void 0;
  const semanticProps = decorative ? {
    role: "none"
  } : {
    "aria-orientation": ariaOrientation,
    role: "separator"
  };
  return (0, import_react22.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    "data-orientation": orientation
  }, semanticProps, domProps, {
    ref: forwardedRef
  }));
});
Object.assign($89eedd556c436f6a$export$1ff3c3f08ae963c0, {
  displayName: $89eedd556c436f6a$var$NAME
});
$89eedd556c436f6a$export$1ff3c3f08ae963c0.propTypes = {
  orientation(props, propName, componentName) {
    const propValue = props[propName];
    const strVal = String(propValue);
    if (propValue && !$89eedd556c436f6a$var$isValidOrientation(propValue))
      return new Error($89eedd556c436f6a$var$getInvalidOrientationError(strVal, componentName));
    return null;
  }
};
function $89eedd556c436f6a$var$getInvalidOrientationError(value, componentName) {
  return `Invalid prop \`orientation\` of value \`${value}\` supplied to \`${componentName}\`, expected one of:
  - horizontal
  - vertical

Defaulting to \`${$89eedd556c436f6a$var$DEFAULT_ORIENTATION}\`.`;
}
function $89eedd556c436f6a$var$isValidOrientation(orientation) {
  return $89eedd556c436f6a$var$ORIENTATIONS.includes(orientation);
}
var $89eedd556c436f6a$export$be92b6f5f03c0fe9 = $89eedd556c436f6a$export$1ff3c3f08ae963c0;

// node_modules/@radix-ui/colors/index.mjs
var amber$1 = {
  amber1: "hsl(36, 100%, 6.1%)",
  amber2: "hsl(35, 100%, 7.6%)",
  amber3: "hsl(32, 100%, 10.2%)",
  amber4: "hsl(32, 100%, 12.4%)",
  amber5: "hsl(33, 100%, 14.6%)",
  amber6: "hsl(35, 100%, 17.1%)",
  amber7: "hsl(35, 91.0%, 21.6%)",
  amber8: "hsl(36, 100%, 25.5%)",
  amber9: "hsl(39, 100%, 57.0%)",
  amber10: "hsl(43, 100%, 64.0%)",
  amber11: "hsl(39, 90.0%, 49.8%)",
  amber12: "hsl(39, 97.0%, 93.2%)"
};
var blue$1 = {
  blue1: "hsl(212, 35.0%, 9.2%)",
  blue2: "hsl(216, 50.0%, 11.8%)",
  blue3: "hsl(214, 59.4%, 15.3%)",
  blue4: "hsl(214, 65.8%, 17.9%)",
  blue5: "hsl(213, 71.2%, 20.2%)",
  blue6: "hsl(212, 77.4%, 23.1%)",
  blue7: "hsl(211, 85.1%, 27.4%)",
  blue8: "hsl(211, 89.7%, 34.1%)",
  blue9: "hsl(206, 100%, 50.0%)",
  blue10: "hsl(209, 100%, 60.6%)",
  blue11: "hsl(210, 100%, 66.1%)",
  blue12: "hsl(206, 98.0%, 95.8%)"
};
var green$1 = {
  green1: "hsl(146, 30.0%, 7.4%)",
  green2: "hsl(155, 44.2%, 8.4%)",
  green3: "hsl(155, 46.7%, 10.9%)",
  green4: "hsl(154, 48.4%, 12.9%)",
  green5: "hsl(154, 49.7%, 14.9%)",
  green6: "hsl(154, 50.9%, 17.6%)",
  green7: "hsl(153, 51.8%, 21.8%)",
  green8: "hsl(151, 51.7%, 28.4%)",
  green9: "hsl(151, 55.0%, 41.5%)",
  green10: "hsl(151, 49.3%, 46.5%)",
  green11: "hsl(151, 50.0%, 53.2%)",
  green12: "hsl(137, 72.0%, 94.0%)"
};
var indigo$1 = {
  indigo1: "hsl(229, 24.0%, 10.0%)",
  indigo2: "hsl(230, 36.4%, 12.9%)",
  indigo3: "hsl(228, 43.3%, 17.5%)",
  indigo4: "hsl(227, 47.2%, 21.0%)",
  indigo5: "hsl(227, 50.0%, 24.1%)",
  indigo6: "hsl(226, 52.9%, 28.2%)",
  indigo7: "hsl(226, 56.0%, 34.5%)",
  indigo8: "hsl(226, 58.2%, 44.1%)",
  indigo9: "hsl(226, 70.0%, 55.5%)",
  indigo10: "hsl(227, 75.2%, 61.6%)",
  indigo11: "hsl(228, 100%, 75.9%)",
  indigo12: "hsl(226, 83.0%, 96.3%)"
};
var mint$1 = {
  mint1: "hsl(173, 50.0%, 6.6%)",
  mint2: "hsl(176, 73.0%, 7.3%)",
  mint3: "hsl(175, 79.3%, 8.9%)",
  mint4: "hsl(174, 84.8%, 10.3%)",
  mint5: "hsl(174, 90.2%, 11.9%)",
  mint6: "hsl(173, 96.0%, 13.8%)",
  mint7: "hsl(172, 100%, 16.8%)",
  mint8: "hsl(170, 100%, 21.4%)",
  mint9: "hsl(167, 65.0%, 66.0%)",
  mint10: "hsl(163, 80.0%, 77.0%)",
  mint11: "hsl(167, 70.0%, 48.0%)",
  mint12: "hsl(165, 80.0%, 94.8%)"
};
var orange$1 = {
  orange1: "hsl(30, 70.0%, 7.2%)",
  orange2: "hsl(28, 100%, 8.4%)",
  orange3: "hsl(26, 91.1%, 11.6%)",
  orange4: "hsl(25, 88.3%, 14.1%)",
  orange5: "hsl(24, 87.6%, 16.6%)",
  orange6: "hsl(24, 88.6%, 19.8%)",
  orange7: "hsl(24, 92.4%, 24.0%)",
  orange8: "hsl(25, 100%, 29.0%)",
  orange9: "hsl(24, 94.0%, 50.0%)",
  orange10: "hsl(24, 100%, 58.5%)",
  orange11: "hsl(24, 100%, 62.2%)",
  orange12: "hsl(24, 97.0%, 93.2%)"
};
var pink$1 = {
  pink1: "hsl(318, 25.0%, 9.6%)",
  pink2: "hsl(319, 32.2%, 11.6%)",
  pink3: "hsl(319, 41.0%, 16.0%)",
  pink4: "hsl(320, 45.4%, 18.7%)",
  pink5: "hsl(320, 49.0%, 21.1%)",
  pink6: "hsl(321, 53.6%, 24.4%)",
  pink7: "hsl(321, 61.1%, 29.7%)",
  pink8: "hsl(322, 74.9%, 37.5%)",
  pink9: "hsl(322, 65.0%, 54.5%)",
  pink10: "hsl(323, 72.8%, 59.2%)",
  pink11: "hsl(325, 90.0%, 66.4%)",
  pink12: "hsl(322, 90.0%, 95.8%)"
};
var red$1 = {
  red1: "hsl(353, 23.0%, 9.8%)",
  red2: "hsl(357, 34.4%, 12.0%)",
  red3: "hsl(356, 43.4%, 16.4%)",
  red4: "hsl(356, 47.6%, 19.2%)",
  red5: "hsl(356, 51.1%, 21.9%)",
  red6: "hsl(356, 55.2%, 25.9%)",
  red7: "hsl(357, 60.2%, 31.8%)",
  red8: "hsl(358, 65.0%, 40.4%)",
  red9: "hsl(358, 75.0%, 59.0%)",
  red10: "hsl(358, 85.3%, 64.0%)",
  red11: "hsl(358, 100%, 69.5%)",
  red12: "hsl(351, 89.0%, 96.0%)"
};
var slate$1 = {
  slate1: "hsl(200, 7.0%, 8.8%)",
  slate2: "hsl(195, 7.1%, 11.0%)",
  slate3: "hsl(197, 6.8%, 13.6%)",
  slate4: "hsl(198, 6.6%, 15.8%)",
  slate5: "hsl(199, 6.4%, 17.9%)",
  slate6: "hsl(201, 6.2%, 20.5%)",
  slate7: "hsl(203, 6.0%, 24.3%)",
  slate8: "hsl(207, 5.6%, 31.6%)",
  slate9: "hsl(206, 6.0%, 43.9%)",
  slate10: "hsl(206, 5.2%, 49.5%)",
  slate11: "hsl(206, 6.0%, 63.0%)",
  slate12: "hsl(210, 6.0%, 93.0%)"
};
var tomato$1 = {
  tomato1: "hsl(10, 23.0%, 9.4%)",
  tomato2: "hsl(9, 44.8%, 11.4%)",
  tomato3: "hsl(8, 52.0%, 15.3%)",
  tomato4: "hsl(7, 56.3%, 18.0%)",
  tomato5: "hsl(7, 60.1%, 20.6%)",
  tomato6: "hsl(8, 64.8%, 24.0%)",
  tomato7: "hsl(8, 71.2%, 29.1%)",
  tomato8: "hsl(10, 80.2%, 35.7%)",
  tomato9: "hsl(10, 78.0%, 54.0%)",
  tomato10: "hsl(10, 81.7%, 59.0%)",
  tomato11: "hsl(10, 85.0%, 62.8%)",
  tomato12: "hsl(10, 89.0%, 96.0%)"
};
var violet$1 = {
  violet1: "hsl(250, 20.0%, 10.2%)",
  violet2: "hsl(255, 30.3%, 12.9%)",
  violet3: "hsl(253, 37.0%, 18.4%)",
  violet4: "hsl(252, 40.1%, 22.5%)",
  violet5: "hsl(252, 42.2%, 26.2%)",
  violet6: "hsl(251, 44.3%, 31.1%)",
  violet7: "hsl(250, 46.8%, 38.9%)",
  violet8: "hsl(250, 51.8%, 51.2%)",
  violet9: "hsl(252, 56.0%, 57.5%)",
  violet10: "hsl(251, 63.2%, 63.2%)",
  violet11: "hsl(250, 95.0%, 76.8%)",
  violet12: "hsl(252, 87.0%, 96.4%)"
};
var yellow$1 = {
  yellow1: "hsl(45, 100%, 5.5%)",
  yellow2: "hsl(46, 100%, 6.7%)",
  yellow3: "hsl(45, 100%, 8.7%)",
  yellow4: "hsl(45, 100%, 10.4%)",
  yellow5: "hsl(47, 100%, 12.1%)",
  yellow6: "hsl(49, 100%, 14.3%)",
  yellow7: "hsl(49, 90.3%, 18.4%)",
  yellow8: "hsl(50, 100%, 22.0%)",
  yellow9: "hsl(53, 92.0%, 50.0%)",
  yellow10: "hsl(54, 100%, 68.0%)",
  yellow11: "hsl(48, 100%, 47.0%)",
  yellow12: "hsl(53, 100%, 91.0%)"
};
var amberA$1 = {
  amberA1: "hsla(0, 0%, 0%, 0)",
  amberA2: "hsla(31, 100%, 49.7%, 0.036)",
  amberA3: "hsla(27, 100%, 49.9%, 0.094)",
  amberA4: "hsla(29, 100%, 50.0%, 0.143)",
  amberA5: "hsla(31, 100%, 50.0%, 0.192)",
  amberA6: "hsla(35, 100%, 50.0%, 0.250)",
  amberA7: "hsla(34, 99.6%, 52.9%, 0.331)",
  amberA8: "hsla(36, 100%, 50.0%, 0.442)",
  amberA9: "hsla(40, 100%, 57.2%, 0.980)",
  amberA10: "hsla(44, 100%, 64.2%, 0.980)",
  amberA11: "hsla(39, 99.9%, 52.7%, 0.938)",
  amberA12: "hsla(45, 100%, 94.2%, 0.980)"
};
var indigoA$1 = {
  indigoA1: "hsla(0, 0%, 0%, 0)",
  indigoA2: "hsla(234, 97.4%, 59.9%, 0.059)",
  indigoA3: "hsla(228, 99.2%, 61.7%, 0.144)",
  indigoA4: "hsla(227, 99.7%, 62.0%, 0.211)",
  indigoA5: "hsla(227, 99.2%, 62.3%, 0.270)",
  indigoA6: "hsla(226, 99.9%, 62.1%, 0.350)",
  indigoA7: "hsla(226, 99.9%, 62.0%, 0.471)",
  indigoA8: "hsla(226, 99.9%, 62.1%, 0.655)",
  indigoA9: "hsla(226, 99.9%, 63.6%, 0.848)",
  indigoA10: "hsla(227, 99.8%, 67.7%, 0.893)",
  indigoA11: "hsla(227, 100%, 76.3%, 0.980)",
  indigoA12: "hsla(226, 100%, 97.5%, 0.980)"
};
var amber = {
  amber1: "hsl(39, 70.0%, 99.0%)",
  amber2: "hsl(40, 100%, 96.5%)",
  amber3: "hsl(44, 100%, 91.7%)",
  amber4: "hsl(43, 100%, 86.8%)",
  amber5: "hsl(42, 100%, 81.8%)",
  amber6: "hsl(38, 99.7%, 76.3%)",
  amber7: "hsl(36, 86.1%, 67.1%)",
  amber8: "hsl(35, 85.2%, 55.1%)",
  amber9: "hsl(39, 100%, 57.0%)",
  amber10: "hsl(35, 100%, 55.5%)",
  amber11: "hsl(30, 100%, 34.0%)",
  amber12: "hsl(20, 80.0%, 17.0%)"
};
var blue = {
  blue1: "hsl(206, 100%, 99.2%)",
  blue2: "hsl(210, 100%, 98.0%)",
  blue3: "hsl(209, 100%, 96.5%)",
  blue4: "hsl(210, 98.8%, 94.0%)",
  blue5: "hsl(209, 95.0%, 90.1%)",
  blue6: "hsl(209, 81.2%, 84.5%)",
  blue7: "hsl(208, 77.5%, 76.9%)",
  blue8: "hsl(206, 81.9%, 65.3%)",
  blue9: "hsl(206, 100%, 50.0%)",
  blue10: "hsl(208, 100%, 47.3%)",
  blue11: "hsl(211, 100%, 43.2%)",
  blue12: "hsl(211, 100%, 15.0%)"
};
var green = {
  green1: "hsl(136, 50.0%, 98.9%)",
  green2: "hsl(138, 62.5%, 96.9%)",
  green3: "hsl(139, 55.2%, 94.5%)",
  green4: "hsl(140, 48.7%, 91.0%)",
  green5: "hsl(141, 43.7%, 86.0%)",
  green6: "hsl(143, 40.3%, 79.0%)",
  green7: "hsl(146, 38.5%, 69.0%)",
  green8: "hsl(151, 40.2%, 54.1%)",
  green9: "hsl(151, 55.0%, 41.5%)",
  green10: "hsl(152, 57.5%, 37.6%)",
  green11: "hsl(153, 67.0%, 28.5%)",
  green12: "hsl(155, 40.0%, 14.0%)"
};
var indigo = {
  indigo1: "hsl(225, 60.0%, 99.4%)",
  indigo2: "hsl(223, 100%, 98.6%)",
  indigo3: "hsl(223, 98.4%, 97.1%)",
  indigo4: "hsl(223, 92.9%, 95.0%)",
  indigo5: "hsl(224, 87.1%, 92.0%)",
  indigo6: "hsl(224, 81.9%, 87.8%)",
  indigo7: "hsl(225, 77.4%, 82.1%)",
  indigo8: "hsl(226, 75.4%, 74.5%)",
  indigo9: "hsl(226, 70.0%, 55.5%)",
  indigo10: "hsl(226, 58.6%, 51.3%)",
  indigo11: "hsl(226, 55.0%, 45.0%)",
  indigo12: "hsl(226, 62.0%, 17.0%)"
};
var orange = {
  orange1: "hsl(24, 70.0%, 99.0%)",
  orange2: "hsl(24, 83.3%, 97.6%)",
  orange3: "hsl(24, 100%, 95.3%)",
  orange4: "hsl(25, 100%, 92.2%)",
  orange5: "hsl(25, 100%, 88.2%)",
  orange6: "hsl(25, 100%, 82.8%)",
  orange7: "hsl(24, 100%, 75.3%)",
  orange8: "hsl(24, 94.5%, 64.3%)",
  orange9: "hsl(24, 94.0%, 50.0%)",
  orange10: "hsl(24, 100%, 46.5%)",
  orange11: "hsl(24, 100%, 37.0%)",
  orange12: "hsl(15, 60.0%, 17.0%)"
};
var pink = {
  pink1: "hsl(322, 100%, 99.4%)",
  pink2: "hsl(323, 100%, 98.4%)",
  pink3: "hsl(323, 86.3%, 96.5%)",
  pink4: "hsl(323, 78.7%, 94.2%)",
  pink5: "hsl(323, 72.2%, 91.1%)",
  pink6: "hsl(323, 66.3%, 86.6%)",
  pink7: "hsl(323, 62.0%, 80.1%)",
  pink8: "hsl(323, 60.3%, 72.4%)",
  pink9: "hsl(322, 65.0%, 54.5%)",
  pink10: "hsl(322, 63.9%, 50.7%)",
  pink11: "hsl(322, 75.0%, 46.0%)",
  pink12: "hsl(320, 70.0%, 13.5%)"
};
var red = {
  red1: "hsl(359, 100%, 99.4%)",
  red2: "hsl(359, 100%, 98.6%)",
  red3: "hsl(360, 100%, 96.8%)",
  red4: "hsl(360, 97.9%, 94.8%)",
  red5: "hsl(360, 90.2%, 91.9%)",
  red6: "hsl(360, 81.7%, 87.8%)",
  red7: "hsl(359, 74.2%, 81.7%)",
  red8: "hsl(359, 69.5%, 74.3%)",
  red9: "hsl(358, 75.0%, 59.0%)",
  red10: "hsl(358, 69.4%, 55.2%)",
  red11: "hsl(358, 65.0%, 48.7%)",
  red12: "hsl(354, 50.0%, 14.6%)"
};
var slate = {
  slate1: "hsl(206, 30.0%, 98.8%)",
  slate2: "hsl(210, 16.7%, 97.6%)",
  slate3: "hsl(209, 13.3%, 95.3%)",
  slate4: "hsl(209, 12.2%, 93.2%)",
  slate5: "hsl(208, 11.7%, 91.1%)",
  slate6: "hsl(208, 11.3%, 88.9%)",
  slate7: "hsl(207, 11.1%, 85.9%)",
  slate8: "hsl(205, 10.7%, 78.0%)",
  slate9: "hsl(206, 6.0%, 56.1%)",
  slate10: "hsl(206, 5.8%, 52.3%)",
  slate11: "hsl(206, 6.0%, 43.5%)",
  slate12: "hsl(206, 24.0%, 9.0%)"
};
var violet = {
  violet1: "hsl(255, 65.0%, 99.4%)",
  violet2: "hsl(252, 100%, 99.0%)",
  violet3: "hsl(252, 96.9%, 97.4%)",
  violet4: "hsl(252, 91.5%, 95.5%)",
  violet5: "hsl(252, 85.1%, 93.0%)",
  violet6: "hsl(252, 77.8%, 89.4%)",
  violet7: "hsl(252, 71.0%, 83.7%)",
  violet8: "hsl(252, 68.6%, 76.3%)",
  violet9: "hsl(252, 56.0%, 57.5%)",
  violet10: "hsl(251, 48.1%, 53.5%)",
  violet11: "hsl(250, 43.0%, 48.0%)",
  violet12: "hsl(254, 60.0%, 18.5%)"
};
var yellow = {
  yellow1: "hsl(60, 54.0%, 98.5%)",
  yellow2: "hsl(52, 100%, 95.5%)",
  yellow3: "hsl(55, 100%, 90.9%)",
  yellow4: "hsl(54, 100%, 86.6%)",
  yellow5: "hsl(52, 97.9%, 82.0%)",
  yellow6: "hsl(50, 89.4%, 76.1%)",
  yellow7: "hsl(47, 80.4%, 68.0%)",
  yellow8: "hsl(48, 100%, 46.1%)",
  yellow9: "hsl(53, 92.0%, 50.0%)",
  yellow10: "hsl(50, 100%, 48.5%)",
  yellow11: "hsl(42, 100%, 29.0%)",
  yellow12: "hsl(40, 55.0%, 13.5%)"
};
var amberA = {
  amberA1: "hsla(40, 94.9%, 38.7%, 0.016)",
  amberA2: "hsla(40, 100%, 50.3%, 0.071)",
  amberA3: "hsla(44, 100%, 50.1%, 0.165)",
  amberA4: "hsla(43, 100%, 50.0%, 0.263)",
  amberA5: "hsla(42, 100%, 50.0%, 0.365)",
  amberA6: "hsla(38, 100%, 50.1%, 0.475)",
  amberA7: "hsla(36, 99.9%, 46.2%, 0.612)",
  amberA8: "hsla(35, 99.8%, 46.0%, 0.832)",
  amberA9: "hsla(39, 100%, 50.0%, 0.859)",
  amberA10: "hsla(35, 100%, 50.0%, 0.891)",
  amberA11: "hsla(29, 100%, 33.6%, 0.980)",
  amberA12: "hsla(20, 99.8%, 14.1%, 0.965)"
};
var indigoA = {
  indigoA1: "hsla(240, 92.6%, 26.5%, 0.008)",
  indigoA2: "hsla(223, 100%, 51.0%, 0.028)",
  indigoA3: "hsla(224, 100%, 50.1%, 0.059)",
  indigoA4: "hsla(223, 98.0%, 48.5%, 0.099)",
  indigoA5: "hsla(225, 98.6%, 46.4%, 0.150)",
  indigoA6: "hsla(224, 99.5%, 44.9%, 0.224)",
  indigoA7: "hsla(225, 99.7%, 43.9%, 0.318)",
  indigoA8: "hsla(226, 99.5%, 43.1%, 0.448)",
  indigoA9: "hsla(226, 100%, 41.2%, 0.757)",
  indigoA10: "hsla(226, 99.8%, 37.1%, 0.773)",
  indigoA11: "hsla(226, 99.6%, 31.1%, 0.797)",
  indigoA12: "hsla(226, 99.3%, 11.4%, 0.938)"
};

// node_modules/@radix-ui/react-switch/dist/index.mjs
var import_react23 = __toESM(require_react(), 1);
var $6be4966fd9bbc698$var$SWITCH_NAME = "Switch";
var [$6be4966fd9bbc698$var$createSwitchContext, $6be4966fd9bbc698$export$cf7f5f17f69cbd43] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($6be4966fd9bbc698$var$SWITCH_NAME);
var [$6be4966fd9bbc698$var$SwitchProvider, $6be4966fd9bbc698$var$useSwitchContext] = $6be4966fd9bbc698$var$createSwitchContext($6be4966fd9bbc698$var$SWITCH_NAME);
var $6be4966fd9bbc698$export$b5d5cf8927ab7262 = (0, import_react23.forwardRef)((props, forwardedRef) => {
  const { __scopeSwitch, name, checked: checkedProp, defaultChecked, required, disabled, value = "on", onCheckedChange, ...switchProps } = props;
  const [button, setButton] = (0, import_react23.useState)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setButton(node)
  );
  const hasConsumerStoppedPropagationRef = (0, import_react23.useRef)(false);
  const isFormControl = button ? Boolean(button.closest("form")) : true;
  const [checked = false, setChecked] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: checkedProp,
    defaultProp: defaultChecked,
    onChange: onCheckedChange
  });
  return (0, import_react23.createElement)($6be4966fd9bbc698$var$SwitchProvider, {
    scope: __scopeSwitch,
    checked,
    disabled
  }, (0, import_react23.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button",
    role: "switch",
    "aria-checked": checked,
    "aria-required": required,
    "data-state": $6be4966fd9bbc698$var$getState(checked),
    "data-disabled": disabled ? "" : void 0,
    disabled,
    value
  }, switchProps, {
    ref: composedRefs,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, (event) => {
      setChecked(
        (prevChecked) => !prevChecked
      );
      if (isFormControl) {
        hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
        if (!hasConsumerStoppedPropagationRef.current)
          event.stopPropagation();
      }
    })
  })), isFormControl && (0, import_react23.createElement)($6be4966fd9bbc698$var$BubbleInput, {
    control: button,
    bubbles: !hasConsumerStoppedPropagationRef.current,
    name,
    value,
    checked,
    required,
    disabled,
    style: {
      transform: "translateX(-100%)"
    }
  }));
});
Object.assign($6be4966fd9bbc698$export$b5d5cf8927ab7262, {
  displayName: $6be4966fd9bbc698$var$SWITCH_NAME
});
var $6be4966fd9bbc698$var$THUMB_NAME = "SwitchThumb";
var $6be4966fd9bbc698$export$4d07bf653ea69106 = (0, import_react23.forwardRef)((props, forwardedRef) => {
  const { __scopeSwitch, ...thumbProps } = props;
  const context = $6be4966fd9bbc698$var$useSwitchContext($6be4966fd9bbc698$var$THUMB_NAME, __scopeSwitch);
  return (0, import_react23.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({
    "data-state": $6be4966fd9bbc698$var$getState(context.checked),
    "data-disabled": context.disabled ? "" : void 0
  }, thumbProps, {
    ref: forwardedRef
  }));
});
Object.assign($6be4966fd9bbc698$export$4d07bf653ea69106, {
  displayName: $6be4966fd9bbc698$var$THUMB_NAME
});
var $6be4966fd9bbc698$var$BubbleInput = (props) => {
  const { control, checked, bubbles = true, ...inputProps } = props;
  const ref = (0, import_react23.useRef)(null);
  const prevChecked = $010c2913dbd2fe3d$export$5cae361ad82dce8b(checked);
  const controlSize = $db6c3485150b8e66$export$1ab7ae714698c4b8(control);
  (0, import_react23.useEffect)(() => {
    const input = ref.current;
    const inputProto = window.HTMLInputElement.prototype;
    const descriptor = Object.getOwnPropertyDescriptor(inputProto, "checked");
    const setChecked = descriptor.set;
    if (prevChecked !== checked && setChecked) {
      const event = new Event("click", {
        bubbles
      });
      setChecked.call(input, checked);
      input.dispatchEvent(event);
    }
  }, [
    prevChecked,
    checked,
    bubbles
  ]);
  return (0, import_react23.createElement)("input", _extends({
    type: "checkbox",
    "aria-hidden": true,
    defaultChecked: checked
  }, inputProps, {
    tabIndex: -1,
    ref,
    style: {
      ...props.style,
      ...controlSize,
      position: "absolute",
      pointerEvents: "none",
      opacity: 0,
      margin: 0
    }
  }));
};
function $6be4966fd9bbc698$var$getState(checked) {
  return checked ? "checked" : "unchecked";
}
var $6be4966fd9bbc698$export$be92b6f5f03c0fe9 = $6be4966fd9bbc698$export$b5d5cf8927ab7262;
var $6be4966fd9bbc698$export$6521433ed15a34db = $6be4966fd9bbc698$export$4d07bf653ea69106;

// node_modules/@daohaus/ui/index.js
var import_keychain_utils = __toESM(require_src());
var import_utils6 = __toESM(require_src2());

// node_modules/polished/dist/polished.esm.js
init_assertThisInitialized();

// node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js
init_getPrototypeOf();
init_setPrototypeOf();

// node_modules/@babel/runtime/helpers/esm/isNativeFunction.js
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

// node_modules/@babel/runtime/helpers/esm/construct.js
init_setPrototypeOf();
init_isNativeReflectConstruct();
function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct.bind();
  } else {
    _construct = function _construct2(Parent2, args2, Class2) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance = new Constructor();
      if (Class2)
        _setPrototypeOf(instance, Class2.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}

// node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
    if (Class2 === null || !_isNativeFunction(Class2))
      return Class2;
    if (typeof Class2 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class2))
        return _cache.get(Class2);
      _cache.set(Class2, Wrapper);
    }
    function Wrapper() {
      return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class2.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class2);
  };
  return _wrapNativeSuper(Class);
}

// node_modules/polished/dist/polished.esm.js
var ERRORS = {
  "1": "Passed invalid arguments to hsl, please pass multiple numbers e.g. hsl(360, 0.75, 0.4) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75 }).\n\n",
  "2": "Passed invalid arguments to hsla, please pass multiple numbers e.g. hsla(360, 0.75, 0.4, 0.7) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75, alpha: 0.7 }).\n\n",
  "3": "Passed an incorrect argument to a color function, please pass a string representation of a color.\n\n",
  "4": "Couldn't generate valid rgb string from %s, it returned %s.\n\n",
  "5": "Couldn't parse the color string. Please provide the color as a string in hex, rgb, rgba, hsl or hsla notation.\n\n",
  "6": "Passed invalid arguments to rgb, please pass multiple numbers e.g. rgb(255, 205, 100) or an object e.g. rgb({ red: 255, green: 205, blue: 100 }).\n\n",
  "7": "Passed invalid arguments to rgba, please pass multiple numbers e.g. rgb(255, 205, 100, 0.75) or an object e.g. rgb({ red: 255, green: 205, blue: 100, alpha: 0.75 }).\n\n",
  "8": "Passed invalid argument to toColorString, please pass a RgbColor, RgbaColor, HslColor or HslaColor object.\n\n",
  "9": "Please provide a number of steps to the modularScale helper.\n\n",
  "10": "Please pass a number or one of the predefined scales to the modularScale helper as the ratio.\n\n",
  "11": 'Invalid value passed as base to modularScale, expected number or em string but got "%s"\n\n',
  "12": 'Expected a string ending in "px" or a number passed as the first argument to %s(), got "%s" instead.\n\n',
  "13": 'Expected a string ending in "px" or a number passed as the second argument to %s(), got "%s" instead.\n\n',
  "14": 'Passed invalid pixel value ("%s") to %s(), please pass a value like "12px" or 12.\n\n',
  "15": 'Passed invalid base value ("%s") to %s(), please pass a value like "12px" or 12.\n\n',
  "16": "You must provide a template to this method.\n\n",
  "17": "You passed an unsupported selector state to this method.\n\n",
  "18": "minScreen and maxScreen must be provided as stringified numbers with the same units.\n\n",
  "19": "fromSize and toSize must be provided as stringified numbers with the same units.\n\n",
  "20": "expects either an array of objects or a single object with the properties prop, fromSize, and toSize.\n\n",
  "21": "expects the objects in the first argument array to have the properties `prop`, `fromSize`, and `toSize`.\n\n",
  "22": "expects the first argument object to have the properties `prop`, `fromSize`, and `toSize`.\n\n",
  "23": "fontFace expects a name of a font-family.\n\n",
  "24": "fontFace expects either the path to the font file(s) or a name of a local copy.\n\n",
  "25": "fontFace expects localFonts to be an array.\n\n",
  "26": "fontFace expects fileFormats to be an array.\n\n",
  "27": "radialGradient requries at least 2 color-stops to properly render.\n\n",
  "28": "Please supply a filename to retinaImage() as the first argument.\n\n",
  "29": "Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\n\n",
  "30": "Passed an invalid value to `height` or `width`. Please provide a pixel based unit.\n\n",
  "31": "The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation\n\n",
  "32": "To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s')\n\n",
  "33": "The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation\n\n",
  "34": "borderRadius expects a radius value as a string or number as the second argument.\n\n",
  "35": 'borderRadius expects one of "top", "bottom", "left" or "right" as the first argument.\n\n',
  "36": "Property must be a string value.\n\n",
  "37": "Syntax Error at %s.\n\n",
  "38": "Formula contains a function that needs parentheses at %s.\n\n",
  "39": "Formula is missing closing parenthesis at %s.\n\n",
  "40": "Formula has too many closing parentheses at %s.\n\n",
  "41": "All values in a formula must have the same unit or be unitless.\n\n",
  "42": "Please provide a number of steps to the modularScale helper.\n\n",
  "43": "Please pass a number or one of the predefined scales to the modularScale helper as the ratio.\n\n",
  "44": "Invalid value passed as base to modularScale, expected number or em/rem string but got %s.\n\n",
  "45": "Passed invalid argument to hslToColorString, please pass a HslColor or HslaColor object.\n\n",
  "46": "Passed invalid argument to rgbToColorString, please pass a RgbColor or RgbaColor object.\n\n",
  "47": "minScreen and maxScreen must be provided as stringified numbers with the same units.\n\n",
  "48": "fromSize and toSize must be provided as stringified numbers with the same units.\n\n",
  "49": "Expects either an array of objects or a single object with the properties prop, fromSize, and toSize.\n\n",
  "50": "Expects the objects in the first argument array to have the properties prop, fromSize, and toSize.\n\n",
  "51": "Expects the first argument object to have the properties prop, fromSize, and toSize.\n\n",
  "52": "fontFace expects either the path to the font file(s) or a name of a local copy.\n\n",
  "53": "fontFace expects localFonts to be an array.\n\n",
  "54": "fontFace expects fileFormats to be an array.\n\n",
  "55": "fontFace expects a name of a font-family.\n\n",
  "56": "linearGradient requries at least 2 color-stops to properly render.\n\n",
  "57": "radialGradient requries at least 2 color-stops to properly render.\n\n",
  "58": "Please supply a filename to retinaImage() as the first argument.\n\n",
  "59": "Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\n\n",
  "60": "Passed an invalid value to `height` or `width`. Please provide a pixel based unit.\n\n",
  "61": "Property must be a string value.\n\n",
  "62": "borderRadius expects a radius value as a string or number as the second argument.\n\n",
  "63": 'borderRadius expects one of "top", "bottom", "left" or "right" as the first argument.\n\n',
  "64": "The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation.\n\n",
  "65": "To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s').\n\n",
  "66": "The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation.\n\n",
  "67": "You must provide a template to this method.\n\n",
  "68": "You passed an unsupported selector state to this method.\n\n",
  "69": 'Expected a string ending in "px" or a number passed as the first argument to %s(), got %s instead.\n\n',
  "70": 'Expected a string ending in "px" or a number passed as the second argument to %s(), got %s instead.\n\n',
  "71": 'Passed invalid pixel value %s to %s(), please pass a value like "12px" or 12.\n\n',
  "72": 'Passed invalid base value %s to %s(), please pass a value like "12px" or 12.\n\n',
  "73": "Please provide a valid CSS variable.\n\n",
  "74": "CSS variable not found and no default was provided.\n\n",
  "75": "important requires a valid style object, got a %s instead.\n\n",
  "76": "fromSize and toSize must be provided as stringified numbers with the same units as minScreen and maxScreen.\n\n",
  "77": 'remToPx expects a value in "rem" but you provided it in "%s".\n\n',
  "78": 'base must be set in "px" or "%" but you set it in "%s".\n'
};
function format() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  var a = args[0];
  var b = [];
  var c;
  for (c = 1; c < args.length; c += 1) {
    b.push(args[c]);
  }
  b.forEach(function(d) {
    a = a.replace(/%[a-z]/, d);
  });
  return a;
}
var PolishedError = function(_Error) {
  _inheritsLoose(PolishedError2, _Error);
  function PolishedError2(code) {
    var _this;
    if (false) {
      _this = _Error.call(this, "An error occurred. See https://github.com/styled-components/polished/blob/main/src/internalHelpers/errors.md#" + code + " for more information.") || this;
    } else {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }
      _this = _Error.call(this, format.apply(void 0, [ERRORS[code]].concat(args))) || this;
    }
    return _assertThisInitialized(_this);
  }
  return PolishedError2;
}(_wrapNativeSuper(Error));
function endsWith(string, suffix) {
  return string.substr(-suffix.length) === suffix;
}
var cssRegex$1 = /^([+-]?(?:\d+|\d*\.\d+))([a-z]*|%)$/;
function stripUnit(value) {
  if (typeof value !== "string")
    return value;
  var matchedValue = value.match(cssRegex$1);
  return matchedValue ? parseFloat(value) : value;
}
var pxtoFactory = function pxtoFactory2(to) {
  return function(pxval, base) {
    if (base === void 0) {
      base = "16px";
    }
    var newPxval = pxval;
    var newBase = base;
    if (typeof pxval === "string") {
      if (!endsWith(pxval, "px")) {
        throw new PolishedError(69, to, pxval);
      }
      newPxval = stripUnit(pxval);
    }
    if (typeof base === "string") {
      if (!endsWith(base, "px")) {
        throw new PolishedError(70, to, base);
      }
      newBase = stripUnit(base);
    }
    if (typeof newPxval === "string") {
      throw new PolishedError(71, pxval, to);
    }
    if (typeof newBase === "string") {
      throw new PolishedError(72, base, to);
    }
    return "" + newPxval / newBase + to;
  };
};
var pixelsto = pxtoFactory;
var em = pixelsto("em");
var rem = pixelsto("rem");
function normalize() {
  var _ref;
  return [(_ref = {
    html: {
      lineHeight: "1.15",
      textSizeAdjust: "100%"
    },
    body: {
      margin: "0"
    },
    main: {
      display: "block"
    },
    h1: {
      fontSize: "2em",
      margin: "0.67em 0"
    },
    hr: {
      boxSizing: "content-box",
      height: "0",
      overflow: "visible"
    },
    pre: {
      fontFamily: "monospace, monospace",
      fontSize: "1em"
    },
    a: {
      backgroundColor: "transparent"
    },
    "abbr[title]": {
      borderBottom: "none",
      textDecoration: "underline"
    }
  }, _ref["b,\n    strong"] = {
    fontWeight: "bolder"
  }, _ref["code,\n    kbd,\n    samp"] = {
    fontFamily: "monospace, monospace",
    fontSize: "1em"
  }, _ref.small = {
    fontSize: "80%"
  }, _ref["sub,\n    sup"] = {
    fontSize: "75%",
    lineHeight: "0",
    position: "relative",
    verticalAlign: "baseline"
  }, _ref.sub = {
    bottom: "-0.25em"
  }, _ref.sup = {
    top: "-0.5em"
  }, _ref.img = {
    borderStyle: "none"
  }, _ref["button,\n    input,\n    optgroup,\n    select,\n    textarea"] = {
    fontFamily: "inherit",
    fontSize: "100%",
    lineHeight: "1.15",
    margin: "0"
  }, _ref["button,\n    input"] = {
    overflow: "visible"
  }, _ref["button,\n    select"] = {
    textTransform: "none"
  }, _ref['button,\n    html [type="button"],\n    [type="reset"],\n    [type="submit"]'] = {
    WebkitAppearance: "button"
  }, _ref['button::-moz-focus-inner,\n    [type="button"]::-moz-focus-inner,\n    [type="reset"]::-moz-focus-inner,\n    [type="submit"]::-moz-focus-inner'] = {
    borderStyle: "none",
    padding: "0"
  }, _ref['button:-moz-focusring,\n    [type="button"]:-moz-focusring,\n    [type="reset"]:-moz-focusring,\n    [type="submit"]:-moz-focusring'] = {
    outline: "1px dotted ButtonText"
  }, _ref.fieldset = {
    padding: "0.35em 0.625em 0.75em"
  }, _ref.legend = {
    boxSizing: "border-box",
    color: "inherit",
    display: "table",
    maxWidth: "100%",
    padding: "0",
    whiteSpace: "normal"
  }, _ref.progress = {
    verticalAlign: "baseline"
  }, _ref.textarea = {
    overflow: "auto"
  }, _ref['[type="checkbox"],\n    [type="radio"]'] = {
    boxSizing: "border-box",
    padding: "0"
  }, _ref['[type="number"]::-webkit-inner-spin-button,\n    [type="number"]::-webkit-outer-spin-button'] = {
    height: "auto"
  }, _ref['[type="search"]'] = {
    WebkitAppearance: "textfield",
    outlineOffset: "-2px"
  }, _ref['[type="search"]::-webkit-search-decoration'] = {
    WebkitAppearance: "none"
  }, _ref["::-webkit-file-upload-button"] = {
    WebkitAppearance: "button",
    font: "inherit"
  }, _ref.details = {
    display: "block"
  }, _ref.summary = {
    display: "list-item"
  }, _ref.template = {
    display: "none"
  }, _ref["[hidden]"] = {
    display: "none"
  }, _ref), {
    "abbr[title]": {
      textDecoration: "underline dotted"
    }
  }];
}
function colorToInt(color) {
  return Math.round(color * 255);
}
function convertToInt(red2, green2, blue2) {
  return colorToInt(red2) + "," + colorToInt(green2) + "," + colorToInt(blue2);
}
function hslToRgb(hue, saturation, lightness, convert) {
  if (convert === void 0) {
    convert = convertToInt;
  }
  if (saturation === 0) {
    return convert(lightness, lightness, lightness);
  }
  var huePrime = (hue % 360 + 360) % 360 / 60;
  var chroma = (1 - Math.abs(2 * lightness - 1)) * saturation;
  var secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));
  var red2 = 0;
  var green2 = 0;
  var blue2 = 0;
  if (huePrime >= 0 && huePrime < 1) {
    red2 = chroma;
    green2 = secondComponent;
  } else if (huePrime >= 1 && huePrime < 2) {
    red2 = secondComponent;
    green2 = chroma;
  } else if (huePrime >= 2 && huePrime < 3) {
    green2 = chroma;
    blue2 = secondComponent;
  } else if (huePrime >= 3 && huePrime < 4) {
    green2 = secondComponent;
    blue2 = chroma;
  } else if (huePrime >= 4 && huePrime < 5) {
    red2 = secondComponent;
    blue2 = chroma;
  } else if (huePrime >= 5 && huePrime < 6) {
    red2 = chroma;
    blue2 = secondComponent;
  }
  var lightnessModification = lightness - chroma / 2;
  var finalRed = red2 + lightnessModification;
  var finalGreen = green2 + lightnessModification;
  var finalBlue = blue2 + lightnessModification;
  return convert(finalRed, finalGreen, finalBlue);
}
var namedColorMap = {
  aliceblue: "f0f8ff",
  antiquewhite: "faebd7",
  aqua: "00ffff",
  aquamarine: "7fffd4",
  azure: "f0ffff",
  beige: "f5f5dc",
  bisque: "ffe4c4",
  black: "000",
  blanchedalmond: "ffebcd",
  blue: "0000ff",
  blueviolet: "8a2be2",
  brown: "a52a2a",
  burlywood: "deb887",
  cadetblue: "5f9ea0",
  chartreuse: "7fff00",
  chocolate: "d2691e",
  coral: "ff7f50",
  cornflowerblue: "6495ed",
  cornsilk: "fff8dc",
  crimson: "dc143c",
  cyan: "00ffff",
  darkblue: "00008b",
  darkcyan: "008b8b",
  darkgoldenrod: "b8860b",
  darkgray: "a9a9a9",
  darkgreen: "006400",
  darkgrey: "a9a9a9",
  darkkhaki: "bdb76b",
  darkmagenta: "8b008b",
  darkolivegreen: "556b2f",
  darkorange: "ff8c00",
  darkorchid: "9932cc",
  darkred: "8b0000",
  darksalmon: "e9967a",
  darkseagreen: "8fbc8f",
  darkslateblue: "483d8b",
  darkslategray: "2f4f4f",
  darkslategrey: "2f4f4f",
  darkturquoise: "00ced1",
  darkviolet: "9400d3",
  deeppink: "ff1493",
  deepskyblue: "00bfff",
  dimgray: "696969",
  dimgrey: "696969",
  dodgerblue: "1e90ff",
  firebrick: "b22222",
  floralwhite: "fffaf0",
  forestgreen: "228b22",
  fuchsia: "ff00ff",
  gainsboro: "dcdcdc",
  ghostwhite: "f8f8ff",
  gold: "ffd700",
  goldenrod: "daa520",
  gray: "808080",
  green: "008000",
  greenyellow: "adff2f",
  grey: "808080",
  honeydew: "f0fff0",
  hotpink: "ff69b4",
  indianred: "cd5c5c",
  indigo: "4b0082",
  ivory: "fffff0",
  khaki: "f0e68c",
  lavender: "e6e6fa",
  lavenderblush: "fff0f5",
  lawngreen: "7cfc00",
  lemonchiffon: "fffacd",
  lightblue: "add8e6",
  lightcoral: "f08080",
  lightcyan: "e0ffff",
  lightgoldenrodyellow: "fafad2",
  lightgray: "d3d3d3",
  lightgreen: "90ee90",
  lightgrey: "d3d3d3",
  lightpink: "ffb6c1",
  lightsalmon: "ffa07a",
  lightseagreen: "20b2aa",
  lightskyblue: "87cefa",
  lightslategray: "789",
  lightslategrey: "789",
  lightsteelblue: "b0c4de",
  lightyellow: "ffffe0",
  lime: "0f0",
  limegreen: "32cd32",
  linen: "faf0e6",
  magenta: "f0f",
  maroon: "800000",
  mediumaquamarine: "66cdaa",
  mediumblue: "0000cd",
  mediumorchid: "ba55d3",
  mediumpurple: "9370db",
  mediumseagreen: "3cb371",
  mediumslateblue: "7b68ee",
  mediumspringgreen: "00fa9a",
  mediumturquoise: "48d1cc",
  mediumvioletred: "c71585",
  midnightblue: "191970",
  mintcream: "f5fffa",
  mistyrose: "ffe4e1",
  moccasin: "ffe4b5",
  navajowhite: "ffdead",
  navy: "000080",
  oldlace: "fdf5e6",
  olive: "808000",
  olivedrab: "6b8e23",
  orange: "ffa500",
  orangered: "ff4500",
  orchid: "da70d6",
  palegoldenrod: "eee8aa",
  palegreen: "98fb98",
  paleturquoise: "afeeee",
  palevioletred: "db7093",
  papayawhip: "ffefd5",
  peachpuff: "ffdab9",
  peru: "cd853f",
  pink: "ffc0cb",
  plum: "dda0dd",
  powderblue: "b0e0e6",
  purple: "800080",
  rebeccapurple: "639",
  red: "f00",
  rosybrown: "bc8f8f",
  royalblue: "4169e1",
  saddlebrown: "8b4513",
  salmon: "fa8072",
  sandybrown: "f4a460",
  seagreen: "2e8b57",
  seashell: "fff5ee",
  sienna: "a0522d",
  silver: "c0c0c0",
  skyblue: "87ceeb",
  slateblue: "6a5acd",
  slategray: "708090",
  slategrey: "708090",
  snow: "fffafa",
  springgreen: "00ff7f",
  steelblue: "4682b4",
  tan: "d2b48c",
  teal: "008080",
  thistle: "d8bfd8",
  tomato: "ff6347",
  turquoise: "40e0d0",
  violet: "ee82ee",
  wheat: "f5deb3",
  white: "fff",
  whitesmoke: "f5f5f5",
  yellow: "ff0",
  yellowgreen: "9acd32"
};
function nameToHex(color) {
  if (typeof color !== "string")
    return color;
  var normalizedColorName = color.toLowerCase();
  return namedColorMap[normalizedColorName] ? "#" + namedColorMap[normalizedColorName] : color;
}
var hexRegex = /^#[a-fA-F0-9]{6}$/;
var hexRgbaRegex = /^#[a-fA-F0-9]{8}$/;
var reducedHexRegex = /^#[a-fA-F0-9]{3}$/;
var reducedRgbaHexRegex = /^#[a-fA-F0-9]{4}$/;
var rgbRegex = /^rgb\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*\)$/i;
var rgbaRegex = /^rgb(?:a)?\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;
var hslRegex = /^hsl\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*\)$/i;
var hslaRegex = /^hsl(?:a)?\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;
function parseToRgb(color) {
  if (typeof color !== "string") {
    throw new PolishedError(3);
  }
  var normalizedColor = nameToHex(color);
  if (normalizedColor.match(hexRegex)) {
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[2], 16),
      green: parseInt("" + normalizedColor[3] + normalizedColor[4], 16),
      blue: parseInt("" + normalizedColor[5] + normalizedColor[6], 16)
    };
  }
  if (normalizedColor.match(hexRgbaRegex)) {
    var alpha = parseFloat((parseInt("" + normalizedColor[7] + normalizedColor[8], 16) / 255).toFixed(2));
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[2], 16),
      green: parseInt("" + normalizedColor[3] + normalizedColor[4], 16),
      blue: parseInt("" + normalizedColor[5] + normalizedColor[6], 16),
      alpha
    };
  }
  if (normalizedColor.match(reducedHexRegex)) {
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[1], 16),
      green: parseInt("" + normalizedColor[2] + normalizedColor[2], 16),
      blue: parseInt("" + normalizedColor[3] + normalizedColor[3], 16)
    };
  }
  if (normalizedColor.match(reducedRgbaHexRegex)) {
    var _alpha = parseFloat((parseInt("" + normalizedColor[4] + normalizedColor[4], 16) / 255).toFixed(2));
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[1], 16),
      green: parseInt("" + normalizedColor[2] + normalizedColor[2], 16),
      blue: parseInt("" + normalizedColor[3] + normalizedColor[3], 16),
      alpha: _alpha
    };
  }
  var rgbMatched = rgbRegex.exec(normalizedColor);
  if (rgbMatched) {
    return {
      red: parseInt("" + rgbMatched[1], 10),
      green: parseInt("" + rgbMatched[2], 10),
      blue: parseInt("" + rgbMatched[3], 10)
    };
  }
  var rgbaMatched = rgbaRegex.exec(normalizedColor.substring(0, 50));
  if (rgbaMatched) {
    return {
      red: parseInt("" + rgbaMatched[1], 10),
      green: parseInt("" + rgbaMatched[2], 10),
      blue: parseInt("" + rgbaMatched[3], 10),
      alpha: parseFloat("" + rgbaMatched[4]) > 1 ? parseFloat("" + rgbaMatched[4]) / 100 : parseFloat("" + rgbaMatched[4])
    };
  }
  var hslMatched = hslRegex.exec(normalizedColor);
  if (hslMatched) {
    var hue = parseInt("" + hslMatched[1], 10);
    var saturation = parseInt("" + hslMatched[2], 10) / 100;
    var lightness = parseInt("" + hslMatched[3], 10) / 100;
    var rgbColorString = "rgb(" + hslToRgb(hue, saturation, lightness) + ")";
    var hslRgbMatched = rgbRegex.exec(rgbColorString);
    if (!hslRgbMatched) {
      throw new PolishedError(4, normalizedColor, rgbColorString);
    }
    return {
      red: parseInt("" + hslRgbMatched[1], 10),
      green: parseInt("" + hslRgbMatched[2], 10),
      blue: parseInt("" + hslRgbMatched[3], 10)
    };
  }
  var hslaMatched = hslaRegex.exec(normalizedColor.substring(0, 50));
  if (hslaMatched) {
    var _hue = parseInt("" + hslaMatched[1], 10);
    var _saturation = parseInt("" + hslaMatched[2], 10) / 100;
    var _lightness = parseInt("" + hslaMatched[3], 10) / 100;
    var _rgbColorString = "rgb(" + hslToRgb(_hue, _saturation, _lightness) + ")";
    var _hslRgbMatched = rgbRegex.exec(_rgbColorString);
    if (!_hslRgbMatched) {
      throw new PolishedError(4, normalizedColor, _rgbColorString);
    }
    return {
      red: parseInt("" + _hslRgbMatched[1], 10),
      green: parseInt("" + _hslRgbMatched[2], 10),
      blue: parseInt("" + _hslRgbMatched[3], 10),
      alpha: parseFloat("" + hslaMatched[4]) > 1 ? parseFloat("" + hslaMatched[4]) / 100 : parseFloat("" + hslaMatched[4])
    };
  }
  throw new PolishedError(5);
}
function rgbToHsl(color) {
  var red2 = color.red / 255;
  var green2 = color.green / 255;
  var blue2 = color.blue / 255;
  var max3 = Math.max(red2, green2, blue2);
  var min3 = Math.min(red2, green2, blue2);
  var lightness = (max3 + min3) / 2;
  if (max3 === min3) {
    if (color.alpha !== void 0) {
      return {
        hue: 0,
        saturation: 0,
        lightness,
        alpha: color.alpha
      };
    } else {
      return {
        hue: 0,
        saturation: 0,
        lightness
      };
    }
  }
  var hue;
  var delta = max3 - min3;
  var saturation = lightness > 0.5 ? delta / (2 - max3 - min3) : delta / (max3 + min3);
  switch (max3) {
    case red2:
      hue = (green2 - blue2) / delta + (green2 < blue2 ? 6 : 0);
      break;
    case green2:
      hue = (blue2 - red2) / delta + 2;
      break;
    default:
      hue = (red2 - green2) / delta + 4;
      break;
  }
  hue *= 60;
  if (color.alpha !== void 0) {
    return {
      hue,
      saturation,
      lightness,
      alpha: color.alpha
    };
  }
  return {
    hue,
    saturation,
    lightness
  };
}
function parseToHsl(color) {
  return rgbToHsl(parseToRgb(color));
}
var reduceHexValue = function reduceHexValue2(value) {
  if (value.length === 7 && value[1] === value[2] && value[3] === value[4] && value[5] === value[6]) {
    return "#" + value[1] + value[3] + value[5];
  }
  return value;
};
var reduceHexValue$1 = reduceHexValue;
function numberToHex(value) {
  var hex = value.toString(16);
  return hex.length === 1 ? "0" + hex : hex;
}
function colorToHex(color) {
  return numberToHex(Math.round(color * 255));
}
function convertToHex(red2, green2, blue2) {
  return reduceHexValue$1("#" + colorToHex(red2) + colorToHex(green2) + colorToHex(blue2));
}
function hslToHex(hue, saturation, lightness) {
  return hslToRgb(hue, saturation, lightness, convertToHex);
}
function hsl(value, saturation, lightness) {
  if (typeof value === "number" && typeof saturation === "number" && typeof lightness === "number") {
    return hslToHex(value, saturation, lightness);
  } else if (typeof value === "object" && saturation === void 0 && lightness === void 0) {
    return hslToHex(value.hue, value.saturation, value.lightness);
  }
  throw new PolishedError(1);
}
function hsla(value, saturation, lightness, alpha) {
  if (typeof value === "number" && typeof saturation === "number" && typeof lightness === "number" && typeof alpha === "number") {
    return alpha >= 1 ? hslToHex(value, saturation, lightness) : "rgba(" + hslToRgb(value, saturation, lightness) + "," + alpha + ")";
  } else if (typeof value === "object" && saturation === void 0 && lightness === void 0 && alpha === void 0) {
    return value.alpha >= 1 ? hslToHex(value.hue, value.saturation, value.lightness) : "rgba(" + hslToRgb(value.hue, value.saturation, value.lightness) + "," + value.alpha + ")";
  }
  throw new PolishedError(2);
}
function rgb(value, green2, blue2) {
  if (typeof value === "number" && typeof green2 === "number" && typeof blue2 === "number") {
    return reduceHexValue$1("#" + numberToHex(value) + numberToHex(green2) + numberToHex(blue2));
  } else if (typeof value === "object" && green2 === void 0 && blue2 === void 0) {
    return reduceHexValue$1("#" + numberToHex(value.red) + numberToHex(value.green) + numberToHex(value.blue));
  }
  throw new PolishedError(6);
}
function rgba(firstValue, secondValue, thirdValue, fourthValue) {
  if (typeof firstValue === "string" && typeof secondValue === "number") {
    var rgbValue = parseToRgb(firstValue);
    return "rgba(" + rgbValue.red + "," + rgbValue.green + "," + rgbValue.blue + "," + secondValue + ")";
  } else if (typeof firstValue === "number" && typeof secondValue === "number" && typeof thirdValue === "number" && typeof fourthValue === "number") {
    return fourthValue >= 1 ? rgb(firstValue, secondValue, thirdValue) : "rgba(" + firstValue + "," + secondValue + "," + thirdValue + "," + fourthValue + ")";
  } else if (typeof firstValue === "object" && secondValue === void 0 && thirdValue === void 0 && fourthValue === void 0) {
    return firstValue.alpha >= 1 ? rgb(firstValue.red, firstValue.green, firstValue.blue) : "rgba(" + firstValue.red + "," + firstValue.green + "," + firstValue.blue + "," + firstValue.alpha + ")";
  }
  throw new PolishedError(7);
}
var isRgb = function isRgb2(color) {
  return typeof color.red === "number" && typeof color.green === "number" && typeof color.blue === "number" && (typeof color.alpha !== "number" || typeof color.alpha === "undefined");
};
var isRgba = function isRgba2(color) {
  return typeof color.red === "number" && typeof color.green === "number" && typeof color.blue === "number" && typeof color.alpha === "number";
};
var isHsl = function isHsl2(color) {
  return typeof color.hue === "number" && typeof color.saturation === "number" && typeof color.lightness === "number" && (typeof color.alpha !== "number" || typeof color.alpha === "undefined");
};
var isHsla = function isHsla2(color) {
  return typeof color.hue === "number" && typeof color.saturation === "number" && typeof color.lightness === "number" && typeof color.alpha === "number";
};
function toColorString(color) {
  if (typeof color !== "object")
    throw new PolishedError(8);
  if (isRgba(color))
    return rgba(color);
  if (isRgb(color))
    return rgb(color);
  if (isHsla(color))
    return hsla(color);
  if (isHsl(color))
    return hsl(color);
  throw new PolishedError(8);
}
function curried(f, length, acc) {
  return function fn() {
    var combined = acc.concat(Array.prototype.slice.call(arguments));
    return combined.length >= length ? f.apply(this, combined) : curried(f, length, combined);
  };
}
function curry(f) {
  return curried(f, f.length, []);
}
function adjustHue(degree, color) {
  if (color === "transparent")
    return color;
  var hslColor = parseToHsl(color);
  return toColorString(_extends({}, hslColor, {
    hue: hslColor.hue + parseFloat(degree)
  }));
}
var curriedAdjustHue = curry(adjustHue);
function guard(lowerBoundary, upperBoundary, value) {
  return Math.max(lowerBoundary, Math.min(upperBoundary, value));
}
function darken(amount, color) {
  if (color === "transparent")
    return color;
  var hslColor = parseToHsl(color);
  return toColorString(_extends({}, hslColor, {
    lightness: guard(0, 1, hslColor.lightness - parseFloat(amount))
  }));
}
var curriedDarken = curry(darken);
function desaturate(amount, color) {
  if (color === "transparent")
    return color;
  var hslColor = parseToHsl(color);
  return toColorString(_extends({}, hslColor, {
    saturation: guard(0, 1, hslColor.saturation - parseFloat(amount))
  }));
}
var curriedDesaturate = curry(desaturate);
function lighten(amount, color) {
  if (color === "transparent")
    return color;
  var hslColor = parseToHsl(color);
  return toColorString(_extends({}, hslColor, {
    lightness: guard(0, 1, hslColor.lightness + parseFloat(amount))
  }));
}
var curriedLighten = curry(lighten);
function mix(weight, color, otherColor) {
  if (color === "transparent")
    return otherColor;
  if (otherColor === "transparent")
    return color;
  if (weight === 0)
    return otherColor;
  var parsedColor1 = parseToRgb(color);
  var color1 = _extends({}, parsedColor1, {
    alpha: typeof parsedColor1.alpha === "number" ? parsedColor1.alpha : 1
  });
  var parsedColor2 = parseToRgb(otherColor);
  var color2 = _extends({}, parsedColor2, {
    alpha: typeof parsedColor2.alpha === "number" ? parsedColor2.alpha : 1
  });
  var alphaDelta = color1.alpha - color2.alpha;
  var x = parseFloat(weight) * 2 - 1;
  var y = x * alphaDelta === -1 ? x : x + alphaDelta;
  var z = 1 + x * alphaDelta;
  var weight1 = (y / z + 1) / 2;
  var weight2 = 1 - weight1;
  var mixedColor = {
    red: Math.floor(color1.red * weight1 + color2.red * weight2),
    green: Math.floor(color1.green * weight1 + color2.green * weight2),
    blue: Math.floor(color1.blue * weight1 + color2.blue * weight2),
    alpha: color1.alpha * parseFloat(weight) + color2.alpha * (1 - parseFloat(weight))
  };
  return rgba(mixedColor);
}
var curriedMix = curry(mix);
var mix$1 = curriedMix;
function opacify(amount, color) {
  if (color === "transparent")
    return color;
  var parsedColor = parseToRgb(color);
  var alpha = typeof parsedColor.alpha === "number" ? parsedColor.alpha : 1;
  var colorWithAlpha = _extends({}, parsedColor, {
    alpha: guard(0, 1, (alpha * 100 + parseFloat(amount) * 100) / 100)
  });
  return rgba(colorWithAlpha);
}
var curriedOpacify = curry(opacify);
function saturate(amount, color) {
  if (color === "transparent")
    return color;
  var hslColor = parseToHsl(color);
  return toColorString(_extends({}, hslColor, {
    saturation: guard(0, 1, hslColor.saturation + parseFloat(amount))
  }));
}
var curriedSaturate = curry(saturate);
function setHue(hue, color) {
  if (color === "transparent")
    return color;
  return toColorString(_extends({}, parseToHsl(color), {
    hue: parseFloat(hue)
  }));
}
var curriedSetHue = curry(setHue);
function setLightness(lightness, color) {
  if (color === "transparent")
    return color;
  return toColorString(_extends({}, parseToHsl(color), {
    lightness: parseFloat(lightness)
  }));
}
var curriedSetLightness = curry(setLightness);
function setSaturation(saturation, color) {
  if (color === "transparent")
    return color;
  return toColorString(_extends({}, parseToHsl(color), {
    saturation: parseFloat(saturation)
  }));
}
var curriedSetSaturation = curry(setSaturation);
function shade(percentage, color) {
  if (color === "transparent")
    return color;
  return mix$1(parseFloat(percentage), "rgb(0, 0, 0)", color);
}
var curriedShade = curry(shade);
function tint(percentage, color) {
  if (color === "transparent")
    return color;
  return mix$1(parseFloat(percentage), "rgb(255, 255, 255)", color);
}
var curriedTint = curry(tint);
function transparentize(amount, color) {
  if (color === "transparent")
    return color;
  var parsedColor = parseToRgb(color);
  var alpha = typeof parsedColor.alpha === "number" ? parsedColor.alpha : 1;
  var colorWithAlpha = _extends({}, parsedColor, {
    alpha: guard(0, 1, +(alpha * 100 - parseFloat(amount) * 100).toFixed(2) / 100)
  });
  return rgba(colorWithAlpha);
}
var curriedTransparentize = curry(transparentize);

// node_modules/@radix-ui/react-toast/dist/index.mjs
var import_react25 = __toESM(require_react(), 1);
var import_react_dom5 = __toESM(require_react_dom(), 1);

// node_modules/@radix-ui/react-collection/dist/index.mjs
var import_react24 = __toESM(require_react(), 1);
function $e02a7d9cb1dc128c$export$c74125a8e3af6bb2(name) {
  const PROVIDER_NAME = name + "CollectionProvider";
  const [createCollectionContext, createCollectionScope] = $c512c27ab02ef895$export$50c7b4e9d9f19c1(PROVIDER_NAME);
  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(PROVIDER_NAME, {
    collectionRef: {
      current: null
    },
    itemMap: /* @__PURE__ */ new Map()
  });
  const CollectionProvider = (props) => {
    const { scope, children } = props;
    const ref = import_react24.default.useRef(null);
    const itemMap = import_react24.default.useRef(/* @__PURE__ */ new Map()).current;
    return import_react24.default.createElement(CollectionProviderImpl, {
      scope,
      itemMap,
      collectionRef: ref
    }, children);
  };
  Object.assign(CollectionProvider, {
    displayName: PROVIDER_NAME
  });
  const COLLECTION_SLOT_NAME = name + "CollectionSlot";
  const CollectionSlot = import_react24.default.forwardRef((props, forwardedRef) => {
    const { scope, children } = props;
    const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);
    const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.collectionRef);
    return import_react24.default.createElement($5e63c961fc1ce211$export$8c6ed5c666ac1360, {
      ref: composedRefs
    }, children);
  });
  Object.assign(CollectionSlot, {
    displayName: COLLECTION_SLOT_NAME
  });
  const ITEM_SLOT_NAME = name + "CollectionItemSlot";
  const ITEM_DATA_ATTR = "data-radix-collection-item";
  const CollectionItemSlot = import_react24.default.forwardRef((props, forwardedRef) => {
    const { scope, children, ...itemData } = props;
    const ref = import_react24.default.useRef(null);
    const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
    const context = useCollectionContext(ITEM_SLOT_NAME, scope);
    import_react24.default.useEffect(() => {
      context.itemMap.set(ref, {
        ref,
        ...itemData
      });
      return () => void context.itemMap.delete(ref);
    });
    return import_react24.default.createElement($5e63c961fc1ce211$export$8c6ed5c666ac1360, {
      [ITEM_DATA_ATTR]: "",
      ref: composedRefs
    }, children);
  });
  Object.assign(CollectionItemSlot, {
    displayName: ITEM_SLOT_NAME
  });
  function useCollection(scope) {
    const context = useCollectionContext(name + "CollectionConsumer", scope);
    const getItems = import_react24.default.useCallback(() => {
      const collectionNode = context.collectionRef.current;
      if (!collectionNode)
        return [];
      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));
      const items = Array.from(context.itemMap.values());
      const orderedItems = items.sort(
        (a, b) => orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current)
      );
      return orderedItems;
    }, [
      context.collectionRef,
      context.itemMap
    ]);
    return getItems;
  }
  return [
    {
      Provider: CollectionProvider,
      Slot: CollectionSlot,
      ItemSlot: CollectionItemSlot
    },
    useCollection,
    createCollectionScope
  ];
}

// node_modules/@radix-ui/react-toast/dist/index.mjs
var $054eb8030ebde76e$var$PROVIDER_NAME = "ToastProvider";
var [$054eb8030ebde76e$var$Collection, $054eb8030ebde76e$var$useCollection, $054eb8030ebde76e$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2("Toast");
var [$054eb8030ebde76e$var$createToastContext, $054eb8030ebde76e$export$8a359da18fbc9073] = $c512c27ab02ef895$export$50c7b4e9d9f19c1("Toast", [
  $054eb8030ebde76e$var$createCollectionScope
]);
var [$054eb8030ebde76e$var$ToastProviderProvider, $054eb8030ebde76e$var$useToastProviderContext] = $054eb8030ebde76e$var$createToastContext($054eb8030ebde76e$var$PROVIDER_NAME);
var $054eb8030ebde76e$export$f5d03d415824e0e = (props) => {
  const { __scopeToast, label = "Notification", duration = 5e3, swipeDirection = "right", swipeThreshold = 50, children } = props;
  const [viewport, setViewport] = (0, import_react25.useState)(null);
  const [toastCount, setToastCount] = (0, import_react25.useState)(0);
  const isFocusedToastEscapeKeyDownRef = (0, import_react25.useRef)(false);
  const isClosePausedRef = (0, import_react25.useRef)(false);
  return (0, import_react25.createElement)($054eb8030ebde76e$var$Collection.Provider, {
    scope: __scopeToast
  }, (0, import_react25.createElement)($054eb8030ebde76e$var$ToastProviderProvider, {
    scope: __scopeToast,
    label,
    duration,
    swipeDirection,
    swipeThreshold,
    toastCount,
    viewport,
    onViewportChange: setViewport,
    onToastAdd: (0, import_react25.useCallback)(
      () => setToastCount(
        (prevCount) => prevCount + 1
      ),
      []
    ),
    onToastRemove: (0, import_react25.useCallback)(
      () => setToastCount(
        (prevCount) => prevCount - 1
      ),
      []
    ),
    isFocusedToastEscapeKeyDownRef,
    isClosePausedRef
  }, children));
};
$054eb8030ebde76e$export$f5d03d415824e0e.propTypes = {
  label(props) {
    if (props.label && typeof props.label === "string" && !props.label.trim()) {
      const error = `Invalid prop \`label\` supplied to \`${$054eb8030ebde76e$var$PROVIDER_NAME}\`. Expected non-empty \`string\`.`;
      return new Error(error);
    }
    return null;
  }
};
Object.assign($054eb8030ebde76e$export$f5d03d415824e0e, {
  displayName: $054eb8030ebde76e$var$PROVIDER_NAME
});
var $054eb8030ebde76e$var$VIEWPORT_NAME = "ToastViewport";
var $054eb8030ebde76e$var$VIEWPORT_DEFAULT_HOTKEY = [
  "F8"
];
var $054eb8030ebde76e$var$VIEWPORT_PAUSE = "toast.viewportPause";
var $054eb8030ebde76e$var$VIEWPORT_RESUME = "toast.viewportResume";
var $054eb8030ebde76e$export$6192c2425ecfd989 = (0, import_react25.forwardRef)((props, forwardedRef) => {
  const { __scopeToast, hotkey = $054eb8030ebde76e$var$VIEWPORT_DEFAULT_HOTKEY, label = "Notifications ({hotkey})", ...viewportProps } = props;
  const context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$VIEWPORT_NAME, __scopeToast);
  const getItems = $054eb8030ebde76e$var$useCollection(__scopeToast);
  const wrapperRef = (0, import_react25.useRef)(null);
  const headFocusProxyRef = (0, import_react25.useRef)(null);
  const tailFocusProxyRef = (0, import_react25.useRef)(null);
  const ref = (0, import_react25.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onViewportChange);
  const hotkeyLabel = hotkey.join("+").replace(/Key/g, "").replace(/Digit/g, "");
  const hasToasts = context.toastCount > 0;
  (0, import_react25.useEffect)(() => {
    const handleKeyDown = (event) => {
      var _ref$current;
      const isHotkeyPressed = hotkey.every(
        (key) => event[key] || event.code === key
      );
      if (isHotkeyPressed)
        (_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.focus();
    };
    document.addEventListener("keydown", handleKeyDown);
    return () => document.removeEventListener("keydown", handleKeyDown);
  }, [
    hotkey
  ]);
  (0, import_react25.useEffect)(() => {
    const wrapper = wrapperRef.current;
    const viewport = ref.current;
    if (hasToasts && wrapper && viewport) {
      const handlePause = () => {
        if (!context.isClosePausedRef.current) {
          const pauseEvent = new CustomEvent($054eb8030ebde76e$var$VIEWPORT_PAUSE);
          viewport.dispatchEvent(pauseEvent);
          context.isClosePausedRef.current = true;
        }
      };
      const handleResume = () => {
        if (context.isClosePausedRef.current) {
          const resumeEvent = new CustomEvent($054eb8030ebde76e$var$VIEWPORT_RESUME);
          viewport.dispatchEvent(resumeEvent);
          context.isClosePausedRef.current = false;
        }
      };
      const handleFocusOutResume = (event) => {
        const isFocusMovingOutside = !wrapper.contains(event.relatedTarget);
        if (isFocusMovingOutside)
          handleResume();
      };
      const handlePointerLeaveResume = () => {
        const isFocusInside = wrapper.contains(document.activeElement);
        if (!isFocusInside)
          handleResume();
      };
      wrapper.addEventListener("focusin", handlePause);
      wrapper.addEventListener("focusout", handleFocusOutResume);
      wrapper.addEventListener("pointermove", handlePause);
      wrapper.addEventListener("pointerleave", handlePointerLeaveResume);
      window.addEventListener("blur", handlePause);
      window.addEventListener("focus", handleResume);
      return () => {
        wrapper.removeEventListener("focusin", handlePause);
        wrapper.removeEventListener("focusout", handleFocusOutResume);
        wrapper.removeEventListener("pointermove", handlePause);
        wrapper.removeEventListener("pointerleave", handlePointerLeaveResume);
        window.removeEventListener("blur", handlePause);
        window.removeEventListener("focus", handleResume);
      };
    }
  }, [
    hasToasts,
    context.isClosePausedRef
  ]);
  const getSortedTabbableCandidates = (0, import_react25.useCallback)(({ tabbingDirection }) => {
    const toastItems = getItems();
    const tabbableCandidates = toastItems.map((toastItem) => {
      const toastNode = toastItem.ref.current;
      const toastTabbableCandidates = [
        toastNode,
        ...$054eb8030ebde76e$var$getTabbableCandidates(toastNode)
      ];
      return tabbingDirection === "forwards" ? toastTabbableCandidates : toastTabbableCandidates.reverse();
    });
    return (tabbingDirection === "forwards" ? tabbableCandidates.reverse() : tabbableCandidates).flat();
  }, [
    getItems
  ]);
  (0, import_react25.useEffect)(() => {
    const viewport = ref.current;
    if (viewport) {
      const handleKeyDown = (event) => {
        const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;
        const isTabKey = event.key === "Tab" && !isMetaKey;
        if (isTabKey) {
          const focusedElement = document.activeElement;
          const isTabbingBackwards = event.shiftKey;
          const targetIsViewport = event.target === viewport;
          if (targetIsViewport && isTabbingBackwards) {
            var _headFocusProxyRef$cu;
            (_headFocusProxyRef$cu = headFocusProxyRef.current) === null || _headFocusProxyRef$cu === void 0 || _headFocusProxyRef$cu.focus();
            return;
          }
          const tabbingDirection = isTabbingBackwards ? "backwards" : "forwards";
          const sortedCandidates = getSortedTabbableCandidates({
            tabbingDirection
          });
          const index2 = sortedCandidates.findIndex(
            (candidate) => candidate === focusedElement
          );
          if ($054eb8030ebde76e$var$focusFirst(sortedCandidates.slice(index2 + 1)))
            event.preventDefault();
          else {
            var _headFocusProxyRef$cu2, _tailFocusProxyRef$cu;
            isTabbingBackwards ? (_headFocusProxyRef$cu2 = headFocusProxyRef.current) === null || _headFocusProxyRef$cu2 === void 0 || _headFocusProxyRef$cu2.focus() : (_tailFocusProxyRef$cu = tailFocusProxyRef.current) === null || _tailFocusProxyRef$cu === void 0 || _tailFocusProxyRef$cu.focus();
          }
        }
      };
      viewport.addEventListener("keydown", handleKeyDown);
      return () => viewport.removeEventListener("keydown", handleKeyDown);
    }
  }, [
    getItems,
    getSortedTabbableCandidates
  ]);
  return (0, import_react25.createElement)($5cb92bef7577960e$export$aecb2ddcb55c95be, {
    ref: wrapperRef,
    role: "region",
    "aria-label": label.replace("{hotkey}", hotkeyLabel),
    tabIndex: -1,
    style: {
      pointerEvents: hasToasts ? void 0 : "none"
    }
  }, hasToasts && (0, import_react25.createElement)($054eb8030ebde76e$var$FocusProxy, {
    ref: headFocusProxyRef,
    onFocusFromOutsideViewport: () => {
      const tabbableCandidates = getSortedTabbableCandidates({
        tabbingDirection: "forwards"
      });
      $054eb8030ebde76e$var$focusFirst(tabbableCandidates);
    }
  }), (0, import_react25.createElement)($054eb8030ebde76e$var$Collection.Slot, {
    scope: __scopeToast
  }, (0, import_react25.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.ol, _extends({
    tabIndex: -1
  }, viewportProps, {
    ref: composedRefs
  }))), hasToasts && (0, import_react25.createElement)($054eb8030ebde76e$var$FocusProxy, {
    ref: tailFocusProxyRef,
    onFocusFromOutsideViewport: () => {
      const tabbableCandidates = getSortedTabbableCandidates({
        tabbingDirection: "backwards"
      });
      $054eb8030ebde76e$var$focusFirst(tabbableCandidates);
    }
  }));
});
Object.assign($054eb8030ebde76e$export$6192c2425ecfd989, {
  displayName: $054eb8030ebde76e$var$VIEWPORT_NAME
});
var $054eb8030ebde76e$var$FOCUS_PROXY_NAME = "ToastFocusProxy";
var $054eb8030ebde76e$var$FocusProxy = (0, import_react25.forwardRef)((props, forwardedRef) => {
  const { __scopeToast, onFocusFromOutsideViewport, ...proxyProps } = props;
  const context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$FOCUS_PROXY_NAME, __scopeToast);
  return (0, import_react25.createElement)($ea1ef594cf570d83$export$439d29a4e110a164, _extends({
    "aria-hidden": true,
    tabIndex: 0
  }, proxyProps, {
    ref: forwardedRef,
    style: {
      position: "fixed"
    },
    onFocus: (event) => {
      var _context$viewport;
      const prevFocusedElement = event.relatedTarget;
      const isFocusFromOutsideViewport = !((_context$viewport = context.viewport) !== null && _context$viewport !== void 0 && _context$viewport.contains(prevFocusedElement));
      if (isFocusFromOutsideViewport)
        onFocusFromOutsideViewport();
    }
  }));
});
Object.assign($054eb8030ebde76e$var$FocusProxy, {
  displayName: $054eb8030ebde76e$var$FOCUS_PROXY_NAME
});
var $054eb8030ebde76e$var$TOAST_NAME = "Toast";
var $054eb8030ebde76e$var$TOAST_SWIPE_START = "toast.swipeStart";
var $054eb8030ebde76e$var$TOAST_SWIPE_MOVE = "toast.swipeMove";
var $054eb8030ebde76e$var$TOAST_SWIPE_CANCEL = "toast.swipeCancel";
var $054eb8030ebde76e$var$TOAST_SWIPE_END = "toast.swipeEnd";
var $054eb8030ebde76e$export$8d8dc7d5f743331b = (0, import_react25.forwardRef)((props, forwardedRef) => {
  const { forceMount, open: openProp, defaultOpen, onOpenChange, ...toastProps } = props;
  const [open2 = true, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return (0, import_react25.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || open2
  }, (0, import_react25.createElement)($054eb8030ebde76e$var$ToastImpl, _extends({
    open: open2
  }, toastProps, {
    ref: forwardedRef,
    onClose: () => setOpen(false),
    onPause: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(props.onPause),
    onResume: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(props.onResume),
    onSwipeStart: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeStart, (event) => {
      event.currentTarget.setAttribute("data-swipe", "start");
    }),
    onSwipeMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeMove, (event) => {
      const { x, y } = event.detail.delta;
      event.currentTarget.setAttribute("data-swipe", "move");
      event.currentTarget.style.setProperty("--radix-toast-swipe-move-x", `${x}px`);
      event.currentTarget.style.setProperty("--radix-toast-swipe-move-y", `${y}px`);
    }),
    onSwipeCancel: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeCancel, (event) => {
      event.currentTarget.setAttribute("data-swipe", "cancel");
      event.currentTarget.style.removeProperty("--radix-toast-swipe-move-x");
      event.currentTarget.style.removeProperty("--radix-toast-swipe-move-y");
      event.currentTarget.style.removeProperty("--radix-toast-swipe-end-x");
      event.currentTarget.style.removeProperty("--radix-toast-swipe-end-y");
    }),
    onSwipeEnd: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeEnd, (event) => {
      const { x, y } = event.detail.delta;
      event.currentTarget.setAttribute("data-swipe", "end");
      event.currentTarget.style.removeProperty("--radix-toast-swipe-move-x");
      event.currentTarget.style.removeProperty("--radix-toast-swipe-move-y");
      event.currentTarget.style.setProperty("--radix-toast-swipe-end-x", `${x}px`);
      event.currentTarget.style.setProperty("--radix-toast-swipe-end-y", `${y}px`);
      setOpen(false);
    })
  })));
});
Object.assign($054eb8030ebde76e$export$8d8dc7d5f743331b, {
  displayName: $054eb8030ebde76e$var$TOAST_NAME
});
var [$054eb8030ebde76e$var$ToastInteractiveProvider, $054eb8030ebde76e$var$useToastInteractiveContext] = $054eb8030ebde76e$var$createToastContext($054eb8030ebde76e$var$TOAST_NAME, {
  onClose() {
  }
});
var $054eb8030ebde76e$var$ToastImpl = (0, import_react25.forwardRef)((props, forwardedRef) => {
  const { __scopeToast, type = "foreground", duration: durationProp, open: open2, onClose, onEscapeKeyDown, onPause, onResume, onSwipeStart, onSwipeMove, onSwipeCancel, onSwipeEnd, ...toastProps } = props;
  const context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$TOAST_NAME, __scopeToast);
  const [node1, setNode] = (0, import_react25.useState)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setNode(node)
  );
  const pointerStartRef = (0, import_react25.useRef)(null);
  const swipeDeltaRef = (0, import_react25.useRef)(null);
  const duration1 = durationProp || context.duration;
  const closeTimerStartTimeRef = (0, import_react25.useRef)(0);
  const closeTimerRemainingTimeRef = (0, import_react25.useRef)(duration1);
  const closeTimerRef = (0, import_react25.useRef)(0);
  const { onToastAdd, onToastRemove } = context;
  const handleClose = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(() => {
    var _context$viewport2;
    const isFocusInToast = node1 === null || node1 === void 0 ? void 0 : node1.contains(document.activeElement);
    if (isFocusInToast)
      (_context$viewport2 = context.viewport) === null || _context$viewport2 === void 0 || _context$viewport2.focus();
    onClose();
  });
  const startTimer = (0, import_react25.useCallback)((duration) => {
    if (!duration || duration === Infinity)
      return;
    window.clearTimeout(closeTimerRef.current);
    closeTimerStartTimeRef.current = new Date().getTime();
    closeTimerRef.current = window.setTimeout(handleClose, duration);
  }, [
    handleClose
  ]);
  (0, import_react25.useEffect)(() => {
    const viewport = context.viewport;
    if (viewport) {
      const handleResume = () => {
        startTimer(closeTimerRemainingTimeRef.current);
        onResume === null || onResume === void 0 || onResume();
      };
      const handlePause = () => {
        const elapsedTime = new Date().getTime() - closeTimerStartTimeRef.current;
        closeTimerRemainingTimeRef.current = closeTimerRemainingTimeRef.current - elapsedTime;
        window.clearTimeout(closeTimerRef.current);
        onPause === null || onPause === void 0 || onPause();
      };
      viewport.addEventListener($054eb8030ebde76e$var$VIEWPORT_PAUSE, handlePause);
      viewport.addEventListener($054eb8030ebde76e$var$VIEWPORT_RESUME, handleResume);
      return () => {
        viewport.removeEventListener($054eb8030ebde76e$var$VIEWPORT_PAUSE, handlePause);
        viewport.removeEventListener($054eb8030ebde76e$var$VIEWPORT_RESUME, handleResume);
      };
    }
  }, [
    context.viewport,
    duration1,
    onPause,
    onResume,
    startTimer
  ]);
  (0, import_react25.useEffect)(() => {
    if (open2 && !context.isClosePausedRef.current)
      startTimer(duration1);
  }, [
    open2,
    duration1,
    context.isClosePausedRef,
    startTimer
  ]);
  (0, import_react25.useEffect)(() => {
    onToastAdd();
    return () => onToastRemove();
  }, [
    onToastAdd,
    onToastRemove
  ]);
  const announceTextContent = (0, import_react25.useMemo)(() => {
    return node1 ? $054eb8030ebde76e$var$getAnnounceTextContent(node1) : null;
  }, [
    node1
  ]);
  if (!context.viewport)
    return null;
  return (0, import_react25.createElement)(import_react25.Fragment, null, announceTextContent && (0, import_react25.createElement)($054eb8030ebde76e$var$ToastAnnounce, {
    __scopeToast,
    role: "status",
    "aria-live": type === "foreground" ? "assertive" : "polite",
    "aria-atomic": true
  }, announceTextContent), (0, import_react25.createElement)($054eb8030ebde76e$var$ToastInteractiveProvider, {
    scope: __scopeToast,
    onClose: handleClose
  }, (0, import_react_dom5.createPortal)((0, import_react25.createElement)($054eb8030ebde76e$var$Collection.ItemSlot, {
    scope: __scopeToast
  }, (0, import_react25.createElement)($5cb92bef7577960e$export$be92b6f5f03c0fe9, {
    asChild: true,
    onEscapeKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(onEscapeKeyDown, () => {
      if (!context.isFocusedToastEscapeKeyDownRef.current)
        handleClose();
      context.isFocusedToastEscapeKeyDownRef.current = false;
    })
  }, (0, import_react25.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.li, _extends({
    role: "status",
    "aria-live": "off",
    "aria-atomic": true,
    tabIndex: 0,
    "data-state": open2 ? "open" : "closed",
    "data-swipe-direction": context.swipeDirection
  }, toastProps, {
    ref: composedRefs,
    style: {
      userSelect: "none",
      touchAction: "none",
      ...props.style
    },
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      if (event.key !== "Escape")
        return;
      onEscapeKeyDown === null || onEscapeKeyDown === void 0 || onEscapeKeyDown(event.nativeEvent);
      if (!event.nativeEvent.defaultPrevented) {
        context.isFocusedToastEscapeKeyDownRef.current = true;
        handleClose();
      }
    }),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, (event) => {
      if (event.button !== 0)
        return;
      pointerStartRef.current = {
        x: event.clientX,
        y: event.clientY
      };
    }),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, (event) => {
      if (!pointerStartRef.current)
        return;
      const x = event.clientX - pointerStartRef.current.x;
      const y = event.clientY - pointerStartRef.current.y;
      const hasSwipeMoveStarted = Boolean(swipeDeltaRef.current);
      const isHorizontalSwipe = [
        "left",
        "right"
      ].includes(context.swipeDirection);
      const clamp2 = [
        "left",
        "up"
      ].includes(context.swipeDirection) ? Math.min : Math.max;
      const clampedX = isHorizontalSwipe ? clamp2(0, x) : 0;
      const clampedY = !isHorizontalSwipe ? clamp2(0, y) : 0;
      const moveStartBuffer = event.pointerType === "touch" ? 10 : 2;
      const delta = {
        x: clampedX,
        y: clampedY
      };
      const eventDetail = {
        originalEvent: event,
        delta
      };
      if (hasSwipeMoveStarted) {
        swipeDeltaRef.current = delta;
        $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_MOVE, onSwipeMove, eventDetail, {
          discrete: false
        });
      } else if ($054eb8030ebde76e$var$isDeltaInDirection(delta, context.swipeDirection, moveStartBuffer)) {
        swipeDeltaRef.current = delta;
        $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_START, onSwipeStart, eventDetail, {
          discrete: false
        });
        event.target.setPointerCapture(event.pointerId);
      } else if (Math.abs(x) > moveStartBuffer || Math.abs(y) > moveStartBuffer)
        pointerStartRef.current = null;
    }),
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerUp, (event1) => {
      const delta = swipeDeltaRef.current;
      const target = event1.target;
      if (target.hasPointerCapture(event1.pointerId))
        target.releasePointerCapture(event1.pointerId);
      swipeDeltaRef.current = null;
      pointerStartRef.current = null;
      if (delta) {
        const toast = event1.currentTarget;
        const eventDetail = {
          originalEvent: event1,
          delta
        };
        if ($054eb8030ebde76e$var$isDeltaInDirection(delta, context.swipeDirection, context.swipeThreshold))
          $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_END, onSwipeEnd, eventDetail, {
            discrete: true
          });
        else
          $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_CANCEL, onSwipeCancel, eventDetail, {
            discrete: true
          });
        toast.addEventListener(
          "click",
          (event) => event.preventDefault(),
          {
            once: true
          }
        );
      }
    })
  })))), context.viewport)));
});
$054eb8030ebde76e$var$ToastImpl.propTypes = {
  type(props) {
    if (props.type && ![
      "foreground",
      "background"
    ].includes(props.type)) {
      const error = `Invalid prop \`type\` supplied to \`${$054eb8030ebde76e$var$TOAST_NAME}\`. Expected \`foreground | background\`.`;
      return new Error(error);
    }
    return null;
  }
};
var $054eb8030ebde76e$var$ToastAnnounce = (props) => {
  const { __scopeToast, children, ...announceProps } = props;
  const context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$TOAST_NAME, __scopeToast);
  const [renderAnnounceText, setRenderAnnounceText] = (0, import_react25.useState)(false);
  const [isAnnounced, setIsAnnounced] = (0, import_react25.useState)(false);
  $054eb8030ebde76e$var$useNextFrame(
    () => setRenderAnnounceText(true)
  );
  (0, import_react25.useEffect)(() => {
    const timer = window.setTimeout(
      () => setIsAnnounced(true),
      1e3
    );
    return () => window.clearTimeout(timer);
  }, []);
  return isAnnounced ? null : (0, import_react25.createElement)($f1701beae083dbae$export$602eac185826482c, {
    asChild: true
  }, (0, import_react25.createElement)($ea1ef594cf570d83$export$439d29a4e110a164, announceProps, renderAnnounceText && (0, import_react25.createElement)(import_react25.Fragment, null, context.label, " ", children)));
};
var $054eb8030ebde76e$var$TITLE_NAME = "ToastTitle";
var $054eb8030ebde76e$export$16d42d7c29b95a4 = (0, import_react25.forwardRef)((props, forwardedRef) => {
  const { __scopeToast, ...titleProps } = props;
  return (0, import_react25.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, titleProps, {
    ref: forwardedRef
  }));
});
Object.assign($054eb8030ebde76e$export$16d42d7c29b95a4, {
  displayName: $054eb8030ebde76e$var$TITLE_NAME
});
var $054eb8030ebde76e$var$DESCRIPTION_NAME = "ToastDescription";
var $054eb8030ebde76e$export$ecddd96c53621d9a = (0, import_react25.forwardRef)((props, forwardedRef) => {
  const { __scopeToast, ...descriptionProps } = props;
  return (0, import_react25.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, descriptionProps, {
    ref: forwardedRef
  }));
});
Object.assign($054eb8030ebde76e$export$ecddd96c53621d9a, {
  displayName: $054eb8030ebde76e$var$DESCRIPTION_NAME
});
var $054eb8030ebde76e$var$ACTION_NAME = "ToastAction";
var $054eb8030ebde76e$export$3019feecfda683d2 = (0, import_react25.forwardRef)((props, forwardedRef) => {
  const { altText, ...actionProps } = props;
  if (!altText)
    return null;
  return (0, import_react25.createElement)($054eb8030ebde76e$var$ToastAnnounceExclude, {
    altText,
    asChild: true
  }, (0, import_react25.createElement)($054eb8030ebde76e$export$811e70f61c205839, _extends({}, actionProps, {
    ref: forwardedRef
  })));
});
$054eb8030ebde76e$export$3019feecfda683d2.propTypes = {
  altText(props) {
    if (!props.altText)
      return new Error(`Missing prop \`altText\` expected on \`${$054eb8030ebde76e$var$ACTION_NAME}\``);
    return null;
  }
};
Object.assign($054eb8030ebde76e$export$3019feecfda683d2, {
  displayName: $054eb8030ebde76e$var$ACTION_NAME
});
var $054eb8030ebde76e$var$CLOSE_NAME = "ToastClose";
var $054eb8030ebde76e$export$811e70f61c205839 = (0, import_react25.forwardRef)((props, forwardedRef) => {
  const { __scopeToast, ...closeProps } = props;
  const interactiveContext = $054eb8030ebde76e$var$useToastInteractiveContext($054eb8030ebde76e$var$CLOSE_NAME, __scopeToast);
  return (0, import_react25.createElement)($054eb8030ebde76e$var$ToastAnnounceExclude, {
    asChild: true
  }, (0, import_react25.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button"
  }, closeProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, interactiveContext.onClose)
  })));
});
Object.assign($054eb8030ebde76e$export$811e70f61c205839, {
  displayName: $054eb8030ebde76e$var$CLOSE_NAME
});
var $054eb8030ebde76e$var$ToastAnnounceExclude = (0, import_react25.forwardRef)((props, forwardedRef) => {
  const { __scopeToast, altText, ...announceExcludeProps } = props;
  return (0, import_react25.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    "data-radix-toast-announce-exclude": "",
    "data-radix-toast-announce-alt": altText || void 0
  }, announceExcludeProps, {
    ref: forwardedRef
  }));
});
function $054eb8030ebde76e$var$getAnnounceTextContent(container) {
  const textContent = [];
  const childNodes = Array.from(container.childNodes);
  childNodes.forEach((node) => {
    if (node.nodeType === node.TEXT_NODE && node.textContent)
      textContent.push(node.textContent);
    if ($054eb8030ebde76e$var$isHTMLElement(node)) {
      const isHidden = node.ariaHidden || node.hidden || node.style.display === "none";
      const isExcluded = node.dataset.radixToastAnnounceExclude === "";
      if (!isHidden) {
        if (isExcluded) {
          const altText = node.dataset.radixToastAnnounceAlt;
          if (altText)
            textContent.push(altText);
        } else
          textContent.push(...$054eb8030ebde76e$var$getAnnounceTextContent(node));
      }
    }
  });
  return textContent;
}
function $054eb8030ebde76e$var$handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
  const currentTarget = detail.originalEvent.currentTarget;
  const event = new CustomEvent(name, {
    bubbles: true,
    cancelable: true,
    detail
  });
  if (handler)
    currentTarget.addEventListener(name, handler, {
      once: true
    });
  if (discrete)
    $8927f6f2acc4f386$export$6d1a0317bde7de7f(currentTarget, event);
  else
    currentTarget.dispatchEvent(event);
}
var $054eb8030ebde76e$var$isDeltaInDirection = (delta, direction, threshold = 0) => {
  const deltaX = Math.abs(delta.x);
  const deltaY = Math.abs(delta.y);
  const isDeltaX = deltaX > deltaY;
  if (direction === "left" || direction === "right")
    return isDeltaX && deltaX > threshold;
  else
    return !isDeltaX && deltaY > threshold;
};
function $054eb8030ebde76e$var$useNextFrame(callback = () => {
}) {
  const fn = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    let raf1 = 0;
    let raf2 = 0;
    raf1 = window.requestAnimationFrame(
      () => raf2 = window.requestAnimationFrame(fn)
    );
    return () => {
      window.cancelAnimationFrame(raf1);
      window.cancelAnimationFrame(raf2);
    };
  }, [
    fn
  ]);
}
function $054eb8030ebde76e$var$isHTMLElement(node) {
  return node.nodeType === node.ELEMENT_NODE;
}
function $054eb8030ebde76e$var$getTabbableCandidates(container) {
  const nodes = [];
  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      if (node.disabled || node.hidden || isHiddenInput)
        return NodeFilter.FILTER_SKIP;
      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  while (walker.nextNode())
    nodes.push(walker.currentNode);
  return nodes;
}
function $054eb8030ebde76e$var$focusFirst(candidates) {
  const previouslyFocusedElement = document.activeElement;
  return candidates.some((candidate) => {
    if (candidate === previouslyFocusedElement)
      return true;
    candidate.focus();
    return document.activeElement !== previouslyFocusedElement;
  });
}
var $054eb8030ebde76e$export$2881499e37b75b9a = $054eb8030ebde76e$export$f5d03d415824e0e;
var $054eb8030ebde76e$export$d5c6c08dc2d3ca7 = $054eb8030ebde76e$export$6192c2425ecfd989;
var $054eb8030ebde76e$export$be92b6f5f03c0fe9 = $054eb8030ebde76e$export$8d8dc7d5f743331b;
var $054eb8030ebde76e$export$f99233281efd08a0 = $054eb8030ebde76e$export$16d42d7c29b95a4;
var $054eb8030ebde76e$export$393edc798c47379d = $054eb8030ebde76e$export$ecddd96c53621d9a;
var $054eb8030ebde76e$export$e19cd5f9376f8cee = $054eb8030ebde76e$export$3019feecfda683d2;
var $054eb8030ebde76e$export$f39c2d165cd861fe = $054eb8030ebde76e$export$811e70f61c205839;

// node_modules/react-hook-form/dist/index.esm.mjs
var index_esm_exports = {};
__export(index_esm_exports, {
  Controller: () => Controller,
  Form: () => Form,
  FormProvider: () => FormProvider,
  appendErrors: () => appendErrors,
  get: () => get,
  set: () => set,
  useController: () => useController,
  useFieldArray: () => useFieldArray,
  useForm: () => useForm,
  useFormContext: () => useFormContext,
  useFormState: () => useFormState,
  useWatch: () => useWatch
});
var import_react26 = __toESM(require_react(), 1);
var isCheckBoxInput = (element) => element.type === "checkbox";
var isDateObject = (value) => value instanceof Date;
var isNullOrUndefined = (value) => value == null;
var isObjectType = (value) => typeof value === "object";
var isObject = (value) => !isNullOrUndefined(value) && !Array.isArray(value) && isObjectType(value) && !isDateObject(value);
var getEventValue = (event) => isObject(event) && event.target ? isCheckBoxInput(event.target) ? event.target.checked : event.target.value : event;
var getNodeParentName = (name) => name.substring(0, name.search(/\.\d+(\.|$)/)) || name;
var isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));
var isPlainObject = (tempObject) => {
  const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;
  return isObject(prototypeCopy) && prototypeCopy.hasOwnProperty("isPrototypeOf");
};
var isWeb = typeof window !== "undefined" && typeof window.HTMLElement !== "undefined" && typeof document !== "undefined";
function cloneObject(data2) {
  let copy;
  const isArray = Array.isArray(data2);
  if (data2 instanceof Date) {
    copy = new Date(data2);
  } else if (data2 instanceof Set) {
    copy = new Set(data2);
  } else if (!(isWeb && (data2 instanceof Blob || data2 instanceof FileList)) && (isArray || isObject(data2))) {
    copy = isArray ? [] : {};
    if (!isArray && !isPlainObject(data2)) {
      copy = data2;
    } else {
      for (const key in data2) {
        if (data2.hasOwnProperty(key)) {
          copy[key] = cloneObject(data2[key]);
        }
      }
    }
  } else {
    return data2;
  }
  return copy;
}
var compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];
var isUndefined = (val) => val === void 0;
var get = (obj, path, defaultValue) => {
  if (!path || !isObject(obj)) {
    return defaultValue;
  }
  const result = compact(path.split(/[,[\].]+?/)).reduce((result2, key) => isNullOrUndefined(result2) ? result2 : result2[key], obj);
  return isUndefined(result) || result === obj ? isUndefined(obj[path]) ? defaultValue : obj[path] : result;
};
var EVENTS = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
};
var VALIDATION_MODE = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
};
var INPUT_VALIDATION_RULES = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
};
var HookFormContext = import_react26.default.createContext(null);
var useFormContext = () => import_react26.default.useContext(HookFormContext);
var FormProvider = (props) => {
  const { children, ...data2 } = props;
  return import_react26.default.createElement(HookFormContext.Provider, { value: data2 }, children);
};
var getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {
  const result = {
    defaultValues: control._defaultValues
  };
  for (const key in formState) {
    Object.defineProperty(result, key, {
      get: () => {
        const _key = key;
        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {
          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;
        }
        localProxyFormState && (localProxyFormState[_key] = true);
        return formState[_key];
      }
    });
  }
  return result;
};
var isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;
var shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {
  updateFormState(formStateData);
  const { name, ...formState } = formStateData;
  return isEmptyObject(formState) || Object.keys(formState).length >= Object.keys(_proxyFormState).length || Object.keys(formState).find((key) => _proxyFormState[key] === (!isRoot || VALIDATION_MODE.all));
};
var convertToArrayPayload = (value) => Array.isArray(value) ? value : [value];
var shouldSubscribeByName = (name, signalName, exact) => exact && signalName ? name === signalName : !name || !signalName || name === signalName || convertToArrayPayload(name).some((currentName) => currentName && (currentName.startsWith(signalName) || signalName.startsWith(currentName)));
function useSubscribe(props) {
  const _props = import_react26.default.useRef(props);
  _props.current = props;
  import_react26.default.useEffect(() => {
    const subscription = !props.disabled && _props.current.subject && _props.current.subject.subscribe({
      next: _props.current.next
    });
    return () => {
      subscription && subscription.unsubscribe();
    };
  }, [props.disabled]);
}
function useFormState(props) {
  const methods = useFormContext();
  const { control = methods.control, disabled, name, exact } = props || {};
  const [formState, updateFormState] = import_react26.default.useState(control._formState);
  const _mounted = import_react26.default.useRef(true);
  const _localProxyFormState = import_react26.default.useRef({
    isDirty: false,
    isLoading: false,
    dirtyFields: false,
    touchedFields: false,
    isValidating: false,
    isValid: false,
    errors: false
  });
  const _name = import_react26.default.useRef(name);
  _name.current = name;
  useSubscribe({
    disabled,
    next: (value) => _mounted.current && shouldSubscribeByName(_name.current, value.name, exact) && shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) && updateFormState({
      ...control._formState,
      ...value
    }),
    subject: control._subjects.state
  });
  import_react26.default.useEffect(() => {
    _mounted.current = true;
    _localProxyFormState.current.isValid && control._updateValid(true);
    return () => {
      _mounted.current = false;
    };
  }, [control]);
  return getProxyFormState(formState, control, _localProxyFormState.current, false);
}
var isString = (value) => typeof value === "string";
var generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {
  if (isString(names)) {
    isGlobal && _names.watch.add(names);
    return get(formValues, names, defaultValue);
  }
  if (Array.isArray(names)) {
    return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));
  }
  isGlobal && (_names.watchAll = true);
  return formValues;
};
function useWatch(props) {
  const methods = useFormContext();
  const { control = methods.control, name, defaultValue, disabled, exact } = props || {};
  const _name = import_react26.default.useRef(name);
  _name.current = name;
  useSubscribe({
    disabled,
    subject: control._subjects.values,
    next: (formState) => {
      if (shouldSubscribeByName(_name.current, formState.name, exact)) {
        updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));
      }
    }
  });
  const [value, updateValue] = import_react26.default.useState(control._getWatch(name, defaultValue));
  import_react26.default.useEffect(() => control._removeUnmounted());
  return value;
}
var isKey = (value) => /^\w*$/.test(value);
var stringToPath = (input) => compact(input.replace(/["|']|\]/g, "").split(/\.|\[/));
function set(object, path, value) {
  let index2 = -1;
  const tempPath = isKey(path) ? [path] : stringToPath(path);
  const length = tempPath.length;
  const lastIndex = length - 1;
  while (++index2 < length) {
    const key = tempPath[index2];
    let newValue = value;
    if (index2 !== lastIndex) {
      const objValue = object[key];
      newValue = isObject(objValue) || Array.isArray(objValue) ? objValue : !isNaN(+tempPath[index2 + 1]) ? [] : {};
    }
    object[key] = newValue;
    object = object[key];
  }
  return object;
}
function useController(props) {
  const methods = useFormContext();
  const { name, control = methods.control, shouldUnregister } = props;
  const isArrayField = isNameInFieldArray(control._names.array, name);
  const value = useWatch({
    control,
    name,
    defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),
    exact: true
  });
  const formState = useFormState({
    control,
    name
  });
  const _registerProps = import_react26.default.useRef(control.register(name, {
    ...props.rules,
    value
  }));
  _registerProps.current = control.register(name, props.rules);
  import_react26.default.useEffect(() => {
    const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;
    const updateMounted = (name2, value2) => {
      const field = get(control._fields, name2);
      if (field) {
        field._f.mount = value2;
      }
    };
    updateMounted(name, true);
    if (_shouldUnregisterField) {
      const value2 = cloneObject(get(control._options.defaultValues, name));
      set(control._defaultValues, name, value2);
      if (isUndefined(get(control._formValues, name))) {
        set(control._formValues, name, value2);
      }
    }
    return () => {
      (isArrayField ? _shouldUnregisterField && !control._state.action : _shouldUnregisterField) ? control.unregister(name) : updateMounted(name, false);
    };
  }, [name, control, isArrayField, shouldUnregister]);
  return {
    field: {
      name,
      value,
      onChange: import_react26.default.useCallback((event) => _registerProps.current.onChange({
        target: {
          value: getEventValue(event),
          name
        },
        type: EVENTS.CHANGE
      }), [name]),
      onBlur: import_react26.default.useCallback(() => _registerProps.current.onBlur({
        target: {
          value: get(control._formValues, name),
          name
        },
        type: EVENTS.BLUR
      }), [name, control]),
      ref: (elm) => {
        const field = get(control._fields, name);
        if (field && elm) {
          field._f.ref = {
            focus: () => elm.focus(),
            select: () => elm.select(),
            setCustomValidity: (message) => elm.setCustomValidity(message),
            reportValidity: () => elm.reportValidity()
          };
        }
      }
    },
    formState,
    fieldState: Object.defineProperties({}, {
      invalid: {
        enumerable: true,
        get: () => !!get(formState.errors, name)
      },
      isDirty: {
        enumerable: true,
        get: () => !!get(formState.dirtyFields, name)
      },
      isTouched: {
        enumerable: true,
        get: () => !!get(formState.touchedFields, name)
      },
      error: {
        enumerable: true,
        get: () => get(formState.errors, name)
      }
    })
  };
}
var Controller = (props) => props.render(useController(props));
var POST_REQUEST = "post";
function Form(props) {
  const methods = useFormContext();
  const [mounted, setMounted] = import_react26.default.useState(false);
  const { control = methods.control, onSubmit, children, action, method = POST_REQUEST, headers, encType, onError, render, onSuccess, validateStatus, ...rest } = props;
  const submit = async (event) => {
    let hasError = false;
    let type = "";
    await control.handleSubmit(async (data2) => {
      const formData = new FormData();
      let formDataJson = "";
      try {
        formDataJson = JSON.stringify(data2);
      } catch (_a) {
      }
      for (const name of control._names.mount) {
        formData.append(name, get(data2, name));
      }
      if (onSubmit) {
        await onSubmit({
          data: data2,
          event,
          method,
          formData,
          formDataJson
        });
      }
      if (action) {
        try {
          const shouldStringifySubmissionData = [
            headers && headers["Content-Type"],
            encType
          ].some((value) => value && value.includes("json"));
          const response = await fetch(action, {
            method,
            headers: {
              ...headers,
              ...encType ? { "Content-Type": encType } : {}
            },
            body: shouldStringifySubmissionData ? formDataJson : formData
          });
          if (response && (validateStatus ? !validateStatus(response.status) : response.status < 200 || response.status >= 300)) {
            hasError = true;
            onError && onError({ response });
            type = String(response.status);
          } else {
            onSuccess && onSuccess({ response });
          }
        } catch (error) {
          hasError = true;
          onError && onError({ error });
        }
      }
    })(event);
    if (hasError && props.control) {
      props.control._subjects.state.next({
        isSubmitSuccessful: false
      });
      props.control.setError("root.server", {
        type
      });
    }
  };
  import_react26.default.useEffect(() => {
    setMounted(true);
  }, []);
  return render ? import_react26.default.createElement(import_react26.default.Fragment, null, render({
    submit
  })) : import_react26.default.createElement("form", { noValidate: mounted, action, method, encType, onSubmit: submit, ...rest }, children);
}
var appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria ? {
  ...errors[name],
  types: {
    ...errors[name] && errors[name].types ? errors[name].types : {},
    [type]: message || true
  }
} : {};
var focusFieldBy = (fields, callback, fieldsNames) => {
  for (const key of fieldsNames || Object.keys(fields)) {
    const field = get(fields, key);
    if (field) {
      const { _f, ...currentField } = field;
      if (_f && callback(_f.name)) {
        if (_f.ref.focus) {
          _f.ref.focus();
          break;
        } else if (_f.refs && _f.refs[0].focus) {
          _f.refs[0].focus();
          break;
        }
      } else if (isObject(currentField)) {
        focusFieldBy(currentField, callback);
      }
    }
  }
};
var generateId = () => {
  const d = typeof performance === "undefined" ? Date.now() : performance.now() * 1e3;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (c) => {
    const r = (Math.random() * 16 + d) % 16 | 0;
    return (c == "x" ? r : r & 3 | 8).toString(16);
  });
};
var getFocusFieldName = (name, index2, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus) ? options.focusName || `${name}.${isUndefined(options.focusIndex) ? index2 : options.focusIndex}.` : "";
var getValidationModes = (mode) => ({
  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,
  isOnBlur: mode === VALIDATION_MODE.onBlur,
  isOnChange: mode === VALIDATION_MODE.onChange,
  isOnAll: mode === VALIDATION_MODE.all,
  isOnTouch: mode === VALIDATION_MODE.onTouched
});
var isWatched = (name, _names, isBlurEvent) => !isBlurEvent && (_names.watchAll || _names.watch.has(name) || [..._names.watch].some((watchName) => name.startsWith(watchName) && /^\.\w+/.test(name.slice(watchName.length))));
var updateFieldArrayRootError = (errors, error, name) => {
  const fieldArrayErrors = compact(get(errors, name));
  set(fieldArrayErrors, "root", error[name]);
  set(errors, name, fieldArrayErrors);
  return errors;
};
var isBoolean = (value) => typeof value === "boolean";
var isFileInput = (element) => element.type === "file";
var isFunction = (value) => typeof value === "function";
var isHTMLElement2 = (value) => {
  if (!isWeb) {
    return false;
  }
  const owner = value ? value.ownerDocument : 0;
  return value instanceof (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement);
};
var isMessage = (value) => isString(value);
var isRadioInput = (element) => element.type === "radio";
var isRegex = (value) => value instanceof RegExp;
var defaultResult = {
  value: false,
  isValid: false
};
var validResult = { value: true, isValid: true };
var getCheckboxValue = (options) => {
  if (Array.isArray(options)) {
    if (options.length > 1) {
      const values2 = options.filter((option) => option && option.checked && !option.disabled).map((option) => option.value);
      return { value: values2, isValid: !!values2.length };
    }
    return options[0].checked && !options[0].disabled ? options[0].attributes && !isUndefined(options[0].attributes.value) ? isUndefined(options[0].value) || options[0].value === "" ? validResult : { value: options[0].value, isValid: true } : validResult : defaultResult;
  }
  return defaultResult;
};
var defaultReturn = {
  isValid: false,
  value: null
};
var getRadioValue = (options) => Array.isArray(options) ? options.reduce((previous, option) => option && option.checked && !option.disabled ? {
  isValid: true,
  value: option.value
} : previous, defaultReturn) : defaultReturn;
function getValidateError(result, ref, type = "validate") {
  if (isMessage(result) || Array.isArray(result) && result.every(isMessage) || isBoolean(result) && !result) {
    return {
      type,
      message: isMessage(result) ? result : "",
      ref
    };
  }
}
var getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData) ? validationData : {
  value: validationData,
  message: ""
};
var validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {
  const { ref, refs, required, maxLength, minLength, min: min3, max: max3, pattern, validate, name, valueAsNumber, mount, disabled } = field._f;
  const inputValue = get(formValues, name);
  if (!mount || disabled) {
    return {};
  }
  const inputRef = refs ? refs[0] : ref;
  const setCustomValidity = (message) => {
    if (shouldUseNativeValidation && inputRef.reportValidity) {
      inputRef.setCustomValidity(isBoolean(message) ? "" : message || "");
      inputRef.reportValidity();
    }
  };
  const error = {};
  const isRadio = isRadioInput(ref);
  const isCheckBox = isCheckBoxInput(ref);
  const isRadioOrCheckbox2 = isRadio || isCheckBox;
  const isEmpty = (valueAsNumber || isFileInput(ref)) && isUndefined(ref.value) && isUndefined(inputValue) || isHTMLElement2(ref) && ref.value === "" || inputValue === "" || Array.isArray(inputValue) && !inputValue.length;
  const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);
  const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {
    const message = exceedMax ? maxLengthMessage : minLengthMessage;
    error[name] = {
      type: exceedMax ? maxType : minType,
      message,
      ref,
      ...appendErrorsCurry(exceedMax ? maxType : minType, message)
    };
  };
  if (isFieldArray ? !Array.isArray(inputValue) || !inputValue.length : required && (!isRadioOrCheckbox2 && (isEmpty || isNullOrUndefined(inputValue)) || isBoolean(inputValue) && !inputValue || isCheckBox && !getCheckboxValue(refs).isValid || isRadio && !getRadioValue(refs).isValid)) {
    const { value, message } = isMessage(required) ? { value: !!required, message: required } : getValueAndMessage(required);
    if (value) {
      error[name] = {
        type: INPUT_VALIDATION_RULES.required,
        message,
        ref: inputRef,
        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message)
      };
      if (!validateAllFieldCriteria) {
        setCustomValidity(message);
        return error;
      }
    }
  }
  if (!isEmpty && (!isNullOrUndefined(min3) || !isNullOrUndefined(max3))) {
    let exceedMax;
    let exceedMin;
    const maxOutput = getValueAndMessage(max3);
    const minOutput = getValueAndMessage(min3);
    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {
      const valueNumber = ref.valueAsNumber || (inputValue ? +inputValue : inputValue);
      if (!isNullOrUndefined(maxOutput.value)) {
        exceedMax = valueNumber > maxOutput.value;
      }
      if (!isNullOrUndefined(minOutput.value)) {
        exceedMin = valueNumber < minOutput.value;
      }
    } else {
      const valueDate = ref.valueAsDate || new Date(inputValue);
      const convertTimeToDate = (time) => new Date(new Date().toDateString() + " " + time);
      const isTime = ref.type == "time";
      const isWeek = ref.type == "week";
      if (isString(maxOutput.value) && inputValue) {
        exceedMax = isTime ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value) : isWeek ? inputValue > maxOutput.value : valueDate > new Date(maxOutput.value);
      }
      if (isString(minOutput.value) && inputValue) {
        exceedMin = isTime ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value) : isWeek ? inputValue < minOutput.value : valueDate < new Date(minOutput.value);
      }
    }
    if (exceedMax || exceedMin) {
      getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);
      if (!validateAllFieldCriteria) {
        setCustomValidity(error[name].message);
        return error;
      }
    }
  }
  if ((maxLength || minLength) && !isEmpty && (isString(inputValue) || isFieldArray && Array.isArray(inputValue))) {
    const maxLengthOutput = getValueAndMessage(maxLength);
    const minLengthOutput = getValueAndMessage(minLength);
    const exceedMax = !isNullOrUndefined(maxLengthOutput.value) && inputValue.length > +maxLengthOutput.value;
    const exceedMin = !isNullOrUndefined(minLengthOutput.value) && inputValue.length < +minLengthOutput.value;
    if (exceedMax || exceedMin) {
      getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);
      if (!validateAllFieldCriteria) {
        setCustomValidity(error[name].message);
        return error;
      }
    }
  }
  if (pattern && !isEmpty && isString(inputValue)) {
    const { value: patternValue, message } = getValueAndMessage(pattern);
    if (isRegex(patternValue) && !inputValue.match(patternValue)) {
      error[name] = {
        type: INPUT_VALIDATION_RULES.pattern,
        message,
        ref,
        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message)
      };
      if (!validateAllFieldCriteria) {
        setCustomValidity(message);
        return error;
      }
    }
  }
  if (validate) {
    if (isFunction(validate)) {
      const result = await validate(inputValue, formValues);
      const validateError = getValidateError(result, inputRef);
      if (validateError) {
        error[name] = {
          ...validateError,
          ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message)
        };
        if (!validateAllFieldCriteria) {
          setCustomValidity(validateError.message);
          return error;
        }
      }
    } else if (isObject(validate)) {
      let validationResult = {};
      for (const key in validate) {
        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {
          break;
        }
        const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);
        if (validateError) {
          validationResult = {
            ...validateError,
            ...appendErrorsCurry(key, validateError.message)
          };
          setCustomValidity(validateError.message);
          if (validateAllFieldCriteria) {
            error[name] = validationResult;
          }
        }
      }
      if (!isEmptyObject(validationResult)) {
        error[name] = {
          ref: inputRef,
          ...validationResult
        };
        if (!validateAllFieldCriteria) {
          return error;
        }
      }
    }
  }
  setCustomValidity(true);
  return error;
};
function append(data2, value) {
  return [...data2, ...convertToArrayPayload(value)];
}
var fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => void 0) : void 0;
function insert(data2, index2, value) {
  return [
    ...data2.slice(0, index2),
    ...convertToArrayPayload(value),
    ...data2.slice(index2)
  ];
}
var moveArrayAt = (data2, from, to) => {
  if (!Array.isArray(data2)) {
    return [];
  }
  if (isUndefined(data2[to])) {
    data2[to] = void 0;
  }
  data2.splice(to, 0, data2.splice(from, 1)[0]);
  return data2;
};
function prepend(data2, value) {
  return [...convertToArrayPayload(value), ...convertToArrayPayload(data2)];
}
function removeAtIndexes(data2, indexes) {
  let i = 0;
  const temp = [...data2];
  for (const index2 of indexes) {
    temp.splice(index2 - i, 1);
    i++;
  }
  return compact(temp).length ? temp : [];
}
var removeArrayAt = (data2, index2) => isUndefined(index2) ? [] : removeAtIndexes(data2, convertToArrayPayload(index2).sort((a, b) => a - b));
var swapArrayAt = (data2, indexA, indexB) => {
  data2[indexA] = [data2[indexB], data2[indexB] = data2[indexA]][0];
};
function baseGet(object, updatePath) {
  const length = updatePath.slice(0, -1).length;
  let index2 = 0;
  while (index2 < length) {
    object = isUndefined(object) ? index2++ : object[updatePath[index2++]];
  }
  return object;
}
function isEmptyArray(obj) {
  for (const key in obj) {
    if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {
      return false;
    }
  }
  return true;
}
function unset(object, path) {
  const paths = Array.isArray(path) ? path : isKey(path) ? [path] : stringToPath(path);
  const childObject = paths.length === 1 ? object : baseGet(object, paths);
  const index2 = paths.length - 1;
  const key = paths[index2];
  if (childObject) {
    delete childObject[key];
  }
  if (index2 !== 0 && (isObject(childObject) && isEmptyObject(childObject) || Array.isArray(childObject) && isEmptyArray(childObject))) {
    unset(object, paths.slice(0, -1));
  }
  return object;
}
var updateAt = (fieldValues, index2, value) => {
  fieldValues[index2] = value;
  return fieldValues;
};
function useFieldArray(props) {
  const methods = useFormContext();
  const { control = methods.control, name, keyName = "id", shouldUnregister } = props;
  const [fields, setFields] = import_react26.default.useState(control._getFieldArray(name));
  const ids = import_react26.default.useRef(control._getFieldArray(name).map(generateId));
  const _fieldIds = import_react26.default.useRef(fields);
  const _name = import_react26.default.useRef(name);
  const _actioned = import_react26.default.useRef(false);
  _name.current = name;
  _fieldIds.current = fields;
  control._names.array.add(name);
  props.rules && control.register(name, props.rules);
  useSubscribe({
    next: ({ values: values2, name: fieldArrayName }) => {
      if (fieldArrayName === _name.current || !fieldArrayName) {
        const fieldValues = get(values2, _name.current);
        if (Array.isArray(fieldValues)) {
          setFields(fieldValues);
          ids.current = fieldValues.map(generateId);
        }
      }
    },
    subject: control._subjects.array
  });
  const updateValues = import_react26.default.useCallback((updatedFieldArrayValues) => {
    _actioned.current = true;
    control._updateFieldArray(name, updatedFieldArrayValues);
  }, [control, name]);
  const append$1 = (value, options) => {
    const appendValue = convertToArrayPayload(cloneObject(value));
    const updatedFieldArrayValues = append(control._getFieldArray(name), appendValue);
    control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);
    ids.current = append(ids.current, appendValue.map(generateId));
    updateValues(updatedFieldArrayValues);
    setFields(updatedFieldArrayValues);
    control._updateFieldArray(name, updatedFieldArrayValues, append, {
      argA: fillEmptyArray(value)
    });
  };
  const prepend$1 = (value, options) => {
    const prependValue = convertToArrayPayload(cloneObject(value));
    const updatedFieldArrayValues = prepend(control._getFieldArray(name), prependValue);
    control._names.focus = getFocusFieldName(name, 0, options);
    ids.current = prepend(ids.current, prependValue.map(generateId));
    updateValues(updatedFieldArrayValues);
    setFields(updatedFieldArrayValues);
    control._updateFieldArray(name, updatedFieldArrayValues, prepend, {
      argA: fillEmptyArray(value)
    });
  };
  const remove = (index2) => {
    const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index2);
    ids.current = removeArrayAt(ids.current, index2);
    updateValues(updatedFieldArrayValues);
    setFields(updatedFieldArrayValues);
    control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {
      argA: index2
    });
  };
  const insert$1 = (index2, value, options) => {
    const insertValue = convertToArrayPayload(cloneObject(value));
    const updatedFieldArrayValues = insert(control._getFieldArray(name), index2, insertValue);
    control._names.focus = getFocusFieldName(name, index2, options);
    ids.current = insert(ids.current, index2, insertValue.map(generateId));
    updateValues(updatedFieldArrayValues);
    setFields(updatedFieldArrayValues);
    control._updateFieldArray(name, updatedFieldArrayValues, insert, {
      argA: index2,
      argB: fillEmptyArray(value)
    });
  };
  const swap = (indexA, indexB) => {
    const updatedFieldArrayValues = control._getFieldArray(name);
    swapArrayAt(updatedFieldArrayValues, indexA, indexB);
    swapArrayAt(ids.current, indexA, indexB);
    updateValues(updatedFieldArrayValues);
    setFields(updatedFieldArrayValues);
    control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {
      argA: indexA,
      argB: indexB
    }, false);
  };
  const move = (from, to) => {
    const updatedFieldArrayValues = control._getFieldArray(name);
    moveArrayAt(updatedFieldArrayValues, from, to);
    moveArrayAt(ids.current, from, to);
    updateValues(updatedFieldArrayValues);
    setFields(updatedFieldArrayValues);
    control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {
      argA: from,
      argB: to
    }, false);
  };
  const update = (index2, value) => {
    const updateValue = cloneObject(value);
    const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index2, updateValue);
    ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index2 ? generateId() : ids.current[i]);
    updateValues(updatedFieldArrayValues);
    setFields([...updatedFieldArrayValues]);
    control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {
      argA: index2,
      argB: updateValue
    }, true, false);
  };
  const replace2 = (value) => {
    const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));
    ids.current = updatedFieldArrayValues.map(generateId);
    updateValues([...updatedFieldArrayValues]);
    setFields([...updatedFieldArrayValues]);
    control._updateFieldArray(name, [...updatedFieldArrayValues], (data2) => data2, {}, true, false);
  };
  import_react26.default.useEffect(() => {
    control._state.action = false;
    isWatched(name, control._names) && control._subjects.state.next({
      ...control._formState
    });
    if (_actioned.current && (!getValidationModes(control._options.mode).isOnSubmit || control._formState.isSubmitted)) {
      if (control._options.resolver) {
        control._executeSchema([name]).then((result) => {
          const error = get(result.errors, name);
          const existingError = get(control._formState.errors, name);
          if (existingError ? !error && existingError.type || error && (existingError.type !== error.type || existingError.message !== error.message) : error && error.type) {
            error ? set(control._formState.errors, name, error) : unset(control._formState.errors, name);
            control._subjects.state.next({
              errors: control._formState.errors
            });
          }
        });
      } else {
        const field = get(control._fields, name);
        if (field && field._f) {
          validateField(field, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) && control._subjects.state.next({
            errors: updateFieldArrayRootError(control._formState.errors, error, name)
          }));
        }
      }
    }
    control._subjects.values.next({
      name,
      values: { ...control._formValues }
    });
    control._names.focus && focusFieldBy(control._fields, (key) => !!key && key.startsWith(control._names.focus || ""));
    control._names.focus = "";
    control._updateValid();
    _actioned.current = false;
  }, [fields, name, control]);
  import_react26.default.useEffect(() => {
    !get(control._formValues, name) && control._updateFieldArray(name);
    return () => {
      (control._options.shouldUnregister || shouldUnregister) && control.unregister(name);
    };
  }, [name, control, keyName, shouldUnregister]);
  return {
    swap: import_react26.default.useCallback(swap, [updateValues, name, control]),
    move: import_react26.default.useCallback(move, [updateValues, name, control]),
    prepend: import_react26.default.useCallback(prepend$1, [updateValues, name, control]),
    append: import_react26.default.useCallback(append$1, [updateValues, name, control]),
    remove: import_react26.default.useCallback(remove, [updateValues, name, control]),
    insert: import_react26.default.useCallback(insert$1, [updateValues, name, control]),
    update: import_react26.default.useCallback(update, [updateValues, name, control]),
    replace: import_react26.default.useCallback(replace2, [updateValues, name, control]),
    fields: import_react26.default.useMemo(() => fields.map((field, index2) => ({
      ...field,
      [keyName]: ids.current[index2] || generateId()
    })), [fields, keyName])
  };
}
function createSubject() {
  let _observers = [];
  const next = (value) => {
    for (const observer of _observers) {
      observer.next && observer.next(value);
    }
  };
  const subscribe = (observer) => {
    _observers.push(observer);
    return {
      unsubscribe: () => {
        _observers = _observers.filter((o) => o !== observer);
      }
    };
  };
  const unsubscribe = () => {
    _observers = [];
  };
  return {
    get observers() {
      return _observers;
    },
    next,
    subscribe,
    unsubscribe
  };
}
var isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);
function deepEqual2(object1, object2) {
  if (isPrimitive(object1) || isPrimitive(object2)) {
    return object1 === object2;
  }
  if (isDateObject(object1) && isDateObject(object2)) {
    return object1.getTime() === object2.getTime();
  }
  const keys1 = Object.keys(object1);
  const keys22 = Object.keys(object2);
  if (keys1.length !== keys22.length) {
    return false;
  }
  for (const key of keys1) {
    const val1 = object1[key];
    if (!keys22.includes(key)) {
      return false;
    }
    if (key !== "ref") {
      const val2 = object2[key];
      if (isDateObject(val1) && isDateObject(val2) || isObject(val1) && isObject(val2) || Array.isArray(val1) && Array.isArray(val2) ? !deepEqual2(val1, val2) : val1 !== val2) {
        return false;
      }
    }
  }
  return true;
}
var isMultipleSelect = (element) => element.type === `select-multiple`;
var isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);
var live = (ref) => isHTMLElement2(ref) && ref.isConnected;
var objectHasFunction = (data2) => {
  for (const key in data2) {
    if (isFunction(data2[key])) {
      return true;
    }
  }
  return false;
};
function markFieldsDirty(data2, fields = {}) {
  const isParentNodeArray = Array.isArray(data2);
  if (isObject(data2) || isParentNodeArray) {
    for (const key in data2) {
      if (Array.isArray(data2[key]) || isObject(data2[key]) && !objectHasFunction(data2[key])) {
        fields[key] = Array.isArray(data2[key]) ? [] : {};
        markFieldsDirty(data2[key], fields[key]);
      } else if (!isNullOrUndefined(data2[key])) {
        fields[key] = true;
      }
    }
  }
  return fields;
}
function getDirtyFieldsFromDefaultValues(data2, formValues, dirtyFieldsFromValues) {
  const isParentNodeArray = Array.isArray(data2);
  if (isObject(data2) || isParentNodeArray) {
    for (const key in data2) {
      if (Array.isArray(data2[key]) || isObject(data2[key]) && !objectHasFunction(data2[key])) {
        if (isUndefined(formValues) || isPrimitive(dirtyFieldsFromValues[key])) {
          dirtyFieldsFromValues[key] = Array.isArray(data2[key]) ? markFieldsDirty(data2[key], []) : { ...markFieldsDirty(data2[key]) };
        } else {
          getDirtyFieldsFromDefaultValues(data2[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);
        }
      } else {
        dirtyFieldsFromValues[key] = !deepEqual2(data2[key], formValues[key]);
      }
    }
  }
  return dirtyFieldsFromValues;
}
var getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));
var getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value) ? value : valueAsNumber ? value === "" ? NaN : value ? +value : value : valueAsDate && isString(value) ? new Date(value) : setValueAs ? setValueAs(value) : value;
function getFieldValue(_f) {
  const ref = _f.ref;
  if (_f.refs ? _f.refs.every((ref2) => ref2.disabled) : ref.disabled) {
    return;
  }
  if (isFileInput(ref)) {
    return ref.files;
  }
  if (isRadioInput(ref)) {
    return getRadioValue(_f.refs).value;
  }
  if (isMultipleSelect(ref)) {
    return [...ref.selectedOptions].map(({ value }) => value);
  }
  if (isCheckBoxInput(ref)) {
    return getCheckboxValue(_f.refs).value;
  }
  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);
}
var getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {
  const fields = {};
  for (const name of fieldsNames) {
    const field = get(_fields, name);
    field && set(fields, name, field._f);
  }
  return {
    criteriaMode,
    names: [...fieldsNames],
    fields,
    shouldUseNativeValidation
  };
};
var getRuleValue = (rule) => isUndefined(rule) ? rule : isRegex(rule) ? rule.source : isObject(rule) ? isRegex(rule.value) ? rule.value.source : rule.value : rule;
var hasValidation = (options) => options.mount && (options.required || options.min || options.max || options.maxLength || options.minLength || options.pattern || options.validate);
function schemaErrorLookup(errors, _fields, name) {
  const error = get(errors, name);
  if (error || isKey(name)) {
    return {
      error,
      name
    };
  }
  const names = name.split(".");
  while (names.length) {
    const fieldName = names.join(".");
    const field = get(_fields, fieldName);
    const foundError = get(errors, fieldName);
    if (field && !Array.isArray(field) && name !== fieldName) {
      return { name };
    }
    if (foundError && foundError.type) {
      return {
        name: fieldName,
        error: foundError
      };
    }
    names.pop();
  }
  return {
    name
  };
}
var skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {
  if (mode.isOnAll) {
    return false;
  } else if (!isSubmitted && mode.isOnTouch) {
    return !(isTouched || isBlurEvent);
  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {
    return !isBlurEvent;
  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {
    return isBlurEvent;
  }
  return true;
};
var unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);
var defaultOptions = {
  mode: VALIDATION_MODE.onSubmit,
  reValidateMode: VALIDATION_MODE.onChange,
  shouldFocusError: true
};
function createFormControl(props = {}, flushRootRender) {
  let _options = {
    ...defaultOptions,
    ...props
  };
  let _formState = {
    submitCount: 0,
    isDirty: false,
    isLoading: isFunction(_options.defaultValues),
    isValidating: false,
    isSubmitted: false,
    isSubmitting: false,
    isSubmitSuccessful: false,
    isValid: false,
    touchedFields: {},
    dirtyFields: {},
    errors: {}
  };
  let _fields = {};
  let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values) ? cloneObject(_options.defaultValues || _options.values) || {} : {};
  let _formValues = _options.shouldUnregister ? {} : cloneObject(_defaultValues);
  let _state = {
    action: false,
    mount: false,
    watch: false
  };
  let _names = {
    mount: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  };
  let delayErrorCallback;
  let timer = 0;
  const _proxyFormState = {
    isDirty: false,
    dirtyFields: false,
    touchedFields: false,
    isValidating: false,
    isValid: false,
    errors: false
  };
  const _subjects = {
    values: createSubject(),
    array: createSubject(),
    state: createSubject()
  };
  const shouldCaptureDirtyFields = props.resetOptions && props.resetOptions.keepDirtyValues;
  const validationModeBeforeSubmit = getValidationModes(_options.mode);
  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);
  const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;
  const debounce = (callback) => (wait) => {
    clearTimeout(timer);
    timer = setTimeout(callback, wait);
  };
  const _updateValid = async (shouldUpdateValid) => {
    if (_proxyFormState.isValid || shouldUpdateValid) {
      const isValid = _options.resolver ? isEmptyObject((await _executeSchema()).errors) : await executeBuiltInValidation(_fields, true);
      if (isValid !== _formState.isValid) {
        _subjects.state.next({
          isValid
        });
      }
    }
  };
  const _updateIsValidating = (value) => _proxyFormState.isValidating && _subjects.state.next({
    isValidating: value
  });
  const _updateFieldArray = (name, values2 = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {
    if (args && method) {
      _state.action = true;
      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {
        const fieldValues = method(get(_fields, name), args.argA, args.argB);
        shouldSetValues && set(_fields, name, fieldValues);
      }
      if (shouldUpdateFieldsAndState && Array.isArray(get(_formState.errors, name))) {
        const errors = method(get(_formState.errors, name), args.argA, args.argB);
        shouldSetValues && set(_formState.errors, name, errors);
        unsetEmptyArray(_formState.errors, name);
      }
      if (_proxyFormState.touchedFields && shouldUpdateFieldsAndState && Array.isArray(get(_formState.touchedFields, name))) {
        const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);
        shouldSetValues && set(_formState.touchedFields, name, touchedFields);
      }
      if (_proxyFormState.dirtyFields) {
        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);
      }
      _subjects.state.next({
        name,
        isDirty: _getDirty(name, values2),
        dirtyFields: _formState.dirtyFields,
        errors: _formState.errors,
        isValid: _formState.isValid
      });
    } else {
      set(_formValues, name, values2);
    }
  };
  const updateErrors = (name, error) => {
    set(_formState.errors, name, error);
    _subjects.state.next({
      errors: _formState.errors
    });
  };
  const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {
    const field = get(_fields, name);
    if (field) {
      const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);
      isUndefined(defaultValue) || ref && ref.defaultChecked || shouldSkipSetValueAs ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f)) : setFieldValue(name, defaultValue);
      _state.mount && _updateValid();
    }
  };
  const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {
    let shouldUpdateField = false;
    let isPreviousDirty = false;
    const output = {
      name
    };
    if (!isBlurEvent || shouldDirty) {
      if (_proxyFormState.isDirty) {
        isPreviousDirty = _formState.isDirty;
        _formState.isDirty = output.isDirty = _getDirty();
        shouldUpdateField = isPreviousDirty !== output.isDirty;
      }
      const isCurrentFieldPristine = deepEqual2(get(_defaultValues, name), fieldValue);
      isPreviousDirty = get(_formState.dirtyFields, name);
      isCurrentFieldPristine ? unset(_formState.dirtyFields, name) : set(_formState.dirtyFields, name, true);
      output.dirtyFields = _formState.dirtyFields;
      shouldUpdateField = shouldUpdateField || _proxyFormState.dirtyFields && isPreviousDirty !== !isCurrentFieldPristine;
    }
    if (isBlurEvent) {
      const isPreviousFieldTouched = get(_formState.touchedFields, name);
      if (!isPreviousFieldTouched) {
        set(_formState.touchedFields, name, isBlurEvent);
        output.touchedFields = _formState.touchedFields;
        shouldUpdateField = shouldUpdateField || _proxyFormState.touchedFields && isPreviousFieldTouched !== isBlurEvent;
      }
    }
    shouldUpdateField && shouldRender && _subjects.state.next(output);
    return shouldUpdateField ? output : {};
  };
  const shouldRenderByError = (name, isValid, error, fieldState) => {
    const previousFieldError = get(_formState.errors, name);
    const shouldUpdateValid = _proxyFormState.isValid && isBoolean(isValid) && _formState.isValid !== isValid;
    if (props.delayError && error) {
      delayErrorCallback = debounce(() => updateErrors(name, error));
      delayErrorCallback(props.delayError);
    } else {
      clearTimeout(timer);
      delayErrorCallback = null;
      error ? set(_formState.errors, name, error) : unset(_formState.errors, name);
    }
    if ((error ? !deepEqual2(previousFieldError, error) : previousFieldError) || !isEmptyObject(fieldState) || shouldUpdateValid) {
      const updatedFormState = {
        ...fieldState,
        ...shouldUpdateValid && isBoolean(isValid) ? { isValid } : {},
        errors: _formState.errors,
        name
      };
      _formState = {
        ..._formState,
        ...updatedFormState
      };
      _subjects.state.next(updatedFormState);
    }
    _updateIsValidating(false);
  };
  const _executeSchema = async (name) => _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));
  const executeSchemaAndUpdateState = async (names) => {
    const { errors } = await _executeSchema();
    if (names) {
      for (const name of names) {
        const error = get(errors, name);
        error ? set(_formState.errors, name, error) : unset(_formState.errors, name);
      }
    } else {
      _formState.errors = errors;
    }
    return errors;
  };
  const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {
    valid: true
  }) => {
    for (const name in fields) {
      const field = fields[name];
      if (field) {
        const { _f, ...fieldValue } = field;
        if (_f) {
          const isFieldArrayRoot = _names.array.has(_f.name);
          const fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);
          if (fieldError[_f.name]) {
            context.valid = false;
            if (shouldOnlyCheckValid) {
              break;
            }
          }
          !shouldOnlyCheckValid && (get(fieldError, _f.name) ? isFieldArrayRoot ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name) : set(_formState.errors, _f.name, fieldError[_f.name]) : unset(_formState.errors, _f.name));
        }
        fieldValue && await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context);
      }
    }
    return context.valid;
  };
  const _removeUnmounted = () => {
    for (const name of _names.unMount) {
      const field = get(_fields, name);
      field && (field._f.refs ? field._f.refs.every((ref) => !live(ref)) : !live(field._f.ref)) && unregister(name);
    }
    _names.unMount = /* @__PURE__ */ new Set();
  };
  const _getDirty = (name, data2) => (name && data2 && set(_formValues, name, data2), !deepEqual2(getValues(), _defaultValues));
  const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {
    ..._state.mount ? _formValues : isUndefined(defaultValue) ? _defaultValues : isString(names) ? { [names]: defaultValue } : defaultValue
  }, isGlobal, defaultValue);
  const _getFieldArray = (name) => compact(get(_state.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));
  const setFieldValue = (name, value, options = {}) => {
    const field = get(_fields, name);
    let fieldValue = value;
    if (field) {
      const fieldReference = field._f;
      if (fieldReference) {
        !fieldReference.disabled && set(_formValues, name, getFieldValueAs(value, fieldReference));
        fieldValue = isHTMLElement2(fieldReference.ref) && isNullOrUndefined(value) ? "" : value;
        if (isMultipleSelect(fieldReference.ref)) {
          [...fieldReference.ref.options].forEach((optionRef) => optionRef.selected = fieldValue.includes(optionRef.value));
        } else if (fieldReference.refs) {
          if (isCheckBoxInput(fieldReference.ref)) {
            fieldReference.refs.length > 1 ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) && (checkboxRef.checked = Array.isArray(fieldValue) ? !!fieldValue.find((data2) => data2 === checkboxRef.value) : fieldValue === checkboxRef.value)) : fieldReference.refs[0] && (fieldReference.refs[0].checked = !!fieldValue);
          } else {
            fieldReference.refs.forEach((radioRef) => radioRef.checked = radioRef.value === fieldValue);
          }
        } else if (isFileInput(fieldReference.ref)) {
          fieldReference.ref.value = "";
        } else {
          fieldReference.ref.value = fieldValue;
          if (!fieldReference.ref.type) {
            _subjects.values.next({
              name,
              values: { ..._formValues }
            });
          }
        }
      }
    }
    (options.shouldDirty || options.shouldTouch) && updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);
    options.shouldValidate && trigger(name);
  };
  const setValues = (name, value, options) => {
    for (const fieldKey in value) {
      const fieldValue = value[fieldKey];
      const fieldName = `${name}.${fieldKey}`;
      const field = get(_fields, fieldName);
      (_names.array.has(name) || !isPrimitive(fieldValue) || field && !field._f) && !isDateObject(fieldValue) ? setValues(fieldName, fieldValue, options) : setFieldValue(fieldName, fieldValue, options);
    }
  };
  const setValue = (name, value, options = {}) => {
    const field = get(_fields, name);
    const isFieldArray = _names.array.has(name);
    const cloneValue = cloneObject(value);
    set(_formValues, name, cloneValue);
    if (isFieldArray) {
      _subjects.array.next({
        name,
        values: { ..._formValues }
      });
      if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) && options.shouldDirty) {
        _subjects.state.next({
          name,
          dirtyFields: getDirtyFields(_defaultValues, _formValues),
          isDirty: _getDirty(name, cloneValue)
        });
      }
    } else {
      field && !field._f && !isNullOrUndefined(cloneValue) ? setValues(name, cloneValue, options) : setFieldValue(name, cloneValue, options);
    }
    isWatched(name, _names) && _subjects.state.next({ ..._formState });
    _subjects.values.next({
      name,
      values: { ..._formValues }
    });
    !_state.mount && flushRootRender();
  };
  const onChange = async (event) => {
    const target = event.target;
    let name = target.name;
    let isFieldValueUpdated = true;
    const field = get(_fields, name);
    const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);
    if (field) {
      let error;
      let isValid;
      const fieldValue = getCurrentFieldValue();
      const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;
      const shouldSkipValidation = !hasValidation(field._f) && !_options.resolver && !get(_formState.errors, name) && !field._f.deps || skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);
      const watched = isWatched(name, _names, isBlurEvent);
      set(_formValues, name, fieldValue);
      if (isBlurEvent) {
        field._f.onBlur && field._f.onBlur(event);
        delayErrorCallback && delayErrorCallback(0);
      } else if (field._f.onChange) {
        field._f.onChange(event);
      }
      const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);
      const shouldRender = !isEmptyObject(fieldState) || watched;
      !isBlurEvent && _subjects.values.next({
        name,
        type: event.type,
        values: { ..._formValues }
      });
      if (shouldSkipValidation) {
        _proxyFormState.isValid && _updateValid();
        return shouldRender && _subjects.state.next({ name, ...watched ? {} : fieldState });
      }
      !isBlurEvent && watched && _subjects.state.next({ ..._formState });
      _updateIsValidating(true);
      if (_options.resolver) {
        const { errors } = await _executeSchema([name]);
        const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);
        const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);
        error = errorLookupResult.error;
        name = errorLookupResult.name;
        isValid = isEmptyObject(errors);
      } else {
        error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];
        isFieldValueUpdated = isNaN(fieldValue) || fieldValue === get(_formValues, name, fieldValue);
        if (isFieldValueUpdated) {
          if (error) {
            isValid = false;
          } else if (_proxyFormState.isValid) {
            isValid = await executeBuiltInValidation(_fields, true);
          }
        }
      }
      if (isFieldValueUpdated) {
        field._f.deps && trigger(field._f.deps);
        shouldRenderByError(name, isValid, error, fieldState);
      }
    }
  };
  const trigger = async (name, options = {}) => {
    let isValid;
    let validationResult;
    const fieldNames = convertToArrayPayload(name);
    _updateIsValidating(true);
    if (_options.resolver) {
      const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);
      isValid = isEmptyObject(errors);
      validationResult = name ? !fieldNames.some((name2) => get(errors, name2)) : isValid;
    } else if (name) {
      validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {
        const field = get(_fields, fieldName);
        return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);
      }))).every(Boolean);
      !(!validationResult && !_formState.isValid) && _updateValid();
    } else {
      validationResult = isValid = await executeBuiltInValidation(_fields);
    }
    _subjects.state.next({
      ...!isString(name) || _proxyFormState.isValid && isValid !== _formState.isValid ? {} : { name },
      ..._options.resolver || !name ? { isValid } : {},
      errors: _formState.errors,
      isValidating: false
    });
    options.shouldFocus && !validationResult && focusFieldBy(_fields, (key) => key && get(_formState.errors, key), name ? fieldNames : _names.mount);
    return validationResult;
  };
  const getValues = (fieldNames) => {
    const values2 = {
      ..._defaultValues,
      ..._state.mount ? _formValues : {}
    };
    return isUndefined(fieldNames) ? values2 : isString(fieldNames) ? get(values2, fieldNames) : fieldNames.map((name) => get(values2, name));
  };
  const getFieldState = (name, formState) => ({
    invalid: !!get((formState || _formState).errors, name),
    isDirty: !!get((formState || _formState).dirtyFields, name),
    isTouched: !!get((formState || _formState).touchedFields, name),
    error: get((formState || _formState).errors, name)
  });
  const clearErrors = (name) => {
    name && convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));
    _subjects.state.next({
      errors: name ? _formState.errors : {}
    });
  };
  const setError = (name, error, options) => {
    const ref = (get(_fields, name, { _f: {} })._f || {}).ref;
    set(_formState.errors, name, {
      ...error,
      ref
    });
    _subjects.state.next({
      name,
      errors: _formState.errors,
      isValid: false
    });
    options && options.shouldFocus && ref && ref.focus && ref.focus();
  };
  const watch = (name, defaultValue) => isFunction(name) ? _subjects.values.subscribe({
    next: (payload) => name(_getWatch(void 0, defaultValue), payload)
  }) : _getWatch(name, defaultValue, true);
  const unregister = (name, options = {}) => {
    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {
      _names.mount.delete(fieldName);
      _names.array.delete(fieldName);
      if (!options.keepValue) {
        unset(_fields, fieldName);
        unset(_formValues, fieldName);
      }
      !options.keepError && unset(_formState.errors, fieldName);
      !options.keepDirty && unset(_formState.dirtyFields, fieldName);
      !options.keepTouched && unset(_formState.touchedFields, fieldName);
      !_options.shouldUnregister && !options.keepDefaultValue && unset(_defaultValues, fieldName);
    }
    _subjects.values.next({
      values: { ..._formValues }
    });
    _subjects.state.next({
      ..._formState,
      ...!options.keepDirty ? {} : { isDirty: _getDirty() }
    });
    !options.keepIsValid && _updateValid();
  };
  const register = (name, options = {}) => {
    let field = get(_fields, name);
    const disabledIsDefined = isBoolean(options.disabled);
    set(_fields, name, {
      ...field || {},
      _f: {
        ...field && field._f ? field._f : { ref: { name } },
        name,
        mount: true,
        ...options
      }
    });
    _names.mount.add(name);
    field ? disabledIsDefined && set(_formValues, name, options.disabled ? void 0 : get(_formValues, name, getFieldValue(field._f))) : updateValidAndValue(name, true, options.value);
    return {
      ...disabledIsDefined ? { disabled: options.disabled } : {},
      ..._options.progressive ? {
        required: !!options.required,
        min: getRuleValue(options.min),
        max: getRuleValue(options.max),
        minLength: getRuleValue(options.minLength),
        maxLength: getRuleValue(options.maxLength),
        pattern: getRuleValue(options.pattern)
      } : {},
      name,
      onChange,
      onBlur: onChange,
      ref: (ref) => {
        if (ref) {
          register(name, options);
          field = get(_fields, name);
          const fieldRef = isUndefined(ref.value) ? ref.querySelectorAll ? ref.querySelectorAll("input,select,textarea")[0] || ref : ref : ref;
          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);
          const refs = field._f.refs || [];
          if (radioOrCheckbox ? refs.find((option) => option === fieldRef) : fieldRef === field._f.ref) {
            return;
          }
          set(_fields, name, {
            _f: {
              ...field._f,
              ...radioOrCheckbox ? {
                refs: [
                  ...refs.filter(live),
                  fieldRef,
                  ...Array.isArray(get(_defaultValues, name)) ? [{}] : []
                ],
                ref: { type: fieldRef.type, name }
              } : { ref: fieldRef }
            }
          });
          updateValidAndValue(name, false, void 0, fieldRef);
        } else {
          field = get(_fields, name, {});
          if (field._f) {
            field._f.mount = false;
          }
          (_options.shouldUnregister || options.shouldUnregister) && !(isNameInFieldArray(_names.array, name) && _state.action) && _names.unMount.add(name);
        }
      }
    };
  };
  const _focusError = () => _options.shouldFocusError && focusFieldBy(_fields, (key) => key && get(_formState.errors, key), _names.mount);
  const handleSubmit = (onValid, onInvalid) => async (e) => {
    if (e) {
      e.preventDefault && e.preventDefault();
      e.persist && e.persist();
    }
    let fieldValues = cloneObject(_formValues);
    _subjects.state.next({
      isSubmitting: true
    });
    if (_options.resolver) {
      const { errors, values: values2 } = await _executeSchema();
      _formState.errors = errors;
      fieldValues = values2;
    } else {
      await executeBuiltInValidation(_fields);
    }
    unset(_formState.errors, "root");
    if (isEmptyObject(_formState.errors)) {
      _subjects.state.next({
        errors: {}
      });
      await onValid(fieldValues, e);
    } else {
      if (onInvalid) {
        await onInvalid({ ..._formState.errors }, e);
      }
      _focusError();
      setTimeout(_focusError);
    }
    _subjects.state.next({
      isSubmitted: true,
      isSubmitting: false,
      isSubmitSuccessful: isEmptyObject(_formState.errors),
      submitCount: _formState.submitCount + 1,
      errors: _formState.errors
    });
  };
  const resetField = (name, options = {}) => {
    if (get(_fields, name)) {
      if (isUndefined(options.defaultValue)) {
        setValue(name, get(_defaultValues, name));
      } else {
        setValue(name, options.defaultValue);
        set(_defaultValues, name, options.defaultValue);
      }
      if (!options.keepTouched) {
        unset(_formState.touchedFields, name);
      }
      if (!options.keepDirty) {
        unset(_formState.dirtyFields, name);
        _formState.isDirty = options.defaultValue ? _getDirty(name, get(_defaultValues, name)) : _getDirty();
      }
      if (!options.keepError) {
        unset(_formState.errors, name);
        _proxyFormState.isValid && _updateValid();
      }
      _subjects.state.next({ ..._formState });
    }
  };
  const _reset = (formValues, keepStateOptions = {}) => {
    const updatedValues = formValues || _defaultValues;
    const cloneUpdatedValues = cloneObject(updatedValues);
    const values2 = formValues && !isEmptyObject(formValues) ? cloneUpdatedValues : _defaultValues;
    if (!keepStateOptions.keepDefaultValues) {
      _defaultValues = updatedValues;
    }
    if (!keepStateOptions.keepValues) {
      if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {
        for (const fieldName of _names.mount) {
          get(_formState.dirtyFields, fieldName) ? set(values2, fieldName, get(_formValues, fieldName)) : setValue(fieldName, get(values2, fieldName));
        }
      } else {
        if (isWeb && isUndefined(formValues)) {
          for (const name of _names.mount) {
            const field = get(_fields, name);
            if (field && field._f) {
              const fieldReference = Array.isArray(field._f.refs) ? field._f.refs[0] : field._f.ref;
              if (isHTMLElement2(fieldReference)) {
                const form = fieldReference.closest("form");
                if (form) {
                  form.reset();
                  break;
                }
              }
            }
          }
        }
        _fields = {};
      }
      _formValues = props.shouldUnregister ? keepStateOptions.keepDefaultValues ? cloneObject(_defaultValues) : {} : cloneObject(values2);
      _subjects.array.next({
        values: { ...values2 }
      });
      _subjects.values.next({
        values: { ...values2 }
      });
    }
    _names = {
      mount: /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: false,
      focus: ""
    };
    !_state.mount && flushRootRender();
    _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;
    _state.watch = !!props.shouldUnregister;
    _subjects.state.next({
      submitCount: keepStateOptions.keepSubmitCount ? _formState.submitCount : 0,
      isDirty: keepStateOptions.keepDirty ? _formState.isDirty : !!(keepStateOptions.keepDefaultValues && !deepEqual2(formValues, _defaultValues)),
      isSubmitted: keepStateOptions.keepIsSubmitted ? _formState.isSubmitted : false,
      dirtyFields: keepStateOptions.keepDirtyValues ? _formState.dirtyFields : keepStateOptions.keepDefaultValues && formValues ? getDirtyFields(_defaultValues, formValues) : {},
      touchedFields: keepStateOptions.keepTouched ? _formState.touchedFields : {},
      errors: keepStateOptions.keepErrors ? _formState.errors : {},
      isSubmitting: false,
      isSubmitSuccessful: false
    });
  };
  const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues) ? formValues(_formValues) : formValues, keepStateOptions);
  const setFocus = (name, options = {}) => {
    const field = get(_fields, name);
    const fieldReference = field && field._f;
    if (fieldReference) {
      const fieldRef = fieldReference.refs ? fieldReference.refs[0] : fieldReference.ref;
      if (fieldRef.focus) {
        fieldRef.focus();
        options.shouldSelect && fieldRef.select();
      }
    }
  };
  const _updateFormState = (updatedFormState) => {
    _formState = {
      ..._formState,
      ...updatedFormState
    };
  };
  const _resetDefaultValues = () => isFunction(_options.defaultValues) && _options.defaultValues().then((values2) => {
    reset(values2, _options.resetOptions);
    _subjects.state.next({
      isLoading: false
    });
  });
  return {
    control: {
      register,
      unregister,
      getFieldState,
      handleSubmit,
      setError,
      _executeSchema,
      _getWatch,
      _getDirty,
      _updateValid,
      _removeUnmounted,
      _updateFieldArray,
      _getFieldArray,
      _reset,
      _resetDefaultValues,
      _updateFormState,
      _subjects,
      _proxyFormState,
      get _fields() {
        return _fields;
      },
      get _formValues() {
        return _formValues;
      },
      get _state() {
        return _state;
      },
      set _state(value) {
        _state = value;
      },
      get _defaultValues() {
        return _defaultValues;
      },
      get _names() {
        return _names;
      },
      set _names(value) {
        _names = value;
      },
      get _formState() {
        return _formState;
      },
      set _formState(value) {
        _formState = value;
      },
      get _options() {
        return _options;
      },
      set _options(value) {
        _options = {
          ..._options,
          ...value
        };
      }
    },
    trigger,
    register,
    handleSubmit,
    watch,
    setValue,
    getValues,
    reset,
    resetField,
    clearErrors,
    unregister,
    setError,
    setFocus,
    getFieldState
  };
}
function useForm(props = {}) {
  const _formControl = import_react26.default.useRef();
  const _values = import_react26.default.useRef();
  const [formState, updateFormState] = import_react26.default.useState({
    isDirty: false,
    isValidating: false,
    isLoading: isFunction(props.defaultValues),
    isSubmitted: false,
    isSubmitting: false,
    isSubmitSuccessful: false,
    isValid: false,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    errors: {},
    defaultValues: isFunction(props.defaultValues) ? void 0 : props.defaultValues
  });
  if (!_formControl.current) {
    _formControl.current = {
      ...createFormControl(props, () => updateFormState((formState2) => ({ ...formState2 }))),
      formState
    };
  }
  const control = _formControl.current.control;
  control._options = props;
  useSubscribe({
    subject: control._subjects.state,
    next: (value) => {
      if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {
        updateFormState({ ...control._formState });
      }
    }
  });
  import_react26.default.useEffect(() => {
    if (props.values && !deepEqual2(props.values, _values.current)) {
      control._reset(props.values, control._options.resetOptions);
      _values.current = props.values;
    } else {
      control._resetDefaultValues();
    }
  }, [props.values, control]);
  import_react26.default.useEffect(() => {
    if (!control._state.mount) {
      control._updateValid();
      control._state.mount = true;
    }
    if (control._state.watch) {
      control._state.watch = false;
      control._subjects.state.next({ ...control._formState });
    }
    control._removeUnmounted();
  });
  _formControl.current.formState = getProxyFormState(formState, control);
  return _formControl.current;
}

// node_modules/@radix-ui/react-collapsible/dist/index.mjs
var import_react27 = __toESM(require_react(), 1);
var $409067139f391064$var$COLLAPSIBLE_NAME = "Collapsible";
var [$409067139f391064$var$createCollapsibleContext, $409067139f391064$export$952b32dcbe73087a] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($409067139f391064$var$COLLAPSIBLE_NAME);
var [$409067139f391064$var$CollapsibleProvider, $409067139f391064$var$useCollapsibleContext] = $409067139f391064$var$createCollapsibleContext($409067139f391064$var$COLLAPSIBLE_NAME);
var $409067139f391064$export$6eb0f7ddcda6131f = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeCollapsible, open: openProp, defaultOpen, disabled, onOpenChange, ...collapsibleProps } = props;
  const [open2 = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return (0, import_react27.createElement)($409067139f391064$var$CollapsibleProvider, {
    scope: __scopeCollapsible,
    disabled,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    open: open2,
    onOpenToggle: (0, import_react27.useCallback)(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    )
  }, (0, import_react27.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    "data-state": $409067139f391064$var$getState(open2),
    "data-disabled": disabled ? "" : void 0
  }, collapsibleProps, {
    ref: forwardedRef
  })));
});
Object.assign($409067139f391064$export$6eb0f7ddcda6131f, {
  displayName: $409067139f391064$var$COLLAPSIBLE_NAME
});
var $409067139f391064$var$TRIGGER_NAME = "CollapsibleTrigger";
var $409067139f391064$export$c135dce7b15bbbdc = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeCollapsible, ...triggerProps } = props;
  const context = $409067139f391064$var$useCollapsibleContext($409067139f391064$var$TRIGGER_NAME, __scopeCollapsible);
  return (0, import_react27.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button",
    "aria-controls": context.contentId,
    "aria-expanded": context.open || false,
    "data-state": $409067139f391064$var$getState(context.open),
    "data-disabled": context.disabled ? "" : void 0,
    disabled: context.disabled
  }, triggerProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onOpenToggle)
  }));
});
Object.assign($409067139f391064$export$c135dce7b15bbbdc, {
  displayName: $409067139f391064$var$TRIGGER_NAME
});
var $409067139f391064$var$CONTENT_NAME = "CollapsibleContent";
var $409067139f391064$export$aadde00976f34151 = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { forceMount, ...contentProps } = props;
  const context = $409067139f391064$var$useCollapsibleContext($409067139f391064$var$CONTENT_NAME, props.__scopeCollapsible);
  return (0, import_react27.createElement)(
    $921a889cee6df7e8$export$99c2b779aa4e8b8b,
    {
      present: forceMount || context.open
    },
    ({ present }) => (0, import_react27.createElement)($409067139f391064$var$CollapsibleContentImpl, _extends({}, contentProps, {
      ref: forwardedRef,
      present
    }))
  );
});
Object.assign($409067139f391064$export$aadde00976f34151, {
  displayName: $409067139f391064$var$CONTENT_NAME
});
var $409067139f391064$var$CollapsibleContentImpl = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeCollapsible, present, children, ...contentProps } = props;
  const context = $409067139f391064$var$useCollapsibleContext($409067139f391064$var$CONTENT_NAME, __scopeCollapsible);
  const [isPresent, setIsPresent] = (0, import_react27.useState)(present);
  const ref = (0, import_react27.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const heightRef = (0, import_react27.useRef)(0);
  const height = heightRef.current;
  const widthRef = (0, import_react27.useRef)(0);
  const width = widthRef.current;
  const isOpen = context.open || isPresent;
  const isMountAnimationPreventedRef = (0, import_react27.useRef)(isOpen);
  const originalStylesRef = (0, import_react27.useRef)();
  (0, import_react27.useEffect)(() => {
    const rAF = requestAnimationFrame(
      () => isMountAnimationPreventedRef.current = false
    );
    return () => cancelAnimationFrame(rAF);
  }, []);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    const node = ref.current;
    if (node) {
      originalStylesRef.current = originalStylesRef.current || {
        transitionDuration: node.style.transitionDuration,
        animationName: node.style.animationName
      };
      node.style.transitionDuration = "0s";
      node.style.animationName = "none";
      const rect = node.getBoundingClientRect();
      heightRef.current = rect.height;
      widthRef.current = rect.width;
      if (!isMountAnimationPreventedRef.current) {
        node.style.transitionDuration = originalStylesRef.current.transitionDuration;
        node.style.animationName = originalStylesRef.current.animationName;
      }
      setIsPresent(present);
    }
  }, [
    context.open,
    present
  ]);
  return (0, import_react27.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    "data-state": $409067139f391064$var$getState(context.open),
    "data-disabled": context.disabled ? "" : void 0,
    id: context.contentId,
    hidden: !isOpen
  }, contentProps, {
    ref: composedRefs,
    style: {
      [`--radix-collapsible-content-height`]: height ? `${height}px` : void 0,
      [`--radix-collapsible-content-width`]: width ? `${width}px` : void 0,
      ...props.style
    }
  }), isOpen && children);
});
function $409067139f391064$var$getState(open2) {
  return open2 ? "open" : "closed";
}
var $409067139f391064$export$be92b6f5f03c0fe9 = $409067139f391064$export$6eb0f7ddcda6131f;
var $409067139f391064$export$41fb9f06171c75f4 = $409067139f391064$export$c135dce7b15bbbdc;
var $409067139f391064$export$7c6e2c02157bb7d2 = $409067139f391064$export$aadde00976f34151;

// node_modules/@radix-ui/react-dialog/dist/index.mjs
var import_react33 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-focus-scope/dist/index.mjs
var import_react28 = __toESM(require_react(), 1);
var $d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT = "focusScope.autoFocusOnMount";
var $d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT = "focusScope.autoFocusOnUnmount";
var $d3863c46a17e8a28$var$EVENT_OPTIONS = {
  bubbles: false,
  cancelable: true
};
var $d3863c46a17e8a28$var$FOCUS_SCOPE_NAME = "FocusScope";
var $d3863c46a17e8a28$export$20e40289641fbbb6 = (0, import_react28.forwardRef)((props, forwardedRef) => {
  const { loop = false, trapped = false, onMountAutoFocus: onMountAutoFocusProp, onUnmountAutoFocus: onUnmountAutoFocusProp, ...scopeProps } = props;
  const [container1, setContainer] = (0, import_react28.useState)(null);
  const onMountAutoFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onMountAutoFocusProp);
  const onUnmountAutoFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onUnmountAutoFocusProp);
  const lastFocusedElementRef = (0, import_react28.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContainer(node)
  );
  const focusScope = (0, import_react28.useRef)({
    paused: false,
    pause() {
      this.paused = true;
    },
    resume() {
      this.paused = false;
    }
  }).current;
  (0, import_react28.useEffect)(() => {
    if (trapped) {
      let handleFocusIn = function(event) {
        if (focusScope.paused || !container1)
          return;
        const target = event.target;
        if (container1.contains(target))
          lastFocusedElementRef.current = target;
        else
          $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {
            select: true
          });
      }, handleFocusOut = function(event) {
        if (focusScope.paused || !container1)
          return;
        const relatedTarget = event.relatedTarget;
        if (relatedTarget === null)
          return;
        if (!container1.contains(relatedTarget))
          $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {
            select: true
          });
      }, handleMutations = function(mutations) {
        const focusedElement = document.activeElement;
        for (const mutation of mutations) {
          if (mutation.removedNodes.length > 0) {
            if (!(container1 !== null && container1 !== void 0 && container1.contains(focusedElement)))
              $d3863c46a17e8a28$var$focus(container1);
          }
        }
      };
      document.addEventListener("focusin", handleFocusIn);
      document.addEventListener("focusout", handleFocusOut);
      const mutationObserver = new MutationObserver(handleMutations);
      if (container1)
        mutationObserver.observe(container1, {
          childList: true,
          subtree: true
        });
      return () => {
        document.removeEventListener("focusin", handleFocusIn);
        document.removeEventListener("focusout", handleFocusOut);
        mutationObserver.disconnect();
      };
    }
  }, [
    trapped,
    container1,
    focusScope.paused
  ]);
  (0, import_react28.useEffect)(() => {
    if (container1) {
      $d3863c46a17e8a28$var$focusScopesStack.add(focusScope);
      const previouslyFocusedElement = document.activeElement;
      const hasFocusedCandidate = container1.contains(previouslyFocusedElement);
      if (!hasFocusedCandidate) {
        const mountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);
        container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
        container1.dispatchEvent(mountEvent);
        if (!mountEvent.defaultPrevented) {
          $d3863c46a17e8a28$var$focusFirst($d3863c46a17e8a28$var$removeLinks($d3863c46a17e8a28$var$getTabbableCandidates(container1)), {
            select: true
          });
          if (document.activeElement === previouslyFocusedElement)
            $d3863c46a17e8a28$var$focus(container1);
        }
      }
      return () => {
        container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
        setTimeout(() => {
          const unmountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);
          container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
          container1.dispatchEvent(unmountEvent);
          if (!unmountEvent.defaultPrevented)
            $d3863c46a17e8a28$var$focus(previouslyFocusedElement !== null && previouslyFocusedElement !== void 0 ? previouslyFocusedElement : document.body, {
              select: true
            });
          container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
          $d3863c46a17e8a28$var$focusScopesStack.remove(focusScope);
        }, 0);
      };
    }
  }, [
    container1,
    onMountAutoFocus,
    onUnmountAutoFocus,
    focusScope
  ]);
  const handleKeyDown = (0, import_react28.useCallback)((event) => {
    if (!loop && !trapped)
      return;
    if (focusScope.paused)
      return;
    const isTabKey = event.key === "Tab" && !event.altKey && !event.ctrlKey && !event.metaKey;
    const focusedElement = document.activeElement;
    if (isTabKey && focusedElement) {
      const container = event.currentTarget;
      const [first, last] = $d3863c46a17e8a28$var$getTabbableEdges(container);
      const hasTabbableElementsInside = first && last;
      if (!hasTabbableElementsInside) {
        if (focusedElement === container)
          event.preventDefault();
      } else {
        if (!event.shiftKey && focusedElement === last) {
          event.preventDefault();
          if (loop)
            $d3863c46a17e8a28$var$focus(first, {
              select: true
            });
        } else if (event.shiftKey && focusedElement === first) {
          event.preventDefault();
          if (loop)
            $d3863c46a17e8a28$var$focus(last, {
              select: true
            });
        }
      }
    }
  }, [
    loop,
    trapped,
    focusScope.paused
  ]);
  return (0, import_react28.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    tabIndex: -1
  }, scopeProps, {
    ref: composedRefs,
    onKeyDown: handleKeyDown
  }));
});
Object.assign($d3863c46a17e8a28$export$20e40289641fbbb6, {
  displayName: $d3863c46a17e8a28$var$FOCUS_SCOPE_NAME
});
function $d3863c46a17e8a28$var$focusFirst(candidates, { select = false } = {}) {
  const previouslyFocusedElement = document.activeElement;
  for (const candidate of candidates) {
    $d3863c46a17e8a28$var$focus(candidate, {
      select
    });
    if (document.activeElement !== previouslyFocusedElement)
      return;
  }
}
function $d3863c46a17e8a28$var$getTabbableEdges(container) {
  const candidates = $d3863c46a17e8a28$var$getTabbableCandidates(container);
  const first = $d3863c46a17e8a28$var$findVisible(candidates, container);
  const last = $d3863c46a17e8a28$var$findVisible(candidates.reverse(), container);
  return [
    first,
    last
  ];
}
function $d3863c46a17e8a28$var$getTabbableCandidates(container) {
  const nodes = [];
  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      if (node.disabled || node.hidden || isHiddenInput)
        return NodeFilter.FILTER_SKIP;
      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  while (walker.nextNode())
    nodes.push(walker.currentNode);
  return nodes;
}
function $d3863c46a17e8a28$var$findVisible(elements, container) {
  for (const element of elements) {
    if (!$d3863c46a17e8a28$var$isHidden(element, {
      upTo: container
    }))
      return element;
  }
}
function $d3863c46a17e8a28$var$isHidden(node, { upTo }) {
  if (getComputedStyle(node).visibility === "hidden")
    return true;
  while (node) {
    if (upTo !== void 0 && node === upTo)
      return false;
    if (getComputedStyle(node).display === "none")
      return true;
    node = node.parentElement;
  }
  return false;
}
function $d3863c46a17e8a28$var$isSelectableInput(element) {
  return element instanceof HTMLInputElement && "select" in element;
}
function $d3863c46a17e8a28$var$focus(element, { select = false } = {}) {
  if (element && element.focus) {
    const previouslyFocusedElement = document.activeElement;
    element.focus({
      preventScroll: true
    });
    if (element !== previouslyFocusedElement && $d3863c46a17e8a28$var$isSelectableInput(element) && select)
      element.select();
  }
}
var $d3863c46a17e8a28$var$focusScopesStack = $d3863c46a17e8a28$var$createFocusScopesStack();
function $d3863c46a17e8a28$var$createFocusScopesStack() {
  let stack = [];
  return {
    add(focusScope) {
      const activeFocusScope = stack[0];
      if (focusScope !== activeFocusScope)
        activeFocusScope === null || activeFocusScope === void 0 || activeFocusScope.pause();
      stack = $d3863c46a17e8a28$var$arrayRemove(stack, focusScope);
      stack.unshift(focusScope);
    },
    remove(focusScope) {
      var _stack$;
      stack = $d3863c46a17e8a28$var$arrayRemove(stack, focusScope);
      (_stack$ = stack[0]) === null || _stack$ === void 0 || _stack$.resume();
    }
  };
}
function $d3863c46a17e8a28$var$arrayRemove(array, item) {
  const updatedArray = [
    ...array
  ];
  const index2 = updatedArray.indexOf(item);
  if (index2 !== -1)
    updatedArray.splice(index2, 1);
  return updatedArray;
}
function $d3863c46a17e8a28$var$removeLinks(items) {
  return items.filter(
    (item) => item.tagName !== "A"
  );
}

// node_modules/@radix-ui/react-focus-guards/dist/index.mjs
var import_react29 = __toESM(require_react(), 1);
var $3db38b7d1fb3fe6a$var$count = 0;
function $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c() {
  (0, import_react29.useEffect)(() => {
    var _edgeGuards$, _edgeGuards$2;
    const edgeGuards = document.querySelectorAll("[data-radix-focus-guard]");
    document.body.insertAdjacentElement("afterbegin", (_edgeGuards$ = edgeGuards[0]) !== null && _edgeGuards$ !== void 0 ? _edgeGuards$ : $3db38b7d1fb3fe6a$var$createFocusGuard());
    document.body.insertAdjacentElement("beforeend", (_edgeGuards$2 = edgeGuards[1]) !== null && _edgeGuards$2 !== void 0 ? _edgeGuards$2 : $3db38b7d1fb3fe6a$var$createFocusGuard());
    $3db38b7d1fb3fe6a$var$count++;
    return () => {
      if ($3db38b7d1fb3fe6a$var$count === 1)
        document.querySelectorAll("[data-radix-focus-guard]").forEach(
          (node) => node.remove()
        );
      $3db38b7d1fb3fe6a$var$count--;
    };
  }, []);
}
function $3db38b7d1fb3fe6a$var$createFocusGuard() {
  const element = document.createElement("span");
  element.setAttribute("data-radix-focus-guard", "");
  element.tabIndex = 0;
  element.style.cssText = "outline: none; opacity: 0; position: fixed; pointer-events: none";
  return element;
}

// node_modules/react-remove-scroll/node_modules/tslib/tslib.es6.js
var __assign = function() {
  __assign = Object.assign || function __assign3(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
function __rest(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
}

// node_modules/react-remove-scroll/dist/es2015/Combination.js
var React10 = __toESM(require_react());

// node_modules/react-remove-scroll/dist/es2015/UI.js
var React6 = __toESM(require_react());

// node_modules/react-remove-scroll-bar/dist/es2015/constants.js
var zeroRightClassName = "right-scroll-bar-position";
var fullWidthClassName = "width-before-scroll-bar";
var noScrollbarsClassName = "with-scroll-bars-hidden";
var removedBarSizeVariable = "--removed-body-scroll-bar-size";

// node_modules/use-callback-ref/dist/es2015/assignRef.js
function assignRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
  return ref;
}

// node_modules/use-callback-ref/dist/es2015/useRef.js
var import_react30 = __toESM(require_react());
function useCallbackRef(initialValue, callback) {
  var ref = (0, import_react30.useState)(function() {
    return {
      value: initialValue,
      callback,
      facade: {
        get current() {
          return ref.value;
        },
        set current(value) {
          var last = ref.value;
          if (last !== value) {
            ref.value = value;
            ref.callback(value, last);
          }
        }
      }
    };
  })[0];
  ref.callback = callback;
  return ref.facade;
}

// node_modules/use-callback-ref/dist/es2015/useMergeRef.js
function useMergeRefs(refs, defaultValue) {
  return useCallbackRef(defaultValue || null, function(newValue) {
    return refs.forEach(function(ref) {
      return assignRef(ref, newValue);
    });
  });
}

// node_modules/use-sidecar/node_modules/tslib/tslib.es6.js
var __assign2 = function() {
  __assign2 = Object.assign || function __assign3(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
function __rest2(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}

// node_modules/use-sidecar/dist/es2015/hoc.js
var React3 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/hook.js
var import_react31 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/medium.js
function ItoI(a) {
  return a;
}
function innerCreateMedium(defaults, middleware) {
  if (middleware === void 0) {
    middleware = ItoI;
  }
  var buffer = [];
  var assigned = false;
  var medium = {
    read: function() {
      if (assigned) {
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      }
      if (buffer.length) {
        return buffer[buffer.length - 1];
      }
      return defaults;
    },
    useMedium: function(data2) {
      var item = middleware(data2, assigned);
      buffer.push(item);
      return function() {
        buffer = buffer.filter(function(x) {
          return x !== item;
        });
      };
    },
    assignSyncMedium: function(cb) {
      assigned = true;
      while (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb);
      }
      buffer = {
        push: function(x) {
          return cb(x);
        },
        filter: function() {
          return buffer;
        }
      };
    },
    assignMedium: function(cb) {
      assigned = true;
      var pendingQueue = [];
      if (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb);
        pendingQueue = buffer;
      }
      var executeQueue = function() {
        var cbs2 = pendingQueue;
        pendingQueue = [];
        cbs2.forEach(cb);
      };
      var cycle = function() {
        return Promise.resolve().then(executeQueue);
      };
      cycle();
      buffer = {
        push: function(x) {
          pendingQueue.push(x);
          cycle();
        },
        filter: function(filter) {
          pendingQueue = pendingQueue.filter(filter);
          return buffer;
        }
      };
    }
  };
  return medium;
}
function createSidecarMedium(options) {
  if (options === void 0) {
    options = {};
  }
  var medium = innerCreateMedium(null);
  medium.options = __assign2({ async: true, ssr: false }, options);
  return medium;
}

// node_modules/use-sidecar/dist/es2015/renderProp.js
var React4 = __toESM(require_react());
var import_react32 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/exports.js
var React5 = __toESM(require_react());
var SideCar = function(_a) {
  var sideCar = _a.sideCar, rest = __rest2(_a, ["sideCar"]);
  if (!sideCar) {
    throw new Error("Sidecar: please provide `sideCar` property to import the right car");
  }
  var Target = sideCar.read();
  if (!Target) {
    throw new Error("Sidecar medium not found");
  }
  return React5.createElement(Target, __assign2({}, rest));
};
SideCar.isSideCarExport = true;
function exportSidecar(medium, exported) {
  medium.useMedium(exported);
  return SideCar;
}

// node_modules/react-remove-scroll/dist/es2015/medium.js
var effectCar = createSidecarMedium();

// node_modules/react-remove-scroll/dist/es2015/UI.js
var nothing = function() {
  return;
};
var RemoveScroll = React6.forwardRef(function(props, parentRef) {
  var ref = React6.useRef(null);
  var _a = React6.useState({
    onScrollCapture: nothing,
    onWheelCapture: nothing,
    onTouchMoveCapture: nothing
  }), callbacks = _a[0], setCallbacks = _a[1];
  var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container2 = _b === void 0 ? "div" : _b, rest = __rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"]);
  var SideCar2 = sideCar;
  var containerRef = useMergeRefs([ref, parentRef]);
  var containerProps = __assign(__assign({}, rest), callbacks);
  return React6.createElement(
    React6.Fragment,
    null,
    enabled && React6.createElement(SideCar2, { sideCar: effectCar, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref }),
    forwardProps ? React6.cloneElement(React6.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef })) : React6.createElement(Container2, __assign({}, containerProps, { className, ref: containerRef }), children)
  );
});
RemoveScroll.defaultProps = {
  enabled: true,
  removeScrollBar: true,
  inert: false
};
RemoveScroll.classNames = {
  fullWidth: fullWidthClassName,
  zeroRight: zeroRightClassName
};

// node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var React9 = __toESM(require_react());

// node_modules/react-remove-scroll-bar/dist/es2015/component.js
var React8 = __toESM(require_react());

// node_modules/react-style-singleton/dist/es2015/hook.js
var React7 = __toESM(require_react());

// node_modules/get-nonce/dist/es2015/index.js
var currentNonce;
var getNonce = function() {
  if (currentNonce) {
    return currentNonce;
  }
  if (typeof __webpack_nonce__ !== "undefined") {
    return __webpack_nonce__;
  }
  return void 0;
};

// node_modules/react-style-singleton/dist/es2015/singleton.js
function makeStyleTag() {
  if (!document)
    return null;
  var tag = document.createElement("style");
  tag.type = "text/css";
  var nonce = getNonce();
  if (nonce) {
    tag.setAttribute("nonce", nonce);
  }
  return tag;
}
function injectStyles(tag, css) {
  if (tag.styleSheet) {
    tag.styleSheet.cssText = css;
  } else {
    tag.appendChild(document.createTextNode(css));
  }
}
function insertStyleTag(tag) {
  var head = document.head || document.getElementsByTagName("head")[0];
  head.appendChild(tag);
}
var stylesheetSingleton = function() {
  var counter = 0;
  var stylesheet = null;
  return {
    add: function(style) {
      if (counter == 0) {
        if (stylesheet = makeStyleTag()) {
          injectStyles(stylesheet, style);
          insertStyleTag(stylesheet);
        }
      }
      counter++;
    },
    remove: function() {
      counter--;
      if (!counter && stylesheet) {
        stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
        stylesheet = null;
      }
    }
  };
};

// node_modules/react-style-singleton/dist/es2015/hook.js
var styleHookSingleton = function() {
  var sheet = stylesheetSingleton();
  return function(styles, isDynamic) {
    React7.useEffect(function() {
      sheet.add(styles);
      return function() {
        sheet.remove();
      };
    }, [styles && isDynamic]);
  };
};

// node_modules/react-style-singleton/dist/es2015/component.js
var styleSingleton = function() {
  var useStyle = styleHookSingleton();
  var Sheet = function(_a) {
    var styles = _a.styles, dynamic = _a.dynamic;
    useStyle(styles, dynamic);
    return null;
  };
  return Sheet;
};

// node_modules/react-remove-scroll-bar/dist/es2015/utils.js
var zeroGap = {
  left: 0,
  top: 0,
  right: 0,
  gap: 0
};
var parse = function(x) {
  return parseInt(x || "", 10) || 0;
};
var getOffset = function(gapMode) {
  var cs = window.getComputedStyle(document.body);
  var left = cs[gapMode === "padding" ? "paddingLeft" : "marginLeft"];
  var top = cs[gapMode === "padding" ? "paddingTop" : "marginTop"];
  var right = cs[gapMode === "padding" ? "paddingRight" : "marginRight"];
  return [parse(left), parse(top), parse(right)];
};
var getGapWidth = function(gapMode) {
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  if (typeof window === "undefined") {
    return zeroGap;
  }
  var offsets = getOffset(gapMode);
  var documentWidth = document.documentElement.clientWidth;
  var windowWidth = window.innerWidth;
  return {
    left: offsets[0],
    top: offsets[1],
    right: offsets[2],
    gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
  };
};

// node_modules/react-remove-scroll-bar/dist/es2015/component.js
var Style = styleSingleton();
var getStyles = function(_a, allowRelative, gapMode, important) {
  var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  return "\n  .".concat(noScrollbarsClassName, " {\n   overflow: hidden ").concat(important, ";\n   padding-right: ").concat(gap, "px ").concat(important, ";\n  }\n  body {\n    overflow: hidden ").concat(important, ";\n    overscroll-behavior: contain;\n    ").concat([
    allowRelative && "position: relative ".concat(important, ";"),
    gapMode === "margin" && "\n    padding-left: ".concat(left, "px;\n    padding-top: ").concat(top, "px;\n    padding-right: ").concat(right, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(gap, "px ").concat(important, ";\n    "),
    gapMode === "padding" && "padding-right: ".concat(gap, "px ").concat(important, ";")
  ].filter(Boolean).join(""), "\n  }\n  \n  .").concat(zeroRightClassName, " {\n    right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " {\n    margin-right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(zeroRightClassName, " .").concat(zeroRightClassName, " {\n    right: 0 ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " .").concat(fullWidthClassName, " {\n    margin-right: 0 ").concat(important, ";\n  }\n  \n  body {\n    ").concat(removedBarSizeVariable, ": ").concat(gap, "px;\n  }\n");
};
var RemoveScrollBar = function(props) {
  var noRelative = props.noRelative, noImportant = props.noImportant, _a = props.gapMode, gapMode = _a === void 0 ? "margin" : _a;
  var gap = React8.useMemo(function() {
    return getGapWidth(gapMode);
  }, [gapMode]);
  return React8.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? "!important" : "") });
};

// node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js
var passiveSupported = false;
if (typeof window !== "undefined") {
  try {
    options = Object.defineProperty({}, "passive", {
      get: function() {
        passiveSupported = true;
        return true;
      }
    });
    window.addEventListener("test", options, options);
    window.removeEventListener("test", options, options);
  } catch (err) {
    passiveSupported = false;
  }
}
var options;
var nonPassive = passiveSupported ? { passive: false } : false;

// node_modules/react-remove-scroll/dist/es2015/handleScroll.js
var alwaysContainsScroll = function(node) {
  return node.tagName === "TEXTAREA";
};
var elementCanBeScrolled = function(node, overflow) {
  var styles = window.getComputedStyle(node);
  return styles[overflow] !== "hidden" && !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === "visible");
};
var elementCouldBeVScrolled = function(node) {
  return elementCanBeScrolled(node, "overflowY");
};
var elementCouldBeHScrolled = function(node) {
  return elementCanBeScrolled(node, "overflowX");
};
var locationCouldBeScrolled = function(axis, node) {
  var current = node;
  do {
    if (typeof ShadowRoot !== "undefined" && current instanceof ShadowRoot) {
      current = current.host;
    }
    var isScrollable = elementCouldBeScrolled(axis, current);
    if (isScrollable) {
      var _a = getScrollVariables(axis, current), s = _a[1], d = _a[2];
      if (s > d) {
        return true;
      }
    }
    current = current.parentNode;
  } while (current && current !== document.body);
  return false;
};
var getVScrollVariables = function(_a) {
  var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
  return [
    scrollTop,
    scrollHeight,
    clientHeight
  ];
};
var getHScrollVariables = function(_a) {
  var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
  return [
    scrollLeft,
    scrollWidth,
    clientWidth
  ];
};
var elementCouldBeScrolled = function(axis, node) {
  return axis === "v" ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
};
var getScrollVariables = function(axis, node) {
  return axis === "v" ? getVScrollVariables(node) : getHScrollVariables(node);
};
var getDirectionFactor = function(axis, direction) {
  return axis === "h" && direction === "rtl" ? -1 : 1;
};
var handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
  var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);
  var delta = directionFactor * sourceDelta;
  var target = event.target;
  var targetInLock = endTarget.contains(target);
  var shouldCancelScroll = false;
  var isDeltaPositive = delta > 0;
  var availableScroll = 0;
  var availableScrollTop = 0;
  do {
    var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];
    var elementScroll = scroll_1 - capacity - directionFactor * position;
    if (position || elementScroll) {
      if (elementCouldBeScrolled(axis, target)) {
        availableScroll += elementScroll;
        availableScrollTop += position;
      }
    }
    target = target.parentNode;
  } while (!targetInLock && target !== document.body || targetInLock && (endTarget.contains(target) || endTarget === target));
  if (isDeltaPositive && (noOverscroll && availableScroll === 0 || !noOverscroll && delta > availableScroll)) {
    shouldCancelScroll = true;
  } else if (!isDeltaPositive && (noOverscroll && availableScrollTop === 0 || !noOverscroll && -delta > availableScrollTop)) {
    shouldCancelScroll = true;
  }
  return shouldCancelScroll;
};

// node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var getTouchXY = function(event) {
  return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
};
var getDeltaXY = function(event) {
  return [event.deltaX, event.deltaY];
};
var extractRef = function(ref) {
  return ref && "current" in ref ? ref.current : ref;
};
var deltaCompare = function(x, y) {
  return x[0] === y[0] && x[1] === y[1];
};
var generateStyle = function(id2) {
  return "\n  .block-interactivity-".concat(id2, " {pointer-events: none;}\n  .allow-interactivity-").concat(id2, " {pointer-events: all;}\n");
};
var idCounter = 0;
var lockStack = [];
function RemoveScrollSideCar(props) {
  var shouldPreventQueue = React9.useRef([]);
  var touchStartRef = React9.useRef([0, 0]);
  var activeAxis = React9.useRef();
  var id2 = React9.useState(idCounter++)[0];
  var Style2 = React9.useState(function() {
    return styleSingleton();
  })[0];
  var lastProps = React9.useRef(props);
  React9.useEffect(function() {
    lastProps.current = props;
  }, [props]);
  React9.useEffect(function() {
    if (props.inert) {
      document.body.classList.add("block-interactivity-".concat(id2));
      var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);
      allow_1.forEach(function(el) {
        return el.classList.add("allow-interactivity-".concat(id2));
      });
      return function() {
        document.body.classList.remove("block-interactivity-".concat(id2));
        allow_1.forEach(function(el) {
          return el.classList.remove("allow-interactivity-".concat(id2));
        });
      };
    }
    return;
  }, [props.inert, props.lockRef.current, props.shards]);
  var shouldCancelEvent = React9.useCallback(function(event, parent) {
    if ("touches" in event && event.touches.length === 2) {
      return !lastProps.current.allowPinchZoom;
    }
    var touch = getTouchXY(event);
    var touchStart = touchStartRef.current;
    var deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0];
    var deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1];
    var currentAxis;
    var target = event.target;
    var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
    if ("touches" in event && moveDirection === "h" && target.type === "range") {
      return false;
    }
    var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    if (!canBeScrolledInMainDirection) {
      return true;
    }
    if (canBeScrolledInMainDirection) {
      currentAxis = moveDirection;
    } else {
      currentAxis = moveDirection === "v" ? "h" : "v";
      canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    }
    if (!canBeScrolledInMainDirection) {
      return false;
    }
    if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY)) {
      activeAxis.current = currentAxis;
    }
    if (!currentAxis) {
      return true;
    }
    var cancelingAxis = activeAxis.current || currentAxis;
    return handleScroll(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, true);
  }, []);
  var shouldPrevent = React9.useCallback(function(_event) {
    var event = _event;
    if (!lockStack.length || lockStack[lockStack.length - 1] !== Style2) {
      return;
    }
    var delta = "deltaY" in event ? getDeltaXY(event) : getTouchXY(event);
    var sourceEvent = shouldPreventQueue.current.filter(function(e) {
      return e.name === event.type && e.target === event.target && deltaCompare(e.delta, delta);
    })[0];
    if (sourceEvent && sourceEvent.should) {
      if (event.cancelable) {
        event.preventDefault();
      }
      return;
    }
    if (!sourceEvent) {
      var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function(node) {
        return node.contains(event.target);
      });
      var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
      if (shouldStop) {
        if (event.cancelable) {
          event.preventDefault();
        }
      }
    }
  }, []);
  var shouldCancel = React9.useCallback(function(name, delta, target, should) {
    var event = { name, delta, target, should };
    shouldPreventQueue.current.push(event);
    setTimeout(function() {
      shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e) {
        return e !== event;
      });
    }, 1);
  }, []);
  var scrollTouchStart = React9.useCallback(function(event) {
    touchStartRef.current = getTouchXY(event);
    activeAxis.current = void 0;
  }, []);
  var scrollWheel = React9.useCallback(function(event) {
    shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  var scrollTouchMove = React9.useCallback(function(event) {
    shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  React9.useEffect(function() {
    lockStack.push(Style2);
    props.setCallbacks({
      onScrollCapture: scrollWheel,
      onWheelCapture: scrollWheel,
      onTouchMoveCapture: scrollTouchMove
    });
    document.addEventListener("wheel", shouldPrevent, nonPassive);
    document.addEventListener("touchmove", shouldPrevent, nonPassive);
    document.addEventListener("touchstart", scrollTouchStart, nonPassive);
    return function() {
      lockStack = lockStack.filter(function(inst) {
        return inst !== Style2;
      });
      document.removeEventListener("wheel", shouldPrevent, nonPassive);
      document.removeEventListener("touchmove", shouldPrevent, nonPassive);
      document.removeEventListener("touchstart", scrollTouchStart, nonPassive);
    };
  }, []);
  var removeScrollBar = props.removeScrollBar, inert = props.inert;
  return React9.createElement(
    React9.Fragment,
    null,
    inert ? React9.createElement(Style2, { styles: generateStyle(id2) }) : null,
    removeScrollBar ? React9.createElement(RemoveScrollBar, { gapMode: "margin" }) : null
  );
}

// node_modules/react-remove-scroll/dist/es2015/sidecar.js
var sidecar_default = exportSidecar(effectCar, RemoveScrollSideCar);

// node_modules/react-remove-scroll/dist/es2015/Combination.js
var ReactRemoveScroll = React10.forwardRef(function(props, ref) {
  return React10.createElement(RemoveScroll, __assign({}, props, { ref, sideCar: sidecar_default }));
});
ReactRemoveScroll.classNames = RemoveScroll.classNames;
var Combination_default = ReactRemoveScroll;

// node_modules/aria-hidden/dist/es2015/index.js
var getDefaultParent = function(originalTarget) {
  if (typeof document === "undefined") {
    return null;
  }
  var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
  return sampleTarget.ownerDocument.body;
};
var counterMap = /* @__PURE__ */ new WeakMap();
var uncontrolledNodes = /* @__PURE__ */ new WeakMap();
var markerMap = {};
var lockCount = 0;
var unwrapHost = function(node) {
  return node && (node.host || unwrapHost(node.parentNode));
};
var correctTargets = function(parent, targets) {
  return targets.map(function(target) {
    if (parent.contains(target)) {
      return target;
    }
    var correctedTarget = unwrapHost(target);
    if (correctedTarget && parent.contains(correctedTarget)) {
      return correctedTarget;
    }
    console.error("aria-hidden", target, "in not contained inside", parent, ". Doing nothing");
    return null;
  }).filter(function(x) {
    return Boolean(x);
  });
};
var applyAttributeToOthers = function(originalTarget, parentNode, markerName, controlAttribute) {
  var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  if (!markerMap[markerName]) {
    markerMap[markerName] = /* @__PURE__ */ new WeakMap();
  }
  var markerCounter = markerMap[markerName];
  var hiddenNodes = [];
  var elementsToKeep = /* @__PURE__ */ new Set();
  var elementsToStop = new Set(targets);
  var keep = function(el) {
    if (!el || elementsToKeep.has(el)) {
      return;
    }
    elementsToKeep.add(el);
    keep(el.parentNode);
  };
  targets.forEach(keep);
  var deep = function(parent) {
    if (!parent || elementsToStop.has(parent)) {
      return;
    }
    Array.prototype.forEach.call(parent.children, function(node) {
      if (elementsToKeep.has(node)) {
        deep(node);
      } else {
        var attr = node.getAttribute(controlAttribute);
        var alreadyHidden = attr !== null && attr !== "false";
        var counterValue = (counterMap.get(node) || 0) + 1;
        var markerValue = (markerCounter.get(node) || 0) + 1;
        counterMap.set(node, counterValue);
        markerCounter.set(node, markerValue);
        hiddenNodes.push(node);
        if (counterValue === 1 && alreadyHidden) {
          uncontrolledNodes.set(node, true);
        }
        if (markerValue === 1) {
          node.setAttribute(markerName, "true");
        }
        if (!alreadyHidden) {
          node.setAttribute(controlAttribute, "true");
        }
      }
    });
  };
  deep(parentNode);
  elementsToKeep.clear();
  lockCount++;
  return function() {
    hiddenNodes.forEach(function(node) {
      var counterValue = counterMap.get(node) - 1;
      var markerValue = markerCounter.get(node) - 1;
      counterMap.set(node, counterValue);
      markerCounter.set(node, markerValue);
      if (!counterValue) {
        if (!uncontrolledNodes.has(node)) {
          node.removeAttribute(controlAttribute);
        }
        uncontrolledNodes.delete(node);
      }
      if (!markerValue) {
        node.removeAttribute(markerName);
      }
    });
    lockCount--;
    if (!lockCount) {
      counterMap = /* @__PURE__ */ new WeakMap();
      counterMap = /* @__PURE__ */ new WeakMap();
      uncontrolledNodes = /* @__PURE__ */ new WeakMap();
      markerMap = {};
    }
  };
};
var hideOthers = function(originalTarget, parentNode, markerName) {
  if (markerName === void 0) {
    markerName = "data-aria-hidden";
  }
  var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  var activeParentNode = parentNode || getDefaultParent(originalTarget);
  if (!activeParentNode) {
    return function() {
      return null;
    };
  }
  targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll("[aria-live]")));
  return applyAttributeToOthers(targets, activeParentNode, markerName, "aria-hidden");
};

// node_modules/@radix-ui/react-dialog/dist/index.mjs
var $5d3850c4d0b4e6c7$var$DIALOG_NAME = "Dialog";
var [$5d3850c4d0b4e6c7$var$createDialogContext, $5d3850c4d0b4e6c7$export$cc702773b8ea3e41] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($5d3850c4d0b4e6c7$var$DIALOG_NAME);
var [$5d3850c4d0b4e6c7$var$DialogProvider, $5d3850c4d0b4e6c7$var$useDialogContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$DIALOG_NAME);
var $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 = (props) => {
  const { __scopeDialog, children, open: openProp, defaultOpen, onOpenChange, modal = true } = props;
  const triggerRef = (0, import_react33.useRef)(null);
  const contentRef = (0, import_react33.useRef)(null);
  const [open2 = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return (0, import_react33.createElement)($5d3850c4d0b4e6c7$var$DialogProvider, {
    scope: __scopeDialog,
    triggerRef,
    contentRef,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    titleId: $1746a345f3d73bb7$export$f680877a34711e37(),
    descriptionId: $1746a345f3d73bb7$export$f680877a34711e37(),
    open: open2,
    onOpenChange: setOpen,
    onOpenToggle: (0, import_react33.useCallback)(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    ),
    modal
  }, children);
};
Object.assign($5d3850c4d0b4e6c7$export$3ddf2d174ce01153, {
  displayName: $5d3850c4d0b4e6c7$var$DIALOG_NAME
});
var $5d3850c4d0b4e6c7$var$TRIGGER_NAME = "DialogTrigger";
var $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 = (0, import_react33.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...triggerProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TRIGGER_NAME, __scopeDialog);
  const composedTriggerRef = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.triggerRef);
  return (0, import_react33.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button",
    "aria-haspopup": "dialog",
    "aria-expanded": context.open,
    "aria-controls": context.contentId,
    "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
  }, triggerProps, {
    ref: composedTriggerRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onOpenToggle)
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$2e1e1122cf0cba88, {
  displayName: $5d3850c4d0b4e6c7$var$TRIGGER_NAME
});
var $5d3850c4d0b4e6c7$var$PORTAL_NAME = "DialogPortal";
var [$5d3850c4d0b4e6c7$var$PortalProvider, $5d3850c4d0b4e6c7$var$usePortalContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, {
  forceMount: void 0
});
var $5d3850c4d0b4e6c7$export$dad7c95542bacce0 = (props) => {
  const { __scopeDialog, forceMount, children, container } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, __scopeDialog);
  return (0, import_react33.createElement)($5d3850c4d0b4e6c7$var$PortalProvider, {
    scope: __scopeDialog,
    forceMount
  }, import_react33.Children.map(
    children,
    (child) => (0, import_react33.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
      present: forceMount || context.open
    }, (0, import_react33.createElement)($f1701beae083dbae$export$602eac185826482c, {
      asChild: true,
      container
    }, child))
  ));
};
Object.assign($5d3850c4d0b4e6c7$export$dad7c95542bacce0, {
  displayName: $5d3850c4d0b4e6c7$var$PORTAL_NAME
});
var $5d3850c4d0b4e6c7$var$OVERLAY_NAME = "DialogOverlay";
var $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 = (0, import_react33.forwardRef)((props, forwardedRef) => {
  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);
  const { forceMount = portalContext.forceMount, ...overlayProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);
  return context.modal ? (0, import_react33.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, (0, import_react33.createElement)($5d3850c4d0b4e6c7$var$DialogOverlayImpl, _extends({}, overlayProps, {
    ref: forwardedRef
  }))) : null;
});
Object.assign($5d3850c4d0b4e6c7$export$bd1d06c79be19e17, {
  displayName: $5d3850c4d0b4e6c7$var$OVERLAY_NAME
});
var $5d3850c4d0b4e6c7$var$DialogOverlayImpl = (0, import_react33.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...overlayProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, __scopeDialog);
  return (0, import_react33.createElement)(Combination_default, {
    as: $5e63c961fc1ce211$export$8c6ed5c666ac1360,
    allowPinchZoom: true,
    shards: [
      context.contentRef
    ]
  }, (0, import_react33.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
  }, overlayProps, {
    ref: forwardedRef,
    style: {
      pointerEvents: "auto",
      ...overlayProps.style
    }
  })));
});
var $5d3850c4d0b4e6c7$var$CONTENT_NAME = "DialogContent";
var $5d3850c4d0b4e6c7$export$b6d9565de1e068cf = (0, import_react33.forwardRef)((props, forwardedRef) => {
  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const { forceMount = portalContext.forceMount, ...contentProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  return (0, import_react33.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, context.modal ? (0, import_react33.createElement)($5d3850c4d0b4e6c7$var$DialogContentModal, _extends({}, contentProps, {
    ref: forwardedRef
  })) : (0, import_react33.createElement)($5d3850c4d0b4e6c7$var$DialogContentNonModal, _extends({}, contentProps, {
    ref: forwardedRef
  })));
});
Object.assign($5d3850c4d0b4e6c7$export$b6d9565de1e068cf, {
  displayName: $5d3850c4d0b4e6c7$var$CONTENT_NAME
});
var $5d3850c4d0b4e6c7$var$DialogContentModal = (0, import_react33.forwardRef)((props, forwardedRef) => {
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const contentRef = (0, import_react33.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.contentRef, contentRef);
  (0, import_react33.useEffect)(() => {
    const content = contentRef.current;
    if (content)
      return hideOthers(content);
  }, []);
  return (0, import_react33.createElement)($5d3850c4d0b4e6c7$var$DialogContentImpl, _extends({}, props, {
    ref: composedRefs,
    trapFocus: context.open,
    disableOutsidePointerEvents: true,
    onCloseAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onCloseAutoFocus, (event) => {
      var _context$triggerRef$c;
      event.preventDefault();
      (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();
    }),
    onPointerDownOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownOutside, (event) => {
      const originalEvent = event.detail.originalEvent;
      const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
      const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
      if (isRightClick)
        event.preventDefault();
    }),
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocusOutside,
      (event) => event.preventDefault()
    )
  }));
});
var $5d3850c4d0b4e6c7$var$DialogContentNonModal = (0, import_react33.forwardRef)((props, forwardedRef) => {
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const hasInteractedOutsideRef = (0, import_react33.useRef)(false);
  const hasPointerDownOutsideRef = (0, import_react33.useRef)(false);
  return (0, import_react33.createElement)($5d3850c4d0b4e6c7$var$DialogContentImpl, _extends({}, props, {
    ref: forwardedRef,
    trapFocus: false,
    disableOutsidePointerEvents: false,
    onCloseAutoFocus: (event) => {
      var _props$onCloseAutoFoc;
      (_props$onCloseAutoFoc = props.onCloseAutoFocus) === null || _props$onCloseAutoFoc === void 0 || _props$onCloseAutoFoc.call(props, event);
      if (!event.defaultPrevented) {
        var _context$triggerRef$c2;
        if (!hasInteractedOutsideRef.current)
          (_context$triggerRef$c2 = context.triggerRef.current) === null || _context$triggerRef$c2 === void 0 || _context$triggerRef$c2.focus();
        event.preventDefault();
      }
      hasInteractedOutsideRef.current = false;
      hasPointerDownOutsideRef.current = false;
    },
    onInteractOutside: (event) => {
      var _props$onInteractOuts, _context$triggerRef$c3;
      (_props$onInteractOuts = props.onInteractOutside) === null || _props$onInteractOuts === void 0 || _props$onInteractOuts.call(props, event);
      if (!event.defaultPrevented) {
        hasInteractedOutsideRef.current = true;
        if (event.detail.originalEvent.type === "pointerdown")
          hasPointerDownOutsideRef.current = true;
      }
      const target = event.target;
      const targetIsTrigger = (_context$triggerRef$c3 = context.triggerRef.current) === null || _context$triggerRef$c3 === void 0 ? void 0 : _context$triggerRef$c3.contains(target);
      if (targetIsTrigger)
        event.preventDefault();
      if (event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current)
        event.preventDefault();
    }
  }));
});
var $5d3850c4d0b4e6c7$var$DialogContentImpl = (0, import_react33.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, __scopeDialog);
  const contentRef = (0, import_react33.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, contentRef);
  $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c();
  return (0, import_react33.createElement)(import_react33.Fragment, null, (0, import_react33.createElement)($d3863c46a17e8a28$export$20e40289641fbbb6, {
    asChild: true,
    loop: true,
    trapped: trapFocus,
    onMountAutoFocus: onOpenAutoFocus,
    onUnmountAutoFocus: onCloseAutoFocus
  }, (0, import_react33.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, _extends({
    role: "dialog",
    id: context.contentId,
    "aria-describedby": context.descriptionId,
    "aria-labelledby": context.titleId,
    "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
  }, contentProps, {
    ref: composedRefs,
    onDismiss: () => context.onOpenChange(false)
  }))), false);
});
var $5d3850c4d0b4e6c7$var$TITLE_NAME = "DialogTitle";
var $5d3850c4d0b4e6c7$export$16f7638e4a34b909 = (0, import_react33.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...titleProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TITLE_NAME, __scopeDialog);
  return (0, import_react33.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.h2, _extends({
    id: context.titleId
  }, titleProps, {
    ref: forwardedRef
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$16f7638e4a34b909, {
  displayName: $5d3850c4d0b4e6c7$var$TITLE_NAME
});
var $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME = "DialogDescription";
var $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 = (0, import_react33.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...descriptionProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$DESCRIPTION_NAME, __scopeDialog);
  return (0, import_react33.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.p, _extends({
    id: context.descriptionId
  }, descriptionProps, {
    ref: forwardedRef
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$94e94c2ec2c954d5, {
  displayName: $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME
});
var $5d3850c4d0b4e6c7$var$CLOSE_NAME = "DialogClose";
var $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac = (0, import_react33.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...closeProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CLOSE_NAME, __scopeDialog);
  return (0, import_react33.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button"
  }, closeProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onClick,
      () => context.onOpenChange(false)
    )
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac, {
  displayName: $5d3850c4d0b4e6c7$var$CLOSE_NAME
});
function $5d3850c4d0b4e6c7$var$getState(open2) {
  return open2 ? "open" : "closed";
}
var $5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME = "DialogTitleWarning";
var [$5d3850c4d0b4e6c7$export$69b62a49393917d6, $5d3850c4d0b4e6c7$var$useWarningContext] = $c512c27ab02ef895$export$fd42f52fd3ae1109($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME, {
  contentName: $5d3850c4d0b4e6c7$var$CONTENT_NAME,
  titleName: $5d3850c4d0b4e6c7$var$TITLE_NAME,
  docsSlug: "dialog"
});
var $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 = $5d3850c4d0b4e6c7$export$3ddf2d174ce01153;
var $5d3850c4d0b4e6c7$export$41fb9f06171c75f4 = $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88;
var $5d3850c4d0b4e6c7$export$602eac185826482c = $5d3850c4d0b4e6c7$export$dad7c95542bacce0;
var $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff = $5d3850c4d0b4e6c7$export$bd1d06c79be19e17;
var $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 = $5d3850c4d0b4e6c7$export$b6d9565de1e068cf;
var $5d3850c4d0b4e6c7$export$f99233281efd08a0 = $5d3850c4d0b4e6c7$export$16f7638e4a34b909;
var $5d3850c4d0b4e6c7$export$393edc798c47379d = $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5;
var $5d3850c4d0b4e6c7$export$f39c2d165cd861fe = $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac;

// node_modules/@daohaus/ui/index.js
var import_ethereum_blockies_base64 = __toESM(require_main());

// node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs
var import_react37 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-menu/dist/index.mjs
var import_react36 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-direction/dist/index.mjs
var import_react34 = __toESM(require_react(), 1);
var $f631663db3294ace$var$DirectionContext = (0, import_react34.createContext)(void 0);
function $f631663db3294ace$export$b39126d51d94e6f3(localDir) {
  const globalDir = (0, import_react34.useContext)($f631663db3294ace$var$DirectionContext);
  return localDir || globalDir || "ltr";
}

// node_modules/@radix-ui/react-roving-focus/dist/index.mjs
var import_react35 = __toESM(require_react(), 1);
var $d7bdfb9eb0fdf311$var$ENTRY_FOCUS = "rovingFocusGroup.onEntryFocus";
var $d7bdfb9eb0fdf311$var$EVENT_OPTIONS = {
  bubbles: false,
  cancelable: true
};
var $d7bdfb9eb0fdf311$var$GROUP_NAME = "RovingFocusGroup";
var [$d7bdfb9eb0fdf311$var$Collection, $d7bdfb9eb0fdf311$var$useCollection, $d7bdfb9eb0fdf311$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($d7bdfb9eb0fdf311$var$GROUP_NAME);
var [$d7bdfb9eb0fdf311$var$createRovingFocusGroupContext, $d7bdfb9eb0fdf311$export$c7109489551a4f4] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($d7bdfb9eb0fdf311$var$GROUP_NAME, [
  $d7bdfb9eb0fdf311$var$createCollectionScope
]);
var [$d7bdfb9eb0fdf311$var$RovingFocusProvider, $d7bdfb9eb0fdf311$var$useRovingFocusContext] = $d7bdfb9eb0fdf311$var$createRovingFocusGroupContext($d7bdfb9eb0fdf311$var$GROUP_NAME);
var $d7bdfb9eb0fdf311$export$8699f7c8af148338 = (0, import_react35.forwardRef)((props, forwardedRef) => {
  return (0, import_react35.createElement)($d7bdfb9eb0fdf311$var$Collection.Provider, {
    scope: props.__scopeRovingFocusGroup
  }, (0, import_react35.createElement)($d7bdfb9eb0fdf311$var$Collection.Slot, {
    scope: props.__scopeRovingFocusGroup
  }, (0, import_react35.createElement)($d7bdfb9eb0fdf311$var$RovingFocusGroupImpl, _extends({}, props, {
    ref: forwardedRef
  }))));
});
Object.assign($d7bdfb9eb0fdf311$export$8699f7c8af148338, {
  displayName: $d7bdfb9eb0fdf311$var$GROUP_NAME
});
var $d7bdfb9eb0fdf311$var$RovingFocusGroupImpl = (0, import_react35.forwardRef)((props, forwardedRef) => {
  const { __scopeRovingFocusGroup, orientation, loop = false, dir, currentTabStopId: currentTabStopIdProp, defaultCurrentTabStopId, onCurrentTabStopIdChange, onEntryFocus, ...groupProps } = props;
  const ref = (0, import_react35.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  const [currentTabStopId = null, setCurrentTabStopId] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: currentTabStopIdProp,
    defaultProp: defaultCurrentTabStopId,
    onChange: onCurrentTabStopIdChange
  });
  const [isTabbingBackOut, setIsTabbingBackOut] = (0, import_react35.useState)(false);
  const handleEntryFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onEntryFocus);
  const getItems = $d7bdfb9eb0fdf311$var$useCollection(__scopeRovingFocusGroup);
  const isClickFocusRef = (0, import_react35.useRef)(false);
  const [focusableItemsCount, setFocusableItemsCount] = (0, import_react35.useState)(0);
  (0, import_react35.useEffect)(() => {
    const node = ref.current;
    if (node) {
      node.addEventListener($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, handleEntryFocus);
      return () => node.removeEventListener($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, handleEntryFocus);
    }
  }, [
    handleEntryFocus
  ]);
  return (0, import_react35.createElement)($d7bdfb9eb0fdf311$var$RovingFocusProvider, {
    scope: __scopeRovingFocusGroup,
    orientation,
    dir: direction,
    loop,
    currentTabStopId,
    onItemFocus: (0, import_react35.useCallback)(
      (tabStopId) => setCurrentTabStopId(tabStopId),
      [
        setCurrentTabStopId
      ]
    ),
    onItemShiftTab: (0, import_react35.useCallback)(
      () => setIsTabbingBackOut(true),
      []
    ),
    onFocusableItemAdd: (0, import_react35.useCallback)(
      () => setFocusableItemsCount(
        (prevCount) => prevCount + 1
      ),
      []
    ),
    onFocusableItemRemove: (0, import_react35.useCallback)(
      () => setFocusableItemsCount(
        (prevCount) => prevCount - 1
      ),
      []
    )
  }, (0, import_react35.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    tabIndex: isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0,
    "data-orientation": orientation
  }, groupProps, {
    ref: composedRefs,
    style: {
      outline: "none",
      ...props.style
    },
    onMouseDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onMouseDown, () => {
      isClickFocusRef.current = true;
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocus, (event) => {
      const isKeyboardFocus = !isClickFocusRef.current;
      if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {
        const entryFocusEvent = new CustomEvent($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, $d7bdfb9eb0fdf311$var$EVENT_OPTIONS);
        event.currentTarget.dispatchEvent(entryFocusEvent);
        if (!entryFocusEvent.defaultPrevented) {
          const items = getItems().filter(
            (item) => item.focusable
          );
          const activeItem = items.find(
            (item) => item.active
          );
          const currentItem = items.find(
            (item) => item.id === currentTabStopId
          );
          const candidateItems = [
            activeItem,
            currentItem,
            ...items
          ].filter(Boolean);
          const candidateNodes = candidateItems.map(
            (item) => item.ref.current
          );
          $d7bdfb9eb0fdf311$var$focusFirst(candidateNodes);
        }
      }
      isClickFocusRef.current = false;
    }),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onBlur,
      () => setIsTabbingBackOut(false)
    )
  })));
});
var $d7bdfb9eb0fdf311$var$ITEM_NAME = "RovingFocusGroupItem";
var $d7bdfb9eb0fdf311$export$ab9df7c53fe8454 = (0, import_react35.forwardRef)((props, forwardedRef) => {
  const { __scopeRovingFocusGroup, focusable = true, active = false, tabStopId, ...itemProps } = props;
  const autoId = $1746a345f3d73bb7$export$f680877a34711e37();
  const id2 = tabStopId || autoId;
  const context = $d7bdfb9eb0fdf311$var$useRovingFocusContext($d7bdfb9eb0fdf311$var$ITEM_NAME, __scopeRovingFocusGroup);
  const isCurrentTabStop = context.currentTabStopId === id2;
  const getItems = $d7bdfb9eb0fdf311$var$useCollection(__scopeRovingFocusGroup);
  const { onFocusableItemAdd, onFocusableItemRemove } = context;
  (0, import_react35.useEffect)(() => {
    if (focusable) {
      onFocusableItemAdd();
      return () => onFocusableItemRemove();
    }
  }, [
    focusable,
    onFocusableItemAdd,
    onFocusableItemRemove
  ]);
  return (0, import_react35.createElement)($d7bdfb9eb0fdf311$var$Collection.ItemSlot, {
    scope: __scopeRovingFocusGroup,
    id: id2,
    focusable,
    active
  }, (0, import_react35.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({
    tabIndex: isCurrentTabStop ? 0 : -1,
    "data-orientation": context.orientation
  }, itemProps, {
    ref: forwardedRef,
    onMouseDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onMouseDown, (event) => {
      if (!focusable)
        event.preventDefault();
      else
        context.onItemFocus(id2);
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocus,
      () => context.onItemFocus(id2)
    ),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      if (event.key === "Tab" && event.shiftKey) {
        context.onItemShiftTab();
        return;
      }
      if (event.target !== event.currentTarget)
        return;
      const focusIntent = $d7bdfb9eb0fdf311$var$getFocusIntent(event, context.orientation, context.dir);
      if (focusIntent !== void 0) {
        event.preventDefault();
        const items = getItems().filter(
          (item) => item.focusable
        );
        let candidateNodes = items.map(
          (item) => item.ref.current
        );
        if (focusIntent === "last")
          candidateNodes.reverse();
        else if (focusIntent === "prev" || focusIntent === "next") {
          if (focusIntent === "prev")
            candidateNodes.reverse();
          const currentIndex = candidateNodes.indexOf(event.currentTarget);
          candidateNodes = context.loop ? $d7bdfb9eb0fdf311$var$wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);
        }
        setTimeout(
          () => $d7bdfb9eb0fdf311$var$focusFirst(candidateNodes)
        );
      }
    })
  })));
});
Object.assign($d7bdfb9eb0fdf311$export$ab9df7c53fe8454, {
  displayName: $d7bdfb9eb0fdf311$var$ITEM_NAME
});
var $d7bdfb9eb0fdf311$var$MAP_KEY_TO_FOCUS_INTENT = {
  ArrowLeft: "prev",
  ArrowUp: "prev",
  ArrowRight: "next",
  ArrowDown: "next",
  PageUp: "first",
  Home: "first",
  PageDown: "last",
  End: "last"
};
function $d7bdfb9eb0fdf311$var$getDirectionAwareKey(key, dir) {
  if (dir !== "rtl")
    return key;
  return key === "ArrowLeft" ? "ArrowRight" : key === "ArrowRight" ? "ArrowLeft" : key;
}
function $d7bdfb9eb0fdf311$var$getFocusIntent(event, orientation, dir) {
  const key = $d7bdfb9eb0fdf311$var$getDirectionAwareKey(event.key, dir);
  if (orientation === "vertical" && [
    "ArrowLeft",
    "ArrowRight"
  ].includes(key))
    return void 0;
  if (orientation === "horizontal" && [
    "ArrowUp",
    "ArrowDown"
  ].includes(key))
    return void 0;
  return $d7bdfb9eb0fdf311$var$MAP_KEY_TO_FOCUS_INTENT[key];
}
function $d7bdfb9eb0fdf311$var$focusFirst(candidates) {
  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
  for (const candidate of candidates) {
    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT)
      return;
    candidate.focus();
    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT)
      return;
  }
}
function $d7bdfb9eb0fdf311$var$wrapArray(array, startIndex) {
  return array.map(
    (_2, index2) => array[(startIndex + index2) % array.length]
  );
}
var $d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9 = $d7bdfb9eb0fdf311$export$8699f7c8af148338;
var $d7bdfb9eb0fdf311$export$6d08773d2e66f8f2 = $d7bdfb9eb0fdf311$export$ab9df7c53fe8454;

// node_modules/@radix-ui/react-menu/dist/index.mjs
var $6cc32821e9371a1c$var$SELECTION_KEYS = [
  "Enter",
  " "
];
var $6cc32821e9371a1c$var$FIRST_KEYS = [
  "ArrowDown",
  "PageUp",
  "Home"
];
var $6cc32821e9371a1c$var$LAST_KEYS = [
  "ArrowUp",
  "PageDown",
  "End"
];
var $6cc32821e9371a1c$var$FIRST_LAST_KEYS = [
  ...$6cc32821e9371a1c$var$FIRST_KEYS,
  ...$6cc32821e9371a1c$var$LAST_KEYS
];
var $6cc32821e9371a1c$var$SUB_OPEN_KEYS = {
  ltr: [
    ...$6cc32821e9371a1c$var$SELECTION_KEYS,
    "ArrowRight"
  ],
  rtl: [
    ...$6cc32821e9371a1c$var$SELECTION_KEYS,
    "ArrowLeft"
  ]
};
var $6cc32821e9371a1c$var$SUB_CLOSE_KEYS = {
  ltr: [
    "ArrowLeft"
  ],
  rtl: [
    "ArrowRight"
  ]
};
var $6cc32821e9371a1c$var$MENU_NAME = "Menu";
var [$6cc32821e9371a1c$var$Collection, $6cc32821e9371a1c$var$useCollection, $6cc32821e9371a1c$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($6cc32821e9371a1c$var$MENU_NAME);
var [$6cc32821e9371a1c$var$createMenuContext, $6cc32821e9371a1c$export$4027731b685e72eb] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($6cc32821e9371a1c$var$MENU_NAME, [
  $6cc32821e9371a1c$var$createCollectionScope,
  $cf1ac5d9fe0e8206$export$722aac194ae923,
  $d7bdfb9eb0fdf311$export$c7109489551a4f4
]);
var $6cc32821e9371a1c$var$usePopperScope = $cf1ac5d9fe0e8206$export$722aac194ae923();
var $6cc32821e9371a1c$var$useRovingFocusGroupScope = $d7bdfb9eb0fdf311$export$c7109489551a4f4();
var [$6cc32821e9371a1c$var$MenuProvider, $6cc32821e9371a1c$var$useMenuContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$MENU_NAME);
var [$6cc32821e9371a1c$var$MenuRootProvider, $6cc32821e9371a1c$var$useMenuRootContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$MENU_NAME);
var $6cc32821e9371a1c$export$d9b273488cd8ce6f = (props) => {
  const { __scopeMenu, open: open2 = false, children, dir, onOpenChange, modal = true } = props;
  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);
  const [content, setContent] = (0, import_react36.useState)(null);
  const isUsingKeyboardRef = (0, import_react36.useRef)(false);
  const handleOpenChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onOpenChange);
  const direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  (0, import_react36.useEffect)(() => {
    const handleKeyDown = () => {
      isUsingKeyboardRef.current = true;
      document.addEventListener("pointerdown", handlePointer, {
        capture: true,
        once: true
      });
      document.addEventListener("pointermove", handlePointer, {
        capture: true,
        once: true
      });
    };
    const handlePointer = () => isUsingKeyboardRef.current = false;
    document.addEventListener("keydown", handleKeyDown, {
      capture: true
    });
    return () => {
      document.removeEventListener("keydown", handleKeyDown, {
        capture: true
      });
      document.removeEventListener("pointerdown", handlePointer, {
        capture: true
      });
      document.removeEventListener("pointermove", handlePointer, {
        capture: true
      });
    };
  }, []);
  return (0, import_react36.createElement)($cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9, popperScope, (0, import_react36.createElement)($6cc32821e9371a1c$var$MenuProvider, {
    scope: __scopeMenu,
    open: open2,
    onOpenChange: handleOpenChange,
    content,
    onContentChange: setContent
  }, (0, import_react36.createElement)($6cc32821e9371a1c$var$MenuRootProvider, {
    scope: __scopeMenu,
    onClose: (0, import_react36.useCallback)(
      () => handleOpenChange(false),
      [
        handleOpenChange
      ]
    ),
    isUsingKeyboardRef,
    dir: direction,
    modal
  }, children)));
};
Object.assign($6cc32821e9371a1c$export$d9b273488cd8ce6f, {
  displayName: $6cc32821e9371a1c$var$MENU_NAME
});
var $6cc32821e9371a1c$var$ANCHOR_NAME = "MenuAnchor";
var $6cc32821e9371a1c$export$9fa5ebd18bee4d43 = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, ...anchorProps } = props;
  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);
  return (0, import_react36.createElement)($cf1ac5d9fe0e8206$export$b688253958b8dfe7, _extends({}, popperScope, anchorProps, {
    ref: forwardedRef
  }));
});
Object.assign($6cc32821e9371a1c$export$9fa5ebd18bee4d43, {
  displayName: $6cc32821e9371a1c$var$ANCHOR_NAME
});
var $6cc32821e9371a1c$var$PORTAL_NAME = "MenuPortal";
var [$6cc32821e9371a1c$var$PortalProvider, $6cc32821e9371a1c$var$usePortalContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$PORTAL_NAME, {
  forceMount: void 0
});
var $6cc32821e9371a1c$export$793392f970497feb = (props) => {
  const { __scopeMenu, forceMount, children, container } = props;
  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$PORTAL_NAME, __scopeMenu);
  return (0, import_react36.createElement)($6cc32821e9371a1c$var$PortalProvider, {
    scope: __scopeMenu,
    forceMount
  }, (0, import_react36.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, (0, import_react36.createElement)($f1701beae083dbae$export$602eac185826482c, {
    asChild: true,
    container
  }, children)));
};
Object.assign($6cc32821e9371a1c$export$793392f970497feb, {
  displayName: $6cc32821e9371a1c$var$PORTAL_NAME
});
var $6cc32821e9371a1c$var$CONTENT_NAME = "MenuContent";
var [$6cc32821e9371a1c$var$MenuContentProvider, $6cc32821e9371a1c$var$useMenuContentContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$CONTENT_NAME);
var $6cc32821e9371a1c$export$479f0f2f71193efe = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const portalContext = $6cc32821e9371a1c$var$usePortalContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  const { forceMount = portalContext.forceMount, ...contentProps } = props;
  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  return (0, import_react36.createElement)($6cc32821e9371a1c$var$Collection.Provider, {
    scope: props.__scopeMenu
  }, (0, import_react36.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, (0, import_react36.createElement)($6cc32821e9371a1c$var$Collection.Slot, {
    scope: props.__scopeMenu
  }, rootContext.modal ? (0, import_react36.createElement)($6cc32821e9371a1c$var$MenuRootContentModal, _extends({}, contentProps, {
    ref: forwardedRef
  })) : (0, import_react36.createElement)($6cc32821e9371a1c$var$MenuRootContentNonModal, _extends({}, contentProps, {
    ref: forwardedRef
  })))));
});
var $6cc32821e9371a1c$var$MenuRootContentModal = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  const ref = (0, import_react36.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  (0, import_react36.useEffect)(() => {
    const content = ref.current;
    if (content)
      return hideOthers(content);
  }, []);
  return (0, import_react36.createElement)($6cc32821e9371a1c$var$MenuContentImpl, _extends({}, props, {
    ref: composedRefs,
    trapFocus: context.open,
    disableOutsidePointerEvents: context.open,
    disableOutsideScroll: true,
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocusOutside,
      (event) => event.preventDefault(),
      {
        checkForDefaultPrevented: false
      }
    ),
    onDismiss: () => context.onOpenChange(false)
  }));
});
var $6cc32821e9371a1c$var$MenuRootContentNonModal = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  return (0, import_react36.createElement)($6cc32821e9371a1c$var$MenuContentImpl, _extends({}, props, {
    ref: forwardedRef,
    trapFocus: false,
    disableOutsidePointerEvents: false,
    disableOutsideScroll: false,
    onDismiss: () => context.onOpenChange(false)
  }));
});
var $6cc32821e9371a1c$var$MenuContentImpl = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, loop = false, trapFocus, onOpenAutoFocus, onCloseAutoFocus, disableOutsidePointerEvents, onEntryFocus, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, disableOutsideScroll, ...contentProps } = props;
  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, __scopeMenu);
  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, __scopeMenu);
  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);
  const rovingFocusGroupScope = $6cc32821e9371a1c$var$useRovingFocusGroupScope(__scopeMenu);
  const getItems = $6cc32821e9371a1c$var$useCollection(__scopeMenu);
  const [currentItemId, setCurrentItemId] = (0, import_react36.useState)(null);
  const contentRef = (0, import_react36.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, contentRef, context.onContentChange);
  const timerRef = (0, import_react36.useRef)(0);
  const searchRef = (0, import_react36.useRef)("");
  const pointerGraceTimerRef = (0, import_react36.useRef)(0);
  const pointerGraceIntentRef = (0, import_react36.useRef)(null);
  const pointerDirRef = (0, import_react36.useRef)("right");
  const lastPointerXRef = (0, import_react36.useRef)(0);
  const ScrollLockWrapper = disableOutsideScroll ? Combination_default : import_react36.Fragment;
  const scrollLockWrapperProps = disableOutsideScroll ? {
    as: $5e63c961fc1ce211$export$8c6ed5c666ac1360,
    allowPinchZoom: true
  } : void 0;
  const handleTypeaheadSearch = (key) => {
    var _items$find, _items$find2;
    const search = searchRef.current + key;
    const items = getItems().filter(
      (item) => !item.disabled
    );
    const currentItem = document.activeElement;
    const currentMatch = (_items$find = items.find(
      (item) => item.ref.current === currentItem
    )) === null || _items$find === void 0 ? void 0 : _items$find.textValue;
    const values2 = items.map(
      (item) => item.textValue
    );
    const nextMatch = $6cc32821e9371a1c$var$getNextMatch(values2, search, currentMatch);
    const newItem = (_items$find2 = items.find(
      (item) => item.textValue === nextMatch
    )) === null || _items$find2 === void 0 ? void 0 : _items$find2.ref.current;
    (function updateSearch(value) {
      searchRef.current = value;
      window.clearTimeout(timerRef.current);
      if (value !== "")
        timerRef.current = window.setTimeout(
          () => updateSearch(""),
          1e3
        );
    })(search);
    if (newItem)
      setTimeout(
        () => newItem.focus()
      );
  };
  (0, import_react36.useEffect)(() => {
    return () => window.clearTimeout(timerRef.current);
  }, []);
  $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c();
  const isPointerMovingToSubmenu = (0, import_react36.useCallback)((event) => {
    var _pointerGraceIntentRe, _pointerGraceIntentRe2;
    const isMovingTowards = pointerDirRef.current === ((_pointerGraceIntentRe = pointerGraceIntentRef.current) === null || _pointerGraceIntentRe === void 0 ? void 0 : _pointerGraceIntentRe.side);
    return isMovingTowards && $6cc32821e9371a1c$var$isPointerInGraceArea(event, (_pointerGraceIntentRe2 = pointerGraceIntentRef.current) === null || _pointerGraceIntentRe2 === void 0 ? void 0 : _pointerGraceIntentRe2.area);
  }, []);
  return (0, import_react36.createElement)($6cc32821e9371a1c$var$MenuContentProvider, {
    scope: __scopeMenu,
    searchRef,
    onItemEnter: (0, import_react36.useCallback)((event) => {
      if (isPointerMovingToSubmenu(event))
        event.preventDefault();
    }, [
      isPointerMovingToSubmenu
    ]),
    onItemLeave: (0, import_react36.useCallback)((event) => {
      var _contentRef$current;
      if (isPointerMovingToSubmenu(event))
        return;
      (_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 || _contentRef$current.focus();
      setCurrentItemId(null);
    }, [
      isPointerMovingToSubmenu
    ]),
    onTriggerLeave: (0, import_react36.useCallback)((event) => {
      if (isPointerMovingToSubmenu(event))
        event.preventDefault();
    }, [
      isPointerMovingToSubmenu
    ]),
    pointerGraceTimerRef,
    onPointerGraceIntentChange: (0, import_react36.useCallback)((intent) => {
      pointerGraceIntentRef.current = intent;
    }, [])
  }, (0, import_react36.createElement)(ScrollLockWrapper, scrollLockWrapperProps, (0, import_react36.createElement)($d3863c46a17e8a28$export$20e40289641fbbb6, {
    asChild: true,
    trapped: trapFocus,
    onMountAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(onOpenAutoFocus, (event) => {
      var _contentRef$current2;
      event.preventDefault();
      (_contentRef$current2 = contentRef.current) === null || _contentRef$current2 === void 0 || _contentRef$current2.focus();
    }),
    onUnmountAutoFocus: onCloseAutoFocus
  }, (0, import_react36.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, {
    asChild: true,
    disableOutsidePointerEvents,
    onEscapeKeyDown,
    onPointerDownOutside,
    onFocusOutside,
    onInteractOutside,
    onDismiss
  }, (0, import_react36.createElement)($d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9, _extends({
    asChild: true
  }, rovingFocusGroupScope, {
    dir: rootContext.dir,
    orientation: "vertical",
    loop,
    currentTabStopId: currentItemId,
    onCurrentTabStopIdChange: setCurrentItemId,
    onEntryFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(onEntryFocus, (event) => {
      if (!rootContext.isUsingKeyboardRef.current)
        event.preventDefault();
    })
  }), (0, import_react36.createElement)($cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2, _extends({
    role: "menu",
    "aria-orientation": "vertical",
    "data-state": $6cc32821e9371a1c$var$getOpenState(context.open),
    "data-radix-menu-content": "",
    dir: rootContext.dir
  }, popperScope, contentProps, {
    ref: composedRefs,
    style: {
      outline: "none",
      ...contentProps.style
    },
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(contentProps.onKeyDown, (event) => {
      const target = event.target;
      const isKeyDownInside = target.closest("[data-radix-menu-content]") === event.currentTarget;
      const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
      const isCharacterKey = event.key.length === 1;
      if (isKeyDownInside) {
        if (event.key === "Tab")
          event.preventDefault();
        if (!isModifierKey && isCharacterKey)
          handleTypeaheadSearch(event.key);
      }
      const content = contentRef.current;
      if (event.target !== content)
        return;
      if (!$6cc32821e9371a1c$var$FIRST_LAST_KEYS.includes(event.key))
        return;
      event.preventDefault();
      const items = getItems().filter(
        (item) => !item.disabled
      );
      const candidateNodes = items.map(
        (item) => item.ref.current
      );
      if ($6cc32821e9371a1c$var$LAST_KEYS.includes(event.key))
        candidateNodes.reverse();
      $6cc32821e9371a1c$var$focusFirst(candidateNodes);
    }),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlur, (event) => {
      if (!event.currentTarget.contains(event.target)) {
        window.clearTimeout(timerRef.current);
        searchRef.current = "";
      }
    }),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, $6cc32821e9371a1c$var$whenMouse((event) => {
      const target = event.target;
      const pointerXHasChanged = lastPointerXRef.current !== event.clientX;
      if (event.currentTarget.contains(target) && pointerXHasChanged) {
        const newDir = event.clientX > lastPointerXRef.current ? "right" : "left";
        pointerDirRef.current = newDir;
        lastPointerXRef.current = event.clientX;
      }
    }))
  })))))));
});
Object.assign($6cc32821e9371a1c$export$479f0f2f71193efe, {
  displayName: $6cc32821e9371a1c$var$CONTENT_NAME
});
var $6cc32821e9371a1c$var$GROUP_NAME = "MenuGroup";
var $6cc32821e9371a1c$export$22a631d1f72787bb = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, ...groupProps } = props;
  return (0, import_react36.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    role: "group"
  }, groupProps, {
    ref: forwardedRef
  }));
});
Object.assign($6cc32821e9371a1c$export$22a631d1f72787bb, {
  displayName: $6cc32821e9371a1c$var$GROUP_NAME
});
var $6cc32821e9371a1c$var$LABEL_NAME = "MenuLabel";
var $6cc32821e9371a1c$export$dd37bec0e8a99143 = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, ...labelProps } = props;
  return (0, import_react36.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, labelProps, {
    ref: forwardedRef
  }));
});
Object.assign($6cc32821e9371a1c$export$dd37bec0e8a99143, {
  displayName: $6cc32821e9371a1c$var$LABEL_NAME
});
var $6cc32821e9371a1c$var$ITEM_NAME = "MenuItem";
var $6cc32821e9371a1c$var$ITEM_SELECT = "menu.itemSelect";
var $6cc32821e9371a1c$export$2ce376c2cc3355c8 = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const { disabled = false, onSelect, ...itemProps } = props;
  const ref = (0, import_react36.useRef)(null);
  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$ITEM_NAME, props.__scopeMenu);
  const contentContext = $6cc32821e9371a1c$var$useMenuContentContext($6cc32821e9371a1c$var$ITEM_NAME, props.__scopeMenu);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const isPointerDownRef = (0, import_react36.useRef)(false);
  const handleSelect = () => {
    const menuItem = ref.current;
    if (!disabled && menuItem) {
      const itemSelectEvent = new CustomEvent($6cc32821e9371a1c$var$ITEM_SELECT, {
        bubbles: true,
        cancelable: true
      });
      menuItem.addEventListener(
        $6cc32821e9371a1c$var$ITEM_SELECT,
        (event) => onSelect === null || onSelect === void 0 ? void 0 : onSelect(event),
        {
          once: true
        }
      );
      $8927f6f2acc4f386$export$6d1a0317bde7de7f(menuItem, itemSelectEvent);
      if (itemSelectEvent.defaultPrevented)
        isPointerDownRef.current = false;
      else
        rootContext.onClose();
    }
  };
  return (0, import_react36.createElement)($6cc32821e9371a1c$var$MenuItemImpl, _extends({}, itemProps, {
    ref: composedRefs,
    disabled,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, handleSelect),
    onPointerDown: (event) => {
      var _props$onPointerDown;
      (_props$onPointerDown = props.onPointerDown) === null || _props$onPointerDown === void 0 || _props$onPointerDown.call(props, event);
      isPointerDownRef.current = true;
    },
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerUp, (event) => {
      var _event$currentTarget;
      if (!isPointerDownRef.current)
        (_event$currentTarget = event.currentTarget) === null || _event$currentTarget === void 0 || _event$currentTarget.click();
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      const isTypingAhead = contentContext.searchRef.current !== "";
      if (disabled || isTypingAhead && event.key === " ")
        return;
      if ($6cc32821e9371a1c$var$SELECTION_KEYS.includes(event.key)) {
        event.currentTarget.click();
        event.preventDefault();
      }
    })
  }));
});
Object.assign($6cc32821e9371a1c$export$2ce376c2cc3355c8, {
  displayName: $6cc32821e9371a1c$var$ITEM_NAME
});
var $6cc32821e9371a1c$var$MenuItemImpl = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, disabled = false, textValue, ...itemProps } = props;
  const contentContext = $6cc32821e9371a1c$var$useMenuContentContext($6cc32821e9371a1c$var$ITEM_NAME, __scopeMenu);
  const rovingFocusGroupScope = $6cc32821e9371a1c$var$useRovingFocusGroupScope(__scopeMenu);
  const ref = (0, import_react36.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const [isFocused, setIsFocused] = (0, import_react36.useState)(false);
  const [textContent, setTextContent] = (0, import_react36.useState)("");
  (0, import_react36.useEffect)(() => {
    const menuItem = ref.current;
    if (menuItem) {
      var _menuItem$textContent;
      setTextContent(((_menuItem$textContent = menuItem.textContent) !== null && _menuItem$textContent !== void 0 ? _menuItem$textContent : "").trim());
    }
  }, [
    itemProps.children
  ]);
  return (0, import_react36.createElement)($6cc32821e9371a1c$var$Collection.ItemSlot, {
    scope: __scopeMenu,
    disabled,
    textValue: textValue !== null && textValue !== void 0 ? textValue : textContent
  }, (0, import_react36.createElement)($d7bdfb9eb0fdf311$export$6d08773d2e66f8f2, _extends({
    asChild: true
  }, rovingFocusGroupScope, {
    focusable: !disabled
  }), (0, import_react36.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    role: "menuitem",
    "data-highlighted": isFocused ? "" : void 0,
    "aria-disabled": disabled || void 0,
    "data-disabled": disabled ? "" : void 0
  }, itemProps, {
    ref: composedRefs,
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, $6cc32821e9371a1c$var$whenMouse((event) => {
      if (disabled)
        contentContext.onItemLeave(event);
      else {
        contentContext.onItemEnter(event);
        if (!event.defaultPrevented) {
          const item = event.currentTarget;
          item.focus();
        }
      }
    })),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, $6cc32821e9371a1c$var$whenMouse(
      (event) => contentContext.onItemLeave(event)
    )),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocus,
      () => setIsFocused(true)
    ),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onBlur,
      () => setIsFocused(false)
    )
  }))));
});
var $6cc32821e9371a1c$var$CHECKBOX_ITEM_NAME = "MenuCheckboxItem";
var $6cc32821e9371a1c$export$f6f243521332502d = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const { checked = false, onCheckedChange, ...checkboxItemProps } = props;
  return (0, import_react36.createElement)($6cc32821e9371a1c$var$ItemIndicatorProvider, {
    scope: props.__scopeMenu,
    checked
  }, (0, import_react36.createElement)($6cc32821e9371a1c$export$2ce376c2cc3355c8, _extends({
    role: "menuitemcheckbox",
    "aria-checked": $6cc32821e9371a1c$var$isIndeterminate(checked) ? "mixed" : checked
  }, checkboxItemProps, {
    ref: forwardedRef,
    "data-state": $6cc32821e9371a1c$var$getCheckedState(checked),
    onSelect: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      checkboxItemProps.onSelect,
      () => onCheckedChange === null || onCheckedChange === void 0 ? void 0 : onCheckedChange($6cc32821e9371a1c$var$isIndeterminate(checked) ? true : !checked),
      {
        checkForDefaultPrevented: false
      }
    )
  })));
});
Object.assign($6cc32821e9371a1c$export$f6f243521332502d, {
  displayName: $6cc32821e9371a1c$var$CHECKBOX_ITEM_NAME
});
var $6cc32821e9371a1c$var$RADIO_GROUP_NAME = "MenuRadioGroup";
var [$6cc32821e9371a1c$var$RadioGroupProvider, $6cc32821e9371a1c$var$useRadioGroupContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$RADIO_GROUP_NAME, {
  value: void 0,
  onValueChange: () => {
  }
});
var $6cc32821e9371a1c$export$ea2200c9eee416b3 = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const { value, onValueChange, ...groupProps } = props;
  const handleValueChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onValueChange);
  return (0, import_react36.createElement)($6cc32821e9371a1c$var$RadioGroupProvider, {
    scope: props.__scopeMenu,
    value,
    onValueChange: handleValueChange
  }, (0, import_react36.createElement)($6cc32821e9371a1c$export$22a631d1f72787bb, _extends({}, groupProps, {
    ref: forwardedRef
  })));
});
Object.assign($6cc32821e9371a1c$export$ea2200c9eee416b3, {
  displayName: $6cc32821e9371a1c$var$RADIO_GROUP_NAME
});
var $6cc32821e9371a1c$var$RADIO_ITEM_NAME = "MenuRadioItem";
var $6cc32821e9371a1c$export$69bd225e9817f6d0 = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const { value, ...radioItemProps } = props;
  const context = $6cc32821e9371a1c$var$useRadioGroupContext($6cc32821e9371a1c$var$RADIO_ITEM_NAME, props.__scopeMenu);
  const checked = value === context.value;
  return (0, import_react36.createElement)($6cc32821e9371a1c$var$ItemIndicatorProvider, {
    scope: props.__scopeMenu,
    checked
  }, (0, import_react36.createElement)($6cc32821e9371a1c$export$2ce376c2cc3355c8, _extends({
    role: "menuitemradio",
    "aria-checked": checked
  }, radioItemProps, {
    ref: forwardedRef,
    "data-state": $6cc32821e9371a1c$var$getCheckedState(checked),
    onSelect: $e42e1063c40fb3ef$export$b9ecd428b558ff10(radioItemProps.onSelect, () => {
      var _context$onValueChang;
      return (_context$onValueChang = context.onValueChange) === null || _context$onValueChang === void 0 ? void 0 : _context$onValueChang.call(context, value);
    }, {
      checkForDefaultPrevented: false
    })
  })));
});
Object.assign($6cc32821e9371a1c$export$69bd225e9817f6d0, {
  displayName: $6cc32821e9371a1c$var$RADIO_ITEM_NAME
});
var $6cc32821e9371a1c$var$ITEM_INDICATOR_NAME = "MenuItemIndicator";
var [$6cc32821e9371a1c$var$ItemIndicatorProvider, $6cc32821e9371a1c$var$useItemIndicatorContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$ITEM_INDICATOR_NAME, {
  checked: false
});
var $6cc32821e9371a1c$export$a2593e23056970a3 = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, forceMount, ...itemIndicatorProps } = props;
  const indicatorContext = $6cc32821e9371a1c$var$useItemIndicatorContext($6cc32821e9371a1c$var$ITEM_INDICATOR_NAME, __scopeMenu);
  return (0, import_react36.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || $6cc32821e9371a1c$var$isIndeterminate(indicatorContext.checked) || indicatorContext.checked === true
  }, (0, import_react36.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({}, itemIndicatorProps, {
    ref: forwardedRef,
    "data-state": $6cc32821e9371a1c$var$getCheckedState(indicatorContext.checked)
  })));
});
Object.assign($6cc32821e9371a1c$export$a2593e23056970a3, {
  displayName: $6cc32821e9371a1c$var$ITEM_INDICATOR_NAME
});
var $6cc32821e9371a1c$var$SEPARATOR_NAME = "MenuSeparator";
var $6cc32821e9371a1c$export$1cec7dcdd713e220 = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, ...separatorProps } = props;
  return (0, import_react36.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    role: "separator",
    "aria-orientation": "horizontal"
  }, separatorProps, {
    ref: forwardedRef
  }));
});
Object.assign($6cc32821e9371a1c$export$1cec7dcdd713e220, {
  displayName: $6cc32821e9371a1c$var$SEPARATOR_NAME
});
var $6cc32821e9371a1c$var$ARROW_NAME = "MenuArrow";
var $6cc32821e9371a1c$export$bcdda4773debf5fa = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, ...arrowProps } = props;
  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);
  return (0, import_react36.createElement)($cf1ac5d9fe0e8206$export$21b07c8f274aebd5, _extends({}, popperScope, arrowProps, {
    ref: forwardedRef
  }));
});
Object.assign($6cc32821e9371a1c$export$bcdda4773debf5fa, {
  displayName: $6cc32821e9371a1c$var$ARROW_NAME
});
var $6cc32821e9371a1c$var$SUB_NAME = "MenuSub";
var [$6cc32821e9371a1c$var$MenuSubProvider, $6cc32821e9371a1c$var$useMenuSubContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$SUB_NAME);
var $6cc32821e9371a1c$export$71bdb9d1e2909932 = (props) => {
  const { __scopeMenu, children, open: open2 = false, onOpenChange } = props;
  const parentMenuContext = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$SUB_NAME, __scopeMenu);
  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);
  const [trigger, setTrigger] = (0, import_react36.useState)(null);
  const [content, setContent] = (0, import_react36.useState)(null);
  const handleOpenChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onOpenChange);
  (0, import_react36.useEffect)(() => {
    if (parentMenuContext.open === false)
      handleOpenChange(false);
    return () => handleOpenChange(false);
  }, [
    parentMenuContext.open,
    handleOpenChange
  ]);
  return (0, import_react36.createElement)($cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9, popperScope, (0, import_react36.createElement)($6cc32821e9371a1c$var$MenuProvider, {
    scope: __scopeMenu,
    open: open2,
    onOpenChange: handleOpenChange,
    content,
    onContentChange: setContent
  }, (0, import_react36.createElement)($6cc32821e9371a1c$var$MenuSubProvider, {
    scope: __scopeMenu,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    triggerId: $1746a345f3d73bb7$export$f680877a34711e37(),
    trigger,
    onTriggerChange: setTrigger
  }, children)));
};
Object.assign($6cc32821e9371a1c$export$71bdb9d1e2909932, {
  displayName: $6cc32821e9371a1c$var$SUB_NAME
});
var $6cc32821e9371a1c$var$SUB_TRIGGER_NAME = "MenuSubTrigger";
var $6cc32821e9371a1c$export$5fbbb3ba7297405f = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu);
  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu);
  const subContext = $6cc32821e9371a1c$var$useMenuSubContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu);
  const contentContext = $6cc32821e9371a1c$var$useMenuContentContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu);
  const openTimerRef = (0, import_react36.useRef)(null);
  const { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext;
  const scope = {
    __scopeMenu: props.__scopeMenu
  };
  const clearOpenTimer = (0, import_react36.useCallback)(() => {
    if (openTimerRef.current)
      window.clearTimeout(openTimerRef.current);
    openTimerRef.current = null;
  }, []);
  (0, import_react36.useEffect)(
    () => clearOpenTimer,
    [
      clearOpenTimer
    ]
  );
  (0, import_react36.useEffect)(() => {
    const pointerGraceTimer = pointerGraceTimerRef.current;
    return () => {
      window.clearTimeout(pointerGraceTimer);
      onPointerGraceIntentChange(null);
    };
  }, [
    pointerGraceTimerRef,
    onPointerGraceIntentChange
  ]);
  return (0, import_react36.createElement)($6cc32821e9371a1c$export$9fa5ebd18bee4d43, _extends({
    asChild: true
  }, scope), (0, import_react36.createElement)($6cc32821e9371a1c$var$MenuItemImpl, _extends({
    id: subContext.triggerId,
    "aria-haspopup": "menu",
    "aria-expanded": context.open,
    "aria-controls": subContext.contentId,
    "data-state": $6cc32821e9371a1c$var$getOpenState(context.open)
  }, props, {
    ref: $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, subContext.onTriggerChange),
    onClick: (event) => {
      var _props$onClick;
      (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, event);
      if (props.disabled || event.defaultPrevented)
        return;
      event.currentTarget.focus();
      if (!context.open)
        context.onOpenChange(true);
    },
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, $6cc32821e9371a1c$var$whenMouse((event) => {
      contentContext.onItemEnter(event);
      if (event.defaultPrevented)
        return;
      if (!props.disabled && !context.open && !openTimerRef.current) {
        contentContext.onPointerGraceIntentChange(null);
        openTimerRef.current = window.setTimeout(() => {
          context.onOpenChange(true);
          clearOpenTimer();
        }, 100);
      }
    })),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, $6cc32821e9371a1c$var$whenMouse((event) => {
      var _context$content;
      clearOpenTimer();
      const contentRect = (_context$content = context.content) === null || _context$content === void 0 ? void 0 : _context$content.getBoundingClientRect();
      if (contentRect) {
        var _context$content2;
        const side = (_context$content2 = context.content) === null || _context$content2 === void 0 ? void 0 : _context$content2.dataset.side;
        const rightSide = side === "right";
        const bleed = rightSide ? -5 : 5;
        const contentNearEdge = contentRect[rightSide ? "left" : "right"];
        const contentFarEdge = contentRect[rightSide ? "right" : "left"];
        contentContext.onPointerGraceIntentChange({
          area: [
            {
              x: event.clientX + bleed,
              y: event.clientY
            },
            {
              x: contentNearEdge,
              y: contentRect.top
            },
            {
              x: contentFarEdge,
              y: contentRect.top
            },
            {
              x: contentFarEdge,
              y: contentRect.bottom
            },
            {
              x: contentNearEdge,
              y: contentRect.bottom
            }
          ],
          side
        });
        window.clearTimeout(pointerGraceTimerRef.current);
        pointerGraceTimerRef.current = window.setTimeout(
          () => contentContext.onPointerGraceIntentChange(null),
          300
        );
      } else {
        contentContext.onTriggerLeave(event);
        if (event.defaultPrevented)
          return;
        contentContext.onPointerGraceIntentChange(null);
      }
    })),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      const isTypingAhead = contentContext.searchRef.current !== "";
      if (props.disabled || isTypingAhead && event.key === " ")
        return;
      if ($6cc32821e9371a1c$var$SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {
        var _context$content3;
        context.onOpenChange(true);
        (_context$content3 = context.content) === null || _context$content3 === void 0 || _context$content3.focus();
        event.preventDefault();
      }
    })
  })));
});
Object.assign($6cc32821e9371a1c$export$5fbbb3ba7297405f, {
  displayName: $6cc32821e9371a1c$var$SUB_TRIGGER_NAME
});
var $6cc32821e9371a1c$var$SUB_CONTENT_NAME = "MenuSubContent";
var $6cc32821e9371a1c$export$e7142ab31822bde6 = (0, import_react36.forwardRef)((props, forwardedRef) => {
  const portalContext = $6cc32821e9371a1c$var$usePortalContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  const { forceMount = portalContext.forceMount, ...subContentProps } = props;
  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  const subContext = $6cc32821e9371a1c$var$useMenuSubContext($6cc32821e9371a1c$var$SUB_CONTENT_NAME, props.__scopeMenu);
  const ref = (0, import_react36.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  return (0, import_react36.createElement)($6cc32821e9371a1c$var$Collection.Provider, {
    scope: props.__scopeMenu
  }, (0, import_react36.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, (0, import_react36.createElement)($6cc32821e9371a1c$var$Collection.Slot, {
    scope: props.__scopeMenu
  }, (0, import_react36.createElement)($6cc32821e9371a1c$var$MenuContentImpl, _extends({
    id: subContext.contentId,
    "aria-labelledby": subContext.triggerId
  }, subContentProps, {
    ref: composedRefs,
    align: "start",
    side: rootContext.dir === "rtl" ? "left" : "right",
    disableOutsidePointerEvents: false,
    disableOutsideScroll: false,
    trapFocus: false,
    onOpenAutoFocus: (event) => {
      var _ref$current;
      if (rootContext.isUsingKeyboardRef.current)
        (_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.focus();
      event.preventDefault();
    },
    onCloseAutoFocus: (event) => event.preventDefault(),
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocusOutside, (event) => {
      if (event.target !== subContext.trigger)
        context.onOpenChange(false);
    }),
    onEscapeKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onEscapeKeyDown, (event) => {
      rootContext.onClose();
      event.preventDefault();
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      const isKeyDownInside = event.currentTarget.contains(event.target);
      const isCloseKey = $6cc32821e9371a1c$var$SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);
      if (isKeyDownInside && isCloseKey) {
        var _subContext$trigger;
        context.onOpenChange(false);
        (_subContext$trigger = subContext.trigger) === null || _subContext$trigger === void 0 || _subContext$trigger.focus();
        event.preventDefault();
      }
    })
  })))));
});
Object.assign($6cc32821e9371a1c$export$e7142ab31822bde6, {
  displayName: $6cc32821e9371a1c$var$SUB_CONTENT_NAME
});
function $6cc32821e9371a1c$var$getOpenState(open2) {
  return open2 ? "open" : "closed";
}
function $6cc32821e9371a1c$var$isIndeterminate(checked) {
  return checked === "indeterminate";
}
function $6cc32821e9371a1c$var$getCheckedState(checked) {
  return $6cc32821e9371a1c$var$isIndeterminate(checked) ? "indeterminate" : checked ? "checked" : "unchecked";
}
function $6cc32821e9371a1c$var$focusFirst(candidates) {
  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
  for (const candidate of candidates) {
    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT)
      return;
    candidate.focus();
    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT)
      return;
  }
}
function $6cc32821e9371a1c$var$wrapArray(array, startIndex) {
  return array.map(
    (_2, index2) => array[(startIndex + index2) % array.length]
  );
}
function $6cc32821e9371a1c$var$getNextMatch(values2, search, currentMatch) {
  const isRepeated = search.length > 1 && Array.from(search).every(
    (char) => char === search[0]
  );
  const normalizedSearch = isRepeated ? search[0] : search;
  const currentMatchIndex = currentMatch ? values2.indexOf(currentMatch) : -1;
  let wrappedValues = $6cc32821e9371a1c$var$wrapArray(values2, Math.max(currentMatchIndex, 0));
  const excludeCurrentMatch = normalizedSearch.length === 1;
  if (excludeCurrentMatch)
    wrappedValues = wrappedValues.filter(
      (v) => v !== currentMatch
    );
  const nextMatch = wrappedValues.find(
    (value) => value.toLowerCase().startsWith(normalizedSearch.toLowerCase())
  );
  return nextMatch !== currentMatch ? nextMatch : void 0;
}
function $6cc32821e9371a1c$var$isPointInPolygon(point, polygon) {
  const { x, y } = point;
  let inside = false;
  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {
    const xi = polygon[i].x;
    const yi = polygon[i].y;
    const xj = polygon[j].x;
    const yj = polygon[j].y;
    const intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;
    if (intersect)
      inside = !inside;
  }
  return inside;
}
function $6cc32821e9371a1c$var$isPointerInGraceArea(event, area) {
  if (!area)
    return false;
  const cursorPos = {
    x: event.clientX,
    y: event.clientY
  };
  return $6cc32821e9371a1c$var$isPointInPolygon(cursorPos, area);
}
function $6cc32821e9371a1c$var$whenMouse(handler) {
  return (event) => event.pointerType === "mouse" ? handler(event) : void 0;
}
var $6cc32821e9371a1c$export$be92b6f5f03c0fe9 = $6cc32821e9371a1c$export$d9b273488cd8ce6f;
var $6cc32821e9371a1c$export$b688253958b8dfe7 = $6cc32821e9371a1c$export$9fa5ebd18bee4d43;
var $6cc32821e9371a1c$export$602eac185826482c = $6cc32821e9371a1c$export$793392f970497feb;
var $6cc32821e9371a1c$export$7c6e2c02157bb7d2 = $6cc32821e9371a1c$export$479f0f2f71193efe;
var $6cc32821e9371a1c$export$eb2fcfdbd7ba97d4 = $6cc32821e9371a1c$export$22a631d1f72787bb;
var $6cc32821e9371a1c$export$b04be29aa201d4f5 = $6cc32821e9371a1c$export$dd37bec0e8a99143;
var $6cc32821e9371a1c$export$6d08773d2e66f8f2 = $6cc32821e9371a1c$export$2ce376c2cc3355c8;
var $6cc32821e9371a1c$export$16ce288f89fa631c = $6cc32821e9371a1c$export$f6f243521332502d;
var $6cc32821e9371a1c$export$a98f0dcb43a68a25 = $6cc32821e9371a1c$export$ea2200c9eee416b3;
var $6cc32821e9371a1c$export$371ab307eab489c0 = $6cc32821e9371a1c$export$69bd225e9817f6d0;
var $6cc32821e9371a1c$export$c3468e2714d175fa = $6cc32821e9371a1c$export$a2593e23056970a3;
var $6cc32821e9371a1c$export$1ff3c3f08ae963c0 = $6cc32821e9371a1c$export$1cec7dcdd713e220;
var $6cc32821e9371a1c$export$21b07c8f274aebd5 = $6cc32821e9371a1c$export$bcdda4773debf5fa;
var $6cc32821e9371a1c$export$2ea8a7a591ac5eac = $6cc32821e9371a1c$export$5fbbb3ba7297405f;
var $6cc32821e9371a1c$export$6d4de93b380beddf = $6cc32821e9371a1c$export$e7142ab31822bde6;

// node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs
var $d08ef79370b62062$var$DROPDOWN_MENU_NAME = "DropdownMenu";
var [$d08ef79370b62062$var$createDropdownMenuContext, $d08ef79370b62062$export$c0623cd925aeb687] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($d08ef79370b62062$var$DROPDOWN_MENU_NAME, [
  $6cc32821e9371a1c$export$4027731b685e72eb
]);
var $d08ef79370b62062$var$useMenuScope = $6cc32821e9371a1c$export$4027731b685e72eb();
var [$d08ef79370b62062$var$DropdownMenuProvider, $d08ef79370b62062$var$useDropdownMenuContext] = $d08ef79370b62062$var$createDropdownMenuContext($d08ef79370b62062$var$DROPDOWN_MENU_NAME);
var $d08ef79370b62062$export$e44a253a59704894 = (props) => {
  const { __scopeDropdownMenu, children, dir, open: openProp, defaultOpen, onOpenChange, modal = true } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  const triggerRef = (0, import_react37.useRef)(null);
  const [open2 = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return (0, import_react37.createElement)($d08ef79370b62062$var$DropdownMenuProvider, {
    scope: __scopeDropdownMenu,
    triggerId: $1746a345f3d73bb7$export$f680877a34711e37(),
    triggerRef,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    open: open2,
    onOpenChange: setOpen,
    onOpenToggle: (0, import_react37.useCallback)(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    ),
    modal
  }, (0, import_react37.createElement)($6cc32821e9371a1c$export$be92b6f5f03c0fe9, _extends({}, menuScope, {
    open: open2,
    onOpenChange: setOpen,
    dir,
    modal
  }), children));
};
Object.assign($d08ef79370b62062$export$e44a253a59704894, {
  displayName: $d08ef79370b62062$var$DROPDOWN_MENU_NAME
});
var $d08ef79370b62062$var$TRIGGER_NAME = "DropdownMenuTrigger";
var $d08ef79370b62062$export$d2469213b3befba9 = (0, import_react37.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;
  const context = $d08ef79370b62062$var$useDropdownMenuContext($d08ef79370b62062$var$TRIGGER_NAME, __scopeDropdownMenu);
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react37.createElement)($6cc32821e9371a1c$export$b688253958b8dfe7, _extends({
    asChild: true
  }, menuScope), (0, import_react37.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button",
    id: context.triggerId,
    "aria-haspopup": "menu",
    "aria-expanded": context.open,
    "aria-controls": context.open ? context.contentId : void 0,
    "data-state": context.open ? "open" : "closed",
    "data-disabled": disabled ? "" : void 0,
    disabled
  }, triggerProps, {
    ref: $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, context.triggerRef),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, (event) => {
      if (!disabled && event.button === 0 && event.ctrlKey === false) {
        context.onOpenToggle();
        if (!context.open)
          event.preventDefault();
      }
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      if (disabled)
        return;
      if ([
        "Enter",
        " "
      ].includes(event.key))
        context.onOpenToggle();
      if (event.key === "ArrowDown")
        context.onOpenChange(true);
      if ([
        "Enter",
        " ",
        "ArrowDown"
      ].includes(event.key))
        event.preventDefault();
    })
  })));
});
Object.assign($d08ef79370b62062$export$d2469213b3befba9, {
  displayName: $d08ef79370b62062$var$TRIGGER_NAME
});
var $d08ef79370b62062$var$PORTAL_NAME = "DropdownMenuPortal";
var $d08ef79370b62062$export$cd369b4d4d54efc9 = (props) => {
  const { __scopeDropdownMenu, ...portalProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react37.createElement)($6cc32821e9371a1c$export$602eac185826482c, _extends({}, menuScope, portalProps));
};
Object.assign($d08ef79370b62062$export$cd369b4d4d54efc9, {
  displayName: $d08ef79370b62062$var$PORTAL_NAME
});
var $d08ef79370b62062$var$CONTENT_NAME = "DropdownMenuContent";
var $d08ef79370b62062$export$6e76d93a37c01248 = (0, import_react37.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...contentProps } = props;
  const context = $d08ef79370b62062$var$useDropdownMenuContext($d08ef79370b62062$var$CONTENT_NAME, __scopeDropdownMenu);
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  const hasInteractedOutsideRef = (0, import_react37.useRef)(false);
  return (0, import_react37.createElement)($6cc32821e9371a1c$export$7c6e2c02157bb7d2, _extends({
    id: context.contentId,
    "aria-labelledby": context.triggerId
  }, menuScope, contentProps, {
    ref: forwardedRef,
    onCloseAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onCloseAutoFocus, (event) => {
      var _context$triggerRef$c;
      if (!hasInteractedOutsideRef.current)
        (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();
      hasInteractedOutsideRef.current = false;
      event.preventDefault();
    }),
    onInteractOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onInteractOutside, (event) => {
      const originalEvent = event.detail.originalEvent;
      const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
      const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
      if (!context.modal || isRightClick)
        hasInteractedOutsideRef.current = true;
    }),
    style: {
      ...props.style,
      "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
      "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
      "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }));
});
Object.assign($d08ef79370b62062$export$6e76d93a37c01248, {
  displayName: $d08ef79370b62062$var$CONTENT_NAME
});
var $d08ef79370b62062$var$GROUP_NAME = "DropdownMenuGroup";
var $d08ef79370b62062$export$246bebaba3a2f70e = (0, import_react37.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...groupProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react37.createElement)($6cc32821e9371a1c$export$eb2fcfdbd7ba97d4, _extends({}, menuScope, groupProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$246bebaba3a2f70e, {
  displayName: $d08ef79370b62062$var$GROUP_NAME
});
var $d08ef79370b62062$var$LABEL_NAME = "DropdownMenuLabel";
var $d08ef79370b62062$export$76e48c5b57f24495 = (0, import_react37.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...labelProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react37.createElement)($6cc32821e9371a1c$export$b04be29aa201d4f5, _extends({}, menuScope, labelProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$76e48c5b57f24495, {
  displayName: $d08ef79370b62062$var$LABEL_NAME
});
var $d08ef79370b62062$var$ITEM_NAME = "DropdownMenuItem";
var $d08ef79370b62062$export$ed97964d1871885d = (0, import_react37.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...itemProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react37.createElement)($6cc32821e9371a1c$export$6d08773d2e66f8f2, _extends({}, menuScope, itemProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$ed97964d1871885d, {
  displayName: $d08ef79370b62062$var$ITEM_NAME
});
var $d08ef79370b62062$var$CHECKBOX_ITEM_NAME = "DropdownMenuCheckboxItem";
var $d08ef79370b62062$export$53a69729da201fa9 = (0, import_react37.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...checkboxItemProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react37.createElement)($6cc32821e9371a1c$export$16ce288f89fa631c, _extends({}, menuScope, checkboxItemProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$53a69729da201fa9, {
  displayName: $d08ef79370b62062$var$CHECKBOX_ITEM_NAME
});
var $d08ef79370b62062$var$RADIO_GROUP_NAME = "DropdownMenuRadioGroup";
var $d08ef79370b62062$export$3323ad73d55f587e = (0, import_react37.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...radioGroupProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react37.createElement)($6cc32821e9371a1c$export$a98f0dcb43a68a25, _extends({}, menuScope, radioGroupProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$3323ad73d55f587e, {
  displayName: $d08ef79370b62062$var$RADIO_GROUP_NAME
});
var $d08ef79370b62062$var$RADIO_ITEM_NAME = "DropdownMenuRadioItem";
var $d08ef79370b62062$export$e4f69b41b1637536 = (0, import_react37.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...radioItemProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react37.createElement)($6cc32821e9371a1c$export$371ab307eab489c0, _extends({}, menuScope, radioItemProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$e4f69b41b1637536, {
  displayName: $d08ef79370b62062$var$RADIO_ITEM_NAME
});
var $d08ef79370b62062$var$INDICATOR_NAME = "DropdownMenuItemIndicator";
var $d08ef79370b62062$export$42355ae145153fb6 = (0, import_react37.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...itemIndicatorProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react37.createElement)($6cc32821e9371a1c$export$c3468e2714d175fa, _extends({}, menuScope, itemIndicatorProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$42355ae145153fb6, {
  displayName: $d08ef79370b62062$var$INDICATOR_NAME
});
var $d08ef79370b62062$var$SEPARATOR_NAME = "DropdownMenuSeparator";
var $d08ef79370b62062$export$da160178fd3bc7e9 = (0, import_react37.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...separatorProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react37.createElement)($6cc32821e9371a1c$export$1ff3c3f08ae963c0, _extends({}, menuScope, separatorProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$da160178fd3bc7e9, {
  displayName: $d08ef79370b62062$var$SEPARATOR_NAME
});
var $d08ef79370b62062$var$ARROW_NAME = "DropdownMenuArrow";
var $d08ef79370b62062$export$34b8980744021ec5 = (0, import_react37.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...arrowProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react37.createElement)($6cc32821e9371a1c$export$21b07c8f274aebd5, _extends({}, menuScope, arrowProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$34b8980744021ec5, {
  displayName: $d08ef79370b62062$var$ARROW_NAME
});
var $d08ef79370b62062$var$SUB_TRIGGER_NAME = "DropdownMenuSubTrigger";
var $d08ef79370b62062$export$21dcb7ec56f874cf = (0, import_react37.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...subTriggerProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react37.createElement)($6cc32821e9371a1c$export$2ea8a7a591ac5eac, _extends({}, menuScope, subTriggerProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$21dcb7ec56f874cf, {
  displayName: $d08ef79370b62062$var$SUB_TRIGGER_NAME
});
var $d08ef79370b62062$var$SUB_CONTENT_NAME = "DropdownMenuSubContent";
var $d08ef79370b62062$export$f34ec8bc2482cc5f = (0, import_react37.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...subContentProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react37.createElement)($6cc32821e9371a1c$export$6d4de93b380beddf, _extends({}, menuScope, subContentProps, {
    ref: forwardedRef,
    style: {
      ...props.style,
      "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
      "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
      "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }));
});
Object.assign($d08ef79370b62062$export$f34ec8bc2482cc5f, {
  displayName: $d08ef79370b62062$var$SUB_CONTENT_NAME
});
var $d08ef79370b62062$export$be92b6f5f03c0fe9 = $d08ef79370b62062$export$e44a253a59704894;
var $d08ef79370b62062$export$41fb9f06171c75f4 = $d08ef79370b62062$export$d2469213b3befba9;
var $d08ef79370b62062$export$602eac185826482c = $d08ef79370b62062$export$cd369b4d4d54efc9;
var $d08ef79370b62062$export$eb2fcfdbd7ba97d4 = $d08ef79370b62062$export$246bebaba3a2f70e;
var $d08ef79370b62062$export$b04be29aa201d4f5 = $d08ef79370b62062$export$76e48c5b57f24495;
var $d08ef79370b62062$export$6d08773d2e66f8f2 = $d08ef79370b62062$export$ed97964d1871885d;
var $d08ef79370b62062$export$16ce288f89fa631c = $d08ef79370b62062$export$53a69729da201fa9;
var $d08ef79370b62062$export$a98f0dcb43a68a25 = $d08ef79370b62062$export$3323ad73d55f587e;
var $d08ef79370b62062$export$371ab307eab489c0 = $d08ef79370b62062$export$e4f69b41b1637536;
var $d08ef79370b62062$export$c3468e2714d175fa = $d08ef79370b62062$export$42355ae145153fb6;
var $d08ef79370b62062$export$1ff3c3f08ae963c0 = $d08ef79370b62062$export$da160178fd3bc7e9;

// node_modules/@radix-ui/react-navigation-menu/dist/index.mjs
var import_react38 = __toESM(require_react(), 1);
var import_react_dom6 = __toESM(require_react_dom(), 1);
var $322c88a641701f3b$var$NAVIGATION_MENU_NAME = "NavigationMenu";
var [$322c88a641701f3b$var$Collection, $322c88a641701f3b$var$useCollection, $322c88a641701f3b$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($322c88a641701f3b$var$NAVIGATION_MENU_NAME);
var [$322c88a641701f3b$var$FocusGroupCollection, $322c88a641701f3b$var$useFocusGroupCollection, $322c88a641701f3b$var$createFocusGroupCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($322c88a641701f3b$var$NAVIGATION_MENU_NAME);
var [$322c88a641701f3b$var$createNavigationMenuContext, $322c88a641701f3b$export$fb8ea5af8c9fcdf0] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($322c88a641701f3b$var$NAVIGATION_MENU_NAME, [
  $322c88a641701f3b$var$createCollectionScope,
  $322c88a641701f3b$var$createFocusGroupCollectionScope
]);
var [$322c88a641701f3b$var$NavigationMenuProviderImpl, $322c88a641701f3b$var$useNavigationMenuContext] = $322c88a641701f3b$var$createNavigationMenuContext($322c88a641701f3b$var$NAVIGATION_MENU_NAME);
var [$322c88a641701f3b$var$ViewportContentProvider, $322c88a641701f3b$var$useViewportContentContext] = $322c88a641701f3b$var$createNavigationMenuContext($322c88a641701f3b$var$NAVIGATION_MENU_NAME);
var $322c88a641701f3b$export$5b2278cf1e8bcae2 = (0, import_react38.forwardRef)((props, forwardedRef) => {
  const { __scopeNavigationMenu, value: valueProp, onValueChange, defaultValue, delayDuration = 200, skipDelayDuration = 300, orientation = "horizontal", dir, ...NavigationMenuProps } = props;
  const [navigationMenu, setNavigationMenu] = (0, import_react38.useState)(null);
  const composedRef = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setNavigationMenu(node)
  );
  const direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  const openTimerRef = (0, import_react38.useRef)(0);
  const closeTimerRef = (0, import_react38.useRef)(0);
  const skipDelayTimerRef = (0, import_react38.useRef)(0);
  const [isOpenDelayed, setIsOpenDelayed] = (0, import_react38.useState)(true);
  const [value1 = "", setValue] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: valueProp,
    onChange: (value) => {
      const isOpen = value !== "";
      const hasSkipDelayDuration = skipDelayDuration > 0;
      if (isOpen) {
        window.clearTimeout(skipDelayTimerRef.current);
        if (hasSkipDelayDuration)
          setIsOpenDelayed(false);
      } else {
        window.clearTimeout(skipDelayTimerRef.current);
        skipDelayTimerRef.current = window.setTimeout(
          () => setIsOpenDelayed(true),
          skipDelayDuration
        );
      }
      onValueChange === null || onValueChange === void 0 || onValueChange(value);
    },
    defaultProp: defaultValue
  });
  const startCloseTimer = (0, import_react38.useCallback)(() => {
    window.clearTimeout(closeTimerRef.current);
    closeTimerRef.current = window.setTimeout(
      () => setValue(""),
      150
    );
  }, [
    setValue
  ]);
  const handleOpen = (0, import_react38.useCallback)((itemValue) => {
    window.clearTimeout(closeTimerRef.current);
    setValue(itemValue);
  }, [
    setValue
  ]);
  const handleDelayedOpen = (0, import_react38.useCallback)((itemValue) => {
    const isOpenItem = value1 === itemValue;
    if (isOpenItem)
      window.clearTimeout(closeTimerRef.current);
    else
      openTimerRef.current = window.setTimeout(() => {
        window.clearTimeout(closeTimerRef.current);
        setValue(itemValue);
      }, delayDuration);
  }, [
    value1,
    setValue,
    delayDuration
  ]);
  (0, import_react38.useEffect)(() => {
    return () => {
      window.clearTimeout(openTimerRef.current);
      window.clearTimeout(closeTimerRef.current);
      window.clearTimeout(skipDelayTimerRef.current);
    };
  }, []);
  return (0, import_react38.createElement)($322c88a641701f3b$var$NavigationMenuProvider, {
    scope: __scopeNavigationMenu,
    isRootMenu: true,
    value: value1,
    dir: direction,
    orientation,
    rootNavigationMenu: navigationMenu,
    onTriggerEnter: (itemValue) => {
      window.clearTimeout(openTimerRef.current);
      if (isOpenDelayed)
        handleDelayedOpen(itemValue);
      else
        handleOpen(itemValue);
    },
    onTriggerLeave: () => {
      window.clearTimeout(openTimerRef.current);
      startCloseTimer();
    },
    onContentEnter: () => window.clearTimeout(closeTimerRef.current),
    onContentLeave: startCloseTimer,
    onItemSelect: (itemValue) => {
      setValue(
        (prevValue) => prevValue === itemValue ? "" : itemValue
      );
    },
    onItemDismiss: () => setValue("")
  }, (0, import_react38.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.nav, _extends({
    "aria-label": "Main",
    "data-orientation": orientation,
    dir: direction
  }, NavigationMenuProps, {
    ref: composedRef
  })));
});
Object.assign($322c88a641701f3b$export$5b2278cf1e8bcae2, {
  displayName: $322c88a641701f3b$var$NAVIGATION_MENU_NAME
});
var $322c88a641701f3b$var$SUB_NAME = "NavigationMenuSub";
var $322c88a641701f3b$export$5958edd6c4ee7c79 = (0, import_react38.forwardRef)((props, forwardedRef) => {
  const { __scopeNavigationMenu, value: valueProp, onValueChange, defaultValue, orientation = "horizontal", ...subProps } = props;
  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$SUB_NAME, __scopeNavigationMenu);
  const [value = "", setValue] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: valueProp,
    onChange: onValueChange,
    defaultProp: defaultValue
  });
  return (0, import_react38.createElement)($322c88a641701f3b$var$NavigationMenuProvider, {
    scope: __scopeNavigationMenu,
    isRootMenu: false,
    value,
    dir: context.dir,
    orientation,
    rootNavigationMenu: context.rootNavigationMenu,
    onTriggerEnter: (itemValue) => setValue(itemValue),
    onItemSelect: (itemValue) => setValue(itemValue),
    onItemDismiss: () => setValue("")
  }, (0, import_react38.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    "data-orientation": orientation
  }, subProps, {
    ref: forwardedRef
  })));
});
Object.assign($322c88a641701f3b$export$5958edd6c4ee7c79, {
  displayName: $322c88a641701f3b$var$SUB_NAME
});
var $322c88a641701f3b$var$NavigationMenuProvider = (props) => {
  const { scope, isRootMenu, rootNavigationMenu, dir, orientation, children, value, onItemSelect, onItemDismiss, onTriggerEnter, onTriggerLeave, onContentEnter, onContentLeave } = props;
  const [viewport, setViewport] = (0, import_react38.useState)(null);
  const [viewportContent, setViewportContent] = (0, import_react38.useState)(/* @__PURE__ */ new Map());
  const [indicatorTrack, setIndicatorTrack] = (0, import_react38.useState)(null);
  return (0, import_react38.createElement)($322c88a641701f3b$var$NavigationMenuProviderImpl, {
    scope,
    isRootMenu,
    rootNavigationMenu,
    value,
    previousValue: $010c2913dbd2fe3d$export$5cae361ad82dce8b(value),
    baseId: $1746a345f3d73bb7$export$f680877a34711e37(),
    dir,
    orientation,
    viewport,
    onViewportChange: setViewport,
    indicatorTrack,
    onIndicatorTrackChange: setIndicatorTrack,
    onTriggerEnter: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onTriggerEnter),
    onTriggerLeave: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onTriggerLeave),
    onContentEnter: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onContentEnter),
    onContentLeave: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onContentLeave),
    onItemSelect: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onItemSelect),
    onItemDismiss: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onItemDismiss),
    onViewportContentChange: (0, import_react38.useCallback)((contentValue, contentData) => {
      setViewportContent((prevContent) => {
        prevContent.set(contentValue, contentData);
        return new Map(prevContent);
      });
    }, []),
    onViewportContentRemove: (0, import_react38.useCallback)((contentValue) => {
      setViewportContent((prevContent) => {
        if (!prevContent.has(contentValue))
          return prevContent;
        prevContent.delete(contentValue);
        return new Map(prevContent);
      });
    }, [])
  }, (0, import_react38.createElement)($322c88a641701f3b$var$Collection.Provider, {
    scope
  }, (0, import_react38.createElement)($322c88a641701f3b$var$ViewportContentProvider, {
    scope,
    items: viewportContent
  }, children)));
};
var $322c88a641701f3b$var$LIST_NAME = "NavigationMenuList";
var $322c88a641701f3b$export$c361068a95fd2286 = (0, import_react38.forwardRef)((props, forwardedRef) => {
  const { __scopeNavigationMenu, ...listProps } = props;
  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$LIST_NAME, __scopeNavigationMenu);
  const list = (0, import_react38.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.ul, _extends({
    "data-orientation": context.orientation
  }, listProps, {
    ref: forwardedRef
  }));
  return (0, import_react38.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, {
    style: {
      position: "relative"
    },
    ref: context.onIndicatorTrackChange
  }, (0, import_react38.createElement)($322c88a641701f3b$var$Collection.Slot, {
    scope: __scopeNavigationMenu
  }, context.isRootMenu ? (0, import_react38.createElement)($322c88a641701f3b$var$FocusGroup, {
    asChild: true
  }, list) : list));
});
Object.assign($322c88a641701f3b$export$c361068a95fd2286, {
  displayName: $322c88a641701f3b$var$LIST_NAME
});
var $322c88a641701f3b$var$ITEM_NAME = "NavigationMenuItem";
var [$322c88a641701f3b$var$NavigationMenuItemContextProvider, $322c88a641701f3b$var$useNavigationMenuItemContext] = $322c88a641701f3b$var$createNavigationMenuContext($322c88a641701f3b$var$ITEM_NAME);
var $322c88a641701f3b$export$ffdbb83a2de845c2 = (0, import_react38.forwardRef)((props, forwardedRef) => {
  const { __scopeNavigationMenu, value: valueProp, ...itemProps } = props;
  const autoValue = $1746a345f3d73bb7$export$f680877a34711e37();
  const value = valueProp || autoValue || "LEGACY_REACT_AUTO_VALUE";
  const contentRef = (0, import_react38.useRef)(null);
  const triggerRef = (0, import_react38.useRef)(null);
  const focusProxyRef = (0, import_react38.useRef)(null);
  const restoreContentTabOrderRef = (0, import_react38.useRef)(() => {
  });
  const wasEscapeCloseRef = (0, import_react38.useRef)(false);
  const handleContentEntry = (0, import_react38.useCallback)((side = "start") => {
    if (contentRef.current) {
      restoreContentTabOrderRef.current();
      const candidates = $322c88a641701f3b$var$getTabbableCandidates(contentRef.current);
      if (candidates.length)
        $322c88a641701f3b$var$focusFirst(side === "start" ? candidates : candidates.reverse());
    }
  }, []);
  const handleContentExit = (0, import_react38.useCallback)(() => {
    if (contentRef.current) {
      const candidates = $322c88a641701f3b$var$getTabbableCandidates(contentRef.current);
      if (candidates.length)
        restoreContentTabOrderRef.current = $322c88a641701f3b$var$removeFromTabOrder(candidates);
    }
  }, []);
  return (0, import_react38.createElement)($322c88a641701f3b$var$NavigationMenuItemContextProvider, {
    scope: __scopeNavigationMenu,
    value,
    triggerRef,
    contentRef,
    focusProxyRef,
    wasEscapeCloseRef,
    onEntryKeyDown: handleContentEntry,
    onFocusProxyEnter: handleContentEntry,
    onRootContentClose: handleContentExit,
    onContentFocusOutside: handleContentExit
  }, (0, import_react38.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.li, _extends({}, itemProps, {
    ref: forwardedRef
  })));
});
Object.assign($322c88a641701f3b$export$ffdbb83a2de845c2, {
  displayName: $322c88a641701f3b$var$ITEM_NAME
});
var $322c88a641701f3b$var$TRIGGER_NAME = "NavigationMenuTrigger";
var $322c88a641701f3b$export$37fe8002734d8f2 = (0, import_react38.forwardRef)((props, forwardedRef) => {
  const { __scopeNavigationMenu, disabled, ...triggerProps } = props;
  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$TRIGGER_NAME, props.__scopeNavigationMenu);
  const itemContext = $322c88a641701f3b$var$useNavigationMenuItemContext($322c88a641701f3b$var$TRIGGER_NAME, props.__scopeNavigationMenu);
  const ref = (0, import_react38.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(ref, itemContext.triggerRef, forwardedRef);
  const triggerId = $322c88a641701f3b$var$makeTriggerId(context.baseId, itemContext.value);
  const contentId = $322c88a641701f3b$var$makeContentId(context.baseId, itemContext.value);
  const hasPointerMoveOpenedRef = (0, import_react38.useRef)(false);
  const wasClickCloseRef = (0, import_react38.useRef)(false);
  const open2 = itemContext.value === context.value;
  return (0, import_react38.createElement)(import_react38.Fragment, null, (0, import_react38.createElement)($322c88a641701f3b$var$Collection.ItemSlot, {
    scope: __scopeNavigationMenu,
    value: itemContext.value
  }, (0, import_react38.createElement)($322c88a641701f3b$var$FocusGroupItem, {
    asChild: true
  }, (0, import_react38.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    id: triggerId,
    disabled,
    "data-disabled": disabled ? "" : void 0,
    "data-state": $322c88a641701f3b$var$getOpenState(open2),
    "aria-expanded": open2,
    "aria-controls": contentId
  }, triggerProps, {
    ref: composedRefs,
    onPointerEnter: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerEnter, () => {
      wasClickCloseRef.current = false;
      itemContext.wasEscapeCloseRef.current = false;
    }),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, $322c88a641701f3b$var$whenMouse(() => {
      if (disabled || wasClickCloseRef.current || itemContext.wasEscapeCloseRef.current || hasPointerMoveOpenedRef.current)
        return;
      context.onTriggerEnter(itemContext.value);
      hasPointerMoveOpenedRef.current = true;
    })),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, $322c88a641701f3b$var$whenMouse(() => {
      if (disabled)
        return;
      context.onTriggerLeave();
      hasPointerMoveOpenedRef.current = false;
    })),
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, () => {
      context.onItemSelect(itemContext.value);
      wasClickCloseRef.current = open2;
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      const verticalEntryKey = context.dir === "rtl" ? "ArrowLeft" : "ArrowRight";
      const entryKey = {
        horizontal: "ArrowDown",
        vertical: verticalEntryKey
      }[context.orientation];
      if (open2 && event.key === entryKey) {
        itemContext.onEntryKeyDown();
        event.preventDefault();
      }
    })
  })))), open2 && (0, import_react38.createElement)(import_react38.Fragment, null, (0, import_react38.createElement)($ea1ef594cf570d83$export$be92b6f5f03c0fe9, {
    "aria-hidden": true,
    tabIndex: 0,
    ref: itemContext.focusProxyRef,
    onFocus: (event) => {
      const content = itemContext.contentRef.current;
      const prevFocusedElement = event.relatedTarget;
      const wasTriggerFocused = prevFocusedElement === ref.current;
      const wasFocusFromContent = content === null || content === void 0 ? void 0 : content.contains(prevFocusedElement);
      if (wasTriggerFocused || !wasFocusFromContent)
        itemContext.onFocusProxyEnter(wasTriggerFocused ? "start" : "end");
    }
  }), context.viewport && (0, import_react38.createElement)("span", {
    "aria-owns": contentId
  })));
});
Object.assign($322c88a641701f3b$export$37fe8002734d8f2, {
  displayName: $322c88a641701f3b$var$TRIGGER_NAME
});
var $322c88a641701f3b$var$LINK_NAME = "NavigationMenuLink";
var $322c88a641701f3b$var$LINK_SELECT = "navigationMenu.linkSelect";
var $322c88a641701f3b$export$6893bf21536567da = (0, import_react38.forwardRef)((props, forwardedRef) => {
  const { __scopeNavigationMenu, active, onSelect, ...linkProps } = props;
  return (0, import_react38.createElement)($322c88a641701f3b$var$FocusGroupItem, {
    asChild: true
  }, (0, import_react38.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.a, _extends({
    "data-active": active ? "" : void 0,
    "aria-current": active ? "page" : void 0
  }, linkProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, (event1) => {
      const target = event1.target;
      const linkSelectEvent = new CustomEvent($322c88a641701f3b$var$LINK_SELECT, {
        bubbles: true,
        cancelable: true
      });
      target.addEventListener(
        $322c88a641701f3b$var$LINK_SELECT,
        (event) => onSelect === null || onSelect === void 0 ? void 0 : onSelect(event),
        {
          once: true
        }
      );
      $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, linkSelectEvent);
      if (!linkSelectEvent.defaultPrevented && !event1.metaKey) {
        const rootContentDismissEvent = new CustomEvent($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, {
          bubbles: true,
          cancelable: true
        });
        $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, rootContentDismissEvent);
      }
    }, {
      checkForDefaultPrevented: false
    })
  })));
});
Object.assign($322c88a641701f3b$export$6893bf21536567da, {
  displayName: $322c88a641701f3b$var$LINK_NAME
});
var $322c88a641701f3b$var$INDICATOR_NAME = "NavigationMenuIndicator";
var $322c88a641701f3b$export$8ddb526647c0d8fb = (0, import_react38.forwardRef)((props, forwardedRef) => {
  const { forceMount, ...indicatorProps } = props;
  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$INDICATOR_NAME, props.__scopeNavigationMenu);
  const isVisible = Boolean(context.value);
  return context.indicatorTrack ? import_react_dom6.default.createPortal((0, import_react38.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || isVisible
  }, (0, import_react38.createElement)($322c88a641701f3b$var$NavigationMenuIndicatorImpl, _extends({}, indicatorProps, {
    ref: forwardedRef
  }))), context.indicatorTrack) : null;
});
Object.assign($322c88a641701f3b$export$8ddb526647c0d8fb, {
  displayName: $322c88a641701f3b$var$INDICATOR_NAME
});
var $322c88a641701f3b$var$NavigationMenuIndicatorImpl = (0, import_react38.forwardRef)((props, forwardedRef) => {
  const { __scopeNavigationMenu, ...indicatorProps } = props;
  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$INDICATOR_NAME, __scopeNavigationMenu);
  const getItems = $322c88a641701f3b$var$useCollection(__scopeNavigationMenu);
  const [activeTrigger, setActiveTrigger] = (0, import_react38.useState)(null);
  const [position, setPosition] = (0, import_react38.useState)(null);
  const isHorizontal = context.orientation === "horizontal";
  const isVisible = Boolean(context.value);
  (0, import_react38.useEffect)(() => {
    var _items$find;
    const items = getItems();
    const triggerNode = (_items$find = items.find(
      (item) => item.value === context.value
    )) === null || _items$find === void 0 ? void 0 : _items$find.ref.current;
    if (triggerNode)
      setActiveTrigger(triggerNode);
  }, [
    getItems,
    context.value
  ]);
  const handlePositionChange = () => {
    if (activeTrigger)
      setPosition({
        size: isHorizontal ? activeTrigger.offsetWidth : activeTrigger.offsetHeight,
        offset: isHorizontal ? activeTrigger.offsetLeft : activeTrigger.offsetTop
      });
  };
  $322c88a641701f3b$var$useResizeObserver(activeTrigger, handlePositionChange);
  $322c88a641701f3b$var$useResizeObserver(context.indicatorTrack, handlePositionChange);
  return position ? (0, import_react38.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    "aria-hidden": true,
    "data-state": isVisible ? "visible" : "hidden",
    "data-orientation": context.orientation
  }, indicatorProps, {
    ref: forwardedRef,
    style: {
      position: "absolute",
      ...isHorizontal ? {
        left: 0,
        width: position.size + "px",
        transform: `translateX(${position.offset}px)`
      } : {
        top: 0,
        height: position.size + "px",
        transform: `translateY(${position.offset}px)`
      },
      ...indicatorProps.style
    }
  })) : null;
});
var $322c88a641701f3b$var$CONTENT_NAME = "NavigationMenuContent";
var $322c88a641701f3b$export$38e00e996c2f93f7 = (0, import_react38.forwardRef)((props, forwardedRef) => {
  const { forceMount, ...contentProps } = props;
  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$CONTENT_NAME, props.__scopeNavigationMenu);
  const itemContext = $322c88a641701f3b$var$useNavigationMenuItemContext($322c88a641701f3b$var$CONTENT_NAME, props.__scopeNavigationMenu);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(itemContext.contentRef, forwardedRef);
  const open2 = itemContext.value === context.value;
  const commonProps = {
    value: itemContext.value,
    triggerRef: itemContext.triggerRef,
    focusProxyRef: itemContext.focusProxyRef,
    wasEscapeCloseRef: itemContext.wasEscapeCloseRef,
    onContentFocusOutside: itemContext.onContentFocusOutside,
    onRootContentClose: itemContext.onRootContentClose,
    ...contentProps
  };
  return !context.viewport ? (0, import_react38.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || open2
  }, (0, import_react38.createElement)($322c88a641701f3b$var$NavigationMenuContentImpl, _extends({
    "data-state": $322c88a641701f3b$var$getOpenState(open2)
  }, commonProps, {
    ref: composedRefs,
    onPointerEnter: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerEnter, context.onContentEnter),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, $322c88a641701f3b$var$whenMouse(context.onContentLeave)),
    style: {
      pointerEvents: !open2 && context.isRootMenu ? "none" : void 0,
      ...commonProps.style
    }
  }))) : (0, import_react38.createElement)($322c88a641701f3b$var$ViewportContentMounter, _extends({
    forceMount
  }, commonProps, {
    ref: composedRefs
  }));
});
Object.assign($322c88a641701f3b$export$38e00e996c2f93f7, {
  displayName: $322c88a641701f3b$var$CONTENT_NAME
});
var $322c88a641701f3b$var$ViewportContentMounter = (0, import_react38.forwardRef)((props, forwardedRef) => {
  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$CONTENT_NAME, props.__scopeNavigationMenu);
  const { onViewportContentChange, onViewportContentRemove } = context;
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    onViewportContentChange(props.value, {
      ref: forwardedRef,
      ...props
    });
  }, [
    props,
    forwardedRef,
    onViewportContentChange
  ]);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    return () => onViewportContentRemove(props.value);
  }, [
    props.value,
    onViewportContentRemove
  ]);
  return null;
});
var $322c88a641701f3b$var$ROOT_CONTENT_DISMISS = "navigationMenu.rootContentDismiss";
var $322c88a641701f3b$var$NavigationMenuContentImpl = (0, import_react38.forwardRef)((props, forwardedRef) => {
  const { __scopeNavigationMenu, value, triggerRef, focusProxyRef, wasEscapeCloseRef, onRootContentClose, onContentFocusOutside, ...contentProps } = props;
  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$CONTENT_NAME, __scopeNavigationMenu);
  const ref = (0, import_react38.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(ref, forwardedRef);
  const triggerId = $322c88a641701f3b$var$makeTriggerId(context.baseId, value);
  const contentId = $322c88a641701f3b$var$makeContentId(context.baseId, value);
  const getItems = $322c88a641701f3b$var$useCollection(__scopeNavigationMenu);
  const prevMotionAttributeRef = (0, import_react38.useRef)(null);
  const { onItemDismiss } = context;
  (0, import_react38.useEffect)(() => {
    const content = ref.current;
    if (context.isRootMenu && content) {
      const handleClose = () => {
        var _triggerRef$current;
        onItemDismiss();
        onRootContentClose();
        if (content.contains(document.activeElement))
          (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 || _triggerRef$current.focus();
      };
      content.addEventListener($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, handleClose);
      return () => content.removeEventListener($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, handleClose);
    }
  }, [
    context.isRootMenu,
    props.value,
    triggerRef,
    onItemDismiss,
    onRootContentClose
  ]);
  const motionAttribute = (0, import_react38.useMemo)(() => {
    const items = getItems();
    const values2 = items.map(
      (item) => item.value
    );
    if (context.dir === "rtl")
      values2.reverse();
    const index2 = values2.indexOf(context.value);
    const prevIndex = values2.indexOf(context.previousValue);
    const isSelected = value === context.value;
    const wasSelected = prevIndex === values2.indexOf(value);
    if (!isSelected && !wasSelected)
      return prevMotionAttributeRef.current;
    const attribute = (() => {
      if (index2 !== prevIndex) {
        if (isSelected && prevIndex !== -1)
          return index2 > prevIndex ? "from-end" : "from-start";
        if (wasSelected && index2 !== -1)
          return index2 > prevIndex ? "to-start" : "to-end";
      }
      return null;
    })();
    prevMotionAttributeRef.current = attribute;
    return attribute;
  }, [
    context.previousValue,
    context.value,
    context.dir,
    getItems,
    value
  ]);
  return (0, import_react38.createElement)($322c88a641701f3b$var$FocusGroup, {
    asChild: true
  }, (0, import_react38.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, _extends({
    id: contentId,
    "aria-labelledby": triggerId,
    "data-motion": motionAttribute,
    "data-orientation": context.orientation
  }, contentProps, {
    ref: composedRefs,
    onDismiss: () => {
      var _ref$current;
      const rootContentDismissEvent = new Event($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, {
        bubbles: true,
        cancelable: true
      });
      (_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.dispatchEvent(rootContentDismissEvent);
    },
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocusOutside, (event) => {
      var _context$rootNavigati;
      onContentFocusOutside();
      const target = event.target;
      if ((_context$rootNavigati = context.rootNavigationMenu) !== null && _context$rootNavigati !== void 0 && _context$rootNavigati.contains(target))
        event.preventDefault();
    }),
    onPointerDownOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownOutside, (event) => {
      var _context$viewport;
      const target = event.target;
      const isTrigger = getItems().some((item) => {
        var _item$ref$current;
        return (_item$ref$current = item.ref.current) === null || _item$ref$current === void 0 ? void 0 : _item$ref$current.contains(target);
      });
      const isRootViewport = context.isRootMenu && ((_context$viewport = context.viewport) === null || _context$viewport === void 0 ? void 0 : _context$viewport.contains(target));
      if (isTrigger || isRootViewport || !context.isRootMenu)
        event.preventDefault();
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;
      const isTabKey = event.key === "Tab" && !isMetaKey;
      if (isTabKey) {
        const candidates = $322c88a641701f3b$var$getTabbableCandidates(event.currentTarget);
        const focusedElement = document.activeElement;
        const index2 = candidates.findIndex(
          (candidate) => candidate === focusedElement
        );
        const isMovingBackwards = event.shiftKey;
        const nextCandidates = isMovingBackwards ? candidates.slice(0, index2).reverse() : candidates.slice(index2 + 1, candidates.length);
        if ($322c88a641701f3b$var$focusFirst(nextCandidates))
          event.preventDefault();
        else {
          var _focusProxyRef$curren;
          (_focusProxyRef$curren = focusProxyRef.current) === null || _focusProxyRef$curren === void 0 || _focusProxyRef$curren.focus();
        }
      }
    }),
    onEscapeKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onEscapeKeyDown, (event) => {
      wasEscapeCloseRef.current = true;
    })
  })));
});
var $322c88a641701f3b$var$VIEWPORT_NAME = "NavigationMenuViewport";
var $322c88a641701f3b$export$ee880b97cc6d44a5 = (0, import_react38.forwardRef)((props, forwardedRef) => {
  const { forceMount, ...viewportProps } = props;
  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$VIEWPORT_NAME, props.__scopeNavigationMenu);
  const open2 = Boolean(context.value);
  return (0, import_react38.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || open2
  }, (0, import_react38.createElement)($322c88a641701f3b$var$NavigationMenuViewportImpl, _extends({}, viewportProps, {
    ref: forwardedRef
  })));
});
Object.assign($322c88a641701f3b$export$ee880b97cc6d44a5, {
  displayName: $322c88a641701f3b$var$VIEWPORT_NAME
});
var $322c88a641701f3b$var$NavigationMenuViewportImpl = (0, import_react38.forwardRef)((props1, forwardedRef) => {
  const { __scopeNavigationMenu, children, ...viewportImplProps } = props1;
  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$VIEWPORT_NAME, __scopeNavigationMenu);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.onViewportChange);
  const viewportContentContext = $322c88a641701f3b$var$useViewportContentContext($322c88a641701f3b$var$CONTENT_NAME, props1.__scopeNavigationMenu);
  const [size2, setSize] = (0, import_react38.useState)(null);
  const [content, setContent] = (0, import_react38.useState)(null);
  const viewportWidth = size2 ? (size2 === null || size2 === void 0 ? void 0 : size2.width) + "px" : void 0;
  const viewportHeight = size2 ? (size2 === null || size2 === void 0 ? void 0 : size2.height) + "px" : void 0;
  const open2 = Boolean(context.value);
  const activeContentValue = open2 ? context.value : context.previousValue;
  const handleSizeChange = () => {
    if (content)
      setSize({
        width: content.offsetWidth,
        height: content.offsetHeight
      });
  };
  $322c88a641701f3b$var$useResizeObserver(content, handleSizeChange);
  return (0, import_react38.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    "data-state": $322c88a641701f3b$var$getOpenState(open2),
    "data-orientation": context.orientation
  }, viewportImplProps, {
    ref: composedRefs,
    style: {
      pointerEvents: !open2 && context.isRootMenu ? "none" : void 0,
      ["--radix-navigation-menu-viewport-width"]: viewportWidth,
      ["--radix-navigation-menu-viewport-height"]: viewportHeight,
      ...viewportImplProps.style
    },
    onPointerEnter: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props1.onPointerEnter, context.onContentEnter),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props1.onPointerLeave, $322c88a641701f3b$var$whenMouse(context.onContentLeave))
  }), Array.from(viewportContentContext.items).map(([value, { ref, forceMount, ...props }]) => {
    const isActive = activeContentValue === value;
    return (0, import_react38.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
      key: value,
      present: forceMount || isActive
    }, (0, import_react38.createElement)($322c88a641701f3b$var$NavigationMenuContentImpl, _extends({}, props, {
      ref: $6ed0406888f73fc4$export$43e446d32b3d21af(ref, (node) => {
        if (isActive && node)
          setContent(node);
      })
    })));
  }));
});
var $322c88a641701f3b$var$FOCUS_GROUP_NAME = "FocusGroup";
var $322c88a641701f3b$var$FocusGroup = (0, import_react38.forwardRef)((props, forwardedRef) => {
  const { __scopeNavigationMenu, ...groupProps } = props;
  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$FOCUS_GROUP_NAME, __scopeNavigationMenu);
  return (0, import_react38.createElement)($322c88a641701f3b$var$FocusGroupCollection.Provider, {
    scope: __scopeNavigationMenu
  }, (0, import_react38.createElement)($322c88a641701f3b$var$FocusGroupCollection.Slot, {
    scope: __scopeNavigationMenu
  }, (0, import_react38.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    dir: context.dir
  }, groupProps, {
    ref: forwardedRef
  }))));
});
var $322c88a641701f3b$var$ARROW_KEYS = [
  "ArrowRight",
  "ArrowLeft",
  "ArrowUp",
  "ArrowDown"
];
var $322c88a641701f3b$var$FOCUS_GROUP_ITEM_NAME = "FocusGroupItem";
var $322c88a641701f3b$var$FocusGroupItem = (0, import_react38.forwardRef)((props, forwardedRef) => {
  const { __scopeNavigationMenu, ...groupProps } = props;
  const getItems = $322c88a641701f3b$var$useFocusGroupCollection(__scopeNavigationMenu);
  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$FOCUS_GROUP_ITEM_NAME, __scopeNavigationMenu);
  return (0, import_react38.createElement)($322c88a641701f3b$var$FocusGroupCollection.ItemSlot, {
    scope: __scopeNavigationMenu
  }, (0, import_react38.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({}, groupProps, {
    ref: forwardedRef,
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      const isFocusNavigationKey = [
        "Home",
        "End",
        ...$322c88a641701f3b$var$ARROW_KEYS
      ].includes(event.key);
      if (isFocusNavigationKey) {
        let candidateNodes = getItems().map(
          (item) => item.ref.current
        );
        const prevItemKey = context.dir === "rtl" ? "ArrowRight" : "ArrowLeft";
        const prevKeys = [
          prevItemKey,
          "ArrowUp",
          "End"
        ];
        if (prevKeys.includes(event.key))
          candidateNodes.reverse();
        if ($322c88a641701f3b$var$ARROW_KEYS.includes(event.key)) {
          const currentIndex = candidateNodes.indexOf(event.currentTarget);
          candidateNodes = candidateNodes.slice(currentIndex + 1);
        }
        setTimeout(
          () => $322c88a641701f3b$var$focusFirst(candidateNodes)
        );
        event.preventDefault();
      }
    })
  })));
});
function $322c88a641701f3b$var$getTabbableCandidates(container) {
  const nodes = [];
  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      if (node.disabled || node.hidden || isHiddenInput)
        return NodeFilter.FILTER_SKIP;
      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  while (walker.nextNode())
    nodes.push(walker.currentNode);
  return nodes;
}
function $322c88a641701f3b$var$focusFirst(candidates) {
  const previouslyFocusedElement = document.activeElement;
  return candidates.some((candidate) => {
    if (candidate === previouslyFocusedElement)
      return true;
    candidate.focus();
    return document.activeElement !== previouslyFocusedElement;
  });
}
function $322c88a641701f3b$var$removeFromTabOrder(candidates) {
  candidates.forEach((candidate) => {
    candidate.dataset.tabindex = candidate.getAttribute("tabindex") || "";
    candidate.setAttribute("tabindex", "-1");
  });
  return () => {
    candidates.forEach((candidate) => {
      const prevTabIndex = candidate.dataset.tabindex;
      candidate.setAttribute("tabindex", prevTabIndex);
    });
  };
}
function $322c88a641701f3b$var$useResizeObserver(element, onResize) {
  const handleResize = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onResize);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    let rAF = 0;
    if (element) {
      const resizeObserver = new ResizeObserver(() => {
        cancelAnimationFrame(rAF);
        rAF = window.requestAnimationFrame(handleResize);
      });
      resizeObserver.observe(element);
      return () => {
        window.cancelAnimationFrame(rAF);
        resizeObserver.unobserve(element);
      };
    }
  }, [
    element,
    handleResize
  ]);
}
function $322c88a641701f3b$var$getOpenState(open2) {
  return open2 ? "open" : "closed";
}
function $322c88a641701f3b$var$makeTriggerId(baseId, value) {
  return `${baseId}-trigger-${value}`;
}
function $322c88a641701f3b$var$makeContentId(baseId, value) {
  return `${baseId}-content-${value}`;
}
function $322c88a641701f3b$var$whenMouse(handler) {
  return (event) => event.pointerType === "mouse" ? handler(event) : void 0;
}
var $322c88a641701f3b$export$be92b6f5f03c0fe9 = $322c88a641701f3b$export$5b2278cf1e8bcae2;
var $322c88a641701f3b$export$54c2e3dc7acea9f5 = $322c88a641701f3b$export$c361068a95fd2286;
var $322c88a641701f3b$export$6d08773d2e66f8f2 = $322c88a641701f3b$export$ffdbb83a2de845c2;
var $322c88a641701f3b$export$41fb9f06171c75f4 = $322c88a641701f3b$export$37fe8002734d8f2;
var $322c88a641701f3b$export$a6c7ac8248d6e38a = $322c88a641701f3b$export$6893bf21536567da;
var $322c88a641701f3b$export$adb584737d712b70 = $322c88a641701f3b$export$8ddb526647c0d8fb;
var $322c88a641701f3b$export$7c6e2c02157bb7d2 = $322c88a641701f3b$export$38e00e996c2f93f7;
var $322c88a641701f3b$export$d5c6c08dc2d3ca7 = $322c88a641701f3b$export$ee880b97cc6d44a5;

// node_modules/@radix-ui/react-radio-group/dist/index.mjs
var import_react39 = __toESM(require_react(), 1);
var $ce77a8961b41be9e$var$RADIO_NAME = "Radio";
var [$ce77a8961b41be9e$var$createRadioContext, $ce77a8961b41be9e$export$67d2296460f1b002] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($ce77a8961b41be9e$var$RADIO_NAME);
var [$ce77a8961b41be9e$var$RadioProvider, $ce77a8961b41be9e$var$useRadioContext] = $ce77a8961b41be9e$var$createRadioContext($ce77a8961b41be9e$var$RADIO_NAME);
var $ce77a8961b41be9e$export$d7b12c4107be0d61 = (0, import_react39.forwardRef)((props, forwardedRef) => {
  const { __scopeRadio, name, checked = false, required, disabled, value = "on", onCheck, ...radioProps } = props;
  const [button, setButton] = (0, import_react39.useState)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setButton(node)
  );
  const hasConsumerStoppedPropagationRef = (0, import_react39.useRef)(false);
  const isFormControl = button ? Boolean(button.closest("form")) : true;
  return (0, import_react39.createElement)($ce77a8961b41be9e$var$RadioProvider, {
    scope: __scopeRadio,
    checked,
    disabled
  }, (0, import_react39.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button",
    role: "radio",
    "aria-checked": checked,
    "data-state": $ce77a8961b41be9e$var$getState(checked),
    "data-disabled": disabled ? "" : void 0,
    disabled,
    value
  }, radioProps, {
    ref: composedRefs,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, (event) => {
      if (!checked)
        onCheck === null || onCheck === void 0 || onCheck();
      if (isFormControl) {
        hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
        if (!hasConsumerStoppedPropagationRef.current)
          event.stopPropagation();
      }
    })
  })), isFormControl && (0, import_react39.createElement)($ce77a8961b41be9e$var$BubbleInput, {
    control: button,
    bubbles: !hasConsumerStoppedPropagationRef.current,
    name,
    value,
    checked,
    required,
    disabled,
    style: {
      transform: "translateX(-100%)"
    }
  }));
});
Object.assign($ce77a8961b41be9e$export$d7b12c4107be0d61, {
  displayName: $ce77a8961b41be9e$var$RADIO_NAME
});
var $ce77a8961b41be9e$var$INDICATOR_NAME = "RadioIndicator";
var $ce77a8961b41be9e$export$d35a9ffa9a04f9e7 = (0, import_react39.forwardRef)((props, forwardedRef) => {
  const { __scopeRadio, forceMount, ...indicatorProps } = props;
  const context = $ce77a8961b41be9e$var$useRadioContext($ce77a8961b41be9e$var$INDICATOR_NAME, __scopeRadio);
  return (0, import_react39.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.checked
  }, (0, import_react39.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({
    "data-state": $ce77a8961b41be9e$var$getState(context.checked),
    "data-disabled": context.disabled ? "" : void 0
  }, indicatorProps, {
    ref: forwardedRef
  })));
});
Object.assign($ce77a8961b41be9e$export$d35a9ffa9a04f9e7, {
  displayName: $ce77a8961b41be9e$var$INDICATOR_NAME
});
var $ce77a8961b41be9e$var$BubbleInput = (props) => {
  const { control, checked, bubbles = true, ...inputProps } = props;
  const ref = (0, import_react39.useRef)(null);
  const prevChecked = $010c2913dbd2fe3d$export$5cae361ad82dce8b(checked);
  const controlSize = $db6c3485150b8e66$export$1ab7ae714698c4b8(control);
  (0, import_react39.useEffect)(() => {
    const input = ref.current;
    const inputProto = window.HTMLInputElement.prototype;
    const descriptor = Object.getOwnPropertyDescriptor(inputProto, "checked");
    const setChecked = descriptor.set;
    if (prevChecked !== checked && setChecked) {
      const event = new Event("click", {
        bubbles
      });
      setChecked.call(input, checked);
      input.dispatchEvent(event);
    }
  }, [
    prevChecked,
    checked,
    bubbles
  ]);
  return (0, import_react39.createElement)("input", _extends({
    type: "radio",
    "aria-hidden": true,
    defaultChecked: checked
  }, inputProps, {
    tabIndex: -1,
    ref,
    style: {
      ...props.style,
      ...controlSize,
      position: "absolute",
      pointerEvents: "none",
      opacity: 0,
      margin: 0
    }
  }));
};
function $ce77a8961b41be9e$var$getState(checked) {
  return checked ? "checked" : "unchecked";
}
var $f99a8c78507165f7$var$ARROW_KEYS = [
  "ArrowUp",
  "ArrowDown",
  "ArrowLeft",
  "ArrowRight"
];
var $f99a8c78507165f7$var$RADIO_GROUP_NAME = "RadioGroup";
var [$f99a8c78507165f7$var$createRadioGroupContext, $f99a8c78507165f7$export$c547093f11b76da2] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($f99a8c78507165f7$var$RADIO_GROUP_NAME, [
  $d7bdfb9eb0fdf311$export$c7109489551a4f4,
  $ce77a8961b41be9e$export$67d2296460f1b002
]);
var $f99a8c78507165f7$var$useRovingFocusGroupScope = $d7bdfb9eb0fdf311$export$c7109489551a4f4();
var $f99a8c78507165f7$var$useRadioScope = $ce77a8961b41be9e$export$67d2296460f1b002();
var [$f99a8c78507165f7$var$RadioGroupProvider, $f99a8c78507165f7$var$useRadioGroupContext] = $f99a8c78507165f7$var$createRadioGroupContext($f99a8c78507165f7$var$RADIO_GROUP_NAME);
var $f99a8c78507165f7$export$a98f0dcb43a68a25 = (0, import_react39.forwardRef)((props, forwardedRef) => {
  const { __scopeRadioGroup, name, defaultValue, value: valueProp, required = false, disabled = false, orientation, dir, loop = true, onValueChange, ...groupProps } = props;
  const rovingFocusGroupScope = $f99a8c78507165f7$var$useRovingFocusGroupScope(__scopeRadioGroup);
  const direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  const [value, setValue] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: valueProp,
    defaultProp: defaultValue,
    onChange: onValueChange
  });
  return (0, import_react39.createElement)($f99a8c78507165f7$var$RadioGroupProvider, {
    scope: __scopeRadioGroup,
    name,
    required,
    disabled,
    value,
    onValueChange: setValue
  }, (0, import_react39.createElement)($d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9, _extends({
    asChild: true
  }, rovingFocusGroupScope, {
    orientation,
    dir: direction,
    loop
  }), (0, import_react39.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    role: "radiogroup",
    "aria-required": required,
    "aria-orientation": orientation,
    "data-disabled": disabled ? "" : void 0,
    dir: direction
  }, groupProps, {
    ref: forwardedRef
  }))));
});
Object.assign($f99a8c78507165f7$export$a98f0dcb43a68a25, {
  displayName: $f99a8c78507165f7$var$RADIO_GROUP_NAME
});
var $f99a8c78507165f7$var$ITEM_NAME = "RadioGroupItem";
var $f99a8c78507165f7$export$9f866c100ef519e4 = (0, import_react39.forwardRef)((props, forwardedRef) => {
  const { __scopeRadioGroup, disabled, ...itemProps } = props;
  const context = $f99a8c78507165f7$var$useRadioGroupContext($f99a8c78507165f7$var$ITEM_NAME, __scopeRadioGroup);
  const isDisabled = context.disabled || disabled;
  const rovingFocusGroupScope = $f99a8c78507165f7$var$useRovingFocusGroupScope(__scopeRadioGroup);
  const radioScope = $f99a8c78507165f7$var$useRadioScope(__scopeRadioGroup);
  const ref = (0, import_react39.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const checked = context.value === itemProps.value;
  const isArrowKeyPressedRef = (0, import_react39.useRef)(false);
  (0, import_react39.useEffect)(() => {
    const handleKeyDown = (event) => {
      if ($f99a8c78507165f7$var$ARROW_KEYS.includes(event.key))
        isArrowKeyPressedRef.current = true;
    };
    const handleKeyUp = () => isArrowKeyPressedRef.current = false;
    document.addEventListener("keydown", handleKeyDown);
    document.addEventListener("keyup", handleKeyUp);
    return () => {
      document.removeEventListener("keydown", handleKeyDown);
      document.removeEventListener("keyup", handleKeyUp);
    };
  }, []);
  return (0, import_react39.createElement)($d7bdfb9eb0fdf311$export$6d08773d2e66f8f2, _extends({
    asChild: true
  }, rovingFocusGroupScope, {
    focusable: !isDisabled,
    active: checked
  }), (0, import_react39.createElement)($ce77a8961b41be9e$export$d7b12c4107be0d61, _extends({
    disabled: isDisabled,
    required: context.required,
    checked
  }, radioScope, itemProps, {
    name: context.name,
    ref: composedRefs,
    onCheck: () => context.onValueChange(itemProps.value),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10((event) => {
      if (event.key === "Enter")
        event.preventDefault();
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(itemProps.onFocus, () => {
      var _ref$current;
      if (isArrowKeyPressedRef.current)
        (_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.click();
    })
  })));
});
Object.assign($f99a8c78507165f7$export$9f866c100ef519e4, {
  displayName: $f99a8c78507165f7$var$ITEM_NAME
});
var $f99a8c78507165f7$var$INDICATOR_NAME = "RadioGroupIndicator";
var $f99a8c78507165f7$export$5fb54c671a65c88 = (0, import_react39.forwardRef)((props, forwardedRef) => {
  const { __scopeRadioGroup, ...indicatorProps } = props;
  const radioScope = $f99a8c78507165f7$var$useRadioScope(__scopeRadioGroup);
  return (0, import_react39.createElement)($ce77a8961b41be9e$export$d35a9ffa9a04f9e7, _extends({}, radioScope, indicatorProps, {
    ref: forwardedRef
  }));
});
Object.assign($f99a8c78507165f7$export$5fb54c671a65c88, {
  displayName: $f99a8c78507165f7$var$INDICATOR_NAME
});
var $f99a8c78507165f7$export$be92b6f5f03c0fe9 = $f99a8c78507165f7$export$a98f0dcb43a68a25;
var $f99a8c78507165f7$export$6d08773d2e66f8f2 = $f99a8c78507165f7$export$9f866c100ef519e4;
var $f99a8c78507165f7$export$adb584737d712b70 = $f99a8c78507165f7$export$5fb54c671a65c88;

// node_modules/@daohaus/ui/index.js
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : {};
var check = function(it) {
  return it && it.Math == Math && it;
};
var global$d = check(typeof globalThis == "object" && globalThis) || check(typeof window == "object" && window) || check(typeof self == "object" && self) || check(typeof commonjsGlobal == "object" && commonjsGlobal) || function() {
  return this;
}() || commonjsGlobal || Function("return this")();
var objectGetOwnPropertyDescriptor = {};
var fails$c = function(exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};
var fails$b = fails$c;
var descriptors = !fails$b(function() {
  return Object.defineProperty({}, 1, { get: function() {
    return 7;
  } })[1] != 7;
});
var fails$a = fails$c;
var functionBindNative = !fails$a(function() {
  var test2 = function() {
  }.bind();
  return typeof test2 != "function" || test2.hasOwnProperty("prototype");
});
var NATIVE_BIND$1 = functionBindNative;
var call$6 = Function.prototype.call;
var functionCall = NATIVE_BIND$1 ? call$6.bind(call$6) : function() {
  return call$6.apply(call$6, arguments);
};
var objectPropertyIsEnumerable = {};
var $propertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;
var NASHORN_BUG = getOwnPropertyDescriptor$2 && !$propertyIsEnumerable.call({ 1: 2 }, 1);
objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor$2(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;
var createPropertyDescriptor$3 = function(bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value
  };
};
var NATIVE_BIND = functionBindNative;
var FunctionPrototype$1 = Function.prototype;
var call$5 = FunctionPrototype$1.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype$1.bind.bind(call$5, call$5);
var functionUncurryThis = NATIVE_BIND ? uncurryThisWithBind : function(fn) {
  return function() {
    return call$5.apply(fn, arguments);
  };
};
var uncurryThis$e = functionUncurryThis;
var toString$5 = uncurryThis$e({}.toString);
var stringSlice$3 = uncurryThis$e("".slice);
var classofRaw$2 = function(it) {
  return stringSlice$3(toString$5(it), 8, -1);
};
var uncurryThis$d = functionUncurryThis;
var fails$9 = fails$c;
var classof$3 = classofRaw$2;
var $Object$4 = Object;
var split = uncurryThis$d("".split);
var indexedObject = fails$9(function() {
  return !$Object$4("z").propertyIsEnumerable(0);
}) ? function(it) {
  return classof$3(it) == "String" ? split(it, "") : $Object$4(it);
} : $Object$4;
var isNullOrUndefined$2 = function(it) {
  return it === null || it === void 0;
};
var isNullOrUndefined$1 = isNullOrUndefined$2;
var $TypeError$7 = TypeError;
var requireObjectCoercible$4 = function(it) {
  if (isNullOrUndefined$1(it))
    throw $TypeError$7("Can't call method on " + it);
  return it;
};
var IndexedObject$1 = indexedObject;
var requireObjectCoercible$3 = requireObjectCoercible$4;
var toIndexedObject$5 = function(it) {
  return IndexedObject$1(requireObjectCoercible$3(it));
};
var documentAll$2 = typeof document == "object" && document.all;
var IS_HTMLDDA = typeof documentAll$2 == "undefined" && documentAll$2 !== void 0;
var documentAll_1 = {
  all: documentAll$2,
  IS_HTMLDDA
};
var $documentAll$1 = documentAll_1;
var documentAll$1 = $documentAll$1.all;
var isCallable$g = $documentAll$1.IS_HTMLDDA ? function(argument) {
  return typeof argument == "function" || argument === documentAll$1;
} : function(argument) {
  return typeof argument == "function";
};
var isCallable$f = isCallable$g;
var $documentAll = documentAll_1;
var documentAll = $documentAll.all;
var isObject$7 = $documentAll.IS_HTMLDDA ? function(it) {
  return typeof it == "object" ? it !== null : isCallable$f(it) || it === documentAll;
} : function(it) {
  return typeof it == "object" ? it !== null : isCallable$f(it);
};
var global$c = global$d;
var isCallable$e = isCallable$g;
var aFunction = function(argument) {
  return isCallable$e(argument) ? argument : void 0;
};
var getBuiltIn$3 = function(namespace, method) {
  return arguments.length < 2 ? aFunction(global$c[namespace]) : global$c[namespace] && global$c[namespace][method];
};
var uncurryThis$c = functionUncurryThis;
var objectIsPrototypeOf = uncurryThis$c({}.isPrototypeOf);
var engineUserAgent = typeof navigator != "undefined" && String(navigator.userAgent) || "";
var global$b = global$d;
var userAgent = engineUserAgent;
var process2 = global$b.process;
var Deno = global$b.Deno;
var versions = process2 && process2.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match;
var version;
if (v8) {
  match = v8.split(".");
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match)
      version = +match[1];
  }
}
var engineV8Version = version;
var V8_VERSION = engineV8Version;
var fails$8 = fails$c;
var global$a = global$d;
var $String$5 = global$a.String;
var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$8(function() {
  var symbol = Symbol();
  return !$String$5(symbol) || !(Object(symbol) instanceof Symbol) || !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});
var NATIVE_SYMBOL$2 = symbolConstructorDetection;
var useSymbolAsUid = NATIVE_SYMBOL$2 && !Symbol.sham && typeof Symbol.iterator == "symbol";
var getBuiltIn$2 = getBuiltIn$3;
var isCallable$d = isCallable$g;
var isPrototypeOf$1 = objectIsPrototypeOf;
var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;
var $Object$3 = Object;
var isSymbol$2 = USE_SYMBOL_AS_UID$1 ? function(it) {
  return typeof it == "symbol";
} : function(it) {
  var $Symbol = getBuiltIn$2("Symbol");
  return isCallable$d($Symbol) && isPrototypeOf$1($Symbol.prototype, $Object$3(it));
};
var $String$4 = String;
var tryToString$1 = function(argument) {
  try {
    return $String$4(argument);
  } catch (error) {
    return "Object";
  }
};
var isCallable$c = isCallable$g;
var tryToString = tryToString$1;
var $TypeError$6 = TypeError;
var aCallable$2 = function(argument) {
  if (isCallable$c(argument))
    return argument;
  throw $TypeError$6(tryToString(argument) + " is not a function");
};
var aCallable$1 = aCallable$2;
var isNullOrUndefined2 = isNullOrUndefined$2;
var getMethod$1 = function(V, P) {
  var func = V[P];
  return isNullOrUndefined2(func) ? void 0 : aCallable$1(func);
};
var call$4 = functionCall;
var isCallable$b = isCallable$g;
var isObject$6 = isObject$7;
var $TypeError$5 = TypeError;
var ordinaryToPrimitive$1 = function(input, pref) {
  var fn, val;
  if (pref === "string" && isCallable$b(fn = input.toString) && !isObject$6(val = call$4(fn, input)))
    return val;
  if (isCallable$b(fn = input.valueOf) && !isObject$6(val = call$4(fn, input)))
    return val;
  if (pref !== "string" && isCallable$b(fn = input.toString) && !isObject$6(val = call$4(fn, input)))
    return val;
  throw $TypeError$5("Can't convert object to primitive value");
};
var shared$3 = { exports: {} };
var global$9 = global$d;
var defineProperty$6 = Object.defineProperty;
var defineGlobalProperty$3 = function(key, value) {
  try {
    defineProperty$6(global$9, key, { value, configurable: true, writable: true });
  } catch (error) {
    global$9[key] = value;
  }
  return value;
};
var global$8 = global$d;
var defineGlobalProperty$2 = defineGlobalProperty$3;
var SHARED = "__core-js_shared__";
var store$3 = global$8[SHARED] || defineGlobalProperty$2(SHARED, {});
var sharedStore = store$3;
var store$2 = sharedStore;
(shared$3.exports = function(key, value) {
  return store$2[key] || (store$2[key] = value !== void 0 ? value : {});
})("versions", []).push({
  version: "3.32.0",
  mode: "global",
  copyright: "\xA9 2014-2023 Denis Pushkarev (zloirock.ru)",
  license: "https://github.com/zloirock/core-js/blob/v3.32.0/LICENSE",
  source: "https://github.com/zloirock/core-js"
});
var requireObjectCoercible$2 = requireObjectCoercible$4;
var $Object$2 = Object;
var toObject$3 = function(argument) {
  return $Object$2(requireObjectCoercible$2(argument));
};
var uncurryThis$b = functionUncurryThis;
var toObject$2 = toObject$3;
var hasOwnProperty = uncurryThis$b({}.hasOwnProperty);
var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject$2(it), key);
};
var uncurryThis$a = functionUncurryThis;
var id = 0;
var postfix = Math.random();
var toString$4 = uncurryThis$a(1 .toString);
var uid$2 = function(key) {
  return "Symbol(" + (key === void 0 ? "" : key) + ")_" + toString$4(++id + postfix, 36);
};
var global$7 = global$d;
var shared$2 = shared$3.exports;
var hasOwn$9 = hasOwnProperty_1;
var uid$1 = uid$2;
var NATIVE_SYMBOL$1 = symbolConstructorDetection;
var USE_SYMBOL_AS_UID = useSymbolAsUid;
var Symbol$1 = global$7.Symbol;
var WellKnownSymbolsStore = shared$2("wks");
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$1["for"] || Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid$1;
var wellKnownSymbol$a = function(name) {
  if (!hasOwn$9(WellKnownSymbolsStore, name)) {
    WellKnownSymbolsStore[name] = NATIVE_SYMBOL$1 && hasOwn$9(Symbol$1, name) ? Symbol$1[name] : createWellKnownSymbol("Symbol." + name);
  }
  return WellKnownSymbolsStore[name];
};
var call$3 = functionCall;
var isObject$5 = isObject$7;
var isSymbol$1 = isSymbol$2;
var getMethod = getMethod$1;
var ordinaryToPrimitive = ordinaryToPrimitive$1;
var wellKnownSymbol$9 = wellKnownSymbol$a;
var $TypeError$4 = TypeError;
var TO_PRIMITIVE = wellKnownSymbol$9("toPrimitive");
var toPrimitive$1 = function(input, pref) {
  if (!isObject$5(input) || isSymbol$1(input))
    return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === void 0)
      pref = "default";
    result = call$3(exoticToPrim, input, pref);
    if (!isObject$5(result) || isSymbol$1(result))
      return result;
    throw $TypeError$4("Can't convert object to primitive value");
  }
  if (pref === void 0)
    pref = "number";
  return ordinaryToPrimitive(input, pref);
};
var toPrimitive = toPrimitive$1;
var isSymbol = isSymbol$2;
var toPropertyKey$2 = function(argument) {
  var key = toPrimitive(argument, "string");
  return isSymbol(key) ? key : key + "";
};
var global$6 = global$d;
var isObject$4 = isObject$7;
var document$1 = global$6.document;
var EXISTS$1 = isObject$4(document$1) && isObject$4(document$1.createElement);
var documentCreateElement$2 = function(it) {
  return EXISTS$1 ? document$1.createElement(it) : {};
};
var DESCRIPTORS$a = descriptors;
var fails$7 = fails$c;
var createElement8 = documentCreateElement$2;
var ie8DomDefine = !DESCRIPTORS$a && !fails$7(function() {
  return Object.defineProperty(createElement8("div"), "a", {
    get: function() {
      return 7;
    }
  }).a != 7;
});
var DESCRIPTORS$9 = descriptors;
var call$2 = functionCall;
var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
var createPropertyDescriptor$2 = createPropertyDescriptor$3;
var toIndexedObject$4 = toIndexedObject$5;
var toPropertyKey$1 = toPropertyKey$2;
var hasOwn$8 = hasOwnProperty_1;
var IE8_DOM_DEFINE$1 = ie8DomDefine;
var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;
objectGetOwnPropertyDescriptor.f = DESCRIPTORS$9 ? $getOwnPropertyDescriptor$1 : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject$4(O);
  P = toPropertyKey$1(P);
  if (IE8_DOM_DEFINE$1)
    try {
      return $getOwnPropertyDescriptor$1(O, P);
    } catch (error) {
    }
  if (hasOwn$8(O, P))
    return createPropertyDescriptor$2(!call$2(propertyIsEnumerableModule$1.f, O, P), O[P]);
};
var objectDefineProperty = {};
var DESCRIPTORS$8 = descriptors;
var fails$6 = fails$c;
var v8PrototypeDefineBug = DESCRIPTORS$8 && fails$6(function() {
  return Object.defineProperty(function() {
  }, "prototype", {
    value: 42,
    writable: false
  }).prototype != 42;
});
var isObject$3 = isObject$7;
var $String$3 = String;
var $TypeError$3 = TypeError;
var anObject$5 = function(argument) {
  if (isObject$3(argument))
    return argument;
  throw $TypeError$3($String$3(argument) + " is not an object");
};
var DESCRIPTORS$7 = descriptors;
var IE8_DOM_DEFINE = ie8DomDefine;
var V8_PROTOTYPE_DEFINE_BUG$1 = v8PrototypeDefineBug;
var anObject$4 = anObject$5;
var toPropertyKey = toPropertyKey$2;
var $TypeError$2 = TypeError;
var $defineProperty = Object.defineProperty;
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = "enumerable";
var CONFIGURABLE$1 = "configurable";
var WRITABLE = "writable";
objectDefineProperty.f = DESCRIPTORS$7 ? V8_PROTOTYPE_DEFINE_BUG$1 ? function defineProperty(O, P, Attributes) {
  anObject$4(O);
  P = toPropertyKey(P);
  anObject$4(Attributes);
  if (typeof O === "function" && P === "prototype" && "value" in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  }
  return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty2(O, P, Attributes) {
  anObject$4(O);
  P = toPropertyKey(P);
  anObject$4(Attributes);
  if (IE8_DOM_DEFINE)
    try {
      return $defineProperty(O, P, Attributes);
    } catch (error) {
    }
  if ("get" in Attributes || "set" in Attributes)
    throw $TypeError$2("Accessors not supported");
  if ("value" in Attributes)
    O[P] = Attributes.value;
  return O;
};
var DESCRIPTORS$6 = descriptors;
var definePropertyModule$3 = objectDefineProperty;
var createPropertyDescriptor$1 = createPropertyDescriptor$3;
var createNonEnumerableProperty$4 = DESCRIPTORS$6 ? function(object, key, value) {
  return definePropertyModule$3.f(object, key, createPropertyDescriptor$1(1, value));
} : function(object, key, value) {
  object[key] = value;
  return object;
};
var makeBuiltIn$3 = { exports: {} };
var DESCRIPTORS$5 = descriptors;
var hasOwn$7 = hasOwnProperty_1;
var FunctionPrototype = Function.prototype;
var getDescriptor = DESCRIPTORS$5 && Object.getOwnPropertyDescriptor;
var EXISTS = hasOwn$7(FunctionPrototype, "name");
var PROPER = EXISTS && function something() {
}.name === "something";
var CONFIGURABLE = EXISTS && (!DESCRIPTORS$5 || DESCRIPTORS$5 && getDescriptor(FunctionPrototype, "name").configurable);
var functionName = {
  EXISTS,
  PROPER,
  CONFIGURABLE
};
var uncurryThis$9 = functionUncurryThis;
var isCallable$a = isCallable$g;
var store$1 = sharedStore;
var functionToString = uncurryThis$9(Function.toString);
if (!isCallable$a(store$1.inspectSource)) {
  store$1.inspectSource = function(it) {
    return functionToString(it);
  };
}
var inspectSource$1 = store$1.inspectSource;
var global$5 = global$d;
var isCallable$9 = isCallable$g;
var WeakMap$1 = global$5.WeakMap;
var weakMapBasicDetection = isCallable$9(WeakMap$1) && /native code/.test(String(WeakMap$1));
var shared$1 = shared$3.exports;
var uid = uid$2;
var keys = shared$1("keys");
var sharedKey$3 = function(key) {
  return keys[key] || (keys[key] = uid(key));
};
var hiddenKeys$4 = {};
var NATIVE_WEAK_MAP = weakMapBasicDetection;
var global$4 = global$d;
var isObject$2 = isObject$7;
var createNonEnumerableProperty$3 = createNonEnumerableProperty$4;
var hasOwn$6 = hasOwnProperty_1;
var shared = sharedStore;
var sharedKey$2 = sharedKey$3;
var hiddenKeys$3 = hiddenKeys$4;
var OBJECT_ALREADY_INITIALIZED = "Object already initialized";
var TypeError$1 = global$4.TypeError;
var WeakMap2 = global$4.WeakMap;
var set2;
var get2;
var has;
var enforce = function(it) {
  return has(it) ? get2(it) : set2(it, {});
};
var getterFor = function(TYPE) {
  return function(it) {
    var state;
    if (!isObject$2(it) || (state = get2(it)).type !== TYPE) {
      throw TypeError$1("Incompatible receiver, " + TYPE + " required");
    }
    return state;
  };
};
if (NATIVE_WEAK_MAP || shared.state) {
  store = shared.state || (shared.state = new WeakMap2());
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  set2 = function(it, metadata) {
    if (store.has(it))
      throw TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get2 = function(it) {
    return store.get(it) || {};
  };
  has = function(it) {
    return store.has(it);
  };
} else {
  STATE = sharedKey$2("state");
  hiddenKeys$3[STATE] = true;
  set2 = function(it, metadata) {
    if (hasOwn$6(it, STATE))
      throw TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty$3(it, STATE, metadata);
    return metadata;
  };
  get2 = function(it) {
    return hasOwn$6(it, STATE) ? it[STATE] : {};
  };
  has = function(it) {
    return hasOwn$6(it, STATE);
  };
}
var store;
var STATE;
var internalState = {
  set: set2,
  get: get2,
  has,
  enforce,
  getterFor
};
var uncurryThis$8 = functionUncurryThis;
var fails$5 = fails$c;
var isCallable$8 = isCallable$g;
var hasOwn$5 = hasOwnProperty_1;
var DESCRIPTORS$4 = descriptors;
var CONFIGURABLE_FUNCTION_NAME$1 = functionName.CONFIGURABLE;
var inspectSource = inspectSource$1;
var InternalStateModule$1 = internalState;
var enforceInternalState = InternalStateModule$1.enforce;
var getInternalState$1 = InternalStateModule$1.get;
var $String$2 = String;
var defineProperty$5 = Object.defineProperty;
var stringSlice$2 = uncurryThis$8("".slice);
var replace$2 = uncurryThis$8("".replace);
var join = uncurryThis$8([].join);
var CONFIGURABLE_LENGTH = DESCRIPTORS$4 && !fails$5(function() {
  return defineProperty$5(function() {
  }, "length", { value: 8 }).length !== 8;
});
var TEMPLATE = String(String).split("String");
var makeBuiltIn$2 = makeBuiltIn$3.exports = function(value, name, options) {
  if (stringSlice$2($String$2(name), 0, 7) === "Symbol(") {
    name = "[" + replace$2($String$2(name), /^Symbol\(([^)]*)\)/, "$1") + "]";
  }
  if (options && options.getter)
    name = "get " + name;
  if (options && options.setter)
    name = "set " + name;
  if (!hasOwn$5(value, "name") || CONFIGURABLE_FUNCTION_NAME$1 && value.name !== name) {
    if (DESCRIPTORS$4)
      defineProperty$5(value, "name", { value: name, configurable: true });
    else
      value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn$5(options, "arity") && value.length !== options.arity) {
    defineProperty$5(value, "length", { value: options.arity });
  }
  try {
    if (options && hasOwn$5(options, "constructor") && options.constructor) {
      if (DESCRIPTORS$4)
        defineProperty$5(value, "prototype", { writable: false });
    } else if (value.prototype)
      value.prototype = void 0;
  } catch (error) {
  }
  var state = enforceInternalState(value);
  if (!hasOwn$5(state, "source")) {
    state.source = join(TEMPLATE, typeof name == "string" ? name : "");
  }
  return value;
};
Function.prototype.toString = makeBuiltIn$2(function toString() {
  return isCallable$8(this) && getInternalState$1(this).source || inspectSource(this);
}, "toString");
var isCallable$7 = isCallable$g;
var definePropertyModule$2 = objectDefineProperty;
var makeBuiltIn$1 = makeBuiltIn$3.exports;
var defineGlobalProperty$1 = defineGlobalProperty$3;
var defineBuiltIn$3 = function(O, key, value, options) {
  if (!options)
    options = {};
  var simple = options.enumerable;
  var name = options.name !== void 0 ? options.name : key;
  if (isCallable$7(value))
    makeBuiltIn$1(value, name, options);
  if (options.global) {
    if (simple)
      O[key] = value;
    else
      defineGlobalProperty$1(key, value);
  } else {
    try {
      if (!options.unsafe)
        delete O[key];
      else if (O[key])
        simple = true;
    } catch (error) {
    }
    if (simple)
      O[key] = value;
    else
      definePropertyModule$2.f(O, key, {
        value,
        enumerable: false,
        configurable: !options.nonConfigurable,
        writable: !options.nonWritable
      });
  }
  return O;
};
var objectGetOwnPropertyNames = {};
var ceil = Math.ceil;
var floor2 = Math.floor;
var mathTrunc = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor2 : ceil)(n);
};
var trunc2 = mathTrunc;
var toIntegerOrInfinity$2 = function(argument) {
  var number = +argument;
  return number !== number || number === 0 ? 0 : trunc2(number);
};
var toIntegerOrInfinity$1 = toIntegerOrInfinity$2;
var max2 = Math.max;
var min$2 = Math.min;
var toAbsoluteIndex$1 = function(index2, length) {
  var integer = toIntegerOrInfinity$1(index2);
  return integer < 0 ? max2(integer + length, 0) : min$2(integer, length);
};
var toIntegerOrInfinity = toIntegerOrInfinity$2;
var min$1 = Math.min;
var toLength$2 = function(argument) {
  return argument > 0 ? min$1(toIntegerOrInfinity(argument), 9007199254740991) : 0;
};
var toLength$1 = toLength$2;
var lengthOfArrayLike$1 = function(obj) {
  return toLength$1(obj.length);
};
var toIndexedObject$3 = toIndexedObject$5;
var toAbsoluteIndex = toAbsoluteIndex$1;
var lengthOfArrayLike = lengthOfArrayLike$1;
var createMethod$1 = function(IS_INCLUDES) {
  return function($this, el, fromIndex) {
    var O = toIndexedObject$3($this);
    var length = lengthOfArrayLike(O);
    var index2 = toAbsoluteIndex(fromIndex, length);
    var value;
    if (IS_INCLUDES && el != el)
      while (length > index2) {
        value = O[index2++];
        if (value != value)
          return true;
      }
    else
      for (; length > index2; index2++) {
        if ((IS_INCLUDES || index2 in O) && O[index2] === el)
          return IS_INCLUDES || index2 || 0;
      }
    return !IS_INCLUDES && -1;
  };
};
var arrayIncludes = {
  includes: createMethod$1(true),
  indexOf: createMethod$1(false)
};
var uncurryThis$7 = functionUncurryThis;
var hasOwn$4 = hasOwnProperty_1;
var toIndexedObject$2 = toIndexedObject$5;
var indexOf = arrayIncludes.indexOf;
var hiddenKeys$2 = hiddenKeys$4;
var push = uncurryThis$7([].push);
var objectKeysInternal = function(object, names) {
  var O = toIndexedObject$2(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O)
    !hasOwn$4(hiddenKeys$2, key) && hasOwn$4(O, key) && push(result, key);
  while (names.length > i)
    if (hasOwn$4(O, key = names[i++])) {
      ~indexOf(result, key) || push(result, key);
    }
  return result;
};
var enumBugKeys$3 = [
  "constructor",
  "hasOwnProperty",
  "isPrototypeOf",
  "propertyIsEnumerable",
  "toLocaleString",
  "toString",
  "valueOf"
];
var internalObjectKeys$1 = objectKeysInternal;
var enumBugKeys$2 = enumBugKeys$3;
var hiddenKeys$1 = enumBugKeys$2.concat("length", "prototype");
objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys$1(O, hiddenKeys$1);
};
var objectGetOwnPropertySymbols = {};
objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;
var getBuiltIn$1 = getBuiltIn$3;
var uncurryThis$6 = functionUncurryThis;
var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
var anObject$3 = anObject$5;
var concat$1 = uncurryThis$6([].concat);
var ownKeys$1 = getBuiltIn$1("Reflect", "ownKeys") || function ownKeys(it) {
  var keys3 = getOwnPropertyNamesModule.f(anObject$3(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;
  return getOwnPropertySymbols ? concat$1(keys3, getOwnPropertySymbols(it)) : keys3;
};
var hasOwn$3 = hasOwnProperty_1;
var ownKeys2 = ownKeys$1;
var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
var definePropertyModule$1 = objectDefineProperty;
var copyConstructorProperties$2 = function(target, source, exceptions) {
  var keys3 = ownKeys2(source);
  var defineProperty4 = definePropertyModule$1.f;
  var getOwnPropertyDescriptor3 = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys3.length; i++) {
    var key = keys3[i];
    if (!hasOwn$3(target, key) && !(exceptions && hasOwn$3(exceptions, key))) {
      defineProperty4(target, key, getOwnPropertyDescriptor3(source, key));
    }
  }
};
var fails$4 = fails$c;
var isCallable$6 = isCallable$g;
var replacement = /#|\.prototype\./;
var isForced$1 = function(feature, detection) {
  var value = data[normalize2(feature)];
  return value == POLYFILL ? true : value == NATIVE ? false : isCallable$6(detection) ? fails$4(detection) : !!detection;
};
var normalize2 = isForced$1.normalize = function(string) {
  return String(string).replace(replacement, ".").toLowerCase();
};
var data = isForced$1.data = {};
var NATIVE = isForced$1.NATIVE = "N";
var POLYFILL = isForced$1.POLYFILL = "P";
var isForced_1 = isForced$1;
var global$3 = global$d;
var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
var createNonEnumerableProperty$2 = createNonEnumerableProperty$4;
var defineBuiltIn$2 = defineBuiltIn$3;
var defineGlobalProperty = defineGlobalProperty$3;
var copyConstructorProperties$1 = copyConstructorProperties$2;
var isForced = isForced_1;
var _export = function(options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global$3;
  } else if (STATIC) {
    target = global$3[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = (global$3[TARGET] || {}).prototype;
  }
  if (target)
    for (key in source) {
      sourceProperty = source[key];
      if (options.dontCallGetSet) {
        descriptor = getOwnPropertyDescriptor$1(target, key);
        targetProperty = descriptor && descriptor.value;
      } else
        targetProperty = target[key];
      FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? "." : "#") + key, options.forced);
      if (!FORCED && targetProperty !== void 0) {
        if (typeof sourceProperty == typeof targetProperty)
          continue;
        copyConstructorProperties$1(sourceProperty, targetProperty);
      }
      if (options.sham || targetProperty && targetProperty.sham) {
        createNonEnumerableProperty$2(sourceProperty, "sham", true);
      }
      defineBuiltIn$2(target, key, sourceProperty, options);
    }
};
var internalObjectKeys = objectKeysInternal;
var enumBugKeys$1 = enumBugKeys$3;
var objectKeys$2 = Object.keys || function keys2(O) {
  return internalObjectKeys(O, enumBugKeys$1);
};
var DESCRIPTORS$3 = descriptors;
var uncurryThis$5 = functionUncurryThis;
var call$1 = functionCall;
var fails$3 = fails$c;
var objectKeys$1 = objectKeys$2;
var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
var propertyIsEnumerableModule = objectPropertyIsEnumerable;
var toObject$1 = toObject$3;
var IndexedObject = indexedObject;
var $assign = Object.assign;
var defineProperty$4 = Object.defineProperty;
var concat = uncurryThis$5([].concat);
var objectAssign = !$assign || fails$3(function() {
  if (DESCRIPTORS$3 && $assign({ b: 1 }, $assign(defineProperty$4({}, "a", {
    enumerable: true,
    get: function() {
      defineProperty$4(this, "b", {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1)
    return true;
  var A = {};
  var B = {};
  var symbol = Symbol();
  var alphabet = "abcdefghijklmnopqrst";
  A[symbol] = 7;
  alphabet.split("").forEach(function(chr) {
    B[chr] = chr;
  });
  return $assign({}, A)[symbol] != 7 || objectKeys$1($assign({}, B)).join("") != alphabet;
}) ? function assign(target, source) {
  var T = toObject$1(target);
  var argumentsLength = arguments.length;
  var index2 = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable2 = propertyIsEnumerableModule.f;
  while (argumentsLength > index2) {
    var S = IndexedObject(arguments[index2++]);
    var keys3 = getOwnPropertySymbols ? concat(objectKeys$1(S), getOwnPropertySymbols(S)) : objectKeys$1(S);
    var length = keys3.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys3[j++];
      if (!DESCRIPTORS$3 || call$1(propertyIsEnumerable2, S, key))
        T[key] = S[key];
    }
  }
  return T;
} : $assign;
var $$4 = _export;
var assign2 = objectAssign;
$$4({ target: "Object", stat: true, arity: 2, forced: Object.assign !== assign2 }, {
  assign: assign2
});
var sizes = {
  sm: "2.5rem",
  md: "3.5rem",
  lg: "4.5rem",
  xl: "5.5rem"
};
var handleSizing = (size2) => sizes[size2] ? sizes[size2] : size2;
var AvatarBase = st($cddcb0b647441e34$export$be92b6f5f03c0fe9).withConfig({
  displayName: "Avatarstyles__AvatarBase",
  componentId: "qyzyi8-0"
})(["display:inline-flex;align-items:center;justify-content:center;vertical-align:middle;overflow:hidden;user-select:none;border-radius:100%;width:", ";height:", ";"], ({
  size: size2
}) => handleSizing(size2), ({
  size: size2
}) => handleSizing(size2));
var AvatarFallback = st($cddcb0b647441e34$export$fb8d7f40caaeea67).withConfig({
  displayName: "Avatarstyles__AvatarFallback",
  componentId: "qyzyi8-1"
})(["width:100%;height:100%;display:flex;align-items:center;justify-content:center;background:", ";"], ({
  theme
}) => theme.avatar.bg);
var AvatarImage = st($cddcb0b647441e34$export$3e431a229df88919).withConfig({
  displayName: "Avatarstyles__AvatarImage",
  componentId: "qyzyi8-2"
})(["width:100%;height:100%;object-fit:cover;border-radius:inherit;"]);
var Avatar = ({
  src,
  size: _size = "sm",
  alt: _alt = "Picture of an Avatar",
  delayMs: _delayMs = 500,
  fallback: _fallback = "X",
  className
}) => {
  return (0, import_jsx_runtime.jsxs)(AvatarBase, Object.assign({
    size: _size,
    className
  }, {
    children: [(0, import_jsx_runtime.jsx)(AvatarImage, {
      src,
      alt: _alt
    }), (0, import_jsx_runtime.jsx)(AvatarFallback, Object.assign({
      delayMs: src ? _delayMs : 0
    }, {
      children: _fallback
    }))]
  }));
};
function __rest3(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
var StyledLoader = st.svg.withConfig({
  displayName: "Loadingstyles__StyledLoader",
  componentId: "cgbaup-0"
})(["animation:spin 1s linear infinite;margin:", ";padding:", ";@keyframes spin{to{transform:rotate(360deg);}}"], ({
  $margin
}) => $margin, ({
  $padding
}) => $padding);
var StyledInvisibleSpan$1 = st.span.withConfig({
  displayName: "Loadingstyles__StyledInvisibleSpan",
  componentId: "cgbaup-1"
})(["position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0;"]);
var Loading = (_a) => {
  var {
    color = "primary",
    size: size2 = 50,
    margin = "0",
    padding = "0"
  } = _a, rest = __rest3(_a, ["color", "size", "margin", "padding"]);
  const theme = Je();
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {
    children: [(0, import_jsx_runtime.jsxs)(StyledLoader, Object.assign({
      className: "loading",
      viewBox: "0 0 100 101",
      xmlns: "http://www.w3.org/2000/svg",
      height: size2,
      width: size2,
      "$padding": padding,
      "$margin": margin
    }, rest, {
      children: [(0, import_jsx_runtime.jsx)("path", {
        d: "M100 50.59c0 27.615-22.386 50.001-50 50.001s-50-22.386-50-50 22.386-50 50-50 50 22.386 50 50zm-90.919 0c0 22.6 18.32 40.92 40.919 40.92 22.599 0 40.919-18.32 40.919-40.92 0-22.598-18.32-40.918-40.919-40.918-22.599 0-40.919 18.32-40.919 40.919z",
        fill: theme.loading[color].color
      }), (0, import_jsx_runtime.jsx)("path", {
        d: "M93.968 39.04c2.425-.636 3.894-3.128 3.04-5.486A50 50 0 0041.735 1.279c-2.474.414-3.922 2.919-3.285 5.344.637 2.426 3.12 3.849 5.6 3.484a40.916 40.916 0 0144.131 25.769c.902 2.34 3.361 3.802 5.787 3.165z",
        fill: theme.loading[color].bg
      })]
    })), (0, import_jsx_runtime.jsx)(StyledInvisibleSpan$1, {
      children: "Loading..."
    })]
  });
};
var StyledButton = st.button.withConfig({
  displayName: "Buttonstyles__StyledButton",
  componentId: "j15zqa-0"
})(["align-items:center;border-radius:", ";cursor:pointer;display:flex;font-size:", ";font-weight:", ";height:4.8rem;justify-content:", ";letter-spacing:1.8px;outline:none;padding:1.2rem;text-decoration:none;transition:0.2s all;width:fit-content;svg{width:2.2rem;height:2.2rem;&.icon-left{margin-right:1rem;}&.icon-right{margin-left:0.5rem;}}&.solid{background-color:", ";border:0.1rem solid ", ";color:", ";&:hover{background-color:", ";border:0.1rem solid ", ";}&:focus{background-color:", ";border:0.1rem solid ", ";}&:disabled{background-color:", ";border:0.1rem solid ", ";cursor:not-allowed;}}&.outline{background-color:transparent;border:0.1rem solid ", ";color:", ";&:hover{border:0.1rem solid ", ";color:", ";}&:focus{border:0.1rem solid ", ";color:", ";}&:disabled{border:0.1rem solid ", ";color:", ";cursor:not-allowed;}}&.ghost{background-color:", ";border:1px solid ", ";color:", ";&:hover{background-color:", ";}&:focus{border:1px solid ", ";}&:disabled{color:", ";cursor:not-allowed;}}&.link{height:auto;font-family:", ";font-weight:", ";font-size:", ";text-decoration:none;letter-spacing:1.5px;padding:0;background-color:transparent;border:none;color:", ";&:hover{color:", ";text-decoration:underline;}&:focus{color:", ";}&:disabled{color:", ";cursor:not-allowed;}}&.lg{font-size:", ";height:6rem;min-width:10.7rem;padding:1.5rem;svg{height:3.2rem;width:3.2rem;}}&.sm{font-size:", ";height:3.6rem;min-width:6.6rem;padding:0.9rem;svg{height:1.8rem;width:1.8rem;}}&.loading{.icon-left,.icon-right{visibility:hidden;}}&.full-width{min-width:100%;}"], ({
  theme
}) => theme.button.radius, ({
  theme
}) => theme.font.size.md, ({
  theme
}) => theme.font.weight.bold, ({
  $justify
}) => $justify, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.bg, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.border, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.text, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.bgHover, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.borderHover, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.bgFocus, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.borderFocus, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.bgDisabled, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.borderDisabled, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.border, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.text, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.hover, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.hover, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.focus, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.focus, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.disabled, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.disabled, ({
  theme
}) => theme.transparent, ({
  theme
}) => theme.transparent, ({
  theme,
  $color
}) => theme.button[`${$color}`].ghost.text, ({
  theme,
  $color
}) => theme.button[`${$color}`].ghost.bgHover, ({
  theme,
  $color
}) => theme.button[`${$color}`].ghost.borderFocus, ({
  theme,
  $color
}) => theme.button[`${$color}`].ghost.disabled, ({
  theme
}) => theme.font.family.body, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.size.md, ({
  theme,
  $color
}) => theme.button[`${$color}`].link.text, ({
  theme,
  $color
}) => theme.button[`${$color}`].link.hover, ({
  theme,
  $color
}) => theme.button[`${$color}`].link.focus, ({
  theme,
  $color
}) => theme.button[`${$color}`].link.disabled, ({
  theme
}) => theme.font.size.lg, ({
  theme
}) => theme.font.size.xs);
var LoadingAbsolute = st(Loading).withConfig({
  displayName: "Buttonstyles__LoadingAbsolute",
  componentId: "j15zqa-1"
})(["position:fixed;"]);
var StyledInvisibleSpan = st.span.withConfig({
  displayName: "Buttonstyles__StyledInvisibleSpan",
  componentId: "j15zqa-2"
})(["visibility:hidden;"]);
var Button = import_react40.default.forwardRef((_a, ref) => {
  var {
    type = "button",
    IconLeft,
    IconRight,
    color = "primary",
    variant = "solid",
    size: size2 = "md",
    isLoading = false,
    loadingText,
    fullWidth,
    justify = "center",
    className,
    children,
    href
  } = _a, rest = __rest3(_a, ["type", "IconLeft", "IconRight", "color", "variant", "size", "isLoading", "loadingText", "fullWidth", "justify", "className", "children", "href"]);
  const classes = (0, import_classnames.default)({
    [variant]: variant,
    [size2]: size2,
    "full-width": fullWidth
  });
  return (0, import_jsx_runtime.jsxs)(StyledButton, Object.assign({}, rest, {
    "$color": color,
    "$justify": justify,
    className: `${classes} ${className}`,
    ref,
    type: !href ? type : void 0,
    as: href ? "a" : "button",
    href: href ? href : void 0,
    target: href ? "_blank" : void 0,
    rel: href ? "noopener noreferrer" : void 0
  }, {
    children: [IconLeft && (0, import_jsx_runtime.jsx)(IconLeft, {
      className: `icon-left`
    }), isLoading && (0, import_jsx_runtime.jsx)(LoadingAbsolute, {
      color
    }), isLoading ? (0, import_jsx_runtime.jsx)(StyledInvisibleSpan, {
      children
    }) : children, IconRight && (0, import_jsx_runtime.jsx)(IconRight, {
      className: `icon-right`
    })]
  }));
});
var IconButton = import_react40.default.forwardRef((_a, ref) => {
  var {
    type = "button",
    isLoading = false,
    Icon: Icon2,
    color = "primary",
    variant = "solid",
    size: size2 = "md",
    className
  } = _a, rest = __rest3(_a, ["type", "isLoading", "Icon", "color", "variant", "size", "className"]);
  const classes = (0, import_classnames.default)({
    [variant]: variant,
    [size2]: size2
  });
  return (0, import_jsx_runtime.jsxs)(StyledButton, Object.assign({}, rest, {
    "$justify": "center",
    "$color": color,
    className: `${classes} ${className}`,
    ref,
    type
  }, {
    children: [isLoading && (0, import_jsx_runtime.jsx)(LoadingAbsolute, {}), isLoading && Icon2 ? (0, import_jsx_runtime.jsx)(StyledInvisibleSpan, {
      children: (0, import_jsx_runtime.jsx)(Icon2, {})
    }) : (0, import_jsx_runtime.jsx)(Icon2, {})]
  }));
});
var StyledLabel$1 = st.label.withConfig({
  displayName: "Labelstyles__StyledLabel",
  componentId: "sc-1b2z2vj-0"
})(["font-family:", ";font-weight:", ";font-size:", ";color:", ";"], ({
  theme
}) => theme.field.labelFont, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.size.md, (props) => props.color);
var Label$2 = ({
  children: _children = "label",
  id: id2,
  className
}) => {
  return (0, import_jsx_runtime.jsx)(StyledLabel$1, Object.assign({
    htmlFor: id2,
    className
  }, {
    children: _children
  }));
};
var Icon$1 = ({
  label: _label = "",
  children
}) => {
  return (0, import_jsx_runtime.jsx)($08b6689415b2f49a$export$be92b6f5f03c0fe9, Object.assign({
    label: _label
  }, {
    children
  }));
};
var Container$3 = st.div.withConfig({
  displayName: "Checkboxstyles__Container",
  componentId: "sc-17gwq50-0"
})(["align-items:center;display:flex;margin-bottom:12px;"]);
var StyledCheckbox = st($e698a72e93240346$export$be92b6f5f03c0fe9).withConfig({
  displayName: "Checkboxstyles__StyledCheckbox",
  componentId: "sc-17gwq50-1"
})(["align-items:center;background-color:", ";border:2px solid ", ";border-radius:", ";cursor:pointer;display:flex;height:18px;justify-content:center;width:18px;&:hover{background-color:", ";border:2px solid ", ";}:focus{background-color:", ";border:2px solid ", ";outline:none;}:disabled{background-color:", ";border:2px solid ", ";cursor:not-allowed;}&[data-state='checked']{background-color:", ";border:2px solid ", ";&:hover{background-color:", ";border:2px solid ", ";}:focus{background-color:", ";border:2px solid ", ";outline:none;}:disabled{background-color:", ";border:2px solid ", ";cursor:not-allowed;}}"], ({
  theme
}) => theme.checkbox.bg, ({
  theme
}) => theme.checkbox.border, ({
  theme
}) => theme.checkbox.radius, ({
  theme
}) => theme.checkbox.hover.bg, ({
  theme
}) => theme.checkbox.hover.border, ({
  theme
}) => theme.checkbox.focus.bg, ({
  theme
}) => theme.checkbox.focus.border, ({
  theme
}) => theme.checkbox.disabled.bg, ({
  theme
}) => theme.checkbox.disabled.border, ({
  theme
}) => theme.checkbox.active.bg, ({
  theme
}) => theme.checkbox.active.border, ({
  theme
}) => theme.checkbox.active.hover.bg, ({
  theme
}) => theme.checkbox.active.hover.border, ({
  theme
}) => theme.checkbox.active.focus.bg, ({
  theme
}) => theme.checkbox.active.focus.border, ({
  theme
}) => theme.checkbox.active.disabled.bg, ({
  theme
}) => theme.checkbox.active.disabled.border);
var StyledIndicator = st($e698a72e93240346$export$adb584737d712b70).withConfig({
  displayName: "Checkboxstyles__StyledIndicator",
  componentId: "sc-17gwq50-2"
})(["color:", ";font-size:", ";padding-top:3px;:disabled{color:", ";}"], ({
  theme
}) => theme.checkbox.indicator.color, ({
  theme
}) => theme.font.size.lg, ({
  theme
}) => theme.checkbox.indicator.disabled.color);
var LabelContainer$3 = st.label.withConfig({
  displayName: "Checkboxstyles__LabelContainer",
  componentId: "sc-17gwq50-3"
})(["align-items:center;display:flex;margin-left:1.2rem;label{margin-right:0.1rem;}svg{transform:translateY(0.1rem);}"]);
var RequiredAsterisk$1 = st.span.withConfig({
  displayName: "Checkboxstyles__RequiredAsterisk",
  componentId: "sc-17gwq50-4"
})(["color:", ";font-weight:", ";margin-right:8px;transform:translateY(-0.25rem);"], ({
  theme
}) => theme.warning.step9, ({
  theme
}) => theme.font.weight.bold);
var Checkbox = import_react40.default.forwardRef((props, ref) => {
  const {
    id: id2,
    title,
    disabled,
    required
  } = props;
  const classes = (0, import_classnames.default)({
    disabled
  });
  return (0, import_jsx_runtime.jsxs)(Container$3, {
    children: [(0, import_jsx_runtime.jsx)(StyledCheckbox, Object.assign({}, props, {
      ref
    }, {
      children: (0, import_jsx_runtime.jsx)(StyledIndicator, Object.assign({
        className: classes
      }, {
        children: (0, import_jsx_runtime.jsx)(import_ri.RiCheckLine, {})
      }))
    })), (0, import_jsx_runtime.jsxs)(LabelContainer$3, {
      children: [required && (0, import_jsx_runtime.jsx)(RequiredAsterisk$1, {
        children: (0, import_jsx_runtime.jsx)(Icon$1, Object.assign({
          label: "Required"
        }, {
          children: (0, import_jsx_runtime.jsx)(import_ri.RiAsterisk, {})
        }))
      }), (0, import_jsx_runtime.jsx)(Label$2, Object.assign({
        id: id2
      }, {
        children: title ? title : "No Title Found"
      }))]
    })]
  });
});
var BaseInput = st.input.withConfig({
  displayName: "Inputstyles__BaseInput",
  componentId: "sc-18gbb3o-0"
})(["background-color:", ";border:1px solid ", ";border-radius:", ";color:", ";font-size:", ";font-weight:", ";font-family:", ";height:4.8rem;line-height:150%;letter-spacing:1.5px;max-width:", ";padding:1.2rem 1.8rem;transition:", ";width:100%;::placeholder{color:", ";}&:hover{background-color:", ";border:1px solid ", ";}:focus{background-color:", ";border:1px solid ", ";outline:none;}:disabled{background-color:", ";border:1px solid ", ";color:", ";cursor:not-allowed;font-style:italic;::placeholder{color:", ";}}&.number{font-family:", ";font-weight:", ";letter-spacing:1px;}&.long{max-width:", ";}&.full{max-width:", ";}&.input-select{max-width:", ";}&.success{border:1px solid ", ";}&.warning{border:1px solid ", ";}&.error{border:1px solid ", ";}"], ({
  theme
}) => theme.input.bg, ({
  theme
}) => theme.input.border, ({
  theme
}) => theme.field.radius, ({
  theme
}) => theme.input.color, ({
  theme
}) => theme.field.fontSize, ({
  theme
}) => theme.field.fontWeight, ({
  theme
}) => theme.field.inputFont, ({
  theme
}) => theme.field.size.md, ({
  theme
}) => theme.field.transition, ({
  theme
}) => theme.input.placeholder, ({
  theme
}) => theme.input.hover.bg, ({
  theme
}) => theme.input.hover.border, ({
  theme
}) => theme.input.focus.bg, ({
  theme
}) => theme.input.focus.border, ({
  theme
}) => theme.input.disabled.bg, ({
  theme
}) => theme.input.disabled.border, ({
  theme
}) => theme.input.disabled.color, ({
  theme
}) => theme.input.disabled.placeholder, ({
  theme
}) => theme.font.family.data, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.full, ({
  theme
}) => theme.field.size.full, ({
  theme
}) => theme.input.success.border, ({
  theme
}) => theme.input.warning.border, ({
  theme
}) => theme.input.error.border);
var WithIcon$2 = st.div.withConfig({
  displayName: "Inputstyles__WithIcon",
  componentId: "sc-18gbb3o-1"
})(["display:inline-block;position:relative;max-width:", ";width:100%;svg{color:", ";position:absolute;right:2rem;top:1.4rem;}input{padding:1.2rem 4.2rem 1.2rem 1.8rem;}&.long{max-width:", ";}&.full{max-width:", ";}"], ({
  theme
}) => theme.field.size.md, ({
  theme
}) => theme.input.icon.color, ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.full);
var Input = import_react40.default.forwardRef((props, ref) => {
  const {
    id: id2,
    long,
    full,
    icon,
    success: success2,
    warning: warning2,
    error,
    number,
    address,
    className,
    placeholder,
    defaultValue,
    value,
    disabled,
    hidden,
    onChange
  } = props;
  const inputClasses = (0, import_classnames.default)({
    long: long || address,
    full,
    success: success2,
    warning: warning2,
    error,
    number: number || address
  });
  if (icon) {
    const wrapperClasses = (0, import_classnames.default)({
      long: long || address,
      full
    });
    const Icon2 = icon;
    return (0, import_jsx_runtime.jsxs)(WithIcon$2, Object.assign({
      className: wrapperClasses
    }, {
      children: [(0, import_jsx_runtime.jsx)(BaseInput, {
        name: id2,
        className: `${inputClasses} ${className}`,
        ref,
        placeholder,
        defaultValue,
        value,
        disabled,
        hidden,
        onChange
      }), (0, import_jsx_runtime.jsx)(Icon2, {
        size: "2rem"
      })]
    }));
  }
  return (0, import_jsx_runtime.jsx)(BaseInput, {
    name: id2,
    className: `${inputClasses} ${className}`,
    ref,
    placeholder,
    defaultValue,
    value,
    disabled,
    hidden,
    onChange
  }, id2);
});
var WithIcon$1 = st.div.withConfig({
  displayName: "HelperTextstyles__WithIcon",
  componentId: "fhxkpv-0"
})(["display:flex;align-items:flex-start;svg{color:", ";}p{margin-left:0.65rem;color:", ";}"], (props) => props.color, (props) => props.color);
var Par = st.p.withConfig({
  displayName: "Typography__Par",
  componentId: "gwgnan-0"
})(["font-family:", ";font-weight:", ";color:", ";"], ({
  theme
}) => theme.font.family.body, ({
  theme
}) => theme.font.weight.reg, ({
  theme,
  color
}) => color || theme.rootFontColor);
var Data = st.p.withConfig({
  displayName: "Typography__Data",
  componentId: "gwgnan-1"
})(["font-family:", ";font-weight:", ";color:", ";letter-spacing:1px;"], ({
  theme
}) => theme.font.family.data, ({
  theme
}) => theme.font.weight.reg, (props) => props.color);
var ParXs = st(Par).withConfig({
  displayName: "Typography__ParXs",
  componentId: "gwgnan-2"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.xs);
var ParSm = st(Par).withConfig({
  displayName: "Typography__ParSm",
  componentId: "gwgnan-3"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.sm);
var ParMd = st(Par).withConfig({
  displayName: "Typography__ParMd",
  componentId: "gwgnan-4"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.md);
var ParLg = st(Par).withConfig({
  displayName: "Typography__ParLg",
  componentId: "gwgnan-5"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.lg);
var ParXl = st(Par).withConfig({
  displayName: "Typography__ParXl",
  componentId: "gwgnan-6"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.xl);
var H6 = st.h6.withConfig({
  displayName: "Typography__H6",
  componentId: "gwgnan-7"
})(["font-size:", ";font-weight:", ";font-family:", ";color:", ";"], ({
  theme
}) => theme.font.size.md, ({
  theme
}) => theme.font.weight.black, ({
  theme
}) => theme.font.family.header, (props) => props.color);
var H5 = st.h5.withConfig({
  displayName: "Typography__H5",
  componentId: "gwgnan-8"
})(["font-size:", ";font-weight:", ";font-family:", ";color:", ";"], ({
  theme
}) => theme.font.size.lg, ({
  theme
}) => theme.font.weight.bold, ({
  theme
}) => theme.font.family.header, (props) => props.color);
var H4 = st.h4.withConfig({
  displayName: "Typography__H4",
  componentId: "gwgnan-9"
})(["font-size:", ";font-weight:", ";font-family:", ";color:", ";"], ({
  theme
}) => theme.font.size.xl, ({
  theme
}) => theme.font.weight.bold, ({
  theme
}) => theme.font.family.header, (props) => props.color);
var H3 = st.h3.withConfig({
  displayName: "Typography__H3",
  componentId: "gwgnan-10"
})(["font-size:", ";font-weight:", ";font-family:", ";color:", ";"], ({
  theme
}) => theme.font.size.xxl, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.family.header, (props) => props.color);
var H2 = st.h2.withConfig({
  displayName: "Typography__H2",
  componentId: "gwgnan-11"
})(["font-size:", ";font-weight:", ";font-family:", ";color:", ";"], ({
  theme
}) => theme.font.size.xxxl, ({
  theme
}) => theme.font.weight.light, ({
  theme
}) => theme.font.family.header, (props) => props.color);
var H1 = st.h1.withConfig({
  displayName: "Typography__H1",
  componentId: "gwgnan-12"
})(["font-size:", ";font-weight:", ";font-family:", ";color:", ";"], ({
  theme
}) => theme.font.size.xxxxl, ({
  theme
}) => theme.font.weight.light, ({
  theme
}) => theme.font.family.header, (props) => props.color);
var DataXs = st(Data).withConfig({
  displayName: "Typography__DataXs",
  componentId: "gwgnan-13"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.xs);
var DataSm = st(Data).withConfig({
  displayName: "Typography__DataSm",
  componentId: "gwgnan-14"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.sm);
var DataMd = st(Data).withConfig({
  displayName: "Typography__DataMd",
  componentId: "gwgnan-15"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.md);
var DataLg = st(Data).withConfig({
  displayName: "Typography__DataLg",
  componentId: "gwgnan-16"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.lg);
var DataXl = st(Data).withConfig({
  displayName: "Typography__DataXl",
  componentId: "gwgnan-17"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.xl);
var ExtraLight = st.span.withConfig({
  displayName: "Typography__ExtraLight",
  componentId: "gwgnan-18"
})(["font-weight:", ";"], ({
  theme
}) => theme.font.weight.extraLight);
var Light = st.span.withConfig({
  displayName: "Typography__Light",
  componentId: "gwgnan-19"
})(["font-weight:", ";"], ({
  theme
}) => theme.font.weight.light);
var Bold = st.span.withConfig({
  displayName: "Typography__Bold",
  componentId: "gwgnan-20"
})(["font-weight:", ";color:", ";"], ({
  theme
}) => theme.font.weight.bold, ({
  theme,
  color
}) => color || theme.rootFontColor);
var ExtraBold = st.span.withConfig({
  displayName: "Typography__ExtraBold",
  componentId: "gwgnan-21"
})(["font-weight:", ";"], ({
  theme
}) => theme.font.weight.black);
var Italic = st.span.withConfig({
  displayName: "Typography__Italic",
  componentId: "gwgnan-22"
})(["font-style:italic;"]);
var Underline = st.span.withConfig({
  displayName: "Typography__Underline",
  componentId: "gwgnan-23"
})(["text-decoration:underline;"]);
var StrikeThrough = st.span.withConfig({
  displayName: "Typography__StrikeThrough",
  componentId: "gwgnan-24"
})(["text-decoration:line-through;"]);
var TintSecondary = st.span.withConfig({
  displayName: "Typography__TintSecondary",
  componentId: "gwgnan-25"
})(["color:", ";"], ({
  theme
}) => theme.secondary.step11);
var HelperText = ({
  color,
  icon,
  children
}) => {
  if (icon) {
    const Icon2 = icon;
    return (0, import_jsx_runtime.jsxs)(WithIcon$1, {
      children: [(0, import_jsx_runtime.jsx)(Icon2, {
        size: "1.6rem",
        color
      }), (0, import_jsx_runtime.jsx)(ParXs, Object.assign({
        color
      }, {
        children
      }))]
    });
  }
  return (0, import_jsx_runtime.jsx)(ParXs, Object.assign({
    color
  }, {
    children
  }));
};
var SuccessText = ({
  children
}) => {
  const theme = Je();
  return (0, import_jsx_runtime.jsx)(HelperText, Object.assign({
    color: theme.success.step9,
    icon: import_ri.RiCheckboxCircleLine
  }, {
    children
  }));
};
var WarningText = ({
  children
}) => {
  const theme = Je();
  return (0, import_jsx_runtime.jsx)(HelperText, Object.assign({
    color: theme.warning.step9,
    icon: import_ri.RiErrorWarningLine
  }, {
    children
  }));
};
var ErrorText = ({
  children
}) => {
  const theme = Je();
  return (0, import_jsx_runtime.jsx)(HelperText, Object.assign({
    color: theme.danger.step9,
    icon: import_ri.RiErrorWarningLine
  }, {
    children
  }));
};
var BaseFileInput = st(BaseInput).withConfig({
  displayName: "FileInputstyles__BaseFileInput",
  componentId: "sc-12m54vz-0"
})(["padding-bottom:4.3rem;"]);
var FileInput = import_react40.default.forwardRef((props, ref) => {
  const {
    id: id2,
    success: success2,
    warning: warning2,
    error,
    multiple,
    className
  } = props;
  const inputClasses = (0, import_classnames.default)({
    success: success2,
    warning: warning2,
    error
  });
  return (0, import_jsx_runtime.jsx)(BaseFileInput, Object.assign({
    name: id2,
    className: `${inputClasses} ${className}`,
    ref,
    type: "file",
    multiple
  }, props), id2);
});
var BaseTextArea = st.textarea.withConfig({
  displayName: "TextAreastyles__BaseTextArea",
  componentId: "kmnx0c-0"
})(["background-color:", ";border:1px solid ", ";border-radius:", ";color:", ";font-size:", ";font-weight:", ";font-family:", ";height:", ";line-height:150%;letter-spacing:1.5px;max-width:", ";padding:1.2rem 1.8rem;resize:none;transition:", ";width:100%;::placeholder{color:", ";}&:hover{background-color:", ";border:1px solid ", ";}:focus{background-color:", ";border:1px solid ", ";outline:none;}:disabled{background-color:", ";border:1px solid ", ";cursor:not-allowed;font-style:italic;::placeholder{color:", ";}}&.full{max-width:", ";}&.success{border:1px solid ", ";}&.warning{border:1px solid ", ";}&.error{border:1px solid ", ";}"], ({
  theme
}) => theme.textarea.bg, ({
  theme
}) => theme.textarea.border, ({
  theme
}) => theme.field.radius, ({
  theme
}) => theme.textarea.color, ({
  theme
}) => theme.field.fontSize, ({
  theme
}) => theme.field.fontWeight, ({
  theme
}) => theme.field.inputFont, ({
  height
}) => height || "12rem", ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.transition, ({
  theme
}) => theme.textarea.placeholder, ({
  theme
}) => theme.textarea.hover.bg, ({
  theme
}) => theme.textarea.hover.border, ({
  theme
}) => theme.textarea.focus.bg, ({
  theme
}) => theme.textarea.focus.border, ({
  theme
}) => theme.textarea.disabled.bg, ({
  theme
}) => theme.textarea.disabled.border, ({
  theme
}) => theme.textarea.disabled.placeholder, ({
  theme
}) => theme.field.size.full, ({
  theme
}) => theme.textarea.success.border, ({
  theme
}) => theme.textarea.warning.border, ({
  theme
}) => theme.textarea.error.border);
var TextArea = import_react40.default.forwardRef((props, ref) => {
  const {
    full,
    warning: warning2,
    error,
    success: success2,
    className,
    height
  } = props, rest = __rest3(props, ["full", "warning", "error", "success", "className", "height"]);
  const classes = (0, import_classnames.default)({
    full,
    success: success2,
    warning: warning2,
    error
  });
  return (0, import_jsx_runtime.jsx)(BaseTextArea, Object.assign({}, rest, {
    className: `${classes} ${className}`,
    ref,
    rows: 10,
    height
  }));
});
var objectDefineProperties = {};
var DESCRIPTORS$2 = descriptors;
var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
var definePropertyModule = objectDefineProperty;
var anObject$2 = anObject$5;
var toIndexedObject$1 = toIndexedObject$5;
var objectKeys = objectKeys$2;
objectDefineProperties.f = DESCRIPTORS$2 && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject$2(O);
  var props = toIndexedObject$1(Properties);
  var keys3 = objectKeys(Properties);
  var length = keys3.length;
  var index2 = 0;
  var key;
  while (length > index2)
    definePropertyModule.f(O, key = keys3[index2++], props[key]);
  return O;
};
var getBuiltIn = getBuiltIn$3;
var html$1 = getBuiltIn("document", "documentElement");
var anObject$1 = anObject$5;
var definePropertiesModule = objectDefineProperties;
var enumBugKeys = enumBugKeys$3;
var hiddenKeys = hiddenKeys$4;
var html = html$1;
var documentCreateElement$1 = documentCreateElement$2;
var sharedKey$1 = sharedKey$3;
var GT = ">";
var LT = "<";
var PROTOTYPE = "prototype";
var SCRIPT = "script";
var IE_PROTO$1 = sharedKey$1("IE_PROTO");
var EmptyConstructor = function() {
};
var scriptTag = function(content) {
  return LT + SCRIPT + GT + content + LT + "/" + SCRIPT + GT;
};
var NullProtoObjectViaActiveX = function(activeXDocument2) {
  activeXDocument2.write(scriptTag(""));
  activeXDocument2.close();
  var temp = activeXDocument2.parentWindow.Object;
  activeXDocument2 = null;
  return temp;
};
var NullProtoObjectViaIFrame = function() {
  var iframe = documentCreateElement$1("iframe");
  var JS = "java" + SCRIPT + ":";
  var iframeDocument;
  iframe.style.display = "none";
  html.appendChild(iframe);
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag("document.F=Object"));
  iframeDocument.close();
  return iframeDocument.F;
};
var activeXDocument;
var NullProtoObject = function() {
  try {
    activeXDocument = new ActiveXObject("htmlfile");
  } catch (error) {
  }
  NullProtoObject = typeof document != "undefined" ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument);
  var length = enumBugKeys.length;
  while (length--)
    delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};
hiddenKeys[IE_PROTO$1] = true;
var objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject$1(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    result[IE_PROTO$1] = O;
  } else
    result = NullProtoObject();
  return Properties === void 0 ? result : definePropertiesModule.f(result, Properties);
};
var wellKnownSymbol$8 = wellKnownSymbol$a;
var create$1 = objectCreate;
var defineProperty$3 = objectDefineProperty.f;
var UNSCOPABLES = wellKnownSymbol$8("unscopables");
var ArrayPrototype = Array.prototype;
if (ArrayPrototype[UNSCOPABLES] == void 0) {
  defineProperty$3(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create$1(null)
  });
}
var addToUnscopables$1 = function(key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};
var iterators = {};
var fails$2 = fails$c;
var correctPrototypeGetter = !fails$2(function() {
  function F() {
  }
  F.prototype.constructor = null;
  return Object.getPrototypeOf(new F()) !== F.prototype;
});
var hasOwn$2 = hasOwnProperty_1;
var isCallable$5 = isCallable$g;
var toObject = toObject$3;
var sharedKey = sharedKey$3;
var CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;
var IE_PROTO = sharedKey("IE_PROTO");
var $Object$1 = Object;
var ObjectPrototype = $Object$1.prototype;
var objectGetPrototypeOf = CORRECT_PROTOTYPE_GETTER ? $Object$1.getPrototypeOf : function(O) {
  var object = toObject(O);
  if (hasOwn$2(object, IE_PROTO))
    return object[IE_PROTO];
  var constructor = object.constructor;
  if (isCallable$5(constructor) && object instanceof constructor) {
    return constructor.prototype;
  }
  return object instanceof $Object$1 ? ObjectPrototype : null;
};
var fails$1 = fails$c;
var isCallable$4 = isCallable$g;
var isObject$1 = isObject$7;
var getPrototypeOf$1 = objectGetPrototypeOf;
var defineBuiltIn$1 = defineBuiltIn$3;
var wellKnownSymbol$7 = wellKnownSymbol$a;
var ITERATOR$2 = wellKnownSymbol$7("iterator");
var BUGGY_SAFARI_ITERATORS$1 = false;
var IteratorPrototype$2;
var PrototypeOfArrayIteratorPrototype;
var arrayIterator;
if ([].keys) {
  arrayIterator = [].keys();
  if (!("next" in arrayIterator))
    BUGGY_SAFARI_ITERATORS$1 = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf$1(getPrototypeOf$1(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype)
      IteratorPrototype$2 = PrototypeOfArrayIteratorPrototype;
  }
}
var NEW_ITERATOR_PROTOTYPE = !isObject$1(IteratorPrototype$2) || fails$1(function() {
  var test2 = {};
  return IteratorPrototype$2[ITERATOR$2].call(test2) !== test2;
});
if (NEW_ITERATOR_PROTOTYPE)
  IteratorPrototype$2 = {};
if (!isCallable$4(IteratorPrototype$2[ITERATOR$2])) {
  defineBuiltIn$1(IteratorPrototype$2, ITERATOR$2, function() {
    return this;
  });
}
var iteratorsCore = {
  IteratorPrototype: IteratorPrototype$2,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1
};
var defineProperty$2 = objectDefineProperty.f;
var hasOwn$1 = hasOwnProperty_1;
var wellKnownSymbol$6 = wellKnownSymbol$a;
var TO_STRING_TAG$3 = wellKnownSymbol$6("toStringTag");
var setToStringTag$2 = function(target, TAG, STATIC) {
  if (target && !STATIC)
    target = target.prototype;
  if (target && !hasOwn$1(target, TO_STRING_TAG$3)) {
    defineProperty$2(target, TO_STRING_TAG$3, { configurable: true, value: TAG });
  }
};
var IteratorPrototype$1 = iteratorsCore.IteratorPrototype;
var create2 = objectCreate;
var createPropertyDescriptor = createPropertyDescriptor$3;
var setToStringTag$1 = setToStringTag$2;
var Iterators$2 = iterators;
var returnThis$1 = function() {
  return this;
};
var iteratorCreateConstructor = function(IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG2 = NAME + " Iterator";
  IteratorConstructor.prototype = create2(IteratorPrototype$1, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });
  setToStringTag$1(IteratorConstructor, TO_STRING_TAG2, false);
  Iterators$2[TO_STRING_TAG2] = returnThis$1;
  return IteratorConstructor;
};
var uncurryThis$4 = functionUncurryThis;
var aCallable = aCallable$2;
var functionUncurryThisAccessor = function(object, key, method) {
  try {
    return uncurryThis$4(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));
  } catch (error) {
  }
};
var isCallable$3 = isCallable$g;
var $String$1 = String;
var $TypeError$1 = TypeError;
var aPossiblePrototype$1 = function(argument) {
  if (typeof argument == "object" || isCallable$3(argument))
    return argument;
  throw $TypeError$1("Can't set " + $String$1(argument) + " as a prototype");
};
var uncurryThisAccessor = functionUncurryThisAccessor;
var anObject = anObject$5;
var aPossiblePrototype = aPossiblePrototype$1;
var objectSetPrototypeOf = Object.setPrototypeOf || ("__proto__" in {} ? function() {
  var CORRECT_SETTER = false;
  var test2 = {};
  var setter;
  try {
    setter = uncurryThisAccessor(Object.prototype, "__proto__", "set");
    setter(test2, []);
    CORRECT_SETTER = test2 instanceof Array;
  } catch (error) {
  }
  return function setPrototypeOf2(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER)
      setter(O, proto);
    else
      O.__proto__ = proto;
    return O;
  };
}() : void 0);
var $$3 = _export;
var call = functionCall;
var FunctionName = functionName;
var isCallable$2 = isCallable$g;
var createIteratorConstructor = iteratorCreateConstructor;
var getPrototypeOf = objectGetPrototypeOf;
var setPrototypeOf = objectSetPrototypeOf;
var setToStringTag = setToStringTag$2;
var createNonEnumerableProperty$1 = createNonEnumerableProperty$4;
var defineBuiltIn = defineBuiltIn$3;
var wellKnownSymbol$5 = wellKnownSymbol$a;
var Iterators$1 = iterators;
var IteratorsCore = iteratorsCore;
var PROPER_FUNCTION_NAME$1 = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR$1 = wellKnownSymbol$5("iterator");
var KEYS = "keys";
var VALUES = "values";
var ENTRIES = "entries";
var returnThis = function() {
  return this;
};
var iteratorDefine = function(Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);
  var getIterationMethod = function(KIND) {
    if (KIND === DEFAULT && defaultIterator)
      return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype)
      return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS:
        return function keys3() {
          return new IteratorConstructor(this, KIND);
        };
      case VALUES:
        return function values2() {
          return new IteratorConstructor(this, KIND);
        };
      case ENTRIES:
        return function entries() {
          return new IteratorConstructor(this, KIND);
        };
    }
    return function() {
      return new IteratorConstructor(this);
    };
  };
  var TO_STRING_TAG2 = NAME + " Iterator";
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR$1] || IterablePrototype["@@iterator"] || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == "Array" ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (!isCallable$2(CurrentIteratorPrototype[ITERATOR$1])) {
          defineBuiltIn(CurrentIteratorPrototype, ITERATOR$1, returnThis);
        }
      }
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG2, true);
    }
  }
  if (PROPER_FUNCTION_NAME$1 && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if (CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty$1(IterablePrototype, "name", VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values2() {
        return call(nativeIterator, this);
      };
    }
  }
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED)
      for (KEY in methods) {
        if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
          defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
        }
      }
    else
      $$3({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }
  if (IterablePrototype[ITERATOR$1] !== defaultIterator) {
    defineBuiltIn(IterablePrototype, ITERATOR$1, defaultIterator, { name: DEFAULT });
  }
  Iterators$1[NAME] = defaultIterator;
  return methods;
};
var createIterResultObject$1 = function(value, done) {
  return { value, done };
};
var toIndexedObject = toIndexedObject$5;
var addToUnscopables = addToUnscopables$1;
var Iterators = iterators;
var InternalStateModule = internalState;
var defineProperty$1 = objectDefineProperty.f;
var defineIterator = iteratorDefine;
var createIterResultObject = createIterResultObject$1;
var DESCRIPTORS$1 = descriptors;
var ARRAY_ITERATOR = "Array Iterator";
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);
var es_array_iterator = defineIterator(Array, "Array", function(iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated),
    index: 0,
    kind
  });
}, function() {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index2 = state.index++;
  if (!target || index2 >= target.length) {
    state.target = void 0;
    return createIterResultObject(void 0, true);
  }
  if (kind == "keys")
    return createIterResultObject(index2, false);
  if (kind == "values")
    return createIterResultObject(target[index2], false);
  return createIterResultObject([index2, target[index2]], false);
}, "values");
var values = Iterators.Arguments = Iterators.Array;
addToUnscopables("keys");
addToUnscopables("values");
addToUnscopables("entries");
if (DESCRIPTORS$1 && values.name !== "values")
  try {
    defineProperty$1(values, "name", { value: "values" });
  } catch (error) {
  }
var domIterables = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};
var documentCreateElement = documentCreateElement$2;
var classList = documentCreateElement("span").classList;
var DOMTokenListPrototype$1 = classList && classList.constructor && classList.constructor.prototype;
var domTokenListPrototype = DOMTokenListPrototype$1 === Object.prototype ? void 0 : DOMTokenListPrototype$1;
var global$2 = global$d;
var DOMIterables = domIterables;
var DOMTokenListPrototype = domTokenListPrototype;
var ArrayIteratorMethods = es_array_iterator;
var createNonEnumerableProperty = createNonEnumerableProperty$4;
var wellKnownSymbol$4 = wellKnownSymbol$a;
var ITERATOR = wellKnownSymbol$4("iterator");
var TO_STRING_TAG$2 = wellKnownSymbol$4("toStringTag");
var ArrayValues = ArrayIteratorMethods.values;
var handlePrototype = function(CollectionPrototype, COLLECTION_NAME) {
  if (CollectionPrototype) {
    if (CollectionPrototype[ITERATOR] !== ArrayValues)
      try {
        createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
      } catch (error) {
        CollectionPrototype[ITERATOR] = ArrayValues;
      }
    if (!CollectionPrototype[TO_STRING_TAG$2]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG$2, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME])
      for (var METHOD_NAME in ArrayIteratorMethods) {
        if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME])
          try {
            createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
          } catch (error) {
            CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
          }
      }
  }
};
for (COLLECTION_NAME in DOMIterables) {
  handlePrototype(global$2[COLLECTION_NAME] && global$2[COLLECTION_NAME].prototype, COLLECTION_NAME);
}
var COLLECTION_NAME;
handlePrototype(DOMTokenListPrototype, "DOMTokenList");
var SmTooltipIcon = () => (0, import_jsx_runtime.jsx)(import_ri.RiErrorWarningLine, {
  size: "1.4rem"
});
var LgTooltipIcon = () => (0, import_jsx_runtime.jsx)(import_ri.RiErrorWarningLine, {
  size: "2rem"
});
var fadeIn = ct(["from{opacity:0}to{opacity:1}"]);
var TooltipProvider = $a093c7e1ec25a057$export$2881499e37b75b9a;
var TooltipRoot = $a093c7e1ec25a057$export$be92b6f5f03c0fe9;
var TooltipPortal = $a093c7e1ec25a057$export$602eac185826482c;
var TooltipTrigger = st($a093c7e1ec25a057$export$41fb9f06171c75f4).withConfig({
  displayName: "Tooltipstyles__TooltipTrigger",
  componentId: "sc-1v5546e-0"
})(["background-color:transparent;border:none;padding:0;svg{color:", ";}"], ({
  theme
}) => theme.tooltip.icon.color);
var TooltipArrow = st($a093c7e1ec25a057$export$21b07c8f274aebd5).withConfig({
  displayName: "Tooltipstyles__TooltipArrow",
  componentId: "sc-1v5546e-1"
})(["fill:", ";"], ({
  theme
}) => theme.tooltip.content.bg);
var TooltipContent = st($a093c7e1ec25a057$export$7c6e2c02157bb7d2).withConfig({
  displayName: "Tooltipstyles__TooltipContent",
  componentId: "sc-1v5546e-2"
})(["background-color:", ";border-radius:", ";color:", ";font-size:", ";line-height:2.4rem;max-width:30rem;padding:1.2rem 1.5rem;&[data-state='delayed-open']{animation:", " 0.15s ease-in forwards;}"], ({
  theme
}) => theme.tooltip.content.bg, ({
  theme
}) => theme.tooltip.radius, ({
  theme
}) => theme.tooltip.content.color, ({
  theme
}) => theme.font.size.md, fadeIn);
var Tooltip = ({
  content: _content = "Content goes here",
  side: _side = "right",
  triggerEl: _triggerEl = (0, import_jsx_runtime.jsx)(SmTooltipIcon, {}),
  offset: _offset = 18,
  delay: _delay = 400,
  triggerAsChild: _triggerAsChild = false
}) => {
  const [open2, setOpen] = (0, import_react40.useState)(false);
  const [stayOpen, setStayOpen] = (0, import_react40.useState)(false);
  const handleClickOpen = () => {
    setOpen(true);
    setStayOpen(true);
  };
  const handleClickOutside = () => {
    setOpen(false);
    setStayOpen(false);
  };
  return (0, import_jsx_runtime.jsx)(TooltipProvider, Object.assign({
    delayDuration: _delay
  }, {
    children: (0, import_jsx_runtime.jsxs)(TooltipRoot, Object.assign({
      open: open2 || stayOpen,
      onOpenChange: setOpen
    }, {
      children: [(0, import_jsx_runtime.jsx)(TooltipTrigger, Object.assign({
        onClick: handleClickOpen,
        asChild: _triggerAsChild
      }, {
        children: _triggerEl
      })), (0, import_jsx_runtime.jsx)(TooltipPortal, {
        children: (0, import_jsx_runtime.jsxs)(TooltipContent, Object.assign({
          side: _side,
          sideOffset: _offset,
          onEscapeKeyDown: handleClickOutside,
          onPointerDownOutside: handleClickOutside
        }, {
          children: [_content, (0, import_jsx_runtime.jsx)(TooltipArrow, {})]
        }))
      })]
    }))
  }));
};
var LinkStyles = nt(["align-items:center;color:", ";cursor:pointer;display:inline-flex;font-family:", ";font-weight:", ";font-size:", ";text-decoration:none;letter-spacing:1.5px;&:hover{text-decoration:underline;}.icon-left{width:25px;margin-right:0.5rem;}svg{margin-left:0.3rem;}&.button-link{&:hover{text-decoration:none;}}"], ({
  theme
}) => theme.link.color, ({
  theme
}) => theme.font.family.body, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.size.md);
var StyledLink = st.a.withConfig({
  displayName: "Linkstyles__StyledLink",
  componentId: "sc-1884z77-0"
})(["", ""], LinkStyles);
var Link$1 = import_react40.default.forwardRef(({
  href: _href = "/",
  target: _target = "_blank",
  showExternalIcon: _showExternalIcon = true,
  selected,
  disabled,
  RightIcon,
  LeftIcon,
  className,
  children
}, ref) => {
  const classes = (0, import_classnames.default)({
    selected,
    disabled
  });
  return (0, import_jsx_runtime.jsxs)(StyledLink, Object.assign({
    href: _href,
    className: `${classes} ${className}`,
    target: _target,
    ref
  }, {
    children: [LeftIcon && (0, import_jsx_runtime.jsx)(LeftIcon, {
      className: "icon-left"
    }), children, _showExternalIcon && (0, import_jsx_runtime.jsx)(import_ri.RiExternalLinkLine, {}) || RightIcon && (0, import_jsx_runtime.jsx)(RightIcon, {
      className: "icon-right"
    })]
  }));
});
var WithIcon = st.div.withConfig({
  displayName: "Selectstyles__WithIcon",
  componentId: "sc-19rqg1t-0"
})(["position:relative;width:100%;max-width:", ";svg{position:absolute;color:", ";top:1.4rem;right:2rem;pointer-events:none;}&.long{max-width:", ";}&.full{max-width:", ";}&.success{border:1px solid ", ";}&.warning{border:1px solid ", ";}&.error{border:1px solid ", ";}"], ({
  theme
}) => theme.field.size.md, ({
  theme
}) => theme.select.icon.color, ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.full, ({
  theme
}) => theme.select.success.border, ({
  theme
}) => theme.select.warning.border, ({
  theme
}) => theme.select.error.border);
var BaseSelect = st.select.withConfig({
  displayName: "Selectstyles__BaseSelect",
  componentId: "sc-19rqg1t-1"
})(["align-items:center;appearance:none;background-color:", ";border:1px ", " solid;border-radius:", ";color:", ";cursor:pointer;display:inline-flex;font-size:", ";font-weight:", ";font-family:", ";height:4.8rem;justify-content:space-between;line-height:150%;max-width:", ";padding:0 1.8rem;transition:", ";width:100%;&.long{max-width:", ";}&.full{max-width:", ";}&.success{border:1px solid ", ";}&.warning{border:1px solid ", ";}&.error{border:1px solid ", ";}&:hover{background-color:", ";border:1px solid ", ";}:focus{background-color:", ";border:1px solid ", ";outline:none;}:disabled{background-color:", ";color:", ";cursor:not-allowed;font-style:italic;::placeholder{color:", ";}}"], ({
  theme
}) => theme.select.bg, ({
  theme
}) => theme.select.border, ({
  theme
}) => theme.select.radius, ({
  theme
}) => theme.select.color, ({
  theme
}) => theme.field.fontSize, ({
  theme
}) => theme.field.fontWeight, ({
  theme
}) => theme.field.inputFont, ({
  theme
}) => theme.field.size.md, ({
  theme
}) => theme.field.transition, ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.full, ({
  theme
}) => theme.select.success.border, ({
  theme
}) => theme.select.warning.border, ({
  theme
}) => theme.select.error.border, ({
  theme
}) => theme.select.hover.bg, ({
  theme
}) => theme.select.hover.border, ({
  theme
}) => theme.select.focus.bg, ({
  theme
}) => theme.select.focus.border, ({
  theme
}) => theme.select.disabled.bg, ({
  theme
}) => theme.select.disabled.color, ({
  theme
}) => theme.select.disabled.placeholder);
var StyledOption = st.option.withConfig({
  displayName: "Selectstyles__StyledOption",
  componentId: "sc-19rqg1t-2"
})(["background-color:", ";color:", ";font-family:", ";font-size:", ";font-weight:", ";height:4.8rem;"], ({
  theme
}) => theme.select.option.bg, ({
  theme
}) => theme.select.option.color, ({
  theme
}) => theme.font.family.body, ({
  theme
}) => theme.field.fontSize, ({
  theme
}) => theme.field.fontWeight);
var Select = (0, import_react40.forwardRef)((_a, ref) => {
  var {
    options,
    defaultValue,
    long,
    full,
    placeholder,
    disabled,
    error,
    success: success2,
    warning: warning2,
    className,
    containerClassName
  } = _a, props = __rest3(_a, ["options", "defaultValue", "long", "full", "placeholder", "disabled", "error", "success", "warning", "className", "containerClassName"]);
  const theme = Je();
  const wrapperClasses = (0, import_classnames.default)({
    long,
    full
  });
  const classes = (0, import_classnames.default)({
    long,
    full,
    success: success2,
    error,
    warning: warning2
  });
  return (0, import_jsx_runtime.jsxs)(WithIcon, Object.assign({
    className: `${containerClassName} ${wrapperClasses}`
  }, {
    children: [(0, import_jsx_runtime.jsxs)(BaseSelect, Object.assign({}, props, {
      ref,
      className: `${className} ${classes}`,
      defaultValue,
      disabled
    }, {
      children: [placeholder && (0, import_jsx_runtime.jsx)(StyledOption, Object.assign({
        value: ""
      }, {
        children: placeholder
      })), options === null || options === void 0 ? void 0 : options.map((option) => (0, import_jsx_runtime.jsx)(StyledOption, Object.assign({
        value: option.value
      }, {
        children: option.name
      }), option.key || option.value))]
    })), (0, import_jsx_runtime.jsx)(import_ri.RiArrowDropDownLine, {
      size: "2rem",
      color: disabled ? theme.neutral.step11 : theme.secondary.step11
    })]
  }));
});
var StyledSpinner = st.div.withConfig({
  displayName: "Spinner__StyledSpinner",
  componentId: "sc-1w53g4s-0"
})(["&.loader,&.loader:after{border-radius:50%;width:100%;height:100%;}&.loader{font-size:1rem;position:relative;text-indent:-9999em;border-top:", ";border-right:", ";border-bottom:", ";border-left:", ";-webkit-transform:translateZ(0);-ms-transform:translateZ(0);transform:translateZ(0);-webkit-animation:load8 ", " infinite linear;animation:load8 ", " infinite linear;}@-webkit-keyframes load8{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg);}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg);}}@keyframes load8{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg);}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg);}}"], (props) => `${props.$strokeWidth} solid ${props.$bottomColor}`, (props) => `${props.$strokeWidth} solid ${props.$bottomColor}`, (props) => `${props.$strokeWidth} solid ${props.$bottomColor}`, (props) => `${props.$strokeWidth} solid ${props.$topColor}`, ({
  $speed
}) => $speed, ({
  $speed
}) => $speed);
var Container$2 = st.div.withConfig({
  displayName: "Spinner__Container",
  componentId: "sc-1w53g4s-1"
})(["display:inline-flex;align-items:center;justify-content:center;width:", ";height:", ";margin:", ";padding:", ";"], ({
  $size
}) => $size, ({
  $size
}) => $size, ({
  $margin
}) => $margin, ({
  $padding
}) => $padding);
var Spinner = ({
  topColor,
  bottomColor,
  size: _size = "4rem",
  margin: _margin = "0",
  padding: _padding = "0",
  strokeWidth: _strokeWidth = ".5rem",
  speed: _speed = "1.1s"
}) => {
  const theme = Je();
  return (0, import_jsx_runtime.jsx)(Container$2, Object.assign({
    "$size": _size,
    "$margin": _margin,
    "$padding": _padding
  }, {
    children: (0, import_jsx_runtime.jsx)(StyledSpinner, {
      "$topColor": topColor || theme.primary.step9,
      "$bottomColor": bottomColor || theme.primary.step4,
      className: "loader",
      "$strokeWidth": _strokeWidth,
      "$speed": _speed
    })
  }));
};
var StyledDivider$1 = st($89eedd556c436f6a$export$be92b6f5f03c0fe9).withConfig({
  displayName: "Divider__StyledDivider",
  componentId: "sc-1ovh19q-0"
})(["background-color:", ";margin:", ";&[data-orientation='horizontal']{height:0.1rem;width:100%;}&[data-orientation='vertical']{height:100%;width:0.1rem;}"], ({
  color
}) => color || slate$1.slate6, ({
  margin
}) => margin || "0rem");
var Divider = ({
  orientation: _orientation = "horizontal",
  decorative: _decorative = false,
  asChild: _asChild = false,
  margin: _margin = "0rem",
  className,
  color
}) => {
  return (0, import_jsx_runtime.jsx)(StyledDivider$1, {
    margin: _margin,
    orientation: _orientation,
    decorative: _decorative,
    asChild: _asChild,
    className,
    color
  });
};
var Container$1 = st.div.withConfig({
  displayName: "Switchstyles__Container",
  componentId: "sc-434dnk-0"
})(["align-items:center;display:flex;padding-top:12px;padding-bottom:12px;"]);
var SwitchBase = st($6be4966fd9bbc698$export$be92b6f5f03c0fe9).withConfig({
  displayName: "Switchstyles__SwitchBase",
  componentId: "sc-434dnk-1"
})(["all:unset;background-color:", ";border-radius:9999px;cursor:pointer;height:16px;left:9px;position:relative;width:54px;&[data-disabled]{background-color:", ";cursor:not-allowed;}&[data-state='checked']{background-color:", ";&[data-disabled]{background-color:", ";cursor:not-allowed;}}"], ({
  theme
}) => theme.switch.base.bg, ({
  theme
}) => theme.switch.base.disabled.bg, ({
  theme
}) => theme.switch.base.active.bg, ({
  theme
}) => theme.switch.base.active.disabled.bg);
var SwitchSlider = st($6be4966fd9bbc698$export$6521433ed15a34db).withConfig({
  displayName: "Switchstyles__SwitchSlider",
  componentId: "sc-434dnk-2"
})(["background-color:", ";border:2px solid ", ";border-radius:9999px;height:34px;position:absolute;top:-10px;transform:translateX(-9px);transition:transform 0.4s;width:34px;will-change:transform;&:hover{background-color:", ";border:1px solid ", ";}:focus{background-color:", ";border:1px solid ", ";outline:none;}&[data-disabled]{background-color:", ";border:1px solid ", ";cursor:not-allowed;}&[data-state='checked']{background-color:", ";border:2px solid ", ";transform:translateX(27px);&:hover{background-color:", ";border:1px solid ", ";}:focus{background-color:", ";border:1px solid ", ";outline:none;}&[data-disabled]{background-color:", ";border:1px solid ", ";cursor:not-allowed;}}"], ({
  theme
}) => theme.switch.indicator.bg, ({
  theme
}) => theme.switch.indicator.border, ({
  theme
}) => theme.switch.indicator.hover.bg, ({
  theme
}) => theme.switch.indicator.hover.border, ({
  theme
}) => theme.switch.indicator.focus.bg, ({
  theme
}) => theme.switch.indicator.focus.border, ({
  theme
}) => theme.switch.indicator.disabled.bg, ({
  theme
}) => theme.switch.indicator.disabled.border, ({
  theme
}) => theme.switch.indicator.active.bg, ({
  theme
}) => theme.switch.indicator.active.border, ({
  theme
}) => theme.switch.indicator.active.hover.bg, ({
  theme
}) => theme.switch.indicator.active.hover.border, ({
  theme
}) => theme.switch.indicator.active.focus.bg, ({
  theme
}) => theme.switch.indicator.active.focus.border, ({
  theme
}) => theme.switch.indicator.active.disabled.bg, ({
  theme
}) => theme.switch.indicator.active.disabled.border);
var LabelContainer$2 = st.label.withConfig({
  displayName: "Switchstyles__LabelContainer",
  componentId: "sc-434dnk-3"
})(["align-items:center;display:flex;margin-left:28px;label{margin-right:10px;}svg{transform:translateY(0.1rem);}"]);
var StyledLabel = st.label.withConfig({
  displayName: "Switchstyles__StyledLabel",
  componentId: "sc-434dnk-4"
})(["color:", ";font-family:", ";font-weight:", ";font-size:", ";&.disabled{color:", ";}"], ({
  theme
}) => theme.switch.label.color, ({
  theme
}) => theme.font.family.body, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.size.md, ({
  theme
}) => theme.switch.label.disabled.color);
var Label$1 = ({
  children: _children = "label",
  id: id2,
  className
}) => {
  return (0, import_jsx_runtime.jsx)(StyledLabel, Object.assign({
    htmlFor: id2,
    className
  }, {
    children: _children
  }));
};
var Switch = import_react40.default.forwardRef((props, ref) => {
  const {
    fieldLabel,
    id: id2,
    className,
    disabled,
    switchOn,
    defaultOn = false,
    onBlur,
    onChange,
    onCheckedChange
  } = props;
  const classes = (0, import_classnames.default)({
    disabled
  });
  return (0, import_jsx_runtime.jsxs)(Container$1, Object.assign({
    className
  }, {
    children: [(0, import_jsx_runtime.jsx)(SwitchBase, Object.assign({
      checked: switchOn,
      defaultChecked: defaultOn,
      onBlur,
      onChange,
      onCheckedChange,
      disabled
    }, {
      children: (0, import_jsx_runtime.jsx)(SwitchSlider, {
        ref
      })
    })), (0, import_jsx_runtime.jsx)(LabelContainer$2, {
      children: (0, import_jsx_runtime.jsx)(Label$1, Object.assign({
        id: id2,
        className: classes
      }, {
        children: fieldLabel
      }))
    })]
  }));
});
var CardStyles = nt(["background-color:", ";border:1px solid ", ";border-radius:", ";padding:2rem;width:", ";max-width:90vw;"], ({
  theme
}) => theme.card.bg, ({
  theme
}) => theme.card.border, ({
  theme
}) => theme.card.radius, ({
  width
}) => width);
var BaseCard = st.div.withConfig({
  displayName: "Cardstyles__BaseCard",
  componentId: "sc-1yd85w7-0"
})(["", ""], CardStyles);
var Card = ({
  className,
  width: _width = "fit-content",
  children
}) => {
  return (0, import_jsx_runtime.jsx)(BaseCard, Object.assign({
    className,
    width: _width
  }, {
    children
  }));
};
var BaseTag = st.div.withConfig({
  displayName: "Tagstyles__BaseTag",
  componentId: "sc-1npyc2x-0"
})(["display:inline-flex;align-items:center;background-color:", ";border:1px solid ", ";border-radius:", ";color:", ";height:fit-content;width:fit-content;padding:0.5rem 0.8rem;font-size:", ";&:hover{background-color:", ";border:1px solid ", ";}:focus{background-color:", ";border:1px solid ", ";outline:none;}:disabled{background-color:", ";border:1px solid ", ";cursor:not-allowed;}svg{width:1.2rem;height:1.2rem;color:", ";}svg.icon-left{margin-right:1rem;}svg.icon-right{margin-left:0.5rem;}"], ({
  theme,
  $tagColor
}) => theme[`${$tagColor}3`], ({
  theme,
  $tagColor
}) => theme[`${$tagColor}3`], ({
  theme
}) => theme.tag.radius, ({
  theme,
  $tagColor
}) => theme[`${$tagColor}11`], ({
  $fontSize
}) => $fontSize, ({
  theme,
  $tagColor
}) => theme[`${$tagColor}3`], ({
  theme,
  $tagColor
}) => theme[`${$tagColor}4`], ({
  theme,
  $tagColor
}) => theme[`${$tagColor}3`], ({
  theme,
  $tagColor
}) => theme[`${$tagColor}5`], ({
  theme
}) => theme.neutral.step2, ({
  theme
}) => theme.neutral.step5, ({
  theme,
  $tagColor
}) => theme[`${$tagColor}11`]);
var Tag = ({
  className,
  children,
  tagColor,
  IconLeft,
  IconRight,
  fontSize: _fontSize = "1.2rem"
}) => {
  const iconClasses = (0, import_classnames.default)({
    tagColor
  });
  return (0, import_jsx_runtime.jsxs)(BaseTag, Object.assign({
    className,
    "$tagColor": tagColor || "green",
    "$fontSize": _fontSize
  }, {
    children: [IconLeft && (0, import_jsx_runtime.jsx)(IconLeft, {
      className: `${iconClasses} icon-left`
    }), children, IconRight && (0, import_jsx_runtime.jsx)(IconRight, {
      className: `${iconClasses} icon-right`
    })]
  }));
};
var ProgressVisualFull = st.div.withConfig({
  displayName: "Progressstyles__ProgressVisualFull",
  componentId: "ea8s12-0"
})(["background-color:", ";display:flex;height:10px;"], ({
  $backgroundColor
}) => $backgroundColor);
var ProgressVisualPart = st.div.withConfig({
  displayName: "Progressstyles__ProgressVisualPart",
  componentId: "ea8s12-1"
})(["width:", ";background-color:", ";transition:width 2s;"], (props) => props.width, ({
  $backgroundColor
}) => $backgroundColor);
var Progress = ({
  backgroundColor,
  progressSection: _progressSection = [{
    percentage: "0%",
    color: "transparent"
  }]
}) => {
  const theme = Je();
  const [widths, setWidths] = (0, import_react40.useState)(_progressSection.map(() => {
    return "0%";
  }));
  (0, import_react40.useEffect)(() => {
    requestAnimationFrame(() => {
      setWidths(_progressSection.map((item) => {
        return item.percentage;
      }));
    });
  }, [_progressSection]);
  return (0, import_jsx_runtime.jsx)(ProgressVisualFull, Object.assign({
    "$backgroundColor": backgroundColor || theme.neutral.step10
  }, {
    children: _progressSection.map((item, index2) => {
      return (0, import_jsx_runtime.jsx)(ProgressVisualPart, {
        width: widths[index2],
        "$backgroundColor": item.color
      }, index2);
    })
  }));
};
var BaseBadge = st.div.withConfig({
  displayName: "Badgestyles__BaseBadge",
  componentId: "n6obw9-0"
})(["display:inline-flex;align-items:center;background-color:", ";border:1px solid ", ";border-radius:2.1rem;justify-content:center;min-height:", ";min-width:", ";padding:", ";font-size:", ";color:", ";:focus{background-color:", ";border:1px solid ", ";}:disabled{background-color:", ";color:", ";}"], ({
  theme,
  $color
}) => theme[`${$color}7`], ({
  theme,
  $color
}) => theme[`${$color}3`], ({
  $size
}) => {
  return $size === "sm" ? "2.4rem;" : "3.6rem;";
}, ({
  $size
}) => {
  return $size === "sm" ? "3rem;" : "8.1rem;";
}, ({
  $size
}) => {
  return $size === "sm" ? "0.3rem 0.8rem;" : "0.6rem 1.6rem;";
}, ({
  $size
}) => $size === "sm" ? "1.2rem;" : "1.6rem;", ({
  theme,
  $color
}) => theme[`${$color}12`], ({
  theme,
  $color
}) => theme[`${$color}6`], ({
  theme,
  $color
}) => theme[`${$color}8`], ({
  theme,
  $color
}) => theme[`${$color}7`], ({
  theme,
  $color
}) => theme[`${$color}9`]);
var Badge = ({
  className,
  badgeLabel,
  badgeSize: _badgeSize = "sm",
  badgeColor: _badgeColor = "blue"
}) => {
  return (0, import_jsx_runtime.jsxs)(BaseBadge, Object.assign({
    "$color": _badgeColor,
    "$size": _badgeSize,
    className
  }, {
    children: [_badgeSize === "sm" && (0, import_jsx_runtime.jsx)(ParXs, {
      children: (0, import_jsx_runtime.jsx)(Bold, {
        children: badgeLabel
      })
    }), _badgeSize === "lg" && (0, import_jsx_runtime.jsx)(ParMd, {
      children: (0, import_jsx_runtime.jsx)(Bold, {
        children: badgeLabel
      })
    })]
  }));
};
var getMatches = (query) => {
  if (typeof window !== "undefined") {
    return window.matchMedia(query).matches;
  }
  return false;
};
var useBreakpoint = (query) => {
  const [matches, setMatches] = (0, import_react40.useState)(getMatches(query));
  const handleChange = (0, import_react40.useCallback)(() => {
    setMatches(getMatches(query));
  }, [query]);
  (0, import_react40.useEffect)(() => {
    window.addEventListener("resize", handleChange);
    return () => {
      window.removeEventListener("resize", handleChange);
    };
  }, [query, handleChange]);
  return matches;
};
var wellKnownSymbol$3 = wellKnownSymbol$a;
var TO_STRING_TAG$1 = wellKnownSymbol$3("toStringTag");
var test = {};
test[TO_STRING_TAG$1] = "z";
var toStringTagSupport = String(test) === "[object z]";
var TO_STRING_TAG_SUPPORT = toStringTagSupport;
var isCallable$1 = isCallable$g;
var classofRaw$1 = classofRaw$2;
var wellKnownSymbol$2 = wellKnownSymbol$a;
var TO_STRING_TAG = wellKnownSymbol$2("toStringTag");
var $Object = Object;
var CORRECT_ARGUMENTS = classofRaw$1(function() {
  return arguments;
}()) == "Arguments";
var tryGet = function(it, key) {
  try {
    return it[key];
  } catch (error) {
  }
};
var classof$2 = TO_STRING_TAG_SUPPORT ? classofRaw$1 : function(it) {
  var O, tag, result;
  return it === void 0 ? "Undefined" : it === null ? "Null" : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == "string" ? tag : CORRECT_ARGUMENTS ? classofRaw$1(O) : (result = classofRaw$1(O)) == "Object" && isCallable$1(O.callee) ? "Arguments" : result;
};
var classof$1 = classof$2;
var $String = String;
var toString$3 = function(argument) {
  if (classof$1(argument) === "Symbol")
    throw TypeError("Cannot convert a Symbol value to a string");
  return $String(argument);
};
var makeBuiltIn = makeBuiltIn$3.exports;
var defineProperty3 = objectDefineProperty;
var defineBuiltInAccessor$1 = function(target, name, descriptor) {
  if (descriptor.get)
    makeBuiltIn(descriptor.get, name, { getter: true });
  if (descriptor.set)
    makeBuiltIn(descriptor.set, name, { setter: true });
  return defineProperty3.f(target, name, descriptor);
};
var $$2 = _export;
var DESCRIPTORS = descriptors;
var global$1 = global$d;
var uncurryThis$3 = functionUncurryThis;
var hasOwn2 = hasOwnProperty_1;
var isCallable = isCallable$g;
var isPrototypeOf = objectIsPrototypeOf;
var toString$2 = toString$3;
var defineBuiltInAccessor = defineBuiltInAccessor$1;
var copyConstructorProperties = copyConstructorProperties$2;
var NativeSymbol = global$1.Symbol;
var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;
if (DESCRIPTORS && isCallable(NativeSymbol) && (!("description" in SymbolPrototype) || NativeSymbol().description !== void 0)) {
  EmptyStringDescriptionStore = {};
  SymbolWrapper = function Symbol2() {
    var description = arguments.length < 1 || arguments[0] === void 0 ? void 0 : toString$2(arguments[0]);
    var result = isPrototypeOf(SymbolPrototype, this) ? new NativeSymbol(description) : description === void 0 ? NativeSymbol() : NativeSymbol(description);
    if (description === "")
      EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  SymbolWrapper.prototype = SymbolPrototype;
  SymbolPrototype.constructor = SymbolWrapper;
  NATIVE_SYMBOL = String(NativeSymbol("test")) == "Symbol(test)";
  thisSymbolValue = uncurryThis$3(SymbolPrototype.valueOf);
  symbolDescriptiveString = uncurryThis$3(SymbolPrototype.toString);
  regexp = /^Symbol\((.*)\)[^)]+$/;
  replace$1 = uncurryThis$3("".replace);
  stringSlice$1 = uncurryThis$3("".slice);
  defineBuiltInAccessor(SymbolPrototype, "description", {
    configurable: true,
    get: function description() {
      var symbol = thisSymbolValue(this);
      if (hasOwn2(EmptyStringDescriptionStore, symbol))
        return "";
      var string = symbolDescriptiveString(symbol);
      var desc = NATIVE_SYMBOL ? stringSlice$1(string, 7, -1) : replace$1(string, regexp, "$1");
      return desc === "" ? void 0 : desc;
    }
  });
  $$2({ global: true, constructor: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}
var EmptyStringDescriptionStore;
var SymbolWrapper;
var NATIVE_SYMBOL;
var thisSymbolValue;
var symbolDescriptiveString;
var regexp;
var replace$1;
var stringSlice$1;
var primary = {
  step1: amber.amber1,
  step2: amber.amber2,
  step3: amber.amber3,
  step4: amber.amber4,
  step5: amber.amber5,
  step6: amber.amber6,
  step7: amber.amber7,
  step8: amber.amber8,
  step9: amber.amber9,
  step10: amber.amber10,
  step11: amber.amber11,
  step12: amber.amber12
};
var primaryA = {
  step1: amberA.amberA1,
  step2: amberA.amberA2,
  step3: amberA.amberA3,
  step4: amberA.amberA4,
  step5: amberA.amberA5,
  step6: amberA.amberA6,
  step7: amberA.amberA7,
  step8: amberA.amberA8,
  step9: amberA.amberA9,
  step10: amberA.amberA10,
  step11: amberA.amberA11,
  step12: amberA.amberA12
};
var primaryDark = {
  step1: amber$1.amber1,
  step2: amber$1.amber2,
  step3: amber$1.amber3,
  step4: amber$1.amber4,
  step5: amber$1.amber5,
  step6: amber$1.amber6,
  step7: amber$1.amber7,
  step8: amber$1.amber8,
  step9: amber$1.amber9,
  step10: amber$1.amber10,
  step11: amber$1.amber11,
  step12: amber$1.amber12
};
var primaryDarkA = {
  step1: amberA$1.amberA1,
  step2: amberA$1.amberA2,
  step3: amberA$1.amberA3,
  step4: amberA$1.amberA4,
  step5: amberA$1.amberA5,
  step6: amberA$1.amberA6,
  step7: amberA$1.amberA7,
  step8: amberA$1.amberA8,
  step9: amberA$1.amberA9,
  step10: amberA$1.amberA10,
  step11: amberA$1.amberA11,
  step12: amberA$1.amberA12
};
var secondary = {
  step1: indigo.indigo1,
  step2: indigo.indigo2,
  step3: indigo.indigo3,
  step4: indigo.indigo4,
  step5: indigo.indigo5,
  step6: indigo.indigo6,
  step7: indigo.indigo7,
  step8: indigo.indigo8,
  step9: indigo.indigo9,
  step10: indigo.indigo10,
  step11: indigo.indigo11,
  step12: indigo.indigo12
};
var secondaryA = {
  step1: indigoA.indigoA1,
  step2: indigoA.indigoA2,
  step3: indigoA.indigoA3,
  step4: indigoA.indigoA4,
  step5: indigoA.indigoA5,
  step6: indigoA.indigoA6,
  step7: indigoA.indigoA7,
  step8: indigoA.indigoA8,
  step9: indigoA.indigoA9,
  step10: indigoA.indigoA10,
  step11: indigoA.indigoA11,
  step12: indigoA.indigoA12
};
var secondaryDark = {
  step1: indigo$1.indigo1,
  step2: indigo$1.indigo2,
  step3: indigo$1.indigo3,
  step4: indigo$1.indigo4,
  step5: indigo$1.indigo5,
  step6: indigo$1.indigo6,
  step7: indigo$1.indigo7,
  step8: indigo$1.indigo8,
  step9: indigo$1.indigo9,
  step10: indigo$1.indigo10,
  step11: indigo$1.indigo11,
  step12: indigo$1.indigo12
};
var secondaryDarkA = {
  step1: indigoA$1.indigoA1,
  step2: indigoA$1.indigoA2,
  step3: indigoA$1.indigoA3,
  step4: indigoA$1.indigoA4,
  step5: indigoA$1.indigoA5,
  step6: indigoA$1.indigoA6,
  step7: indigoA$1.indigoA7,
  step8: indigoA$1.indigoA8,
  step9: indigoA$1.indigoA9,
  step10: indigoA$1.indigoA10,
  step11: indigoA$1.indigoA11,
  step12: indigoA$1.indigoA12
};
var neutral = {
  step1: slate.slate1,
  step2: slate.slate2,
  step3: slate.slate3,
  step4: slate.slate4,
  step5: slate.slate5,
  step6: slate.slate6,
  step7: slate.slate7,
  step8: slate.slate8,
  step9: slate.slate9,
  step10: slate.slate10,
  step11: slate.slate11,
  step12: slate.slate12
};
var neutralDark = {
  step1: slate$1.slate1,
  step2: slate$1.slate2,
  step3: slate$1.slate3,
  step4: slate$1.slate4,
  step5: slate$1.slate5,
  step6: slate$1.slate6,
  step7: slate$1.slate7,
  step8: slate$1.slate8,
  step9: slate$1.slate9,
  step10: slate$1.slate10,
  step11: slate$1.slate11,
  step12: slate$1.slate12
};
var info = {
  step1: blue.blue1,
  step2: blue.blue2,
  step3: blue.blue3,
  step4: blue.blue4,
  step5: blue.blue5,
  step6: blue.blue6,
  step7: blue.blue7,
  step8: blue.blue8,
  step9: blue.blue9,
  step10: blue.blue10,
  step11: blue.blue11,
  step12: blue.blue12
};
var infoDark = {
  step1: blue$1.blue1,
  step2: blue$1.blue2,
  step3: blue$1.blue3,
  step4: blue$1.blue4,
  step5: blue$1.blue5,
  step6: blue$1.blue6,
  step7: blue$1.blue7,
  step8: blue$1.blue8,
  step9: blue$1.blue9,
  step10: blue$1.blue10,
  step11: blue$1.blue11,
  step12: blue$1.blue12
};
var success = {
  step1: green.green1,
  step2: green.green2,
  step3: green.green3,
  step4: green.green4,
  step5: green.green5,
  step6: green.green6,
  step7: green.green7,
  step8: green.green8,
  step9: green.green9,
  step10: green.green10,
  step11: green.green11,
  step12: green.green12
};
var successDark = {
  step1: green$1.green1,
  step2: green$1.green2,
  step3: green$1.green3,
  step4: green$1.green4,
  step5: green$1.green5,
  step6: green$1.green6,
  step7: green$1.green7,
  step8: green$1.green8,
  step9: green$1.green9,
  step10: green$1.green10,
  step11: green$1.green11,
  step12: green$1.green12
};
var warning = {
  step1: orange.orange1,
  step2: orange.orange2,
  step3: orange.orange3,
  step4: orange.orange4,
  step5: orange.orange5,
  step6: orange.orange6,
  step7: orange.orange7,
  step8: orange.orange8,
  step9: orange.orange9,
  step10: orange.orange10,
  step11: orange.orange11,
  step12: orange.orange12
};
var warningDark = {
  step1: orange$1.orange1,
  step2: orange$1.orange2,
  step3: orange$1.orange3,
  step4: orange$1.orange4,
  step5: orange$1.orange5,
  step6: orange$1.orange6,
  step7: orange$1.orange7,
  step8: orange$1.orange8,
  step9: orange$1.orange9,
  step10: orange$1.orange10,
  step11: orange$1.orange11,
  step12: orange$1.orange12
};
var danger = {
  step1: red.red1,
  step2: red.red2,
  step3: red.red3,
  step4: red.red4,
  step5: red.red5,
  step6: red.red6,
  step7: red.red7,
  step8: red.red8,
  step9: red.red9,
  step10: red.red10,
  step11: red.red11,
  step12: red.red12
};
var dangerDark = {
  step1: red$1.red1,
  step2: red$1.red2,
  step3: red$1.red3,
  step4: red$1.red4,
  step5: red$1.red5,
  step6: red$1.red6,
  step7: red$1.red7,
  step8: red$1.red8,
  step9: red$1.red9,
  step10: red$1.red10,
  step11: red$1.red11,
  step12: red$1.red12
};
var primaryDarkBtn = {
  solid: {
    text: primaryDark.step1,
    bg: primaryDark.step9,
    border: primaryDark.step9,
    bgHover: primaryDark.step10,
    borderHover: primaryDark.step10,
    bgFocus: primaryDark.step9,
    borderFocus: primaryDark.step11,
    bgDisabled: primaryDark.step6,
    borderDisabled: primaryDark.step6
  },
  outline: {
    text: primaryDark.step9,
    border: primaryDark.step9,
    hover: primaryDark.step10,
    focus: primaryDark.step11,
    disabled: primaryDark.step6
  },
  ghost: {
    text: primaryDark.step10,
    bgHover: primaryDark.step3,
    borderFocus: primaryDark.step4,
    disabled: primaryDark.step8
  },
  link: {
    text: primaryDark.step9,
    hover: primaryDark.step10,
    focus: primaryDark.step11,
    disabled: primaryDark.step6
  }
};
var secondaryDarkBtn = {
  solid: {
    text: secondaryDark.step12,
    bg: secondaryDark.step6,
    border: secondaryDark.step6,
    bgHover: secondaryDark.step7,
    borderHover: secondaryDark.step7,
    bgFocus: secondaryDark.step6,
    borderFocus: secondaryDark.step8,
    bgDisabled: secondaryDark.step3,
    borderDisabled: secondaryDark.step3
  },
  outline: {
    text: secondaryDark.step9,
    border: secondaryDark.step9,
    hover: secondaryDark.step10,
    focus: secondaryDark.step11,
    disabled: secondaryDark.step6
  },
  ghost: {
    text: secondaryDark.step10,
    bgHover: secondaryDark.step3,
    borderFocus: secondaryDark.step4,
    disabled: secondaryDark.step8
  },
  link: {
    text: secondaryDark.step9,
    hover: secondaryDark.step10,
    focus: secondaryDark.step11,
    disabled: secondaryDark.step6
  }
};
var successDarkBtn = {
  solid: {
    text: successDark.step1,
    bg: successDark.step9,
    border: successDark.step9,
    bgHover: successDark.step10,
    borderHover: successDark.step10,
    bgFocus: successDark.step9,
    borderFocus: successDark.step11,
    bgDisabled: successDark.step6,
    borderDisabled: successDark.step6
  },
  outline: {
    text: successDark.step9,
    border: successDark.step9,
    hover: successDark.step10,
    focus: successDark.step11,
    disabled: successDark.step6
  },
  ghost: {
    text: successDark.step10,
    bgHover: successDark.step3,
    borderFocus: successDark.step4,
    disabled: successDark.step8
  },
  link: {
    text: successDark.step9,
    hover: successDark.step10,
    focus: successDark.step11,
    disabled: successDark.step6
  }
};
var warningDarkBtn = {
  solid: {
    text: warningDark.step1,
    bg: warningDark.step9,
    border: warningDark.step9,
    bgHover: warningDark.step10,
    borderHover: warningDark.step10,
    bgFocus: warningDark.step9,
    borderFocus: warningDark.step11,
    bgDisabled: warningDark.step6,
    borderDisabled: warningDark.step6
  },
  outline: {
    text: warningDark.step9,
    border: warningDark.step9,
    hover: warningDark.step10,
    focus: warningDark.step11,
    disabled: warningDark.step6
  },
  ghost: {
    text: warningDark.step10,
    bgHover: warningDark.step3,
    borderFocus: warningDark.step4,
    disabled: warningDark.step8
  },
  link: {
    text: warningDark.step9,
    hover: warningDark.step10,
    focus: warningDark.step11,
    disabled: warningDark.step6
  }
};
var dangerDarkBtn = {
  solid: {
    text: dangerDark.step1,
    bg: dangerDark.step9,
    border: dangerDark.step9,
    bgHover: dangerDark.step10,
    borderHover: dangerDark.step10,
    bgFocus: dangerDark.step9,
    borderFocus: dangerDark.step11,
    bgDisabled: dangerDark.step6,
    borderDisabled: dangerDark.step6
  },
  outline: {
    text: dangerDark.step9,
    border: dangerDark.step9,
    hover: dangerDark.step10,
    focus: dangerDark.step11,
    disabled: dangerDark.step6
  },
  ghost: {
    text: dangerDark.step10,
    bgHover: dangerDark.step3,
    borderFocus: dangerDark.step4,
    disabled: dangerDark.step8
  },
  link: {
    text: dangerDark.step9,
    hover: dangerDark.step10,
    focus: dangerDark.step11,
    disabled: dangerDark.step6
  }
};
var primaryBtn = {
  solid: {
    text: primary.step1,
    bg: primary.step9,
    border: primary.step9,
    bgHover: primary.step10,
    borderHover: primary.step10,
    bgFocus: primary.step9,
    borderFocus: primary.step11,
    bgDisabled: primary.step6,
    borderDisabled: primary.step6
  },
  outline: {
    text: primary.step9,
    border: primary.step9,
    hover: primary.step10,
    focus: primary.step11,
    disabled: primary.step6
  },
  ghost: {
    text: primary.step10,
    bgHover: primary.step3,
    borderFocus: primary.step4,
    disabled: primary.step8
  },
  link: {
    text: primary.step9,
    hover: primary.step10,
    focus: primary.step11,
    disabled: primary.step6
  }
};
var secondaryBtn = {
  solid: {
    text: secondary.step12,
    bg: secondary.step6,
    border: secondary.step6,
    bgHover: secondary.step7,
    borderHover: secondary.step7,
    bgFocus: secondary.step6,
    borderFocus: secondary.step8,
    bgDisabled: secondary.step3,
    borderDisabled: secondary.step3
  },
  outline: {
    text: secondary.step9,
    border: secondary.step9,
    hover: secondary.step10,
    focus: secondary.step11,
    disabled: secondary.step6
  },
  ghost: {
    text: secondary.step10,
    bgHover: secondary.step3,
    borderFocus: secondary.step4,
    disabled: secondary.step8
  },
  link: {
    text: secondary.step9,
    hover: secondary.step10,
    focus: secondary.step11,
    disabled: secondary.step6
  }
};
var successBtn = {
  solid: {
    text: success.step1,
    bg: success.step9,
    border: success.step9,
    bgHover: success.step10,
    borderHover: success.step10,
    bgFocus: success.step9,
    borderFocus: success.step11,
    bgDisabled: success.step6,
    borderDisabled: success.step6
  },
  outline: {
    text: success.step9,
    border: success.step9,
    hover: success.step10,
    focus: success.step11,
    disabled: success.step6
  },
  ghost: {
    text: success.step10,
    bgHover: success.step3,
    borderFocus: success.step4,
    disabled: success.step8
  },
  link: {
    text: success.step9,
    hover: success.step10,
    focus: success.step11,
    disabled: success.step6
  }
};
var warningBtn = {
  solid: {
    text: warning.step1,
    bg: warning.step9,
    border: warning.step9,
    bgHover: warning.step10,
    borderHover: warning.step10,
    bgFocus: warning.step9,
    borderFocus: warning.step11,
    bgDisabled: warning.step6,
    borderDisabled: warning.step6
  },
  outline: {
    text: warning.step9,
    border: warning.step9,
    hover: warning.step10,
    focus: warning.step11,
    disabled: warning.step6
  },
  ghost: {
    text: warning.step10,
    bgHover: warning.step3,
    borderFocus: warning.step4,
    disabled: warning.step8
  },
  link: {
    text: warning.step9,
    hover: warning.step10,
    focus: warning.step11,
    disabled: warning.step6
  }
};
var dangerBtn = {
  solid: {
    text: danger.step1,
    bg: danger.step9,
    border: danger.step9,
    bgHover: danger.step10,
    borderHover: danger.step10,
    bgFocus: danger.step9,
    borderFocus: danger.step11,
    bgDisabled: danger.step6,
    borderDisabled: danger.step6
  },
  outline: {
    text: danger.step9,
    border: danger.step9,
    hover: danger.step10,
    focus: danger.step11,
    disabled: danger.step6
  },
  ghost: {
    text: danger.step10,
    bgHover: danger.step3,
    borderFocus: danger.step4,
    disabled: danger.step8
  },
  link: {
    text: danger.step9,
    hover: danger.step10,
    focus: danger.step11,
    disabled: danger.step6
  }
};
var font = {
  family: {
    header: `'Mulish', sans-serif`,
    body: `'Mulish', sans-serif`,
    data: `'Space Mono', monospace`
  },
  size: {
    xs: "1.2rem",
    sm: "1.4rem",
    md: "1.6rem",
    lg: "2rem",
    xl: "2.4rem",
    xxl: "3.2rem",
    xxxl: "4rem",
    xxxxl: "4.8rem"
  },
  weight: {
    extraLight: 200,
    light: 300,
    reg: 400,
    med: 500,
    bold: 700,
    black: 900
  },
  lineHeight: "150%",
  letterSpacing: "1.5px"
};
var _ = (t) => t;
var _t;
var GlobalStyles = at(_t || (_t = _`
  ${0}

  * {
    &,
    &::before,
    &::after {
      box-sizing: border-box;
    }
  }
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;

  #root {
     min-height: 100%;
     height: 100%;
     margin: 0px;
     padding: 0px;
  }

  h1, h2, h3, h4, h5, h6, p{
    margin: 0;
    line-height: ${0};
    letter-spacing: ${0};
  }

  html {
    font-size: 10px;
    background-color: ${0};
  }

  body {
    font-family: ${0};
    color: ${0}
  }

`), normalize(), font.lineHeight, font.letterSpacing, ({
  theme
}) => theme.rootBgColor, ({
  theme
}) => theme.font.family.body, ({
  theme
}) => theme.rootFontColor);
var breakpoints = {
  xs: "480px",
  sm: "768px",
  md: "1024px",
  lg: "1250px"
};
var widthQuery = {
  xs: `(max-width: ${breakpoints.xs})`,
  sm: `(max-width: ${breakpoints.sm})`,
  md: `(max-width: ${breakpoints.md})`,
  lg: `(max-width: ${breakpoints.lg})`
};
var border = {
  radius: "0.4rem"
};
var defaultDarkTheme = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({
  themeName: "dark",
  font,
  transparent: "transparent",
  rootBgColor: neutralDark.step1,
  rootFontColor: secondaryDark.step12,
  primary: Object.assign({}, primaryDark),
  primaryA: Object.assign({}, primaryDarkA),
  secondary: Object.assign({}, secondaryDark),
  secondaryA: Object.assign({}, secondaryDarkA),
  success: Object.assign({}, successDark),
  warning: Object.assign({}, warningDark),
  danger: Object.assign({}, dangerDark),
  info: Object.assign({}, infoDark),
  neutral: Object.assign({}, neutralDark)
}, blue$1), violet$1), pink$1), green$1), yellow$1), red$1), {
  field: {
    fontWeight: font.weight.reg,
    fontSize: font.size.md,
    inputFont: font.family.body,
    labelFont: font.family.header,
    size: {
      md: "28rem",
      lg: "52rem",
      full: "100%"
    },
    radius: border.radius,
    transition: "0.2s all ease-in-out"
  },
  avatar: {
    bg: neutralDark.step9
  },
  button: {
    primary: primaryDarkBtn,
    secondary: secondaryDarkBtn,
    success: successDarkBtn,
    warning: warningDarkBtn,
    danger: dangerDarkBtn,
    radius: border.radius
  },
  card: {
    bg: secondaryDark.step2,
    border: secondaryDark.step5,
    radius: "0.8rem"
  },
  checkbox: {
    bg: secondaryDark.step3,
    border: secondaryDark.step6,
    radius: "1px",
    hover: {
      bg: secondaryDark.step4,
      border: secondaryDark.step6
    },
    focus: {
      bg: secondaryDark.step3,
      border: secondaryDark.step7
    },
    disabled: {
      bg: neutralDark.step2,
      border: neutralDark.step6
    },
    active: {
      bg: primaryDark.step3,
      border: primaryDark.step9,
      hover: {
        bg: primaryDark.step4,
        border: primaryDark.step9
      },
      focus: {
        bg: primaryDark.step3,
        border: primaryDark.step10
      },
      disabled: {
        bg: neutralDark.step2,
        border: neutralDark.step6
      }
    },
    indicator: {
      color: primaryDark.step9,
      disabled: {
        color: neutralDark.step2
      }
    }
  },
  input: {
    bg: secondaryDark.step3,
    border: secondaryDark.step3,
    color: secondaryDark.step12,
    placeholder: secondaryDark.step11,
    hover: {
      bg: secondaryDark.step4,
      border: secondaryDark.step4
    },
    focus: {
      bg: secondaryDark.step3,
      border: secondaryDark.step6
    },
    disabled: {
      bg: neutralDark.step5,
      border: neutralDark.step5,
      color: neutralDark.step10,
      placeholder: neutralDark.step10
    },
    success: {
      border: successDark.step9
    },
    warning: {
      border: warningDark.step9
    },
    error: {
      border: dangerDark.step9
    },
    icon: {
      color: secondaryDark.step11
    }
  },
  link: {
    color: primaryDark.step10
  },
  loading: {
    primary: {
      color: primaryDark.step11,
      bg: primaryDark.step8
    },
    secondary: {
      color: secondaryDark.step11,
      bg: secondaryDark.step8
    },
    success: {
      color: successDark.step11,
      bg: successDark.step8
    },
    warning: {
      color: warningDark.step11,
      bg: warningDark.step8
    },
    danger: {
      color: dangerDark.step11,
      bg: dangerDark.step8
    }
  },
  radio: {
    bg: secondaryDark.step3,
    border: secondaryDark.step6,
    hover: {
      bg: secondaryDark.step4,
      border: secondaryDark.step6
    },
    focus: {
      bg: secondaryDark.step3,
      border: secondaryDark.step7
    },
    disabled: {
      bg: neutralDark.step2,
      border: neutralDark.step6
    },
    active: {
      bg: primaryDark.step9,
      border: primaryDark.step9,
      hover: {
        bg: primaryDark.step10,
        border: primaryDark.step10
      },
      focus: {
        bg: primaryDark.step9,
        border: primaryDark.step11
      },
      disabled: {
        bg: neutralDark.step9,
        border: neutralDark.step9
      }
    },
    indicator: {
      bg: primaryDark.step3,
      disabled: {
        bg: neutralDark.step1
      }
    }
  },
  select: {
    bg: secondaryDark.step2,
    border: "transparent",
    radius: border.radius,
    color: secondaryDark.step11,
    hover: {
      bg: secondaryDark.step4,
      border: secondaryDark.step4
    },
    focus: {
      bg: secondaryDark.step3,
      border: secondaryDark.step6
    },
    disabled: {
      bg: neutralDark.step5,
      color: neutralDark.step5,
      placeholder: neutralDark.step10
    },
    success: {
      border: successDark.step9
    },
    warning: {
      border: warningDark.step9
    },
    error: {
      border: dangerDark.step9
    },
    option: {
      bg: secondaryDark.step3,
      color: secondaryDark.step11
    },
    icon: {
      color: secondaryDark.step11
    }
  },
  switch: {
    base: {
      bg: secondaryDark.step6,
      disabled: {
        bg: neutralDark.step6
      },
      active: {
        bg: primaryDark.step6,
        disabled: {
          bg: neutralDark.step6
        }
      }
    },
    indicator: {
      bg: secondaryDark.step9,
      border: secondaryDark.step9,
      hover: {
        bg: secondaryDark.step10,
        border: secondaryDark.step10
      },
      focus: {
        bg: secondaryDark.step9,
        border: secondaryDark.step11
      },
      disabled: {
        bg: neutralDark.step9,
        border: neutralDark.step9
      },
      active: {
        bg: primaryDark.step9,
        border: primaryDark.step9,
        hover: {
          bg: primaryDark.step10,
          border: primaryDark.step10
        },
        focus: {
          bg: primaryDark.step9,
          border: primaryDark.step11
        },
        disabled: {
          bg: neutralDark.step9,
          border: neutralDark.step9
        }
      }
    },
    label: {
      color: secondaryDark.step12,
      disabled: {
        color: neutralDark.step9
      }
    }
  },
  tag: {
    radius: border.radius
  },
  textarea: {
    bg: secondaryDark.step3,
    border: secondaryDark.step1,
    color: secondaryDark.step12,
    placeholder: secondaryDark.step11,
    hover: {
      bg: secondaryDark.step4,
      border: secondaryDark.step4
    },
    focus: {
      bg: secondaryDark.step3,
      border: secondaryDark.step6
    },
    disabled: {
      bg: neutralDark.step5,
      border: neutralDark.step5,
      placeholder: neutralDark.step10
    },
    success: {
      border: successDark.step9
    },
    warning: {
      border: warningDark.step9
    },
    error: {
      border: dangerDark.step9
    }
  },
  tooltip: {
    radius: border.radius,
    icon: {
      color: primaryDark.step9
    },
    content: {
      bg: secondaryDark.step6,
      color: secondaryDark.step12
    }
  },
  addressDisplay: {
    color: secondaryDark.step11,
    icon: {
      color: primaryDark.step10
    }
  },
  banner: {
    bg: infoDark.step9,
    border: infoDark.step9,
    color: secondaryDark.step12
  },
  collapsibleCard: {
    outer: {
      bg: secondaryDark.step2,
      border: secondaryDark.step5
    },
    inner: {
      bg: secondaryDarkA.step3,
      border: secondaryDarkA.step5
    },
    trigger: {
      color: primaryDark.step11,
      hover: {
        color: primaryDark.step10
      },
      focus: {
        color: primaryDark.step12
      }
    }
  },
  dialog: {
    radius: "8px",
    overlay: {
      bg: secondaryDarkA.step4
    },
    content: {
      bg: secondaryDark.step2,
      color: secondaryDark.step12
    }
  },
  dropdown: {
    content: {
      primary: {
        bg: primaryDark.step3
      },
      secondary: {
        bg: secondaryDark.step3
      }
    },
    item: {
      primary: {
        bg: primaryDark.step3
      },
      secondary: {
        bg: secondaryDark.step3
      },
      focus: {
        primary: {
          bg: primaryDark.step5
        },
        secondary: {
          bg: secondaryDark.step5
        }
      },
      highlight: {
        primary: {
          bg: primaryDark.step4
        },
        secondary: {
          bg: secondaryDark.step4
        }
      },
      disabled: {
        color: neutralDark.step10
      }
    },
    separator: {
      bg: secondaryDark.step12
    },
    link: {
      color: secondaryDark.step12,
      hover: {
        bg: secondaryDark.step4,
        border: secondaryDark.step4
      },
      disabled: {
        color: secondaryDark.step11
      }
    }
  },
  fieldAlert: {
    bg: primaryDark.step3,
    border: primaryDark.step6,
    radius: border.radius,
    warning: {
      bg: warningDark.step2,
      border: warningDark.step5,
      button: {
        bg: warningDark.step9,
        border: warningDark.step9,
        hover: {
          bg: warningDark.step9,
          border: warningDark.step9
        },
        active: {
          bg: warningDark.step9,
          border: warningDark.step9
        }
      }
    }
  },
  imageInput: {
    imageWrapper: {
      bg: secondaryDark.step2
    },
    cancelIcon: {
      color: secondaryDark.step6
    }
  },
  inputSelect: {
    bg: secondaryDark.step6,
    color: secondaryDark.step12,
    hover: {
      bg: secondaryDark.step7
    },
    focus: {
      bg: secondaryDark.step6
    },
    disabled: {
      bg: secondaryDark.step3
    },
    selectBox: {
      bg: primaryDark.step6
    }
  },
  navigationMenu: {
    root: {
      bg: secondaryDark.step2
    },
    content: {
      bg: secondaryDark.step4,
      border: secondaryDark.step3
    },
    baseItem: {
      color: secondaryDark.step9,
      hover: {
        bg: secondaryDark.step10
      },
      focus: {
        bg: secondaryDark.step11
      }
    },
    link: {
      active: {
        border: secondaryDark.step9,
        color: secondaryDark.step12
      }
    }
  },
  tabs: {
    links: {
      color: secondaryDark.step2
    },
    link: {
      color: secondaryDark.step9,
      hover: {
        color: secondaryDark.step10
      },
      active: {
        border: secondaryDark.step9
      }
    }
  },
  toast: {
    bg: secondaryDark.step3,
    border: secondaryDark.step5,
    radius: border.radius,
    success: {
      bg: successDark.step3,
      border: successDark.step7
    },
    warning: {
      bg: warningDark.step3,
      border: warningDark.step7
    },
    error: {
      bg: dangerDark.step3,
      border: dangerDark.step7
    },
    icon: {
      default: successDark.step9,
      success: successDark.step9,
      warning: warningDark.step9,
      error: dangerDark.step9
    }
  }
});
var defaultLightTheme = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({
  themeName: "light",
  font,
  border: {
    radius: border.radius
  },
  transparent: "transparent",
  rootBgColor: secondary.step1,
  rootFontColor: secondary.step12,
  primary: Object.assign({}, primary),
  primaryA: Object.assign({}, primaryA),
  secondary: Object.assign({}, secondary),
  secondaryA: Object.assign({}, secondaryA),
  success: Object.assign({}, success),
  warning: Object.assign({}, warning),
  danger: Object.assign({}, danger),
  info: Object.assign({}, info),
  neutral: Object.assign({}, neutral)
}, blue), violet), pink), green), yellow), red), {
  field: {
    fontWeight: font.weight.reg,
    fontSize: font.size.md,
    inputFont: font.family.body,
    labelFont: font.family.header,
    size: {
      md: "28rem",
      lg: "52rem",
      full: "100%"
    },
    radius: border.radius,
    transition: "0.2s all ease-in-out"
  },
  avatar: {
    bg: neutral.step9
  },
  button: {
    primary: primaryBtn,
    secondary: secondaryBtn,
    success: successBtn,
    warning: warningBtn,
    danger: dangerBtn,
    radius: border.radius
  },
  card: {
    bg: secondary.step2,
    border: secondary.step5,
    radius: "0.8rem"
  },
  checkbox: {
    bg: secondary.step3,
    border: secondary.step6,
    radius: border.radius,
    hover: {
      bg: secondary.step4,
      border: secondary.step6
    },
    focus: {
      bg: secondary.step3,
      border: secondary.step7
    },
    disabled: {
      bg: neutral.step2,
      border: neutral.step6
    },
    active: {
      bg: primary.step3,
      border: primary.step9,
      hover: {
        bg: primary.step4,
        border: primary.step9
      },
      focus: {
        bg: primary.step3,
        border: primary.step10
      },
      disabled: {
        bg: neutral.step2,
        border: neutral.step6
      }
    },
    indicator: {
      color: primary.step9,
      disabled: {
        color: neutral.step2
      }
    }
  },
  input: {
    bg: secondary.step3,
    border: secondary.step3,
    color: secondary.step12,
    placeholder: secondary.step11,
    hover: {
      bg: secondary.step4,
      border: secondary.step4
    },
    focus: {
      bg: secondary.step3,
      border: secondary.step6
    },
    disabled: {
      bg: neutral.step5,
      border: neutral.step5,
      color: neutral.step10,
      placeholder: neutral.step10
    },
    success: {
      border: success.step9
    },
    warning: {
      border: warning.step9
    },
    error: {
      border: danger.step9
    },
    icon: {
      color: secondary.step11
    }
  },
  link: {
    color: primary.step10
  },
  loading: {
    primary: {
      color: primary.step11,
      bg: primary.step8
    },
    secondary: {
      color: secondary.step11,
      bg: secondary.step8
    },
    success: {
      color: success.step11,
      bg: success.step8
    },
    warning: {
      color: warning.step11,
      bg: warning.step8
    },
    danger: {
      color: danger.step11,
      bg: danger.step8
    }
  },
  radio: {
    bg: secondary.step3,
    border: secondary.step6,
    hover: {
      bg: secondary.step4,
      border: secondary.step6
    },
    focus: {
      bg: secondary.step3,
      border: secondary.step7
    },
    disabled: {
      bg: neutral.step2,
      border: neutral.step6
    },
    active: {
      bg: primary.step9,
      border: primary.step9,
      hover: {
        bg: primary.step10,
        border: primary.step10
      },
      focus: {
        bg: primary.step9,
        border: primary.step11
      },
      disabled: {
        bg: neutral.step9,
        border: neutral.step9
      }
    },
    indicator: {
      bg: primary.step3,
      disabled: {
        bg: neutral.step1
      }
    }
  },
  select: {
    bg: secondary.step2,
    border: "transparent",
    radius: border.radius,
    color: secondary.step11,
    hover: {
      bg: secondary.step4,
      border: secondary.step4
    },
    focus: {
      bg: secondary.step3,
      border: secondary.step6
    },
    disabled: {
      bg: neutral.step5,
      color: neutral.step5,
      placeholder: neutral.step10
    },
    success: {
      border: success.step9
    },
    warning: {
      border: warning.step9
    },
    error: {
      border: danger.step9
    },
    option: {
      bg: secondary.step3,
      color: secondary.step11
    },
    icon: {
      color: secondary.step11
    }
  },
  switch: {
    base: {
      bg: secondary.step6,
      disabled: {
        bg: neutral.step6
      },
      active: {
        bg: primary.step6,
        disabled: {
          bg: neutral.step6
        }
      }
    },
    indicator: {
      bg: secondary.step9,
      border: secondary.step9,
      hover: {
        bg: secondary.step10,
        border: secondary.step10
      },
      focus: {
        bg: secondary.step9,
        border: secondary.step11
      },
      disabled: {
        bg: neutral.step9,
        border: neutral.step9
      },
      active: {
        bg: primary.step9,
        border: primary.step9,
        hover: {
          bg: primary.step10,
          border: primary.step10
        },
        focus: {
          bg: primary.step9,
          border: primary.step11
        },
        disabled: {
          bg: neutral.step9,
          border: neutral.step9
        }
      }
    },
    label: {
      color: secondary.step12,
      disabled: {
        color: neutral.step9
      }
    }
  },
  tag: {
    radius: border.radius
  },
  textarea: {
    bg: secondary.step3,
    border: secondary.step1,
    color: secondary.step12,
    placeholder: secondary.step11,
    hover: {
      bg: secondary.step4,
      border: secondary.step4
    },
    focus: {
      bg: secondary.step3,
      border: secondary.step6
    },
    disabled: {
      bg: neutral.step5,
      border: neutral.step5,
      placeholder: neutral.step10
    },
    success: {
      border: success.step9
    },
    warning: {
      border: warning.step9
    },
    error: {
      border: danger.step9
    }
  },
  tooltip: {
    radius: border.radius,
    icon: {
      color: primary.step9
    },
    content: {
      bg: secondary.step6,
      color: secondary.step12
    }
  },
  addressDisplay: {
    color: secondary.step11,
    icon: {
      color: primary.step10
    }
  },
  banner: {
    bg: info.step9,
    border: info.step9,
    color: secondary.step12
  },
  collapsibleCard: {
    outer: {
      bg: secondary.step2,
      border: secondary.step5
    },
    inner: {
      bg: secondary.step3,
      border: secondary.step5
    },
    trigger: {
      color: primary.step11,
      hover: {
        color: primary.step10
      },
      focus: {
        color: primary.step12
      }
    }
  },
  dialog: {
    radius: border.radius,
    overlay: {
      bg: secondaryA.step4
    },
    content: {
      bg: secondary.step2,
      color: secondary.step12
    }
  },
  dropdown: {
    content: {
      primary: {
        bg: primary.step3
      },
      secondary: {
        bg: secondary.step3
      }
    },
    item: {
      primary: {
        bg: primary.step3
      },
      secondary: {
        bg: secondary.step3
      },
      focus: {
        primary: {
          bg: primary.step5
        },
        secondary: {
          bg: secondary.step5
        }
      },
      highlight: {
        primary: {
          bg: primary.step4
        },
        secondary: {
          bg: secondary.step4
        }
      },
      disabled: {
        color: neutral.step10
      }
    },
    separator: {
      bg: secondary.step12
    },
    link: {
      color: secondary.step12,
      hover: {
        bg: secondary.step4,
        border: secondary.step4
      },
      disabled: {
        color: secondary.step11
      }
    }
  },
  fieldAlert: {
    bg: primary.step3,
    border: primary.step6,
    radius: border.radius,
    warning: {
      bg: warning.step2,
      border: warning.step5,
      button: {
        bg: warning.step9,
        border: warning.step9,
        hover: {
          bg: warning.step9,
          border: warning.step9
        },
        active: {
          bg: warning.step9,
          border: warning.step9
        }
      }
    }
  },
  imageInput: {
    imageWrapper: {
      bg: secondary.step2
    },
    cancelIcon: {
      color: secondary.step6
    }
  },
  inputSelect: {
    bg: secondary.step6,
    color: secondary.step12,
    hover: {
      bg: secondary.step7
    },
    focus: {
      bg: secondary.step6
    },
    disabled: {
      bg: secondary.step3
    },
    selectBox: {
      bg: primary.step6
    }
  },
  navigationMenu: {
    root: {
      bg: secondary.step2
    },
    content: {
      bg: secondary.step4,
      border: secondary.step3
    },
    baseItem: {
      color: secondary.step9,
      hover: {
        bg: secondary.step10
      },
      focus: {
        bg: secondary.step11
      }
    },
    link: {
      active: {
        border: secondary.step9,
        color: secondary.step12
      }
    }
  },
  tabs: {
    links: {
      color: secondary.step2
    },
    link: {
      color: secondary.step9,
      hover: {
        color: secondary.step10
      },
      active: {
        border: secondary.step9
      }
    }
  },
  toast: {
    bg: secondary.step3,
    border: secondary.step5,
    radius: border.radius,
    success: {
      bg: success.step3,
      border: success.step7
    },
    warning: {
      bg: warning.step3,
      border: warning.step7
    },
    error: {
      bg: danger.step3,
      border: danger.step7
    },
    icon: {
      default: success.step9,
      success: success.step9,
      warning: warning.step9,
      error: danger.step9
    }
  }
});
function styleInject(css, ref) {
  if (ref === void 0)
    ref = {};
  var insertAt = ref.insertAt;
  if (!css || typeof document === "undefined") {
    return;
  }
  var head = document.head || document.getElementsByTagName("head")[0];
  var style = document.createElement("style");
  style.type = "text/css";
  style.setAttribute("nonce", "cm1vaw==");
  if (insertAt === "top") {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }
  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}
var css_248z = "@import url('https://fonts.googleapis.com/css2?family=Mulish:wght@300;400;500;700;900&family=Space+Mono:wght@400;700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Space+Mono:ital,wght@0,400;0,700;1,400;1,700&display=swap');\n";
styleInject(css_248z);
var Provider = $054eb8030ebde76e$export$2881499e37b75b9a;
var Title = $054eb8030ebde76e$export$f99233281efd08a0;
var Description = $054eb8030ebde76e$export$393edc798c47379d;
var Close = $054eb8030ebde76e$export$f39c2d165cd861fe;
var VIEWPORT_PADDING = 25;
var hide2 = ct(["0%{opacity:1};100%{opacity:0};"]);
var slideIn = ct(["from{transform:translateX(calc(100% + ", "px))};to{transform:'translateX(0)'};"], VIEWPORT_PADDING);
var swipeOut = ct({
  from: {
    transform: "translateX(var(--radix-toast-swipe-end-x))"
  },
  to: {
    transform: `translateX(calc(100% + ${VIEWPORT_PADDING}px))`
  }
});
var Viewport$1 = st($054eb8030ebde76e$export$d5c6c08dc2d3ca7).withConfig({
  displayName: "Toaststyles__Viewport",
  componentId: "sc-1vuovxk-0"
})(["position:fixed;bottom:0;right:0;display:flex;flex-direction:column;padding:20px;gap:10px;width:395px;max-width:90vw;margin:0;list-style:none;z-index:2147483647;outline:none;"]);
var Root$2 = st($054eb8030ebde76e$export$be92b6f5f03c0fe9).withConfig({
  displayName: "Toaststyles__Root",
  componentId: "sc-1vuovxk-1"
})(["display:flex;flex-direction:column;background-color:", ";border:1px solid ", ";border-radius:", ";height:auto;padding:2rem;width:auto;&.success{background-color:", ";border:0.1rem solid ", ";}&.warning{background-color:", ";border:0.1rem solid ", ";}&.error{background-color:", ";border:0.1rem solid ", ";}@media (prefers-reduced-motion:no-preference){&[data-state='open']{animation:", " 150ms cubic-bezier(0.16,1,0.3,1);}&[data-state='closed']{animation:", " 100ms ease-in forwards;}&[data-swipe='move']{transform:'translateX(var(--radix-toast-swipe-move-x))';}&[data-swipe='cancel']{transform:'translateX(0)';transition:'transform 200ms ease-out';}&[data-swipe='end']{animation:", " 100ms ease-out forwards;}}"], ({
  theme
}) => theme.secondary.step3, ({
  theme
}) => theme.secondary.step5, ({
  theme
}) => theme.toast.radius, ({
  theme
}) => theme.success.step3, ({
  theme
}) => theme.success.step7, ({
  theme
}) => theme.warning.step3, ({
  theme
}) => theme.warning.step7, ({
  theme
}) => theme.danger.step3, ({
  theme
}) => theme.danger.step7, slideIn, hide2, swipeOut);
var HeaderContainer$1 = st.div.withConfig({
  displayName: "Toaststyles__HeaderContainer",
  componentId: "sc-1vuovxk-2"
})(["display:flex;"]);
var Icon = st.span.withConfig({
  displayName: "Toaststyles__Icon",
  componentId: "sc-1vuovxk-3"
})(["color:", ";font-size:24px;margin-right:1rem;"], ({
  theme,
  $iconType
}) => theme.toast.icon[$iconType]);
var CopyContainer = st.div.withConfig({
  displayName: "Toaststyles__CopyContainer",
  componentId: "sc-1vuovxk-4"
})(["display:block;width:100%;"]);
var Action = st($054eb8030ebde76e$export$e19cd5f9376f8cee).withConfig({
  displayName: "Toaststyles__Action",
  componentId: "sc-1vuovxk-5"
})(["display:flex;justify-content:space-between;margin-top:20px;"]);
var CloseIcon$1 = st.div.withConfig({
  displayName: "Toaststyles__CloseIcon",
  componentId: "sc-1vuovxk-6"
})(["cursor:pointer;font-size:17px;"]);
var ToastProvider = Provider;
var Toast = (props) => {
  const {
    title,
    description,
    type,
    defaultOpen,
    open: open2,
    onOpenChange,
    duration,
    label,
    hotkey,
    toastType = "default",
    ariaLabelClose = "Close",
    toastLinks
  } = props;
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {
    children: [(0, import_jsx_runtime.jsxs)(Root$2, Object.assign({
      type,
      open: open2,
      duration,
      onOpenChange,
      defaultOpen,
      className: toastType
    }, {
      children: [(0, import_jsx_runtime.jsxs)(HeaderContainer$1, {
        children: [getEnumIcons(toastType), (0, import_jsx_runtime.jsxs)(CopyContainer, {
          children: [(0, import_jsx_runtime.jsx)(Title, Object.assign({
            asChild: true
          }, {
            children: (0, import_jsx_runtime.jsx)(ParSm, {
              children: title
            })
          })), description && (0, import_jsx_runtime.jsx)(Description, Object.assign({
            asChild: true
          }, {
            children: (0, import_jsx_runtime.jsx)(ParSm, {
              children: description
            })
          }))]
        }), (0, import_jsx_runtime.jsx)(Close, Object.assign({
          asChild: true,
          "aria-label": ariaLabelClose
        }, {
          children: (0, import_jsx_runtime.jsx)(CloseIcon$1, {
            children: (0, import_jsx_runtime.jsx)(import_ri.RiCloseFill, {
              "aria-hidden": true
            })
          })
        }))]
      }), toastLinks && (0, import_jsx_runtime.jsx)(ToastLinks, Object.assign({}, toastLinks))]
    })), (0, import_jsx_runtime.jsx)(Viewport$1, {
      label,
      hotkey
    })]
  });
};
var ToastLinks = ({
  leftLink,
  rightLink,
  actionAltText
}) => {
  return (0, import_jsx_runtime.jsx)(Action, Object.assign({
    asChild: true,
    altText: actionAltText || "Related Link(s)"
  }, {
    children: (0, import_jsx_runtime.jsxs)("div", {
      children: [leftLink && (0, import_jsx_runtime.jsx)(Link$1, Object.assign({
        href: leftLink.path
      }, {
        children: leftLink.text
      })), rightLink && (0, import_jsx_runtime.jsx)(Link$1, Object.assign({
        href: rightLink.path
      }, {
        children: rightLink.text
      }))]
    })
  }));
};
var EnumIconsObject = {
  default: (0, import_jsx_runtime.jsx)(import_ri.RiCheckboxCircleFill, {}),
  success: (0, import_jsx_runtime.jsx)(import_ri.RiCheckboxCircleFill, {}),
  warning: (0, import_jsx_runtime.jsx)(import_ri.RiErrorWarningFill, {}),
  error: (0, import_jsx_runtime.jsx)(import_ri.RiCloseCircleFill, {})
};
function getEnumIcons(toastType) {
  return (0, import_jsx_runtime.jsx)(Icon, Object.assign({
    "$iconType": toastType
  }, {
    children: EnumIconsObject[toastType]
  }));
}
var HausThemeContext = (0, import_react40.createContext)({
  theme: defaultDarkTheme,
  setTheme: () => null,
  toggleLightDark: () => void 0,
  setToast: () => void 0
});
var DEFAULT_TOAST_DURATION = 6e3;
var mergeThemeProperties = (theme, overrides) => Object.assign(Object.assign({}, theme), overrides);
var HausThemeProvider = ({
  children,
  defaultDark: _defaultDark = defaultDarkTheme,
  defaultLight: _defaultLight = defaultLightTheme,
  startDark: _startDark = true,
  themeOverrides
}) => {
  const [theme, setTheme] = (0, import_react40.useState)(mergeThemeProperties(_startDark ? _defaultDark : _defaultLight, themeOverrides));
  const [toast, setToast] = (0, import_react40.useState)(null);
  (0, import_react40.useEffect)(() => {
    setTheme(mergeThemeProperties(_startDark ? _defaultDark : _defaultLight, themeOverrides));
  }, [_startDark, _defaultDark, _defaultLight, themeOverrides]);
  const toggleLightDark = () => {
    setTheme((prevState) => mergeThemeProperties(prevState.themeName === _defaultDark.themeName ? _defaultLight : _defaultDark, themeOverrides));
  };
  const handleOpenChange = (open2) => {
    if (!open2) {
      setToast(null);
    }
  };
  return (0, import_jsx_runtime.jsx)(HausThemeContext.Provider, Object.assign({
    value: {
      theme,
      setTheme,
      toggleLightDark,
      setToast
    }
  }, {
    children: (0, import_jsx_runtime.jsx)(Xe, Object.assign({
      theme
    }, {
      children: (0, import_jsx_runtime.jsx)(ToastProvider, Object.assign({
        duration: (toast === null || toast === void 0 ? void 0 : toast.duration) || DEFAULT_TOAST_DURATION
      }, {
        children: (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {
          children: [toast && (0, import_jsx_runtime.jsx)(Toast, Object.assign({}, toast, {
            onOpenChange: handleOpenChange
          })), children, (0, import_jsx_runtime.jsx)(GlobalStyles, {
            theme
          })]
        })
      }))
    }))
  }));
};
var useToast = () => {
  const {
    setToast
  } = (0, import_react40.useContext)(HausThemeContext);
  const defaultToast = ({
    title,
    description
  }) => {
    setToast({
      title,
      description,
      toastType: "default"
    });
  };
  const successToast = ({
    title,
    description
  }) => {
    setToast({
      title,
      description,
      toastType: "success"
    });
  };
  const warningToast = ({
    title,
    description
  }) => {
    setToast({
      title,
      description,
      toastType: "warning"
    });
  };
  const errorToast = ({
    title,
    description
  }) => {
    setToast({
      title,
      description,
      toastType: "error"
    });
  };
  return {
    setToast,
    defaultToast,
    successToast,
    warningToast,
    errorToast
  };
};
var classofRaw = classofRaw$2;
var uncurryThis$2 = functionUncurryThis;
var functionUncurryThisClause = function(fn) {
  if (classofRaw(fn) === "Function")
    return uncurryThis$2(fn);
};
var isObject2 = isObject$7;
var classof = classofRaw$2;
var wellKnownSymbol$1 = wellKnownSymbol$a;
var MATCH$1 = wellKnownSymbol$1("match");
var isRegexp = function(it) {
  var isRegExp2;
  return isObject2(it) && ((isRegExp2 = it[MATCH$1]) !== void 0 ? !!isRegExp2 : classof(it) == "RegExp");
};
var isRegExp = isRegexp;
var $TypeError = TypeError;
var notARegexp = function(it) {
  if (isRegExp(it)) {
    throw $TypeError("The method doesn't accept regular expressions");
  }
  return it;
};
var wellKnownSymbol = wellKnownSymbol$a;
var MATCH = wellKnownSymbol("match");
var correctIsRegexpLogic = function(METHOD_NAME) {
  var regexp = /./;
  try {
    "/./"[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH] = false;
      return "/./"[METHOD_NAME](regexp);
    } catch (error2) {
    }
  }
  return false;
};
var $$1 = _export;
var uncurryThis$1 = functionUncurryThisClause;
var getOwnPropertyDescriptor2 = objectGetOwnPropertyDescriptor.f;
var toLength = toLength$2;
var toString$1 = toString$3;
var notARegExp = notARegexp;
var requireObjectCoercible$1 = requireObjectCoercible$4;
var correctIsRegExpLogic = correctIsRegexpLogic;
var nativeStartsWith = uncurryThis$1("".startsWith);
var stringSlice = uncurryThis$1("".slice);
var min2 = Math.min;
var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic("startsWith");
var MDN_POLYFILL_BUG = !CORRECT_IS_REGEXP_LOGIC && !!function() {
  var descriptor = getOwnPropertyDescriptor2(String.prototype, "startsWith");
  return descriptor && !descriptor.writable;
}();
$$1({ target: "String", proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
  startsWith: function startsWith(searchString) {
    var that = toString$1(requireObjectCoercible$1(this));
    notARegExp(searchString);
    var index2 = toLength(min2(arguments.length > 1 ? arguments[1] : void 0, that.length));
    var search = toString$1(searchString);
    return nativeStartsWith ? nativeStartsWith(that, search, index2) : stringSlice(that, index2, index2 + search.length) === search;
  }
});
var useCopyToClipboard = () => {
  const [, setCopiedText] = (0, import_react40.useState)(null);
  const {
    successToast,
    errorToast
  } = useToast();
  const copy = (text, toastTitle = "Success", toastDescription = "was copied to your clipboard.") => __awaiter(void 0, void 0, void 0, function* () {
    if (!(navigator === null || navigator === void 0 ? void 0 : navigator.clipboard)) {
      console.warn("Clipboard not supported");
      return false;
    }
    let toastText = text;
    if (text.startsWith("0x")) {
      toastText = (0, import_utils6.truncateAddress)(text);
    }
    try {
      yield navigator.clipboard.writeText(text);
      setCopiedText(text);
      successToast({
        title: toastTitle,
        description: `${toastText} ${toastDescription}`
      });
      return true;
    } catch (error) {
      errorToast({
        title: "Copy failed:",
        description: `${error}`
      });
      setCopiedText(null);
      return false;
    }
  });
  return copy;
};
var useDebounce = (value, delay) => {
  const [debouncedValue, setDebouncedValue] = (0, import_react40.useState)(value);
  (0, import_react40.useEffect)(() => {
    const timer = setTimeout(() => setDebouncedValue(value), delay || 500);
    return () => {
      clearTimeout(timer);
    };
  }, [value, delay]);
  return debouncedValue;
};
var AddressContainer = st.div.withConfig({
  displayName: "AddressDisplaystyles__AddressContainer",
  componentId: "x1eodv-0"
})(["display:flex;justify-content:flex-start;align-items:center;gap:1rem;"]);
var AddressDataSm = st(DataSm).withConfig({
  displayName: "AddressDisplaystyles__AddressDataSm",
  componentId: "x1eodv-1"
})(["color:", ";"], ({
  theme
}) => theme.addressDisplay.color);
var AddressCopyIcon = st.div.withConfig({
  displayName: "AddressDisplaystyles__AddressCopyIcon",
  componentId: "x1eodv-2"
})(["cursor:pointer;margin-top:0.5em;"]);
var AddressDisplay = (_a) => {
  var {
    address,
    explorerNetworkId,
    copy,
    truncate,
    txHash,
    textOverride,
    className
  } = _a;
  __rest3(_a, ["address", "explorerNetworkId", "copy", "truncate", "txHash", "textOverride", "className"]);
  const theme = Je();
  const copyToClipboard = useCopyToClipboard();
  const explorerLink = (0, import_react40.useMemo)(() => {
    if (explorerNetworkId) {
      return (0, import_keychain_utils.generateExplorerLink)({
        chainId: explorerNetworkId,
        address,
        type: txHash ? "tx" : "address"
      });
    }
  }, [address, txHash, explorerNetworkId]);
  const handleCopy = () => {
    copyToClipboard(address, `Success ${txHash ? "Transaction Hash:" : "Address:"}`);
  };
  const displayAddress = truncate ? (0, import_utils6.truncateAddress)(address) : address;
  return (0, import_jsx_runtime.jsxs)(AddressContainer, Object.assign({
    className
  }, {
    children: [(0, import_jsx_runtime.jsx)(AddressDataSm, {
      children: textOverride ? textOverride : displayAddress
    }), copy && (0, import_jsx_runtime.jsx)(AddressCopyIcon, {
      children: (0, import_jsx_runtime.jsx)(Icon$1, {
        children: (0, import_jsx_runtime.jsx)(import_ri.RiFileCopyLine, {
          size: "1.5rem",
          color: theme.addressDisplay.icon.color,
          onClick: handleCopy
        })
      })
    }), explorerLink && (0, import_jsx_runtime.jsx)(Link$1, {
      href: explorerLink
    })]
  }));
};
var StyledBanner = st.div.withConfig({
  displayName: "Bannerstyles__StyledBanner",
  componentId: "sc-19tttap-0"
})(["align-items:center;display:flex;background-color:", ";border:1px solid ", ";color:", ";flex-wrap:wrap;height:auto;justify-content:space-between;min-height:8rem;padding:2rem 4rem;width:100%;.banner--text-container{align-items:center;display:flex;margin-bottom:1.6rem;@media (min-width:", "){margin-bottom:0;}svg{font-size:10.8rem;margin-right:1.4rem;@media (min-width:", "){font-size:2.8rem;}}}.banner--link-container{align-items:center;display:flex;justify-content:space-between;width:100%;@media (min-width:", "){justify-content:flex-start;width:auto;}svg{font-size:2.4rem;margin-right:1rem;}}.banner--link-item{@media (min-width:", "){margin:0 6rem;}}"], ({
  theme
}) => theme.banner.bg, ({
  theme
}) => theme.banner.border, ({
  theme
}) => theme.banner.color, breakpoints.xs, breakpoints.xs, breakpoints.xs, breakpoints.xs);
var Banner = ({
  className,
  bannerText: _bannerText = "DAOhaus v3 is currently in beta. Please report bugs, request features or provide feedback."
}) => {
  return (0, import_jsx_runtime.jsxs)(StyledBanner, Object.assign({
    className
  }, {
    children: [(0, import_jsx_runtime.jsxs)("div", Object.assign({
      className: "banner--text-container"
    }, {
      children: [(0, import_jsx_runtime.jsx)(import_ri.RiToolsLine, {}), (0, import_jsx_runtime.jsx)(ParMd, {
        children: _bannerText
      })]
    })), (0, import_jsx_runtime.jsxs)("div", Object.assign({
      className: "banner--link-container"
    }, {
      children: [(0, import_jsx_runtime.jsx)(Link$1, Object.assign({
        href: "https://github.com/HausDAO/daohaus-monorepo/issues/new/choose",
        showExternalIcon: false,
        className: "banner--link-item"
      }, {
        children: "Give Feedback"
      })), (0, import_jsx_runtime.jsxs)(Link$1, Object.assign({
        showExternalIcon: false,
        href: "https://discord.gg/daohaus"
      }, {
        children: [(0, import_jsx_runtime.jsx)(import_ri.RiDiscordFill, {}), "Support"]
      }))]
    }))]
  }));
};
var whitespaces$2 = "	\n\v\f\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
var uncurryThis = functionUncurryThis;
var requireObjectCoercible = requireObjectCoercible$4;
var toString2 = toString$3;
var whitespaces$1 = whitespaces$2;
var replace = uncurryThis("".replace);
var ltrim = RegExp("^[" + whitespaces$1 + "]+");
var rtrim = RegExp("(^|[^" + whitespaces$1 + "])[" + whitespaces$1 + "]+$");
var createMethod = function(TYPE) {
  return function($this) {
    var string = toString2(requireObjectCoercible($this));
    if (TYPE & 1)
      string = replace(string, ltrim, "");
    if (TYPE & 2)
      string = replace(string, rtrim, "$1");
    return string;
  };
};
var stringTrim = {
  start: createMethod(1),
  end: createMethod(2),
  trim: createMethod(3)
};
var PROPER_FUNCTION_NAME = functionName.PROPER;
var fails = fails$c;
var whitespaces = whitespaces$2;
var non = "\u200B\x85\u180E";
var stringTrimForced = function(METHOD_NAME) {
  return fails(function() {
    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() !== non || PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME;
  });
};
var $ = _export;
var $trim = stringTrim.trim;
var forcedStringTrimMethod = stringTrimForced;
$({ target: "String", proto: true, forced: forcedStringTrimMethod("trim") }, {
  trim: function trim() {
    return $trim(this);
  }
});
var FieldWrapperBase = st.div.withConfig({
  displayName: "FieldWrapperstyles__FieldWrapperBase",
  componentId: "y7o03w-0"
})(["width:100%;max-width:", ";.field-slot{margin-bottom:1.2rem;}&.long{max-width:", ";}&.full{max-width:", ";}&.hidden{display:none;}"], ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.full);
var LabelContainer$1 = st.label.withConfig({
  displayName: "FieldWrapperstyles__LabelContainer",
  componentId: "y7o03w-1"
})(["display:flex;align-items:center;margin-bottom:12px;label{margin-right:10px;}svg{transform:translateY(0.1rem);}"]);
var BottomContainer = st.div.withConfig({
  displayName: "FieldWrapperstyles__BottomContainer",
  componentId: "y7o03w-2"
})(["display:flex;margin-bottom:12px;width:100%;max-width:", ";&.long{max-width:", ";}&.full{max-width:", ";}"], ({
  theme
}) => theme.field.size.md, ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.full);
var LeftAddonContainer = st.div.withConfig({
  displayName: "FieldWrapperstyles__LeftAddonContainer",
  componentId: "y7o03w-3"
})(["display:flex;align-items:end;min-width:70%;"]);
var RightAddonContainer = st.div.withConfig({
  displayName: "FieldWrapperstyles__RightAddonContainer",
  componentId: "y7o03w-4"
})(["display:flex;justify-content:flex-end;min-width:30%;"]);
var RequiredAsterisk = st.span.withConfig({
  displayName: "FieldWrapperstyles__RequiredAsterisk",
  componentId: "y7o03w-5"
})(["margin-right:8px;font-weight:", ";color:", ";transform:translateY(-0.25rem);"], font.weight.bold, ({
  theme
}) => theme.warning.step9);
var FieldWrapper = ({
  children,
  label,
  loading,
  info: info2,
  error,
  success: success2,
  warning: warning2,
  helperText,
  hidden,
  long,
  full,
  address,
  id: id2,
  rules,
  rightAddon
}) => {
  const classes = (0, import_classnames.default)({
    long: long || address,
    full,
    hidden
  });
  const {
    getFieldState
  } = useFormContext();
  const fieldError = getFieldState(id2).error;
  return (0, import_jsx_runtime.jsxs)(FieldWrapperBase, Object.assign({
    className: classes
  }, {
    children: [(0, import_jsx_runtime.jsxs)(LabelContainer$1, {
      children: [(rules === null || rules === void 0 ? void 0 : rules.required) && (0, import_jsx_runtime.jsx)(RequiredAsterisk, {
        children: (0, import_jsx_runtime.jsx)(Icon$1, Object.assign({
          label: "Required"
        }, {
          children: (0, import_jsx_runtime.jsx)(import_ri.RiAsterisk, {})
        }))
      }), label && (0, import_jsx_runtime.jsx)(Label$2, Object.assign({
        id: id2
      }, {
        children: label
      })), info2 && (0, import_jsx_runtime.jsx)(Tooltip, {
        content: info2
      })]
    }), (0, import_jsx_runtime.jsx)("div", Object.assign({
      className: "field-slot"
    }, {
      children
    })), (0, import_jsx_runtime.jsxs)(BottomContainer, Object.assign({
      className: classes
    }, {
      children: [(0, import_jsx_runtime.jsxs)(LeftAddonContainer, {
        children: [loading && (0, import_jsx_runtime.jsx)(Loading, {
          size: 20
        }), (0, import_jsx_runtime.jsx)(HelperTextFactory, {
          error: error || fieldError,
          success: success2,
          warning: warning2,
          helperText
        })]
      }), rightAddon && (0, import_jsx_runtime.jsx)(RightAddonContainer, {
        children: rightAddon
      })]
    }))]
  }));
};
var HelperTextFactory = ({
  error,
  success: success2,
  warning: warning2,
  helperText
}) => {
  if (!error && !success2 && !warning2 && !helperText)
    return null;
  if (error)
    return (0, import_jsx_runtime.jsx)(ErrorText, {
      children: error.message
    });
  if (warning2)
    return (0, import_jsx_runtime.jsx)(WarningText, {
      children: warning2.message
    });
  if (success2)
    return (0, import_jsx_runtime.jsx)(SuccessText, {
      children: success2.message
    });
  return (0, import_jsx_runtime.jsx)(HelperText, {
    children: helperText
  });
};
var WrappedInput = ({
  id: id2,
  rules,
  helperText,
  long,
  full,
  icon,
  success: success2,
  warning: warning2,
  error,
  number,
  address,
  className,
  placeholder,
  defaultValue,
  value,
  disabled,
  hidden,
  rightAddon,
  label,
  loading,
  info: info2
}) => {
  const {
    register
  } = useFormContext();
  return (0, import_jsx_runtime.jsx)(FieldWrapper, Object.assign({
    label,
    loading,
    info: info2,
    error,
    success: success2,
    warning: warning2,
    helperText,
    hidden,
    long,
    full,
    address,
    rightAddon,
    id: id2,
    rules
  }, {
    children: (0, import_jsx_runtime.jsx)(Input, Object.assign({}, register(id2, rules), {
      id: id2,
      long,
      full,
      icon,
      success: success2,
      warning: warning2,
      error,
      number,
      address,
      className,
      placeholder,
      defaultValue,
      value,
      disabled,
      hidden
    }))
  }));
};
var CSInput = (props) => {
  const {
    rules,
    id: id2,
    itemNoun = {
      singular: "item",
      plural: "items"
    }
  } = props;
  const {
    watch
  } = useFormContext();
  const value = watch(id2);
  const amtItems = Array.isArray(value) ? value.length : 0;
  const helperText = `${amtItems} ${(0, import_utils6.handlePluralNoun)(itemNoun, amtItems)} typed`;
  const newRules = Object.assign(Object.assign({}, rules), {
    setValueAs: (value2) => value2.trim().split(",").filter(Boolean)
  });
  return (0, import_jsx_runtime.jsx)(WrappedInput, Object.assign({}, props, {
    rules: newRules,
    helperText
  }));
};
var StyledCollapsibleCard = st($409067139f391064$export$be92b6f5f03c0fe9).withConfig({
  displayName: "CollapsibleCardstyles__StyledCollapsibleCard",
  componentId: "sc-1lepuva-0"
})(["", " background-color:", ";border:", "px solid ", ";width:", ";"], CardStyles, ({
  noBackground,
  theme
}) => noBackground ? "inherit" : theme.collapsibleCard.outer.bg, ({
  noBackground
}) => noBackground ? "0" : "1", ({
  theme
}) => theme.collapsibleCard.outer.border, (props) => props.width);
var InnerCard = st(Card).withConfig({
  displayName: "CollapsibleCardstyles__InnerCard",
  componentId: "sc-1lepuva-1"
})(["background-color:", ";border:1px solid ", ";display:flex;flex-direction:row;justify-content:space-between;align-items:center;width:", ";"], ({
  theme
}) => theme.collapsibleCard.inner.bg, ({
  theme
}) => theme.collapsibleCard.inner.border, (props) => props.width);
var StyledCardActionsContainer = st.div.withConfig({
  displayName: "CollapsibleCardstyles__StyledCardActionsContainer",
  componentId: "sc-1lepuva-2"
})(["display:flex;"]);
var StyledCollapsibleCardTrigger = st($409067139f391064$export$41fb9f06171c75f4).withConfig({
  displayName: "CollapsibleCardstyles__StyledCollapsibleCardTrigger",
  componentId: "sc-1lepuva-3"
})(["align-items:center;background-color:transparent;border:none;border-bottom:2px transparent solid;color:", ";cursor:pointer;display:inline-flex;font-size:14px;letter-spacing:1.5px;margin-left:2rem;padding:0;transition:0.2s all;&:hover{color:", ";text-decoration:none;}:focus{color:", ";}svg{font-size:20px;margin-left:auto;}&[data-state='open']{svg{transform:rotate(180deg);}}"], ({
  theme
}) => theme.collapsibleCard.trigger.color, ({
  theme
}) => theme.collapsibleCard.trigger.hover.color, ({
  theme
}) => theme.collapsibleCard.trigger.focus.color);
var open = ct(["from{height:0}to{height:100}"]);
var close = ct(["from{height:100}to{height:0}"]);
var StyledCollapsibleContent = st($409067139f391064$export$7c6e2c02157bb7d2).withConfig({
  displayName: "CollapsibleCardstyles__StyledCollapsibleContent",
  componentId: "sc-1lepuva-4"
})(["margin-top:2rem;overflow:hidden;&[data-state='open']{animation:", " 300ms ease-out;}&[data-state='closed']{animation:", " 300ms ease-out;}"], open, close);
var CollapsibleContent = StyledCollapsibleContent;
var CollapsibleCard = ({
  defaultOpen,
  open: open2,
  onChange,
  width: _width = "fit-content",
  children,
  collapsibleActions,
  collapsibleContent,
  triggerLabel: _triggerLabel = "Show More"
}) => {
  return (0, import_jsx_runtime.jsxs)(StyledCollapsibleCard, Object.assign({
    defaultOpen,
    open: open2,
    onChange,
    width: _width
  }, {
    children: [(0, import_jsx_runtime.jsxs)(InnerCard, Object.assign({
      width: _width
    }, {
      children: [children, (0, import_jsx_runtime.jsxs)(StyledCardActionsContainer, {
        children: [collapsibleActions, (0, import_jsx_runtime.jsxs)(StyledCollapsibleCardTrigger, {
          children: [_triggerLabel, (0, import_jsx_runtime.jsx)(import_ri.RiArrowDropDownLine, {})]
        })]
      })]
    })), (0, import_jsx_runtime.jsx)(StyledCollapsibleContent, {
      children: collapsibleContent ? collapsibleContent : (0, import_jsx_runtime.jsx)("p", {
        children: "No Content found"
      })
    })]
  }));
};
var DataIndicatorContainer = st.div.withConfig({
  displayName: "DataIndicatorstyles__DataIndicatorContainer",
  componentId: "sc-40tqyd-0"
})(["display:flex;flex-direction:column;"]);
var DataIndicatorLabelMd = st(ParMd).withConfig({
  displayName: "DataIndicatorstyles__DataIndicatorLabelMd",
  componentId: "sc-40tqyd-1"
})(["margin-bottom:0.5rem;opacity:0.9;"]);
var DataIndicatorLabelSm = st(ParSm).withConfig({
  displayName: "DataIndicatorstyles__DataIndicatorLabelSm",
  componentId: "sc-40tqyd-2"
})(["opacity:0.9;"]);
var DataIndicator = ({
  label,
  data: data2,
  size: _size = "lg",
  info: info2
}) => {
  if (_size === "sm") {
    return (0, import_jsx_runtime.jsxs)(DataIndicatorContainer, {
      children: [(0, import_jsx_runtime.jsxs)(DataIndicatorLabelMd, {
        children: [label, " ", info2 && (0, import_jsx_runtime.jsx)(Tooltip, {
          content: info2
        })]
      }), (0, import_jsx_runtime.jsx)(DataMd, {
        children: data2
      })]
    });
  }
  return (0, import_jsx_runtime.jsxs)(DataIndicatorContainer, {
    children: [(0, import_jsx_runtime.jsxs)(DataIndicatorLabelSm, {
      children: [label, " ", info2 && (0, import_jsx_runtime.jsx)(Tooltip, {
        content: info2
      })]
    }), (0, import_jsx_runtime.jsx)(DataXl, {
      children: data2
    })]
  });
};
var DialogRoot = $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9;
var DialogPrimitaveTrigger = $5d3850c4d0b4e6c7$export$41fb9f06171c75f4;
var DialogClose = $5d3850c4d0b4e6c7$export$f39c2d165cd861fe;
var DialogPortal = $5d3850c4d0b4e6c7$export$602eac185826482c;
var DialogTitle = $5d3850c4d0b4e6c7$export$f99233281efd08a0;
var DialogDescription = $5d3850c4d0b4e6c7$export$393edc798c47379d;
var overlayShow = ct(["0%{opacity:0};100%{opacity:1};"]);
var StyledDialogOverlay = st($5d3850c4d0b4e6c7$export$c6fdb837b070b4ff).withConfig({
  displayName: "Dialogstyles__StyledDialogOverlay",
  componentId: "amevq3-0"
})(["background-color:", ";position:fixed;inset:0;@media (prefers-reduced-motion:no-preference){animation:", " 150ms cubic-bezier(0.16,1,0.3,1);}"], ({
  theme
}) => theme.dialog.overlay.bg, overlayShow);
var contentShow = ct(["0%{opacity:0;transform:translate(-50%,-48%) scale(.96)};100%{opacity:1;transform:translate(-50%,-50%) scale(1)};"]);
var StyledDialogContent = st($5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2).withConfig({
  displayName: "Dialogstyles__StyledDialogContent",
  componentId: "amevq3-1"
})(["background-color:", ";border-radius:", ";box-shadow:hsl(206 22% 7% / 35%) 0px 10px 38px -10px,hsl(206 22% 7% / 20%) 0px 10px 20px -15px;color:", ";display:flex;flex-direction:column;justify-content:space-between;left:50%;max-height:85vh;max-width:80%;min-height:23rem;padding:3rem;position:fixed;top:50%;transform:translate(-50%,-50%);overflow-y:auto;@media (prefers-reduced-motion:no-preference){animation:", " 150ms cubic-bezier(0.16,1,0.3,1);}&:focus{outline:none;}"], ({
  theme
}) => theme.dialog.content.bg, ({
  theme
}) => theme.dialog.radius, ({
  theme
}) => theme.dialog.content.color, contentShow);
var DialogBody = st.div.withConfig({
  displayName: "Dialogstyles__DialogBody",
  componentId: "amevq3-2"
})(["display:flex;height:auto;width:100%;"]);
var HeaderContainer = st.div.withConfig({
  displayName: "Dialogstyles__HeaderContainer",
  componentId: "amevq3-3"
})(["align-items:baseline;display:flex;justify-content:space-between;margin-bottom:1rem;"]);
var CloseIcon = st.div.withConfig({
  displayName: "Dialogstyles__CloseIcon",
  componentId: "amevq3-4"
})(["margin-left:auto;cursor:pointer;font-size:24px;"]);
var ButtonContainer = st.div.withConfig({
  displayName: "Dialogstyles__ButtonContainer",
  componentId: "amevq3-5"
})(["align-self:", ";display:flex;gap:1rem;@media ", "{width:100%;}"], (props) => `flex-${props.align}`, widthQuery.sm);
var Dialog = DialogRoot;
var DialogTrigger = DialogPrimitaveTrigger;
var DialogContent = import_react40.default.forwardRef((_a, ref) => {
  var {
    title,
    children,
    description,
    alignButtons = "end",
    leftButton,
    rightButton
  } = _a, props = __rest3(_a, ["title", "children", "description", "alignButtons", "leftButton", "rightButton"]);
  return (0, import_jsx_runtime.jsxs)(DialogPortal, {
    children: [(0, import_jsx_runtime.jsx)(StyledDialogOverlay, {}), (0, import_jsx_runtime.jsxs)(StyledDialogContent, Object.assign({}, props, {
      ref
    }, {
      children: [(0, import_jsx_runtime.jsxs)("div", {
        children: [(0, import_jsx_runtime.jsxs)(HeaderContainer, {
          children: [(0, import_jsx_runtime.jsx)(DialogTitle, Object.assign({
            asChild: true
          }, {
            children: (0, import_jsx_runtime.jsx)(H5, {
              children: title
            })
          })), (0, import_jsx_runtime.jsx)(DialogClose, Object.assign({
            asChild: true
          }, {
            children: (0, import_jsx_runtime.jsx)(CloseIcon, {
              children: (0, import_jsx_runtime.jsx)(import_ri.RiCloseFill, {
                "aria-hidden": true
              })
            })
          }))]
        }), (0, import_jsx_runtime.jsx)(DialogBody, {
          children: (0, import_jsx_runtime.jsx)(DialogDescription, {
            children: description
          })
        }), children]
      }), (leftButton || rightButton) && (0, import_jsx_runtime.jsxs)(ButtonContainer, Object.assign({
        align: alignButtons
      }, {
        children: [leftButton && (0, import_jsx_runtime.jsx)(Button, Object.assign({
          color: "secondary",
          size: "sm"
        }, leftButton, {
          children: leftButton === null || leftButton === void 0 ? void 0 : leftButton.children
        })), rightButton && rightButton.$closeDialog ? (0, import_jsx_runtime.jsx)(DialogClose, Object.assign({
          asChild: true
        }, {
          children: (0, import_jsx_runtime.jsx)(Button, Object.assign({
            color: "secondary",
            size: "sm"
          }, rightButton, {
            children: "Close"
          }))
        })) : (0, import_jsx_runtime.jsx)(Button, Object.assign({
          color: "secondary",
          size: "sm"
        }, rightButton, {
          children: rightButton === null || rightButton === void 0 ? void 0 : rightButton.children
        }))]
      }))]
    }))]
  });
});
var ProfileAvatar = (_a) => {
  var {
    address,
    image,
    src
  } = _a, props = __rest3(_a, ["address", "image", "src"]);
  const blockie = (0, import_react40.useMemo)(() => {
    if (address) {
      return (0, import_jsx_runtime.jsx)(BlockieImg, {
        src: (0, import_ethereum_blockies_base64.default)(address),
        alt: "user avatar"
      });
    }
    return "?";
  }, [address]);
  return (0, import_jsx_runtime.jsx)(Avatar, Object.assign({}, props, {
    src: image || src,
    fallback: blockie
  }));
};
var BlockieImg = st.img.withConfig({
  displayName: "ProfileAvatar__BlockieImg",
  componentId: "sc-1s4jsyu-0"
})(["width:100%;height:100%;object-fit:cover;border-radius:inherit;"]);
var StyledProfileButton = st(Button).withConfig({
  displayName: "ProfileButtonstyles__StyledProfileButton",
  componentId: "sc-1jqi3im-0"
})(["font-weight:400;svg{&.icon-right{margin-left:auto;}}.interior{display:flex;flex-direction:column;align-items:flex-start;}"]);
var ProfileBtnAvatar = st(ProfileAvatar).withConfig({
  displayName: "ProfileButtonstyles__ProfileBtnAvatar",
  componentId: "sc-1jqi3im-1"
})(["margin-right:1rem;&.sm{margin-right:0.8rem;}&.lg{margin-right:1.4rem;}"]);
var ProfileButton = import_react40.default.forwardRef((props, ref) => {
  const {
    color = "secondary",
    variant = "solid",
    size: size2 = "md",
    profile,
    avatarOnly = false,
    IconRight,
    children,
    className
  } = props, rest = __rest3(props, ["color", "variant", "size", "profile", "avatarOnly", "IconRight", "children", "className"]);
  const classes = (0, import_classnames.default)({
    [variant]: variant,
    [size2]: size2,
    profile: true
  });
  return (0, import_jsx_runtime.jsxs)(StyledProfileButton, Object.assign({}, rest, {
    color,
    size: size2,
    variant,
    className: `${classes} ${className}`,
    ref,
    IconRight: !avatarOnly ? IconRight : void 0
  }, {
    children: [!avatarOnly ? (0, import_jsx_runtime.jsx)(ProfileBtnAvatar, {
      address: profile.address,
      image: profile.avatar,
      size: size2
    }) : (0, import_jsx_runtime.jsx)(ProfileAvatar, {
      address: profile.address,
      image: profile.avatar,
      size: size2
    }), !avatarOnly && (0, import_jsx_runtime.jsxs)("div", Object.assign({
      className: "interior"
    }, {
      children: [profile.ens && profile.ens, !profile.ens && profile.address && (0, import_utils6.truncateAddress)(profile.address), children]
    }))]
  }));
});
var Root$1 = $d08ef79370b62062$export$be92b6f5f03c0fe9;
var Portal = $d08ef79370b62062$export$602eac185826482c;
var Group = $d08ef79370b62062$export$eb2fcfdbd7ba97d4;
var RadioGroup$1 = $d08ef79370b62062$export$a98f0dcb43a68a25;
var Trigger$1 = st($d08ef79370b62062$export$41fb9f06171c75f4).withConfig({
  displayName: "Dropdownstyles__Trigger",
  componentId: "v728h3-0"
})(["svg.icon-right{transition:0.2s all;margin-left:auto;}&[data-state='open'] svg.icon-right{transform:rotate(180deg);}"]);
var BaseContentStyle = nt(["background-color:", ";border-radius:4px;font-weight:", ";line-height:", ";letter-spacing:", ";font-size:", ";padding:5px;display:flex;flex-direction:column;gap:4px;"], ({
  $color: _$color = "primary",
  theme
}) => theme.dropdown.content[_$color].bg, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.lineHeight, ({
  theme
}) => theme.font.letterSpacing, ({
  theme
}) => theme.font.size.md);
var Content$1 = st($d08ef79370b62062$export$6e76d93a37c01248).withConfig({
  displayName: "Dropdownstyles__Content",
  componentId: "v728h3-1"
})(["", ""], BaseContentStyle);
var Label = st($d08ef79370b62062$export$b04be29aa201d4f5).withConfig({
  displayName: "Dropdownstyles__Label",
  componentId: "v728h3-3"
})(["font-size:", ";min-height:4.8rem;padding:12px;"], ({
  theme
}) => theme.font.size.xs);
var BaseItemStyles = nt(["align-items:center;background-color:", ";border-radius:4px;cursor:pointer;display:flex;font-weight:400;height:48px;outline:none;padding:0 12px;width:100%;&:focus-visible{background-color:", ";}&[data-highlighted]{background-color:", ";}&[data-disabled]{cursor:not-allowed;color:", ";& *{color:", ";}}"], ({
  $color: _$color2 = "primary",
  theme
}) => theme.dropdown.item[_$color2].bg, ({
  $color: _$color3 = "primary",
  theme
}) => theme.dropdown.item.focus[_$color3].bg, ({
  $color: _$color4 = "primary",
  theme
}) => theme.dropdown.item.highlight[_$color4].bg, ({
  theme
}) => theme.dropdown.item.disabled.color, ({
  theme
}) => theme.dropdown.item.disabled.color);
var Item$1 = st($d08ef79370b62062$export$6d08773d2e66f8f2).withConfig({
  displayName: "Dropdownstyles__Item",
  componentId: "v728h3-4"
})(["", " svg{width:2.2rem;height:2.2rem;&.icon-left{margin-right:1rem;}&.icon-right{margin-left:0.5rem;}}"], BaseItemStyles);
var CheckboxItem = st($d08ef79370b62062$export$16ce288f89fa631c).withConfig({
  displayName: "Dropdownstyles__CheckboxItem",
  componentId: "v728h3-5"
})(["", ""], BaseItemStyles);
var RadioItem$1 = st($d08ef79370b62062$export$371ab307eab489c0).withConfig({
  displayName: "Dropdownstyles__RadioItem",
  componentId: "v728h3-6"
})(["", ""], BaseItemStyles);
var Separator = st($d08ef79370b62062$export$1ff3c3f08ae963c0).withConfig({
  displayName: "Dropdownstyles__Separator",
  componentId: "v728h3-8"
})(["background-color:", ";height:1px;margin:5px 0;width:100%;"], ({
  theme
}) => theme.dropdown.separator.bg);
var ItemIndicator = st($d08ef79370b62062$export$c3468e2714d175fa).withConfig({
  displayName: "Dropdownstyles__ItemIndicator",
  componentId: "v728h3-9"
})(["margin-left:auto;display:inline-flex;align-items:center;justify-content:center;"]);
var DropdownLinkStyles = nt(["", " color:", ";&:hover{background-color:", ";border-color:", ";text-decoration:none;}&.disabled{color:", ";}"], LinkStyles, ({
  theme
}) => theme.dropdown.link.color, ({
  theme
}) => theme.dropdown.link.hover.bg, ({
  theme
}) => theme.dropdown.link.hover.border, ({
  theme
}) => theme.dropdown.link.disabled.color);
var StyledDropdownLink = st(Link$1).withConfig({
  displayName: "Dropdownstyles__StyledDropdownLink",
  componentId: "v728h3-10"
})(["", ""], DropdownLinkStyles);
var DropdownMenu = Root$1;
var DropdownLabel = Label;
var DropdownGroup = Group;
var DropdownRadioGroup = RadioGroup$1;
var DropdownSeparator = Separator;
var DropdownLink = StyledDropdownLink;
var DropdownTrigger = Trigger$1;
var DropdownButtonTrigger = (_a) => {
  var {
    color = "secondary",
    children
  } = _a, props = __rest3(_a, ["color", "children"]);
  return (0, import_jsx_runtime.jsx)(Trigger$1, Object.assign({
    asChild: true
  }, {
    children: (0, import_jsx_runtime.jsx)(Button, Object.assign({
      color,
      IconRight: import_ri.RiArrowDropDownLine
    }, props, {
      children
    }))
  }));
};
var DropdownProfileTrigger = (_a) => {
  var {
    color = "secondary",
    children
  } = _a, props = __rest3(_a, ["color", "children"]);
  return (0, import_jsx_runtime.jsx)(Trigger$1, Object.assign({
    asChild: true
  }, {
    children: (0, import_jsx_runtime.jsx)(ProfileButton, Object.assign({
      color,
      IconRight: import_ri.RiArrowDropDownLine
    }, props, {
      children
    }))
  }));
};
var DropdownIconTrigger = (_a) => {
  var {
    color = "secondary",
    children
  } = _a, props = __rest3(_a, ["color", "children"]);
  return (0, import_jsx_runtime.jsx)(Trigger$1, Object.assign({
    asChild: true
  }, {
    children: (0, import_jsx_runtime.jsx)(IconButton, Object.assign({
      color
    }, props))
  }));
};
var DropdownContent = import_react40.default.forwardRef((_a, forwardedRef) => {
  var {
    color = "secondary",
    className,
    children
  } = _a, props = __rest3(_a, ["color", "className", "children"]);
  return (0, import_jsx_runtime.jsx)(Portal, {
    children: (0, import_jsx_runtime.jsx)(Content$1, Object.assign({
      "$color": color
    }, props, {
      ref: forwardedRef
    }, {
      children
    }))
  });
});
var DropdownItem = (_a) => {
  var {
    color = "secondary",
    className,
    children
  } = _a, props = __rest3(_a, ["color", "className", "children"]);
  return (0, import_jsx_runtime.jsx)(Item$1, Object.assign({
    "$color": color,
    className: `${className}`
  }, props, {
    children
  }));
};
var DropdownCheckbox = import_react40.default.forwardRef((_a, forwardedRef) => {
  var {
    color = "secondary",
    checked,
    children
  } = _a, props = __rest3(_a, ["color", "checked", "children"]);
  return (0, import_jsx_runtime.jsxs)(CheckboxItem, Object.assign({
    "$color": color,
    checked,
    ref: forwardedRef
  }, props, {
    children: [children, (0, import_jsx_runtime.jsx)(ItemIndicator, {
      children: (0, import_jsx_runtime.jsx)(import_ri.RiCheckLine, {})
    })]
  }));
});
var DropdownRadio = import_react40.default.forwardRef((_a, forwardedRef) => {
  var {
    color = "secondary",
    className,
    children
  } = _a, props = __rest3(_a, ["color", "className", "children"]);
  return (0, import_jsx_runtime.jsxs)(RadioItem$1, Object.assign({
    "$color": color,
    ref: forwardedRef
  }, props, {
    children: [children, (0, import_jsx_runtime.jsx)(ItemIndicator, {
      children: (0, import_jsx_runtime.jsx)(import_ri.RiRadioButtonFill, {})
    })]
  }));
});
var CheckGateBox = st.div.withConfig({
  displayName: "CheckGatestyles__CheckGateBox",
  componentId: "sc-1xn3371-0"
})(["margin-top:3.6rem;"]);
var CheckGate = (_a) => {
  var {
    id: id2,
    fields,
    gateLabel,
    onUnchecked,
    rules
  } = _a, props = __rest3(_a, ["id", "fields", "gateLabel", "onUnchecked", "rules"]);
  const [gatedOn, toggleGate] = (0, import_react40.useState)(false);
  const onCheckedChanged = (checked) => {
    toggleGate(checked.valueOf());
    if (!checked)
      onUnchecked === null || onUnchecked === void 0 ? void 0 : onUnchecked();
  };
  return (0, import_jsx_runtime.jsxs)(FieldWrapper, Object.assign({}, props, {
    id: id2,
    rules
  }, {
    children: [(0, import_jsx_runtime.jsx)(Checkbox, {
      id: id2,
      title: gateLabel,
      onCheckedChange: onCheckedChanged
    }), gatedOn && (0, import_jsx_runtime.jsx)(CheckGateBox, {
      children: fields
    })]
  }));
};
var FieldAlertWrapper = st.div.withConfig({
  displayName: "FieldAlertstyles__FieldAlertWrapper",
  componentId: "ftwiw9-0"
})(["padding:1.6rem;display:flex;justify-content:space-between;align-items:center;border-radius:", ";max-width:600px;background:", ";border:1px solid ", ";&.full{max-width:", ";}&.warning{background:", ";border:1px solid ", ";p{color:", ";}button{background-color:", ";border:1px solid ", ";&:hover{background-color:", ";border:1px solid ", ";}:active{background-color:", ";border:1px solid ", ";}}}"], ({
  theme
}) => theme.fieldAlert.radius, ({
  theme
}) => theme.primary.step3, ({
  theme
}) => theme.primary.step6, ({
  theme
}) => theme.field.size.full, ({
  theme
}) => theme.warning.step2, ({
  theme
}) => theme.warning.step5, ({
  theme
}) => theme.warning.step10, ({
  theme
}) => theme.warning.step9, ({
  theme
}) => theme.warning.step9, ({
  theme
}) => theme.warning.step10, ({
  theme
}) => theme.warning.step10, ({
  theme
}) => theme.warning.step9, ({
  theme
}) => theme.warning.step9);
var FieldAlert = ({
  className,
  message,
  children
}) => {
  return (0, import_jsx_runtime.jsxs)(FieldAlertWrapper, Object.assign({
    className
  }, {
    children: [(0, import_jsx_runtime.jsx)(ParXs, {
      children: message
    }), children]
  }));
};
var HighlightInputText = ({
  color,
  description,
  highlightColor,
  highlightInputId
}) => {
  const {
    watch
  } = useFormContext();
  const highlightValue = highlightInputId ? watch(highlightInputId) : "";
  return (0, import_jsx_runtime.jsxs)(ParSm, Object.assign({
    color
  }, {
    children: [description, highlightValue && (0, import_jsx_runtime.jsx)(Bold, Object.assign({
      color: highlightColor
    }, {
      children: highlightValue
    }))]
  }));
};
var InputSelectBox = st.div.withConfig({
  displayName: "InputSelectstyles__InputSelectBox",
  componentId: "sc-18wc6eu-0"
})(["display:flex;width:100%;max-width:", ";.select{max-width:100%;padding:0 0.8rem;border-radius:", ";border-left:none;color:white;font-weight:", ";background-color:", ";color:", ";&:hover{background-color:", ";}:focus{background-color:", ";}:disabled{background-color:", ";cursor:not-allowed;}}.select-box{max-width:10rem;svg{right:0.6rem;color:", ";}&.match-long{max-width:16rem;}&.match-full{max-width:18rem;}}.input{border-right:none;border-radius:", ";}&.long{max-width:", ";}&.full{max-width:", ";}"], ({
  theme
}) => theme.field.size.md, ({
  theme
}) => `0 ${theme.field.radius} ${theme.field.radius} 0`, ({
  theme
}) => theme.font.weight.bold, ({
  theme
}) => theme.inputSelect.bg, ({
  theme
}) => theme.inputSelect.color, ({
  theme
}) => theme.inputSelect.hover.bg, ({
  theme
}) => theme.inputSelect.focus.bg, ({
  theme
}) => theme.inputSelect.disabled.bg, ({
  theme
}) => theme.inputSelect.selectBox.bg, ({
  theme
}) => `0 ${theme.field.radius} ${theme.field.radius} 0`, ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.full);
var InputSelect = ({
  selectId,
  id: id2,
  options,
  disabled,
  long,
  full,
  error,
  warning: warning2,
  placeholder,
  selectPlaceholder,
  registerSelect: _registerSelect = {},
  registerInput: _registerInput = {},
  defaultValue,
  selectDefault
}) => {
  const classes = (0, import_classnames.default)({
    long,
    full
  });
  const selectClasses = (0, import_classnames.default)({
    "match-long": long,
    "match-full": full
  });
  return (0, import_jsx_runtime.jsxs)(InputSelectBox, Object.assign({
    className: classes
  }, {
    children: [(0, import_jsx_runtime.jsx)(Input, Object.assign({
      id: id2,
      disabled,
      className: `input ${classes}`,
      placeholder,
      error,
      warning: warning2,
      full: true,
      defaultValue
    }, _registerInput)), (0, import_jsx_runtime.jsx)(Select, Object.assign({
      id: selectId,
      options,
      defaultValue: selectDefault,
      disabled,
      className: "select",
      containerClassName: `select-box ${selectClasses}`,
      placeholder: selectPlaceholder,
      error,
      warning: warning2
    }, _registerSelect))]
  }));
};
var Root = st($322c88a641701f3b$export$be92b6f5f03c0fe9).withConfig({
  displayName: "NavigationMenustyles__Root",
  componentId: "wgivfz-0"
})(["background-color:", ";padding:2.8rem;"], (props) => props.theme.secondary.step2);
var Content = st($322c88a641701f3b$export$7c6e2c02157bb7d2).withConfig({
  displayName: "NavigationMenustyles__Content",
  componentId: "wgivfz-1"
})(["position:absolute;top:100%;background-color:", ";border:1px solid ", ";border-radius:4px;font-weight:", ";line-height:", ";letter-spacing:", ";font-size:", ";padding:5px;display:flex;flex-direction:column;gap:4px;width:fit-content;"], ({
  theme
}) => theme.navigationMenu.content.bg, ({
  theme
}) => theme.navigationMenu.content.border, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.lineHeight, ({
  theme
}) => theme.font.letterSpacing, ({
  theme
}) => theme.font.size.md);
var NavMenuBaseItemStyles = nt(["padding:8px 12px;cursor:pointer;outline:none;user-select:none;font-weight:", ";line-height:", ";letter-spacing:", ";font-size:", ";border-radius:4px;color:", ";&:hover{color:", ";}&:focus{color:", ";}"], ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.lineHeight, ({
  theme
}) => theme.font.letterSpacing, ({
  theme
}) => theme.font.size.lg, ({
  theme
}) => theme.navigationMenu.baseItem.color, ({
  theme
}) => theme.navigationMenu.baseItem.hover.bg, ({
  theme
}) => theme.navigationMenu.baseItem.focus.bg);
var List = st($322c88a641701f3b$export$54c2e3dc7acea9f5).withConfig({
  displayName: "NavigationMenustyles__List",
  componentId: "wgivfz-2"
})(["display:flex;list-style:none;margin:0;padding:0;gap:30px;"]);
var Trigger = st($322c88a641701f3b$export$41fb9f06171c75f4).withConfig({
  displayName: "NavigationMenustyles__Trigger",
  componentId: "wgivfz-3"
})(["all:unset;", " display:flex;align-items:center;justify-content:space-between;"], NavMenuBaseItemStyles);
var Item = st($322c88a641701f3b$export$6d08773d2e66f8f2).withConfig({
  displayName: "NavigationMenustyles__Item",
  componentId: "wgivfz-4"
})([""]);
var Link = st($322c88a641701f3b$export$a6c7ac8248d6e38a).withConfig({
  displayName: "NavigationMenustyles__Link",
  componentId: "wgivfz-5"
})(["", " display:block;text-decoration:none;&[data-active]{color:", ";border-bottom:2px ", " solid;}"], NavMenuBaseItemStyles, ({
  theme
}) => theme.navigationMenu.link.active.color, ({
  theme
}) => theme.navigationMenu.link.active.border);
var Indicator = st($322c88a641701f3b$export$adb584737d712b70).withConfig({
  displayName: "NavigationMenustyles__Indicator",
  componentId: "wgivfz-6"
})(["bottom:0;height:2px;background-color:", ";transition:all 0.5s ease;display:flex;align-items:flex-end;justify-content:center;overflow:hidden;"], ({
  theme
}) => theme.secondary.step11);
var scaleIn = ct({
  from: {
    transform: "rotateX(-30deg) scale(0.9)",
    opacity: 0
  },
  to: {
    transform: "rotateX(0deg) scale(1)",
    opacity: 1
  }
});
var scaleOut = ct({
  from: {
    transform: "rotateX(0deg) scale(1)",
    opacity: 1
  },
  to: {
    transform: "rotateX(-10deg) scale(0.95)",
    opacity: 0
  }
});
var Viewport = st($322c88a641701f3b$export$d5c6c08dc2d3ca7).withConfig({
  displayName: "NavigationMenustyles__Viewport",
  componentId: "wgivfz-7"
})(["position:relative;transform-origin:top center;transition:width,height,300ms ease;&[data-state='open']{animation:", " 200ms ease;}&[data-state='closed']{animation:", " 200ms ease;}"], scaleIn, scaleOut);
var NavMenuViewport = Viewport;
var NavMenuIndicator = Indicator;
var NavMenu = (_a) => {
  var {
    children
  } = _a, props = __rest3(_a, ["children"]);
  return (0, import_jsx_runtime.jsx)(Root, Object.assign({}, props, {
    children
  }));
};
var NavMenuList = (_a) => {
  var {
    children
  } = _a, props = __rest3(_a, ["children"]);
  return (0, import_jsx_runtime.jsx)(List, Object.assign({}, props, {
    children
  }));
};
var NavMenuItem = (_a) => {
  var {
    active = false,
    className,
    children
  } = _a, props = __rest3(_a, ["active", "className", "children"]);
  const classes = (0, import_classnames.default)({
    active
  });
  return (0, import_jsx_runtime.jsx)(Item, Object.assign({
    className: `${className} ${classes}`
  }, props, {
    children
  }));
};
var NavMenuTrigger = (_a) => {
  var {
    color = "secondary",
    children
  } = _a, props = __rest3(_a, ["color", "children"]);
  return (0, import_jsx_runtime.jsx)(Trigger, Object.assign({}, props, {
    children
  }));
};
var NavMenuContent = (_a) => {
  var {
    color = "secondary",
    className,
    children
  } = _a, props = __rest3(_a, ["color", "className", "children"]);
  return (0, import_jsx_runtime.jsx)(Content, Object.assign({}, props, {
    children
  }));
};
var NavMenuLink = (_a) => {
  var {
    children
  } = _a, props = __rest3(_a, ["children"]);
  return (0, import_jsx_runtime.jsx)(Link, Object.assign({}, props, {
    children
  }));
};
var WrappedSelect = ({
  id: id2,
  rules,
  helperText,
  address,
  long,
  full,
  success: success2,
  warning: warning2,
  error,
  className,
  placeholder,
  defaultValue,
  value,
  disabled,
  hidden,
  rightAddon,
  label,
  loading,
  info: info2,
  options,
  containerClassName
}) => {
  const {
    register
  } = useFormContext();
  return (0, import_jsx_runtime.jsx)(FieldWrapper, Object.assign({
    id: id2,
    helperText,
    rules,
    label,
    loading,
    info: info2,
    error,
    success: success2,
    warning: warning2,
    hidden,
    long,
    full,
    address,
    rightAddon
  }, {
    children: (0, import_jsx_runtime.jsx)(Select, Object.assign({}, register(id2, rules), {
      id: id2,
      long,
      full,
      success: success2,
      warning: warning2,
      error,
      className,
      placeholder,
      defaultValue,
      value,
      disabled,
      hidden,
      options,
      containerClassName
    }))
  }));
};
var ShamanPermission = (props) => {
  const {
    id: id2 = "shamanPermission"
  } = props;
  const options = import_utils6.SHAMAN_PERMISSIONS.map((permission) => ({
    name: permission.displayName,
    value: permission.id
  }));
  return (0, import_jsx_runtime.jsx)(WrappedSelect, Object.assign({}, props, {
    id: id2,
    options
  }));
};
var WrappedInputSelect = ({
  id: id2,
  selectId,
  rules,
  options,
  disabled,
  long,
  full,
  error,
  warning: warning2,
  placeholder,
  selectPlaceholder,
  defaultValue,
  selectDefault,
  helperText,
  label,
  loading,
  info: info2,
  success: success2,
  hidden,
  address,
  rightAddon
}) => {
  const {
    register
  } = useFormContext();
  return (0, import_jsx_runtime.jsx)(FieldWrapper, Object.assign({
    id: id2,
    rules,
    helperText,
    label,
    loading,
    info: info2,
    error,
    success: success2,
    warning: warning2,
    hidden,
    long,
    full,
    address,
    rightAddon
  }, {
    children: (0, import_jsx_runtime.jsx)(InputSelect, {
      options,
      disabled,
      long,
      full,
      error,
      warning: warning2,
      placeholder,
      selectPlaceholder,
      defaultValue,
      selectDefault,
      registerInput: register(id2, rules),
      registerSelect: register(selectId),
      id: id2,
      selectId
    })
  }));
};
var defaultOptions2 = [{
  name: "Days",
  value: "days"
}, {
  name: "Hours",
  value: "hours"
}, {
  name: "Minutes",
  value: "minutes"
}, {
  name: "Seconds",
  value: "seconds"
}];
var TimePicker = (_a) => {
  var {
    id: id2,
    options = defaultOptions2,
    selectId,
    rules
  } = _a, props = __rest3(_a, ["id", "options", "selectId", "rules"]);
  const {
    setValue,
    watch
  } = useFormContext();
  const unitId = (0, import_react40.useMemo)(() => selectId || `${id2}Units`, [selectId, id2]);
  const [amt, units] = watch([id2, unitId]);
  (0, import_react40.useEffect)(() => {
    if ((0, import_utils6.isNumberString)(amt) && units in import_utils6.conversionFns) {
      setValue(`${id2}InSeconds`, (0, import_utils6.toSeconds)(amt, units));
    }
    if (amt === "") {
      setValue(`${id2}InSeconds`, 0);
    }
  }, [amt, units, id2, setValue]);
  return (0, import_jsx_runtime.jsx)(WrappedInputSelect, Object.assign({
    id: id2,
    selectId: unitId,
    options,
    rules: Object.assign(Object.assign({}, rules), {
      validate: {
        isNumber: (value) => value === "" || (0, import_utils6.isNumberString)(value) ? true : "Must be a number",
        noZero: (value) => value !== "0" ? true : "Time units cannot be zero"
      }
    })
  }, props));
};
var handleFieldLabel = (fieldLabel, switchOn) => {
  if (typeof fieldLabel === "string") {
    return fieldLabel;
  }
  if (switchOn) {
    return fieldLabel.on;
  }
  return fieldLabel.off;
};
var WrappedSwitch = (props) => {
  const {
    id: id2,
    helperText,
    info: info2,
    label,
    error,
    success: success2,
    warning: warning2,
    switches,
    disabled,
    rules
  } = props;
  const {
    control,
    watch
  } = useFormContext();
  return (0, import_jsx_runtime.jsx)(FieldWrapper, Object.assign({
    id: id2,
    helperText,
    info: info2,
    label,
    error,
    success: success2,
    warning: warning2
  }, {
    children: switches.map((switchProps) => {
      const switchValue = watch(switchProps.id);
      return (0, import_jsx_runtime.jsx)(Controller, {
        name: switchProps.id,
        rules,
        control,
        defaultValue: switchProps.defaultChecked || false,
        render: ({
          field
        }) => {
          return (0, import_jsx_runtime.jsx)(Switch, Object.assign({}, field, switchProps, {
            switchOn: field.value,
            onCheckedChange: field.onChange,
            fieldLabel: handleFieldLabel(switchProps.fieldLabel, switchValue),
            disabled,
            ref: field.ref
          }));
        }
      }, switchProps.id);
    })
  }));
};
var WrappedTextArea = ({
  id: id2,
  rules,
  helperText,
  long,
  full,
  icon,
  success: success2,
  warning: warning2,
  error,
  number,
  address,
  className,
  placeholder,
  defaultValue,
  value,
  disabled,
  hidden,
  rightAddon,
  label,
  loading,
  info: info2
}) => {
  const {
    register
  } = useFormContext();
  return (0, import_jsx_runtime.jsx)(FieldWrapper, Object.assign({
    helperText,
    label,
    loading,
    info: info2,
    error,
    success: success2,
    warning: warning2,
    hidden,
    long,
    full,
    address,
    rightAddon,
    id: id2,
    rules
  }, {
    children: (0, import_jsx_runtime.jsx)(TextArea, Object.assign({}, register(id2, rules), {
      id: id2,
      long,
      full,
      icon,
      success: success2,
      warning: warning2,
      error,
      number,
      address,
      className,
      placeholder,
      defaultValue,
      value,
      disabled,
      hidden
    }))
  }));
};
var Container = st.div.withConfig({
  displayName: "Radiostyles__Container",
  componentId: "sc-1t9l4j4-0"
})(["align-items:center;display:flex;padding-bottom:1.4rem;"]);
var RadioGroup = $f99a8c78507165f7$export$be92b6f5f03c0fe9;
var RadioItem = st($f99a8c78507165f7$export$6d08773d2e66f8f2).withConfig({
  displayName: "Radiostyles__RadioItem",
  componentId: "sc-1t9l4j4-1"
})(["all:unset;background-color:", ";border:2px solid ", ";border-radius:100%;cursor:pointer;height:2rem;position:relative;width:2rem;&:hover{background-color:", ";border:2px solid ", ";}:focus{background-color:", ";border:2px solid ", ";outline:none;}:disabled{background-color:", ";border:2px solid ", ";cursor:not-allowed;}&[data-state='checked']{background-color:", ";border:2px solid ", ";&:hover{background-color:", ";border:2px solid ", ";}:focus{background-color:", ";border:2px solid ", ";outline:none;}:disabled{background-color:", ";border:2px solid ", ";cursor:not-allowed;}}"], ({
  theme
}) => theme.radio.bg, ({
  theme
}) => theme.radio.border, ({
  theme
}) => theme.radio.hover.bg, ({
  theme
}) => theme.radio.hover.border, ({
  theme
}) => theme.radio.focus.bg, ({
  theme
}) => theme.radio.focus.border, ({
  theme
}) => theme.radio.disabled.bg, ({
  theme
}) => theme.radio.disabled.border, ({
  theme
}) => theme.radio.active.bg, ({
  theme
}) => theme.radio.active.border, ({
  theme
}) => theme.radio.active.hover.bg, ({
  theme
}) => theme.radio.active.hover.border, ({
  theme
}) => theme.radio.active.focus.bg, ({
  theme
}) => theme.radio.active.focus.border, ({
  theme
}) => theme.radio.active.disabled.bg, ({
  theme
}) => theme.radio.active.disabled.border);
var RadioIndicator = st($f99a8c78507165f7$export$adb584737d712b70).withConfig({
  displayName: "Radiostyles__RadioIndicator",
  componentId: "sc-1t9l4j4-2"
})(["align-items:center;display:flex;height:100%;justify-content:center;position:relative;width:100%;&::after{background-color:", ";border-radius:50%;content:'';display:block;height:1rem;width:1rem;}&[data-disabled]{&::after{background-color:", ";}}"], ({
  theme
}) => theme.radio.indicator.bg, ({
  theme
}) => theme.radio.indicator.disabled.bg);
var LabelContainer = st.label.withConfig({
  displayName: "Radiostyles__LabelContainer",
  componentId: "sc-1t9l4j4-3"
})(["align-items:center;display:flex;margin-left:1.2rem;label{margin-right:0.1rem;}svg{transform:translateY(0.1rem);}"]);
var Radio = import_react40.default.forwardRef((props, ref) => {
  const {
    className,
    radios,
    defaultValue
  } = props;
  return (0, import_jsx_runtime.jsx)(RadioGroup, Object.assign({}, props, {
    defaultValue,
    className
  }, {
    children: radios.map((radio) => (0, import_jsx_runtime.jsxs)(Container, {
      children: [(0, import_jsx_runtime.jsx)(RadioItem, Object.assign({}, radio, {
        children: (0, import_jsx_runtime.jsx)(RadioIndicator, {
          ref
        })
      })), (0, import_jsx_runtime.jsx)(LabelContainer, {
        children: (0, import_jsx_runtime.jsx)(Label$2, Object.assign({
          id: radio.id
        }, {
          children: radio.label
        }))
      })]
    }, radio.id))
  }));
});
var WrappedRadio = (props) => {
  const {
    id: id2,
    helperText,
    info: info2,
    label,
    error,
    success: success2,
    warning: warning2,
    radioGroup,
    disabled,
    rules
  } = props;
  const disableAll = disabled;
  const radios = (0, import_react40.useMemo)(() => {
    return disableAll ? radioGroup === null || radioGroup === void 0 ? void 0 : radioGroup.radios.map((radio) => Object.assign(Object.assign({}, radio), {
      disabled: true
    })) : radioGroup.radios;
  }, [radioGroup, disableAll]);
  return (0, import_jsx_runtime.jsx)(FieldWrapper, Object.assign({
    id: id2,
    helperText,
    info: info2,
    label,
    error,
    success: success2,
    warning: warning2
  }, {
    children: (0, import_jsx_runtime.jsx)(Controller, {
      name: radioGroup.name || id2,
      defaultValue: radioGroup.defaultValue,
      rules,
      render: ({
        field
      }) => {
        return (0, import_jsx_runtime.jsx)(Radio, {
          onValueChange: field.onChange,
          radios,
          defaultValue: radioGroup.defaultValue,
          ref: field.ref
        });
      }
    })
  }));
};
var WrappedCheckbox = (props) => {
  const {
    id: id2,
    helperText,
    info: info2,
    label,
    error,
    success: success2,
    warning: warning2,
    checkboxes
  } = props;
  const {
    control
  } = useFormContext();
  return (0, import_jsx_runtime.jsx)(FieldWrapper, Object.assign({
    id: id2,
    helperText,
    info: info2,
    label,
    error,
    success: success2,
    warning: warning2
  }, {
    children: checkboxes.map((checkbox) => (0, import_jsx_runtime.jsx)(Controller, {
      name: checkbox.name || id2,
      control,
      defaultValue: checkbox.defaultChecked,
      render: ({
        field
      }) => {
        return (0, import_jsx_runtime.jsx)(Checkbox, Object.assign({}, field, checkbox, {
          value: field.value,
          checked: field.value,
          onCheckedChange: checkbox.onCheckedChange || field.onChange,
          ref: field.ref
        }));
      }
    }, checkbox.id))
  }));
};
var TabsContainer = st.div.withConfig({
  displayName: "Tabsstyles__TabsContainer",
  componentId: "lgf5si-0"
})(["display:flex;flex-direction:column;"]);
var TabLinks = st.div.withConfig({
  displayName: "Tabsstyles__TabLinks",
  componentId: "lgf5si-1"
})(["background-color:", ";display:flex;list-style:none;width:'100%';.nav-link-list{a{margin-right:4rem;}}.mobile-box{padding:2.6rem;}"], ({
  theme
}) => theme.secondary.step2);
var TabLink = st.li.withConfig({
  displayName: "Tabsstyles__TabLink",
  componentId: "lgf5si-2"
})(["border-bottom:2px transparent solid;color:", ";cursor:pointer;font-size:2.2rem;letter-spacing:1.5px;margin:2.2rem 2.2rem 2.2rem 0;padding-bottom:1rem;transition:0.2s all;svg{margin-left:0.3rem;}&:hover{color:", ";text-decoration:none;}&.selected{color:white;border-bottom:2px ", " solid;}&.nav-tabs{padding-bottom:1rem;}"], ({
  theme
}) => theme.secondary.step9, ({
  theme
}) => theme.secondary.step10, ({
  theme
}) => theme.secondary.step9);
function reducer(state, action) {
  switch (action.type) {
    case "selected":
      return {
        selected: action.payload
      };
    default:
      return state;
  }
}
var Tabs = ({
  tabList
}) => {
  const [{
    selected
  }, dispatch] = (0, import_react40.useReducer)(reducer, {
    selected: 0
  });
  const TabsContent = tabList && tabList.find((_2, index2) => index2 === selected);
  return (0, import_jsx_runtime.jsxs)(TabsContainer, {
    children: [(0, import_jsx_runtime.jsx)(TabLinks, Object.assign({
      className: "nav-link-list"
    }, {
      children: tabList.map((tab, index2) => (0, import_jsx_runtime.jsx)(TabLink, Object.assign({
        role: "tab",
        tabIndex: selected === index2 ? 0 : -1,
        className: selected === index2 ? "selected" : "",
        onClick: () => dispatch({
          type: "selected",
          payload: index2
        })
      }, {
        children: tab.label
      }), tab.label))
    })), (0, import_jsx_runtime.jsx)("div", Object.assign({
      className: "tab-content"
    }, {
      children: (0, import_jsx_runtime.jsx)("div", Object.assign({
        className: "tab-panel",
        role: "tabpanel"
      }, {
        children: TabsContent && (0, import_jsx_runtime.jsx)(TabsContent.Component, {})
      }))
    }))]
  });
};
var GatedButton = (_a) => {
  var {
    rules
  } = _a, props = __rest3(_a, ["rules"]);
  const error = (0, import_react40.useMemo)(() => rules.find((rule) => typeof rule === "string"), [rules]);
  return !error ? (0, import_jsx_runtime.jsx)(Button, Object.assign({}, props)) : (0, import_jsx_runtime.jsx)(Tooltip, Object.assign({
    triggerAsChild: true,
    triggerEl: (0, import_jsx_runtime.jsx)(Button, Object.assign({}, props, {
      disabled: true
    })),
    content: error,
    side: "bottom"
  }, props));
};
var MemberCard = ({
  align: _align = "end",
  size: size2,
  variant,
  profile,
  fullWidth,
  profileButtonColor,
  dropdownColor,
  children
}) => {
  return (0, import_jsx_runtime.jsxs)(DropdownMenu, {
    children: [(0, import_jsx_runtime.jsx)(DropdownProfileTrigger, {
      size: size2,
      variant,
      color: profileButtonColor,
      profile,
      fullWidth
    }), (0, import_jsx_runtime.jsx)(DropdownContent, Object.assign({
      color: dropdownColor,
      align: _align
    }, {
      children
    }))]
  });
};
var MemberCardExplorerLink = ({
  explorerNetworkId,
  profileAddress,
  children
}) => {
  const explorerLink = (0, import_react40.useMemo)(() => {
    if (explorerNetworkId) {
      return (0, import_keychain_utils.generateExplorerLink)({
        chainId: explorerNetworkId,
        address: profileAddress,
        type: "address"
      });
    }
  }, [profileAddress, explorerNetworkId]);
  return (0, import_jsx_runtime.jsx)(DropdownItem, Object.assign({
    asChild: true
  }, {
    children: (0, import_jsx_runtime.jsx)(DropdownLink, Object.assign({
      href: explorerLink
    }, {
      children
    }))
  }));
};
var MemberCardCopyAddress = (_a) => {
  var {
    profileAddress,
    children
  } = _a, props = __rest3(_a, ["profileAddress", "children"]);
  const copy = useCopyToClipboard();
  const handleCopy = () => {
    copy(profileAddress, "Success!");
  };
  return (0, import_jsx_runtime.jsx)(DropdownItem, Object.assign({
    onClick: handleCopy
  }, props, {
    children
  }));
};
var MemberCardItem = (_a) => {
  var {
    children
  } = _a, props = __rest3(_a, ["children"]);
  return (0, import_jsx_runtime.jsx)(DropdownItem, Object.assign({
    asChild: true
  }, props, {
    children
  }));
};
function makeAppList(apps) {
  return apps.map((app, index2) => (0, import_jsx_runtime.jsx)(DropdownItem, Object.assign({
    asChild: true
  }, {
    children: (0, import_jsx_runtime.jsx)(Button, Object.assign({
      href: app.url,
      IconLeft: app.Icon,
      justify: "flex-start",
      color: "secondary"
    }, {
      children: app.name
    }))
  }), index2));
}
var AppSwitcher = ({
  currentApp,
  apps
}) => {
  const appList = makeAppList(apps);
  return (0, import_jsx_runtime.jsxs)(DropdownMenu, {
    children: [(0, import_jsx_runtime.jsx)(DropdownButtonTrigger, Object.assign({
      IconLeft: currentApp.Icon
    }, {
      children: currentApp.name
    })), (0, import_jsx_runtime.jsx)(DropdownContent, Object.assign({
      align: "end"
    }, {
      children: appList
    }))]
  });
};
var img = "data:image/svg+xml,%3csvg width='73' height='61' viewBox='0 0 73 61' fill='none' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3crect width='73' height='61' fill='url(%23pattern0)'/%3e%3cdefs%3e%3cpattern id='pattern0' patternContentUnits='objectBoundingBox' width='1' height='1'%3e%3cuse xlink:href='%23image0_4960_98745' transform='translate(-0.00272859) scale(0.00226454 0.00271003)'/%3e%3c/pattern%3e%3cimage id='image0_4960_98745' width='444' height='369' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAbwAAAFxCAYAAAAIxh21AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAADZ4SURBVHgB7d15kBzXfR/w3%2bvZg%2bIhDgnQNi2JaIqiyMi0MZBEWwRIYtaKXJbtGAO5LEupJJgtmYBVPhZwUpbsJIVBKoqL9B9YWFbJBGnvwKkUXbLLu6xinCon8Q7EEJLKB5a2YpHWgSYVRRIBAksJhHDs9PP79bwBBouZPma6e153fz/l9oA7vYd2p%2bfb7/i9JwggAeVPL9sla6ppCdp7cve2FQIAGDOLAGK24cljNas0dVwKsb1NYrG8sFwmAIAxmyCAmHCwWWvT%2b6VLe4lE98P2hPqYetxHAABjJAggBtyFaVlTSyTE5r4nSNp3es/WeQIAGBMEHoxsw5Nf2CXdNRVmwq/rctWdvLBldXbGIQCAMUDgwdC6XZiq9bY35KesqNCbUaG3SgAAKcOkFRiK14V5cfp4hLBjFT2eBwCQOgQeRHbr4c/P8SxM1T9gU0SuCkiexUkAAClDlyaExl2YpUvXHZQk6zQajOcBQOrQwoNQyoeXK9yFGUPYeV/OujS9SAAAKULgQSCvC5OmlofpwvRR2fjEsYMEAJASdGnCQF4X5tr0gpSU2JibK9ozq4881CIAgIQh8KCvjU88W3Xd0kLMrbp%2bMJ4HAKlAlyZcg7swXVlaTiHsWLl0aXqBAAAShhYeXKa7MBdVF2aVUmYJmj/1yFastwkAiUHggSfFLsyBMJ4HAElClybQrU98bn%2bKXZgDWbK0oFqZNgEAJADbAxWYt0nrBM/ClFUyg63H82YIACBmaOEVFHdhepu0jmG8zo8kqt76%2bLEo63MCAISCwCugW584dtDrwvTfzmd8BB0sq0CmDFGtZOzqDmA4TFopkCtdmGa16gZwdH2e8VsJqbCbUw91dcwIIbD1EYCh0MIrCN6hwMQuTB926aL59Xkq7Hi7I97JvaIOrA8KYDC08HJuiE1azSJp3%2bk9W%2bfJQCrsOJDr6z7cVK28WQIA4yDwcszbpNWaWiIhNlOGlUhuObl72woZQo/XcWuuOuCUhgq9AwQARkGXZk5tePILuzqbtGY77FibxCK3VMkcVSLfruGGCkXMNAUwDAIvZzgYeBamdNtNY2dhRmfzxrNkCNV6W1IPQS24gyr0dhEAGANdmjnS6cKcHvuKKYkxbDxPBVpDPez3OYVnbPLMTWO6YwGKDIGXE7zDger8a%2bSoVdfPqhrPmzFsPK%2bpHvxachx6W1ToOQQAY4XAyzhvhwPV3SdJ1qkYjKvPU6G3TP5jeg51WnoOAcDYYAwvw8qHlyvWxenjBQo7Zk9wmYVZdlIn1Aax1bGI1VgAxguBl1HchWnRVH7H63y4kvaatN6mXl2FF7x2fE5DYTrAmKFLM2P0Jq28PFiNim1Vd206ZAjVgrPVw3F1%2bLXkUJgOMCZo4WWIt8MBd2Ei7FjZujRtVH2eHqPjlp7f%2bGJdL0cGAClD4GUEd2GasEmrYSqmjefpEoR9Aac1EHoA6UOXpuF0F%2bZihhZ9Tp2waOerv7h1iQwSokaP1VVAHiEASAUCz2Dchem6pQW06gIZN57HUJgOYBZ0aRrq1ic%2btx9dmKF543lkGBVkDfXg14Lj8cdlPdkFABKGFp5hMrZJq1EsQfOnHtkaNH6WOhSmA5gBgWcQrwtTWos5Xx4sUa5oz6w%2b8lCLDKILzrlcwfY5zaHOEmTYMR0gIejSNATvcOB1YSLsRmLJEpcq2GSQkIXpNqEwHSBRCLwx4y7MDU8cW87sjuTmKZcuTS%2bQYULW6FX1LuoAkAAE3hhtePJYjTdpxXhdvKQKjo2qxUyGQWE6wHhhDG8MuLbO4oJptOoSZeJ4HlOBVlcPQS25hgrIoE1mASACBF7KvLC7ONVSt/ubCZLGWwnNmFafx1CYDpA%2bdGmmjPdxU29iZwjSYJs4nsd0jV5QC25eBWOFACAWCLwxaLfFrOrOdAgSx%2bN5Jm0l1AuF6QDpQpfmmHRq7rgMAdJg6ngeQ2E6QDrQwhuTU/zmKyUmJaTEkqUFk7YSWod3TPdbT9OmTksPNZoAI0DgjdHpPdsaqondIkgDj%2bcZWditC9ODlkSzCYXpACNB4I2ZN57nX5cFMTF1PE%2b33MJMrkFhOsAIMIZnAIznpatEcsvJ3duM2ZJHhRj/LFHKVFCjBzAEtPAM4I3nkTxEkIo2iUVTxvNU2PGKMFFrMrFjOsAQEHiGOL17G3e1YSPQdKjxvOvGvvSYDq1hu1g59HYRAISGwDOI2xY8Ww/jeSmQJOvjHM/TYdeg0aAwHSACBJ5BVj/6gCMkzRKkQ9D%2b2w4/l3pg6JZZI%2bC0JeosNO0HhekAEWDSioFuPfzcvPrTzBGkgdfb3MJLvlEKdIvseMBpDunNYEMuNM3nozAdIABaeAZyJy82CON5abEneOeKFOiWWNBsXIc64eUFsHpsUvCamzahMB0gEALPQNzawHheelxJe5Mez%2bsJO79QcqhPSy3kQtM2BYcpQKEh8AzF43mqwxm1VmlR43nlhWWbEtATdrbPaXxzs3NQt2SIhaZZBYXpAIMh8Ax2%2bpGt86jPS03ZujQde32e7mbkCSh2wKmzKtSCurHDlK5gx3SAARB4hvPG87CVUFoqCYznhSks36fCbingnO6amzxz0wk4FYXpAH0g8Aznjee5gt/kMJ6XAh7P2/Dk52Ip6NahUw847YAKsnkKKWLooTAdoAfKEjLi1ieO7VUtvbGvDlIQq7pUwaEhhSwsP6DH5ob5%2bjZ1yhuCumC3hOgqBSgEtPAygsfzhAyctADx8MbzaEgqjLiGshFw2pFhw47pyS1hWv4oTAfQEHgZ0p66sBfjeampbHziWOQWtQqXmnoI6qJ8noZfQ/My3XIL2kcPq7EAaOjSzJjy4ecqFomglTogJq5oz6x6u1kE06uoDFVrNwr1fRvqIWiSikN69RYCKCi08DJmlfdxE4F39RATS5YWw9Tn6RYUd4OmGnYMhekA4SDwMojH86SkwGnsEIty6dK0bzF3hMLyxNa7RGE6QDAEXkbJqQuzGM9LhySqDhrP04XlQWHHEl/cWX39unpoBZyGwnQoLAReRnF9nmW1sZVQSrg%2br/zEs9U%2bT3GLyQ749DCrqMSF12AN%2bl4oTIdCQuBl2CmeTIHxvNSo8byF3vE8FRrc6qsFfNoBveNBKvSkFA49J%2bBUFKZD4SDwMs6rzwvuxoJ42N3xPN1CCiotGLqwfBQ9NXpOwKlN7JgORYLAy4F2W2A8LyU8nrf0tVM8ZtcIOPXIOMKuS4demC2mUKMHhYE6vJzYqMaXXFnCtPOEffjt30e/t/2uoNOeV4FjRMtJF8IHrRrjEHZMhwJACy8nvPE8KbF/XoJ%2beMP19In3bAo6zVFHlQyhd2EIGue1CTumQwGghZczGw4fW5YGveHmxR03TdPTP/1D3qMPhwxtKYVcjWVF/exbCCCn0MLLGW88D1sJxSrrYcf0eGLQZsIoTIdcQ%2bDlzOpHH3As0d5JEIubpyfChJ1XCmD6GJj6%2bXhWadBqLChMh9xC4OWQN55HMuhuHkIIEXa079mv0S3NlkPZwKGHwnQoJAReTp3evS3MGxv4%2bNT2t3kTVfw8%2brdfpz964dvl0qXrMrE5L3ZMhyJD4OWY2xZh6rCgj4%2b98y30obff5nsOh91jf/P/vH9LkvVbHz828h53aYgQeihMh1xB4OUYj%2bcJSVhvMyIOu99415t9z/n9L37zcthdJmj/bYefy0RARChMX0RhOuQFyhIK4NbDz82rP/UcQaBfuu92%2bsQDtu85f%2b6cpn/9P18c9LTjTl7Ywot7UwaoMKtS8D553DU%2bk8XNY3Vt4aCWd0v9b2oRFMYEQe65kxcb1qXp7eqf6J7yse32NwaG3d%2bfPke/8tmv%2bp1iT6xN84SPTCzqzW/4KhS4F8CvHKGin8/i7F8OPL8JOC2CwkCXZgFwawPjef54JuZ/fd89vue8fPYC/Zu/eIFeu7Dmex5vJZSV8Tymd3MIWqWnpneHAMgsBF5B8Hie6sDG0mN9dAvLueZuEA67Hc/8X3r5uxcoFDWe17uVkOl0YXrQ62MvyhUgyxB4BcJbCaE%2b72phVlF57eJatLDrKKtu5EUVeplZn1KHXlBhOpcrZKb1CtALgVcwPJ6HrYQ6uEX3R%2b%2b7N7Cw/FeOfjVq2HVV9HheZqjQq1Nw/eZB1OhBFiHwCsYbz3MF12AVfjzv9x6%2bK7Cw/Lc%2b53izMofF43lZauVpYWr05lGjB1mDwCsgjOd1au1%2byr7V9xwuLH/8i9%2bkka1NZCoYQhamc4hj81jIFAReQfF4npCB4zW5FKawvHcVlZFJK3OtaV2YHtQTgNCDTEHgFVh76sLeoo3ncWF5UNg99Y%2bvxBZ2QtDS6u5tmVzTNGTo2YTNYyEjEHgF5o3nCVmYrYS4CzNUYflR38Ly0KQKu/bEGzK9tJsKPQ7rMDumLxKA4RB4Bee1PkQ2VgUZBU9O4UkqfrqF5TFYVS3nfWce2bpzdXZL5icH6cL0oNdIFZvHgukQeOCN50lJS5RTXHbA5QexFpYPJByX5MzpPVzzmB8q9Ph/T9BEJ2weC0ZD4IFHTl2YzeN4XoKF5dfgSUDu5HVbsjpmF0QXpgctXIDNY8FYCDzw8HieZbVztZUQt%2bjC7FgeQ9h5XZiv7tlaz0MXph8VerzKSivgNGweC0ZC4MFlpx55qJWn8TxeDDoo7H756Ffp7189R8NTXZiTYkveujAD8ESnoFZsU289BGAMBB5cxavPy8GWKf/lAdvb7scP19r98T%2b%2bQsNSv6dDXhfm7AMOFYguTOfQcwJOxeaxYBQEHlyjPXlhZ5bH87iwfM99t/ueM2Jh%2baogMfvq7q17896FOUhPjZ7jcxoK08Eo2PE8I9SbRo06byDrOUns2rzxiWerriwF7YRtjJunJugTW231WKKf2uS/ZNhrF9v05y8Nvz7mlluvP3rvhhtOEDBbHdWAcxzq9Boc1SUOqdFhO%2bhvdUBPxIGCQOBlhLpw%2baK1%2bzzVVBdtIpNNbn38uYa6lc/EjDseqzv%2boXcSGC2x1%2bogCDzoNUEAA5zes62x4fCx7TL4Dh4AUna2Xq/I/r0%2bmbOmhgluaTYTL%2bdB4IGvdlvMWiV5nHJyYQHkRZsEL%2bdmUw5YJHlRg8QDD5NWwBdvJWSJdmHW2wTIgjOqdUc5CTvmphB2DIEHgbz6PJJBK2wAQEos8hYAyBOHUoDAg1BO797GF1gul8yCdLS/8Q2bIC7bKUfSGL9jGMOD0Ny22JnF8TwuQfitzzmB5226cerA0z9zX5MMcvY3PnacMrTXnLVxA13/sY/1fc49caKquuKq6s2tRTC079TrdZmj7kxK8UYagQeh8XjehsePzUqRrb3PXrvQpq/7rpUp1Djl2uzzH35Xy7Q6ndfqs456qFBOlMiaoxys5DNOkrJRKhSWIJla4KFLEyJ5dc/WpTyN5wlBLV4erDNOaSJ5lHJEkqypVp5NMBRu3VG%2bWnfqNUHPU0oQeBCZO3mxQXkYz%2bMdDh7ZOmPy8mAih%2bOmqpWH7YOGlLfWHXNTbPEj8CAy3kqIx/P4n5RJ3IXZzsQmre0cdv%2bpVl6dx/IIIslj645SKjjvQuDBUHg8T/W9Z24rITX%2buGR2F%2bbV1JuBQ5m9sRislMOWSpLUDUI5j627NMfvGAIPhvbq7m3NDI3neZu0nnlk687s7XAgn6ac4eXqXqvX81ZLlpiJTjewTTmjXgepvrYReDASbzzP8K2ENl436bgkM9GF2U8e9ifsT%2bzHBJZg/DtSr99c3hy4KY9RI/BgJN54nit4XzRjW03vu6PcWt29LbOTP9Q43hLlU1l1bS4QDMRdmRaJzGzTFZGTdk0mAg9GxuN5qhlygCAR6k2BbyZyucoNujb95bUrk6nxuxalDIEHsTj9yNZ5IekIQULyN453hTiIWZvXOlv/yFxeuzKZ6rlIvcYUgQexaU9d2Gv6eF5WuTlfnUR12y1gPO8K3g2hTW4mx5wjSL2rHoEHsfHG84Qcy1ZC6g0zd1P3e%2bmxjjz/b7R5rAqh15mkYnX2ussx%2bbTuqk8VAg9i5U0OEZRufZ6Uz//8224rwJ59Mu9dxt4bPU/UoILSYceTVGzKMXdME7EQeBA7Hs%2bTMp0XtCA65E5dX/34u9/sUM65%2bZ2t2auiW3qFC72ihJ2GwIP8kFMXZhMez1sVFu18dffWvdkrJB%2bO7tYswp6EHHrHi9S9WaSwEySb4%2bjOZAg8SASP51lWe5YS0NnhQGx59Re3FqHFs06eZ2tepTBjet%2bt16sc8FSMlh3Pzhxb1zwCDxLjrVcZ83ged2F2djh4wKECUt2aeZ%2b516sbejXKqU7pgdeyK0oXrjPODYCxAWz2VaSUDYqBEKIR5Xz1fblGKPBCPbTyjdXzbXfoC/qPv3ySXv7uhVVLtHdmZdHnpHBX0Hfqsy0u2KacmnrwQRIbN3T/01bHYrvRaFqbNr1E0cUWJOr1XqUYf%2b/tf/iHzWtf/nKt90340v95jtxTpyi/xjvxCoGXfRWKb0fsBkXDu1fbgSdV3kSjeHH1fMs5f3H29OxDDoHqEpIHVMunSjk1uW0ble69Z/2H6zR%2bVXXEtmNB6R3v8I5e7RdeyHXgqR6KJo0RujTBeH/43rsPFLULsx/uEsrvgtKQV3qyikNjhMADyCBZnMkrkBNtNbpBY4bAA8gg3TVUiHIMyD5eKDrNnc0HQeABZFCnjikzm%2b9CwY2zFKEXAg8go3SJAlp5YDouRWiSATBLMx9mIpx7kOKb1TkIvwkHrm2579mv1i%2b06eY7bpx8/uPvvsNWH9pFEBq38l6r1w/xzuFUEOcefTTS%2bRPvfrcz9d732pSw8089Re7LL4c6d/LBB72ZqEXhkjRmr0wEXg4IIVphz5VSptEiWA35M10%2b5%2bMx1RIWDbfyrE55SCEKl9deeDHS%2bdbG2%2bxBz7mnT4f%2bnX2vXrfdl17aZG3a1P9rqbAL%2b7OV7r2XCsSY1h1D4AFkWBFbeXG59Oyzc6/VZ/lmYbV7CN1FLK/Ul3Ioli%2bq/ydWVmh6QOBBf6p1l8jygsNC4AFknG7lcXewTTCMsj446CAmuu6uRQbBpBUAA6muZ1sfgd1u3MpTd9Lp7kEIEKBNZMzYXRcCD2DMONR4XVJ1LKrjhDq4oXFCH2fUf/KxrI55vZ7jNVToLWH1FTCFCauq9JO5Ls1adcFW9w4VardtIYQ66GY5oCtHvQE4rpQvkSUc9V/qmFhZas1iGjcYQYcXj71VA04t63P4mFOf56jHA%2br13%2bw9qa1aeXqbGYBxckxs3THjA08FXJnaF%2buWJTarC71G7sVOF4/g/ydJ%2bnS6y%2b5prtT/dZF2bj%2b8oj624grraaJSCwEIadPdlBx0e2k4tjoW1Nfhr3E5%2bHglCz2BZY4AxoTLEExs3TEjA68bcsISO1TAVTm1pIxpOFnKivpKFSHbdb4n/sD2x5dcUTqy1PrFAm4mCmlTr2OugVykeCaY2NQJvk0q9Lw7apeoocYpdhAmsMAY6CXEmmQoowKvVn2iKly3rkJuh/rNlSmukPOhvkVNhV9t58OPO6o7aL5ttZ9ean3UIYCY6bBLYrPPBk9wUaE3yxNYztTrs1ZnU1GAVKmuTKPKENYzYtIKB53qalxWYccXKU%2bvHkcRra2a4vPCtZY/8PAT%2b2vVT9sEEJMEw66rrr7HAv%2bjMxUc62xCukzuyuwaa%2bBx1%2bUHHn78oBd0A2afjYEtyW1w8NUeOlwngBFx64s63Zhhw45XlW/qo0Xh18us613ova5N9eAQQAp0V2aDDDe2wPu5hw/PCffiCTn8wH3SVBeRXFBdnSfQ2oMRNSh4TM1RB9fS3aK6Jrdw96Q%2bZtRxi/r4Fgq34vxBnv2pa/OM7l6C3HBM78rsSj3wvFbd9scXufuQsrH%2bn61aeye4m5MAIlLhU6fgRbEPqVC7Ux3z6ujbmlMfX1FHXf3zTgpuuXmvVXRtQhqy0JXZleqklVr1UxUhLy5Kmb0ZZNzN%2bYHth21XTO7LaymDjL6Ac1o3LLtkcJe3qTdPQTdKs%2bvr6fyocx31u%2bDdMbiLdNCuF1X%2bffEC3jc3m3u/U5/dLINr/RJXumMTTdd2BJ5nbdxAaSi95Y5QP0/XxD2FWvQ5FBV2h0yelbleaoH3cw8/uct121lp1fXFd%2bsqsKuqi3MmpzM5TW3F1imDdEjbPqcciBJ2XTr0ePslngRjDziN/5Yt/kdbdW3qWZuDzk2FdcdbaFodpph45xbvgKHxTgimDkn1lUqXJncHutRuUj62MLG9CS0Y14NgdZ/nHBVcDRoShx75j5tUu%2btwcncTxvMgZvyairIPpxESDzwOO%2b4OpHxB6EEYm32eGzmA9J6DLZ9Tat1/8HgeFpiGuPBrKSvjdr0SDbychl0XQg8G0q2rQWNsTpRNewM87fPcVd9fvUHNYxILjEpPUsnkylSJBV6t%2bngtx2HXhdCDQSo%2bzz1P8fF747HXf4AnsWBXBRiWDrsGZVQigccBIFxaoGKwhSwtEkB4KxQTPZY3SN/tudvkTXhxCCACQXIpy2HHYp%2bl6YWdtJJcQsk8UlZ4xZg/%2b%2byeLIyR8M%2bY9N9mmLKNJo3W8uD/TSbdeNg%2bzzmUjr5/Z73e5kzaMzfbL75IF5bS7Qlbe%2bEFOvfoo5S09stfpzyTqlfCzUhxuZ/YA0918TWogCu184oxqhv36FJrT%2bxXtBoP4sJl2%2bf5/d3V8oNwATMZSLdUHBqSXr4LQuIJB2mHnnvypAqgFylN7qlT3mEKa%2bNGmtq2beDz1334X9LrKqDluXNkEEeSrPGNEmVcrF2aqnVXp%2bBVJXKLu3G9rY1ipMOuGXBaQ%2b%2bNBhCaLlfgqeW5XEjBNBx2N3zsN0iox4Hn3PEWdc7HSFx/PRnCe41kcUZmP7EFnu7KLPqbbtmSlw5STEKGXRdCDyJD6KUjTNhdPtec0MtV2LHYAs/ryszgkmFx49VYVPhXaUQRw64LoQeR8U7pOvQcgthFCbvLnzP%2b0Mtd2LFYAk9Pyy9sV%2bZ6QpZGCp0hw66r0d0iBiAshF4yhgm7y587vtDLZdixWAJPT1SBLimrw7byRgy7roP66wCE1tO96RCMjIPq%2bl/91aHCrivt0OvMxpRb8hh2bOTAQ%2buuv2FaeRHCjmdkBo25NBF6EBVCLx4cUBxUVsBi2Zeee47cgJKGtEJP/d2PSOrspUg5NXLgoXU3QMRWXoSwm9WLDoeZaIDQg8h06G0RJDK5fNS4RQm77z35B14ZwrhDT2/zU89z2LGRAk9PwQ%2b/oVTBWNKaC3NexLDzztP1dAg9SAS/8b2x%2bYc7eSkpgtCihh3jmrtxhp5eCLoQ4/4jtvDO82rsxVlRJSIpqRpUlzdM2HUh9CBpvJQUdlkIZ5iw6xpT6K3qySnzVBAjBZ4ap8KbqL8ytS/WBz05Sth1IfQgafyGyF2chHG9gUYJu640Q69nckqLCmTowPMmq3R2dAYfwhJ9u3zjCLvL3yNa6FUJIKJu2QLG9fobNey60gg9Hq/Tk1McKpjhW3htq0IQTMrK%2bm7NOMOuS4fezhCnLqrvj78dRMZvkBjXu9YbPvKRwLBb%2b9vjgWHXlWDocRfmLI/X5X1yyiBDB54QV3ZTBl8q7M5fDpgkwq5LbyoatKI5h%2b8yQg%2bGpcf17iR0cXphN/ngNt9zOLi%2b9wfhwq4r7tATJFu6C7NJBTbCGJ7YTBCObg2HDDu%2b85qJGnZd%2bvMQepAobu3d3Fy4s8itvbBhN%2bzuBzGFHrfq9r2x2czlyilRDRV4nS46vFmGJmQ1Yti1aJRvh9CDlBS1tZd02HWNEno9rbrCzMIMMmQLbw1vkhH85M%2b%2bYzuFD7tY9qtD6EFaitbaSyvsuiKH3g03eGN1aNVda7jAa7uovQvpx99/D%2b35tw8F/b5iDbsuhB6kiVt70x/8%2bS2UY2mHXVc39Himpx8OvZt%2b75NOeWEBs2n7GC7wBOHNMYRfmH0X/crHtwedlkjYdUUMPZsARjB5//25nf133Yc/PJaw6%2bKvyTM9g0JP4fdnvp7RMFlngoZjE/jisPuF%2bruCTks07Lo49PSL329z2m7o8c/jECTpIPYtzJbpHTto6ife53tOkmHXq1veMLnNN3y7ocfXcyFLEPoZNvDAh0lh16W%2bz7wOPb83WpsQemkoE5bkywwOu%2bma/5LB7qlTdO6Tn0w87LrOP/lka/JHfmSVbrqp5nMaQm%2bdobo01S9vE0FfJoZdl95lIWhigU3o3oQETD74YJMnU1CGZnSGDrtHH/Mek6ZnXs7whBTxxjfyQhNHAj4F3Zs9YtkAFjpMDrsuhB6MExc%2b6xmdM%2brN2%2biJFQaF3ar6XTW7Qde7/qW6nusULvSO43pGl2ZsshB2XRx66sXP/0T3JoyFftNunanXbXXX3VCvSp7dZZMhDAk7Li84pB7n/ZYC49DT17Pf4vA24XoeMvAkvUZwWZbCrguhBybQdWJ1/rcKv3qJaIckUaMxGnPYcWtuqa1abVF2MkDohTNUl6YkiQFQLUzYnTt7gf7imS/NmhJ2XejeBJNwd6fqsuPFqbnLc5bHqyhlYwq7VT02N8v/29XvYHaYbXtCdm/aVODrecguTQ48QUUXNuz%2b49wz9LWvnTTyJgEtvWTo%2bscmQWS61dfkg7s81WNVt/yqlODs1pTDTr0fyCMuEY9jrsS1ewFaev6G7NJUv6SC512UsDvxlVdVW/o6o1p3vRB6YKre8OP/VgFYVQ8VHYA8GSOWAEwh7LxWnOqqPKr%2b3eL9BSkhCL3Bhp204lCBRQ479WJfas0a3Q2M0IMs6E52Ucc8/7cKQA69qhqbqah78E26FRhJAmHH4bbS2VWcONhaaa9pidDrb7jAK7kr5BazomGIsONXn7Gtu14IPcga3VK66vrSIWjzod6lbBWEm6XXEhT8satahCOEHXdJOuprO%2bprv%2bR2GgF8rJiyYDNC71pDBd5S66POzocf5xZLoYoZhwo74n3w6HnKCIQeZF2/EOylxwXLN/76v2tM/PAP7Qj4cs75Z57Zt3bKG4N39Nd3KCMQelcbvg6PWy1SVqkghg07j6RMtPC6EHqQZxxYei3TwLBTx8wNs7MOZRhC74qh%2byWlK5%2bmghgp7Fip3aKMiVCysIhliyBL1Ot1jrxid18OdepmHcoBlCx0DD8Qx%2bN4BTBy2KkLh7uAKYN06B0KOA1r9UFmqNcpt3LmA05zKEdh14XQGyHw1Jt4izqrh%2bRWDGHHL7IWZZj6%2bfcSFqiFHNBh1ww4jd/Tdua1W6/ooTfSVEtJMugXl1lxhB1zRTvzv6MIC9Qi9MBIEcLOmOX/klLk0ButtsAye7XzYcUVdtTpzmxRDiD0IKsQdtcqauiNFHjem3nGu%2bzWCxN2J7/1Xfr1j/xZUNipC00ETfrIFIQeZA3CbrAiht7I2wNJ1WUnpFWlBNxX%2bUH6oS23U1q%2b7wdupJmfvCfwvG%2brwONg9POKOuf%2brfb2xbc/YlM8VineMdNhv16TOqG22ecc7LQMYxcy7BjfmJblcGVWce9en8TXu9nnea5XCKqptqlzPWf9Br4Vy4qYOx9%2b/AwlUIQectsdMNeSCrydlAJ9B3piwNNN9XPMEiTOlL%2bDDq9lArhiNpb1waSkXHXdQWxq6o1ngQBSpF5z3MOwSADrxBJ4S8/umSdR7AWlYaA6AaSLS2kwhgzXiG0FaClcdBkBAICxYgs8nrEpBOWyTAEAALIv1j1%2bXDHFrTzMygMAAOPEMkuzV6366apwrUzNjrpvy%2b30n%2bb/Rd/nnvnTL9Izf/L3QV%2bCrJJw/tXud%2b3cWr077rGDuKcp2xSvTfqxRgN%2bTqFQwjBL0wwm/B3Uz9CkwTsDcC8U35S/RmaU%2baT19aIa9B7OtYr7KJtWRq7DW4%2b7NmsP//4hQWKOcuD1sxe8mrog0nJnts283aGC0m90VQIw26Gsr2%2bbBr2dUD%2brWf79JbJt%2bdJnf2lv3lZg8aNeG/uyuiMCAEBRJBJ4TIrJnVSApXokuQe8sgwAADBaYoG31JpdlaK9M8/1eV7YffajDQIAAOMlFniMu/mkcGfyGHoIOwCAbEk08NiV0MtP9ybCDgAgexIPPMaht3h09xZJ8hBl26o3QQVhBwCQOakEXhfP3uTWEWWTI621GUxQAQDIplQDj3HrSFrunVka1%2bOWqbSmtiy1frlQG0QCAORJ7IXnYeiatTtrD3%2b6IcjaTwb78fffe%2bhDs%2b/eSwAAkGmpt/B6dVt7Mnib%2bbG57ftvwNqgkCpetWbdga1uAGIwlhZeL93aq9eqn26Qa6kW38A18ABypWc5Nt6wdDt11jktDziXH7hL3VHH8%2bpoYYksgGjG2sLrxcG39Nk99cstvhTH%2bKamJxwCSIFuse1XBy%2bwzAfvCM/rznLoBbXk%2bBxepJuHAZbV1zijjkV11AkAAo29hbdet8XH/%2badF1Srry6EuvuVMa/yr%2b6OpWwfJau09B8efT%2b/0WRqhwfIFhVKVeoEVZXiw69bDsAah6h6bKrjiGr5OQQA1zAu8HrxzgvqgQ8Vfp9Sd7dWhdxSRQXgZvUOEuaOuEO1FlVX6YorxUtkSfX1plq89NmVEx6pEkACEgq6fmx1NNSxV31PLp3hXQEw/gzQw%2bjA66VLAq4qC6hVF1TgnbNVEPYJPldd7NYqdjGAcdATTTh40h6T5u/bUEdd/QwHVOg1CQA8mQm8fnQrDbVxYBTdquOxOZvGx%2bafQf0sm9XjAbT2ADIeeACm0WNpDRoOh5JD197E2dRpuVUoOq4h5TG%2bGYztQdEh8ABiokKFW3X1CJ/CAcc1qBxwrTCBpFuPHHw7KPy4oE2dWZ07RQH2qAQYxJiyBIAsixh2LXXMqONOFUB7eZwtbOuLa%2b/UMa8O7/OpE5hhPtemTugN00oEyAUEHsCIIoQdF4xz1%2bKMDq6RxtU4JNVRp054hlmtyCu/QehBUSHwAEagx%2bzqIU7dp8KpksTqKD3Bxy0%2bJ%2bB0Dr1FvcoLQKEg8ACGpEKDV0hpBJzmqGMLd0NSwnTwcegFbcFlUyf0sEYnFAoCD2AIuoXUCDit24WZ6kQR9f0aFBx63K1p9E4lAHFD4AEMh5ei82shcdhVx1UKoENvNuC0vXrWJ0AhIPAAItKLNds%2bpzjqqI272FuvshLU0ltA1yYUBQIPIALdlenXFcghZ0yRt27pHfI5xaZOcTpA7iHwAKLhtTFtn%2bf3GbiiSYP8Z2/OoZUHRYDAA4im7vNc08TFmnXXqt94HocdWnmQewg8gJBCjN0FjZeNja7/8ytOT3tXB4DUIfAAwvMLhaaBXZnr%2bbXibMzYhLxD4AGEoCerVH1OMbZ116W7Nv1aeTUCyDEEHkA4VZ/nns7Q1jtNn%2bfQrQm5hsADCMev9bNEGaHH8pwBT5exxibkGQIPIJzNPs9lJvC0p32eqxJATiHwAALoGjV7wNMr415RZQgtn%2bewdRDkFgIPIJhfCByl7PFbzNomgJxC4AEEs32ecyhj9ASbQa3SzQSQUwg8gGC2z3MOZdOgwMMSY5BbCDyA0WRt/K7LGfBxBB7kFgIPAAAKAYEHAACFgMADAIBCQOABAEAhIPAAAKAQEHgAAFAICDwAACiECQKj6U05t1NneSs%2byvrg%2bi9HH7y81VKGtqgBKBy9Jitfw7zzBq9oY9OV69mhq6/nFq7n%2bCHwDKQvjDnq7FA9qBC4e/F0L6CD6vN4jcRD6kJpEgAYQW%2b5xNcy7zc46Hq26cqKPnX9eU3qXM9%2ba59CBOjSNIx6kXPQnVBHg6KvesHht6C%2bxgnsawYwXnzjqo791Lme%2bbqOej3X1XFcfY0FXM/xQOAZQl8ci%2bqf8zT68k62Ok7oiw0AUqYD6jh1blxHVVfHsvqaNYKRIPAM0HNxxP2CbvDdIQFAatQ1xz0tfD3bFB9bHYu4iR0NAm/MdNgtU3L7kNURegDp0GHH13NSi3DzTexegqFg0sr4cRjZIc9dpSuzM%2b0In8eh56jB7wMEAInQN688LBE27Hqv50qEz/MmqKnruUU5VltesPU/V5dmZmPZlQSBN0a6e6IacBr/oY9Qp%2bygte7zy/rzefZXUHco3xkezftFAjBGByn4JpSv50PqaK4vO9CBWVXH/hBfhyeybFFfI5PbU%2bkwUyHvqkdrs7wy65zxcyQvn%2b29Z81QDBB4Y6Jf3I2A01rqmB1Uj6Nf7Et86Hq9oNbifv01ASBG6vqrU/BNJwddY1BI6eu8yYfutjzo87Vs6pQ6NMhwKty8MHOJtotOoFfk5dZsuqNqCLyULFQXytedP1sptamm/uibnWdeqNo/c6/fp3D9Tei%2bem65qYuE74K4S6Uy4LQqX5io0wOIXdBkktko1506d15dqy3yHw%2bcU%2bfMm9jK67Tg3Joka4fU3bWCxg%2bBl6Cn3vPJ6oRL21XbvEqvn612P37D7TdRQNgtRQm7Lr5DVBfATvKfBMPdn00CgFjocgHb55QDw9xkcsF5z/XcDwehMa08bsmpVtwct%2bKk15Izb04kAi9Gn7n/UxUh21X1St2hQq5C7f53Zhvf9Wa/L%2bOoYx8NSYfeLA2%2bSLiVZ2PZIoDY%2bHVl8s1rg4ake254stmgFiQXtDdojFTQccDt55AzoRXnB4E3gqfe82l7Yu1STVpiu3D5jsYtq1do50mfv/ybtt/p92UPjBpG%2biJp0eAJMXyBzhMAxGGHz3ND37z24Gt10EotvGBFJe3lx3pac3WZXElV7BB4EXDAUftSddKytsu26sZor3kBJ3g6UYRbm9ve%2bSa/p1sUD74rrA54bjMBwMh03d2gMbaVOHpSeIxOfR%2beqT034BT%2bGVIJvO9culD%2b2eUFbs3tFcnVGiYGgRfglS98ffNn7v%2bkusOSO0R7zeZkk66MFHC9Jm%2ba9o4B4lwh3e8CqBIAxMH2ee4oxadF/oGXipdfP1MRKX6/uCHwApz6u2/WOtkWT%2b/01I1Tfk87FBN9V%2bhQhrobADLI9nkuzlaX39e6mSCUQgdet1Tg7%2baf3fEjex%2biNFz/g2/0e/o1iteg6co2AUAc/Lr1HErHLQShFC7wvFKBNdXvzjMpz55Vj1Q%2b8%2bIpMkTc9TSZXIUBACJBCy%2bk3Adet1Tg8kxKLhUIMZMSAKBoePal7KzYlEu5C7xuqYAoWZu9mZS6VCDqTEoAgCLR9XRRFrPPnMwHnjcO9/p3ayUSlcszKcVoMykBAIpEhd2cLEBtbuYCjwPu%2bnNnq4KX6%2bKAe/2sfSXZkHAAAFH87PLCQdlZoiz3jA%2b89Ysu965JiYADABiOt1qKlC1RoIUojAy8qxZd1jMpCQAAYsG7GahW3bIQwqYCMSLwfBddRiMOACA23bCjAtbjjiXwBs2k9CDgAAASUeSwY6kH3p/c/8llaq9VMZMSACA9RQ87lnrgrZXWZktuaVlIYRNAxp393/%2b59u1H31rlf6vXdNmyrqx60Zbype6/O/sUtlctl1bPXqCVOxsOVsGB1CDsOlIPvA9/fp/z1HsOziD0wHTf/G3bLpVK1Qsv/o/t0/e8v%2b857ZNfmrN6uuNlz3OXP64JUSJS/3fj9UQnH7tLfUSuqI86rpTPW67bQhBCEvRszKWiTVDpZyxjeAg9MJEKuGppYqIiXLlDWFSRsjN5qn3qy0QDAm80vFgCVVQw1qhU2t8JwreuCBIrLtHRdrvduv03HYcARqBeS/tV2GEPTBrjLE2EHozbiYZdvm6aKiVRqlkl2uUFnOyMK0tJYyIq6lvznmP1iVLJC0AprCMXL6613vzvnVR3tYbsq%2bnNWgk8Yy1LQOjBOHgtud6Qo3EGXBBREVJWpid1%2bJE4hJYfhKHCrqZe1g2Cy8Zeh4fQgzRwa%2b7GG6w5NchW012JBofcIIJbfgudlt9dS9RuH7rtN50WAayjJ6kcJLiKRQbg0Gtb7RkpvB26AWJ18WtHqzfdUDpBUjS6YZcDPO63fOqxu0688thddQLokfddD4ZlROAxhB4kxT33qt3tuswb9cZmc6sPwQddPG6nHqoE1zAm8Fg39CjHO3Xf8P03LRFAzBB8wHRXZoOgrwkpZZUM8%2bU/%2bbvG///Lr6a2N1P57o0Dn7vtnW%2bidzzyoxSXt/zzu/1aGjX199hE8bEHPaG%2bT4PiZVN636ufgb/Xye/7Z3T91l%2bjYU3e8WMDn7vuvp%2bjybf8GBnEVsfC9/7m5v3XvXPXkYDz%2bhrx7%2bX3%2bq6k9Frwm4K/K%2bb3vO0%2bzzXU9zpB8fD7vdrd3%2bt//8aXdn330gVKyg0TU3Rf%2bQcoDifOnqbX1y5SmoT6RWVu6B4AALJt9%2bf/lF45fzbEmaL19Ex9hmJgVJcmAABAUhB4AABQCAg8AAAoBAQeAAAUAgIPAAAKgZcWm6UM%2bc7Lq%2bWv/Lfj%2b9uX3EwVEt/%2bwB2H3vy%2bu9Ne/JcLUO0%2bH%2bc6x32UEd/76z/Y0T75Yi3ovBvf/1jfj1/88v%2bii1/5C4I%2bJqZXp%2b756UNTd7zHofzg1XTmBjx3QB0O5cSRr/313GsXz8e%2betBH3vajXgnCel9c/Rb95be%2bQnFIuySBTQghmpQxn7n/Uy1BLm9mmJnQc555sfnBn3h7qoEnpdxFAwIvK3/3Vx9765xLIjDs2KDAW3vlH%2bj8F/%2bMoK/yhZWndl1qt2fysiC1rrMbFHgt9dpvUQ4kuV7mh%2bxK38DjMoK4Am8cMtml%2bcG/%2buUVSVZmVmTh5dL4ZyaI5NXfeet%2bFXapLUBQVLxKy2SptMwb3hJkSZUydNNvgsyO4WUp9NQbyvMEkXhh5y32DGng0JsolY6/8om787K4du7JzpAFRJDpSStZCT0hCetnRoCwG5uymHSXEXrmU92ZVcJuCJFlfpZmNkKvhO7MkBB2Y%2beFHro3zeZKqhNElouyBJNDD%2bN34SHsjFHGmJ7ZhKAdBJHlpg7P1NCzpNUiCPTtR%2b%2bqIezM0Z3IcqZhY1KEYVR3Js9axt9lCLkqPDcx9FxyjxL44pZEyfJ2aAaDcOitvaG0SGAU1Z0ZqkwHrpW7lVZMC712qd0iGIjDbrJkLed1R/LME1Q9%2bTtvTaTWC4ajujO3Ewwll0uLmRJ6PH7Hu7gTDDRhlRYkCZvAXFLs/dajb91LMHaqO5Nn0NoEQ8ntWpomhB7G7/zxJBVuQRAYryTEfkxiMUKVYGi5Xjx63KGH8bvB1JtnFZNUMqWMSSxGwOzMEeR%2bt4Rxhh7G7/rT43aYpJIx3iSWGyys7jFGsrMwNgypENsDjSP01AtzBeN3/ZWsUgPjdhmlxvNO/vbbqmQ2rnudGXBktiZWj9%2bhhT2CwuyHl3boWSRQbN7HK4/dVReCdhFklijJBZO7NoUQvBtIa8CRiQXnB7AJRlKoDWDTDL22K58muIZFEl1iGcddmxffYGHWZvrQnTmiwu14nlbouZNraOGtw7My0ZWZD5YQc5i1mS5XIvBGVbjAY0mHHsbvrsVvjpiVmStlrqEkSI0aCthEMJJCBh5LMvQwfnctnqhCkC%2b8Cov5E1jyxCYYSWEDjyUVehi/uxq37jBRJacsjMmmoba8wJOEMENzRIUOPJZE6J1rr7UILkPrLsfQyksLwi4GhQ881gk9uY9iwON3syv7sjz1OVZo3RUAWnlpsAlGhsDTPvhXv9ZUoTdLo8NyYj3QuisAtPIgIxB4PeIIPelSi8CD1l2BoJWXNJtgZAi8dUYNPYzfXTE1MTFHUAyqlYeFpcF0CLw%2bhg890cL43RVSutiZuUCw%2bgqYboKgLw69z9z/u%2brGVYQurlUh%2bTyB59Sjd9UkumEKhVdfUQ8Ngtgtzcw21UOTUrIk6yeoz/X74z/wtuZ7b787jrkOY4EWno%2boLT1RoiUCT1tQnaBoypi8AiZDCy9AlJbe2fNYP5PxZBVrDBtVnnvud/t%2b/NLXv0CQDlmSPEmpRQAGQuCFEC70MH7XVSqVqjQG5479LsF4CaLamYa975aGg2sBjIMuzZCCujcxfneFGrvDZJXiKq9NT2BVfzASAi8Cv9DD%2bN0V4%2bjOBHNIgdm5YCYEXkSDQu/nP/%2brLQI6%2bdt2laDQhCWw2AAYCYE3hGtDT7QIPLJk4e4eytgcFkyEwBtSb%2bi5QmL9TE2QtZ2g8ISFGx8wDwJvBN3QsyxMw2ZnDvLSUhITFoCL0DcTgGFQljAiDj0Cz9p5qlCJAPhOukoAhkELD2IjLQutO/DwsnJYTBpMg8CD2EghqgSgoR4PTIPAg9hYJDYRgNa2XAQeGAWBBzHChBW4AhNXwDQIPIgF6q5gPTWOdwsBGASBB7GYwN53sE6JCC08MAoCD2IhrBJm5MFVsAEwmAaBB7FwSdoEsA5KE8AkCDyIhbqbxxsbXOP8NF4XYA4EHsQELTy4VttF4IE5EHgAkJhpawKBB8ZA4EE8hIU3NgAwGgIPYlGSdDMBrCNL6OoGc2C3BIiFdMUBUZJHCKDHWrvdIgBDIPAgFrf95ldaBABgMHRpAgBAIaCFBwAAVxFC3Ek5hBYeAAAUAgIPAAAKAYEHAACFgMADAIBCQOABAEAhIPAAAKAQEHgAAFAICDwAACgEBB4AABQCAg8AAAoBgQcAAIWAwAMAgEJA4AEAQCEg8AAAoBAQeAAAUAgIPAAAKAQEHgAAFAICDwAACgGBBwAAhYDAAwCAQkDgAQBAISDwAACgEBB4AABQCBMEeXZEHUf7fHyVAAAK5p8Agwdh0YbzVlQAAAAASUVORK5CYII='/%3e%3c/defs%3e%3c/svg%3e";
var StyledFooter = st.footer.withConfig({
  displayName: "Footer__StyledFooter",
  componentId: "sc-1kifw7y-0"
})(["margin-top:17rem;padding-bottom:5rem;display:flex;justify-content:center;.logo-box{display:flex;align-items:center;img{margin-right:1.8rem;}}@media ", "{margin-top:12rem;}@media ", "{margin-top:6rem;}@media ", "{margin-top:3rem;}"], widthQuery.md, widthQuery.sm, widthQuery.xs);
var Footer = () => {
  return (0, import_jsx_runtime.jsx)(StyledFooter, {
    children: (0, import_jsx_runtime.jsxs)("div", Object.assign({
      className: "logo-box"
    }, {
      children: [(0, import_jsx_runtime.jsx)("img", {
        src: img,
        alt: "daohaus castle logo"
      }), (0, import_jsx_runtime.jsxs)(ParMd, {
        children: ["Built by ", (0, import_jsx_runtime.jsx)(Link$1, Object.assign({
          href: "https://daohaus.club"
        }, {
          children: "DAOhaus"
        }))]
      })]
    }))
  });
};
var OuterLayout = st.div.withConfig({
  displayName: "OuterLayout",
  componentId: "n2mprg-0"
})(["width:100%;"]);
var StyledFormSegment = st.section.withConfig({
  displayName: "FormSegmentstyles__StyledFormSegment",
  componentId: "eccgnt-0"
})(["width:100%;.segment-title{margin-bottom:3.2rem;}.segment-description{margin-bottom:3rem;}"]);
var StyledDivider = st(Divider).withConfig({
  displayName: "FormSegmentstyles__StyledDivider",
  componentId: "eccgnt-1"
})(["margin:3.6rem 0 0 0;"]);
var FormSegment = ({
  collapsible,
  defaultOpen,
  title,
  description,
  formArea,
  showDivider: _showDivider = true
}) => {
  if (collapsible) {
    return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {
      children: [(0, import_jsx_runtime.jsx)(CollapsibleCard, {
        children: (0, import_jsx_runtime.jsxs)("div", {
          children: [(0, import_jsx_runtime.jsx)(H5, Object.assign({
            className: "segment-title"
          }, {
            children: title
          })), (0, import_jsx_runtime.jsx)(ParMd, Object.assign({
            className: "segment-description"
          }, {
            children: description
          }))]
        }),
        collapsibleContent: (0, import_jsx_runtime.jsx)("div", {
          children: formArea
        }),
        defaultOpen,
        triggerLabel: "",
        width: "100%"
      }), _showDivider && (0, import_jsx_runtime.jsx)(StyledDivider, {})]
    });
  }
  return (0, import_jsx_runtime.jsxs)(StyledFormSegment, {
    children: [(0, import_jsx_runtime.jsx)(H5, Object.assign({
      className: "segment-title"
    }, {
      children: title
    })), (0, import_jsx_runtime.jsx)(ParMd, Object.assign({
      className: "segment-description"
    }, {
      children: description
    })), (0, import_jsx_runtime.jsx)("div", {
      children: formArea
    }), _showDivider && (0, import_jsx_runtime.jsx)(Divider, {})]
  });
};
var StyledSplitColumn = st.div.withConfig({
  displayName: "SplitColumnstyles__StyledSplitColumn",
  componentId: "sc-11l039s-0"
})(["display:flex;width:100%;justify-content:space-between;flex-direction:column;"]);
var StyledRow = st.div.withConfig({
  displayName: "SplitColumnstyles__StyledRow",
  componentId: "sc-11l039s-1"
})(["display:flex;width:100%;justify-content:space-between;.left-section,.right-section{width:24rem;@media ", "{width:100%;margin-bottom:1.6rem;}}@media ", "{flex-direction:column;}"], widthQuery.sm, widthQuery.sm);
var SplitColumn = ({
  rows
}) => {
  return (0, import_jsx_runtime.jsx)(StyledSplitColumn, {
    children: Array.isArray(rows) ? rows.map((row) => {
      return (0, import_jsx_runtime.jsx)(Row, Object.assign({}, row), row.rowId);
    }) : (0, import_jsx_runtime.jsx)(Row, Object.assign({}, rows))
  });
};
var Row = ({
  left,
  right
}) => {
  return (0, import_jsx_runtime.jsxs)(StyledRow, {
    children: [(0, import_jsx_runtime.jsx)("div", Object.assign({
      className: "left-section"
    }, {
      children: left
    })), (0, import_jsx_runtime.jsx)("div", Object.assign({
      className: "right-section"
    }, {
      children: right
    }))]
  });
};
var MainLayout = st.main.withConfig({
  displayName: "MainLayout",
  componentId: "sc-1xme1bg-0"
})(["display:flex;width:100%;justify-content:center;padding:0 3.2rem 2.4rem 3.2rem;@media ", "{padding:0 2.4rem 2.4rem 2.4rem;}"], widthQuery.sm);
var FormContainer = st.div.withConfig({
  displayName: "FormLayoutstyles__FormContainer",
  componentId: "sc-18y4tnc-0"
})(["width:58rem;margin-top:5rem;.subtitle{margin-bottom:1.2rem;opacity:0.6;}.title{margin-bottom:3rem;}.description{margin-bottom:5rem;}"]);
var FormLayout = ({
  title,
  subtitle,
  description,
  children
}) => {
  const formSubtitle = (0, import_react40.useMemo)(() => {
    if (!subtitle)
      return null;
    if (typeof subtitle === "string")
      return (0, import_jsx_runtime.jsx)(DataMd, Object.assign({
        className: "subtitle"
      }, {
        children: subtitle
      }));
    return (0, import_jsx_runtime.jsx)("div", Object.assign({
      className: "subtitle"
    }, {
      children: subtitle
    }));
  }, [subtitle]);
  const formTitle = (0, import_react40.useMemo)(() => {
    if (!title)
      return null;
    if (typeof title === "string")
      return (0, import_jsx_runtime.jsx)(H2, Object.assign({
        className: "title"
      }, {
        children: title
      }));
    return (0, import_jsx_runtime.jsx)("div", Object.assign({
      className: "title"
    }, {
      children: title
    }));
  }, [title]);
  const formDescription = (0, import_react40.useMemo)(() => {
    if (!description)
      return null;
    if (typeof description === "string")
      return (0, import_jsx_runtime.jsx)(DataMd, Object.assign({
        className: "description"
      }, {
        children: description
      }));
    return (0, import_jsx_runtime.jsx)("div", Object.assign({
      className: "description"
    }, {
      children: description
    }));
  }, [description]);
  return (0, import_jsx_runtime.jsxs)(FormContainer, {
    children: [formSubtitle, formTitle, formDescription, children]
  });
};
var BiColumnBox = st.div.withConfig({
  displayName: "BiColumnstyles__BiColumnBox",
  componentId: "sc-1gbncfs-0"
})(["margin-top:5rem;width:100%;max-width:110rem;.subtitle{margin-bottom:1.2rem;opacity:0.6;}.title{margin-bottom:3rem;}.description{margin-bottom:5rem;}.split{display:flex;flex-direction:row;gap:3rem;@media ", "{flex-direction:column;}}@media ", "{margin-top:3rem;}"], widthQuery.md, widthQuery.sm);
var TitleContainerWithActions$1 = st.div.withConfig({
  displayName: "BiColumnstyles__TitleContainerWithActions",
  componentId: "sc-1gbncfs-1"
})(["display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;width:100%;"]);
var ActionButtonContainer$1 = st.div.withConfig({
  displayName: "BiColumnstyles__ActionButtonContainer",
  componentId: "sc-1gbncfs-2"
})(["display:flex;gap:1rem;margin-bottom:3rem;"]);
var BiColumnLayout = ({
  left,
  right,
  title,
  subtitle,
  description,
  actions
}) => {
  const sectionSubtitle = (0, import_react40.useMemo)(() => {
    if (!subtitle)
      return null;
    if (typeof subtitle === "string")
      return (0, import_jsx_runtime.jsx)(DataMd, Object.assign({
        className: "subtitle"
      }, {
        children: subtitle
      }));
    return (0, import_jsx_runtime.jsx)("div", Object.assign({
      className: "subtitle"
    }, {
      children: subtitle
    }));
  }, [subtitle]);
  const sectionTitle = (0, import_react40.useMemo)(() => {
    if (!title)
      return null;
    if (!actions)
      return typeof title === "string" ? (0, import_jsx_runtime.jsx)(H2, Object.assign({
        className: "title"
      }, {
        children: title
      })) : (0, import_jsx_runtime.jsx)("div", Object.assign({
        className: "title"
      }, {
        children: title
      }));
    return (0, import_jsx_runtime.jsxs)(TitleContainerWithActions$1, {
      children: [typeof title === "string" ? (0, import_jsx_runtime.jsx)(H2, Object.assign({
        className: "title"
      }, {
        children: title
      })) : (0, import_jsx_runtime.jsx)("div", Object.assign({
        className: "title"
      }, {
        children: title
      })), actions && (0, import_jsx_runtime.jsx)(ActionButtonContainer$1, {
        children: actions
      })]
    });
  }, [title, actions]);
  const sectionDescription = (0, import_react40.useMemo)(() => {
    if (!description)
      return null;
    if (typeof description === "string")
      return (0, import_jsx_runtime.jsx)(DataMd, Object.assign({
        className: "description"
      }, {
        children: description
      }));
    return (0, import_jsx_runtime.jsx)("div", Object.assign({
      className: "description"
    }, {
      children: description
    }));
  }, [description]);
  return (0, import_jsx_runtime.jsxs)(BiColumnBox, {
    children: [sectionSubtitle, sectionTitle, sectionDescription, (0, import_jsx_runtime.jsxs)("div", Object.assign({
      className: "split"
    }, {
      children: [left, right]
    }))]
  });
};
var ColumnBox = st.div.withConfig({
  displayName: "SingleColumnLayoutstyles__ColumnBox",
  componentId: "sc-1bimpbb-0"
})(["display:flex;flex-direction:column;justify-content:flex-start;width:100%;max-width:110rem;"]);
var ColumnHeader = st.div.withConfig({
  displayName: "SingleColumnLayoutstyles__ColumnHeader",
  componentId: "sc-1bimpbb-1"
})(["display:flex;flex-direction:column;justify-content:flex-start;margin-top:5rem;width:100%;.subtitle{margin-bottom:1.2rem;opacity:0.6;}.title{margin-bottom:3rem;}.description{margin-bottom:5rem;}@media ", "{margin-top:3rem;}"], widthQuery.sm);
var ContentBox = st.div.withConfig({
  displayName: "SingleColumnLayoutstyles__ContentBox",
  componentId: "sc-1bimpbb-2"
})(["display:flex;flex-direction:column;justify-content:center;align-items:center;"]);
var TitleContainerWithActions = st.div.withConfig({
  displayName: "SingleColumnLayoutstyles__TitleContainerWithActions",
  componentId: "sc-1bimpbb-3"
})(["display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;width:100%;@media ", "{flex-direction:column;align-items:flex-start;}"], widthQuery.sm);
var ActionButtonContainer = st.div.withConfig({
  displayName: "SingleColumnLayoutstyles__ActionButtonContainer",
  componentId: "sc-1bimpbb-4"
})(["display:flex;gap:1rem;margin-bottom:3rem;@media ", "{width:100%;flex-direction:column;}"], widthQuery.sm);
var SingleColumnLayout = ({
  title,
  subtitle,
  description,
  actions,
  children
}) => {
  const sectionSubtitle = (0, import_react40.useMemo)(() => {
    if (!subtitle)
      return null;
    if (typeof subtitle === "string")
      return (0, import_jsx_runtime.jsx)(DataMd, Object.assign({
        className: "subtitle"
      }, {
        children: subtitle
      }));
    return (0, import_jsx_runtime.jsx)("div", Object.assign({
      className: "subtitle"
    }, {
      children: subtitle
    }));
  }, [subtitle]);
  const sectionTitle = (0, import_react40.useMemo)(() => {
    if (!title)
      return null;
    if (!actions)
      return typeof title === "string" ? (0, import_jsx_runtime.jsx)(H2, Object.assign({
        className: "title"
      }, {
        children: title
      })) : (0, import_jsx_runtime.jsx)("div", Object.assign({
        className: "title"
      }, {
        children: title
      }));
    return (0, import_jsx_runtime.jsxs)(TitleContainerWithActions, {
      children: [typeof title === "string" ? (0, import_jsx_runtime.jsx)(H2, Object.assign({
        className: "title"
      }, {
        children: title
      })) : (0, import_jsx_runtime.jsx)("div", Object.assign({
        className: "title"
      }, {
        children: title
      })), actions && (0, import_jsx_runtime.jsx)(ActionButtonContainer, {
        children: actions
      })]
    });
  }, [title, actions]);
  const sectionDescription = (0, import_react40.useMemo)(() => {
    if (!description)
      return null;
    if (typeof description === "string")
      return (0, import_jsx_runtime.jsx)(DataMd, Object.assign({
        className: "description"
      }, {
        children: description
      }));
    return (0, import_jsx_runtime.jsx)("div", Object.assign({
      className: "description"
    }, {
      children: description
    }));
  }, [description]);
  return (0, import_jsx_runtime.jsxs)(ColumnBox, {
    children: [(0, import_jsx_runtime.jsxs)(ColumnHeader, {
      children: [sectionSubtitle, sectionTitle, sectionDescription]
    }), (0, import_jsx_runtime.jsx)(ContentBox, {
      children
    })]
  });
};

export {
  require_classnames,
  indigo$1,
  mint$1,
  slate$1,
  tomato$1,
  violet,
  useFormContext,
  FormProvider,
  useWatch,
  useForm,
  index_esm_exports,
  Avatar,
  Loading,
  Button,
  IconButton,
  Label$2,
  Icon$1,
  Checkbox,
  Input,
  ParXs,
  ParSm,
  ParMd,
  ParLg,
  ParXl,
  H6,
  H5,
  H4,
  H3,
  H2,
  H1,
  DataXs,
  DataSm,
  DataMd,
  DataLg,
  DataXl,
  ExtraLight,
  Light,
  Bold,
  ExtraBold,
  Italic,
  Underline,
  StrikeThrough,
  TintSecondary,
  HelperText,
  SuccessText,
  WarningText,
  ErrorText,
  FileInput,
  TextArea,
  SmTooltipIcon,
  LgTooltipIcon,
  Tooltip,
  LinkStyles,
  Link$1,
  Select,
  Spinner,
  Divider,
  Switch,
  Card,
  Tag,
  Progress,
  Badge,
  useBreakpoint,
  primary,
  primaryA,
  primaryDark,
  primaryDarkA,
  secondary,
  secondaryA,
  secondaryDark,
  secondaryDarkA,
  neutral,
  neutralDark,
  info,
  infoDark,
  success,
  successDark,
  warning,
  warningDark,
  danger,
  dangerDark,
  primaryDarkBtn,
  secondaryDarkBtn,
  successDarkBtn,
  warningDarkBtn,
  dangerDarkBtn,
  primaryBtn,
  secondaryBtn,
  successBtn,
  warningBtn,
  dangerBtn,
  font,
  GlobalStyles,
  breakpoints,
  widthQuery,
  defaultDarkTheme,
  defaultLightTheme,
  ToastProvider,
  Toast,
  HausThemeContext,
  HausThemeProvider,
  useToast,
  useCopyToClipboard,
  useDebounce,
  AddressDisplay,
  Banner,
  FieldWrapper,
  WrappedInput,
  CSInput,
  CollapsibleContent,
  CollapsibleCard,
  DataIndicator,
  Dialog,
  DialogTrigger,
  DialogContent,
  ProfileAvatar,
  DropdownLinkStyles,
  DropdownMenu,
  DropdownLabel,
  DropdownGroup,
  DropdownRadioGroup,
  DropdownSeparator,
  DropdownLink,
  DropdownTrigger,
  DropdownButtonTrigger,
  DropdownProfileTrigger,
  DropdownIconTrigger,
  DropdownContent,
  DropdownItem,
  DropdownCheckbox,
  DropdownRadio,
  CheckGate,
  FieldAlert,
  HighlightInputText,
  InputSelect,
  NavMenuBaseItemStyles,
  NavMenuViewport,
  NavMenuIndicator,
  NavMenu,
  NavMenuList,
  NavMenuItem,
  NavMenuTrigger,
  NavMenuContent,
  NavMenuLink,
  WrappedSelect,
  ShamanPermission,
  WrappedInputSelect,
  TimePicker,
  WrappedSwitch,
  WrappedTextArea,
  WrappedRadio,
  WrappedCheckbox,
  Tabs,
  GatedButton,
  MemberCard,
  MemberCardExplorerLink,
  MemberCardCopyAddress,
  MemberCardItem,
  AppSwitcher,
  Footer,
  OuterLayout,
  FormSegment,
  SplitColumn,
  MainLayout,
  FormLayout,
  BiColumnLayout,
  SingleColumnLayout
};
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
/**
 * A handy class to calculate color values.
 *
 * @version 1.0
 * @author Robert Eisele <robert@xarg.org>
 * @copyright Copyright (c) 2010, Robert Eisele
 * @link http://www.xarg.org/2010/03/generate-client-side-png-files-using-javascript/
 * @license http://www.opensource.org/licenses/bsd-license.php BSD License
 *
 */
//# sourceMappingURL=chunk-LHJQX32V.js.map
