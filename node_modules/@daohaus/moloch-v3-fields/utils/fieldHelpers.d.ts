import { ValidNetwork } from '@daohaus/keychain-utils';
import { FindMemberQuery, MolochV3Dao } from '@daohaus/moloch-v3-data';
import { ErrorMessage } from '@daohaus/ui';
import { ReactSetter } from '@daohaus/utils';
export declare const validateAddressesAndAmountsData: (disperseData: Record<string, string[]> | '') => string | true;
export declare const transformAddressesAndAmountsData: (response: string | undefined) => "" | {
    total: string;
    recipients: string[];
    values: string[];
};
export declare const sortTokensForRageQuit: (tokens: string[]) => string[];
export type TokenData = {
    decimals: number;
    name: string;
    symbol: string;
    daoBalance: string;
    address: string;
};
export declare const getErc20s: (treasury: MolochV3Dao['vaults'][number]) => TokenData[];
export declare const getNetworkToken: (daoData: MolochV3Dao, daochain: ValidNetwork, safeAddress: string, networks?: import("@daohaus/keychain-utils").Keychain<import("@daohaus/keychain-utils").NetworkConfig>) => {
    daoBalance: string;
    decimals: number;
    symbol: string;
    name: string;
} | null;
export declare const isActiveMember: ({ daoid, daochain, address, setMemberLoading, }: {
    daoid: string;
    daochain: ValidNetwork;
    address: string;
    setMemberLoading: ReactSetter<boolean>;
}) => Promise<{
    member?: FindMemberQuery['member'];
    error?: ErrorMessage;
}>;
