"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.graphFetchList = exports.graphFetch = void 0;
const tslib_1 = require("tslib");
require("cross-fetch/polyfill");
const graphql_request_1 = require("graphql-request");
const fetchErrors_1 = require("./fetchErrors");
const graphFetch = (document, url, networkId, variables) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
    const res = yield (0, graphql_request_1.request)(url, document, cleanVariables(variables));
    return { data: res, networkId };
});
exports.graphFetch = graphFetch;
const graphFetchList = (document, url, variables) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
    try {
        return yield (0, graphql_request_1.request)(url, document, cleanVariables(variables));
    }
    catch (err) {
        throw (0, fetchErrors_1.formatFetchError)({ type: 'SUBGRAPH_ERROR', errorObject: err });
    }
});
exports.graphFetchList = graphFetchList;
const cleanVariables = (variables) => {
    return Object.fromEntries(Object.entries(variables)
        .filter(([, value]) => value !== '' && value !== null && value !== undefined)
        .map(([key, value]) => [
        key,
        value === Object(value) && !Array.isArray(value)
            ? cleanVariables(value)
            : value,
    ]));
};
//# sourceMappingURL=requests.js.map