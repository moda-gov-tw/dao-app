{
  "contractName": "CompatibilityFallbackHandler",
  "sourceName": "@gnosis.pm/safe-contracts/contracts/handler/CompatibilityFallbackHandler.sol",
  "abi": [
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "getMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract GnosisSafe",
          "name": "safe",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "getMessageHashForSafe",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getModules",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_dataHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "targetContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "calldataPayload",
          "type": "bytes"
        }
      ],
      "name": "simulate",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "response",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610ef3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80636ac247841161008c578063bc197c8111610066578063bc197c8114610205578063bd61951d14610227578063f23a6e611461023a578063ffa1ad741461025a57600080fd5b80636ac2478414610194578063a3f4df7e146101a7578063b2494df3146101f057600080fd5b806223de29146100d357806301ffc9a7146100ed5780630a1028c414610115578063150b7a02146101365780631626ba7e1461016e57806320c13b0b14610181575b600080fd5b6100eb6100e1366004610837565b5050505050505050565b005b6101006100fb366004610bda565b61027e565b60405190151581526020015b60405180910390f35b610128610123366004610c7f565b6102d0565b60405190815260200161010c565b610155610144366004610984565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161010c565b61015561017c366004610ba8565b6102dc565b61015561018f366004610c14565b6103a9565b6101286101a2366004610cbb565b610531565b6101e36040518060400160405280601881526020017f44656661756c742043616c6c6261636b2048616e646c6572000000000000000081525081565b60405161010c9190610e06565b6101f8610658565b60405161010c9190610d80565b6101556102133660046108e7565b63bc197c8160e01b98975050505050505050565b6101e3610235366004610a71565b6106e2565b6101556102483660046109f6565b63f23a6e6160e01b9695505050505050565b6101e3604051806040016040528060058152602001640312e302e360dc1b81525081565b60006001600160e01b03198216630271189760e51b14806102af57506001600160e01b03198216630a85bd0160e11b145b806102ca57506001600160e01b031982166301ffc9a760e01b145b92915050565b60006102ca3383610531565b60408051602080820186905282518083039091018152818301928390526320c13b0b60e01b9092526000913391839183916320c13b0b916103239189908990604401610e19565b60206040518083038186803b15801561033b57600080fd5b505afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190610bf7565b90506001600160e01b031981166320c13b0b60e01b1461039457600061039d565b630b135d3f60e11b5b925050505b9392505050565b60008033905060006103f18288888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061053192505050565b9050836104b957604051635ae6bd3760e01b8152600481018290526001600160a01b03831690635ae6bd379060240160206040518083038186803b15801561043857600080fd5b505afa15801561044c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104709190610b8f565b6104b45760405162461bcd60e51b815260206004820152601160248201527012185cda081b9bdd08185c1c1c9bdd9959607a1b604482015260640160405180910390fd5b61051e565b60405163934f3a1160e01b81526001600160a01b0383169063934f3a11906104ed9084908b908b908b908b90600401610dcd565b60006040518083038186803b15801561050557600080fd5b505afa158015610519573d6000803e3d6000fd5b505050505b506320c13b0b60e01b9695505050505050565b6000807f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca60001b838051906020012060405160200161057a929190918252602082015260400190565b604051602081830303815290604052805190602001209050601960f81b600160f81b856001600160a01b031663f698da256040518163ffffffff1660e01b815260040160206040518083038186803b1580156105d557600080fd5b505afa1580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d9190610b8f565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040528051906020012091505092915050565b604051636617c22960e11b815260016004820152600a60248201526060903390600090829063cc2f84529060440160006040518083038186803b15801561069e57600080fd5b505afa1580156106b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106da9190810190610ac5565b509392505050565b606060405163b4faba0960e01b8152600436036004808301376020600036836000335af1505060203d036040519150808201604052806020833e506000516103a257805160208201fd5b805161073781610e8f565b919050565b60008083601f84011261074e57600080fd5b5081356001600160401b0381111561076557600080fd5b6020830191508360208260051b850101111561078057600080fd5b9250929050565b60008083601f84011261079957600080fd5b5081356001600160401b038111156107b057600080fd5b60208301915083602082850101111561078057600080fd5b600082601f8301126107d957600080fd5b81356001600160401b038111156107f2576107f2610e79565b610805601f8201601f1916602001610e49565b81815284602083860101111561081a57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060008060c0898b03121561085357600080fd5b883561085e81610e8f565b9750602089013561086e81610e8f565b9650604089013561087e81610e8f565b95506060890135945060808901356001600160401b03808211156108a157600080fd5b6108ad8c838d01610787565b909650945060a08b01359150808211156108c657600080fd5b506108d38b828c01610787565b999c989b5096995094979396929594505050565b60008060008060008060008060a0898b03121561090357600080fd5b883561090e81610e8f565b9750602089013561091e81610e8f565b965060408901356001600160401b038082111561093a57600080fd5b6109468c838d0161073c565b909850965060608b013591508082111561095f57600080fd5b61096b8c838d0161073c565b909650945060808b01359150808211156108c657600080fd5b60008060008060006080868803121561099c57600080fd5b85356109a781610e8f565b945060208601356109b781610e8f565b93506040860135925060608601356001600160401b038111156109d957600080fd5b6109e588828901610787565b969995985093965092949392505050565b60008060008060008060a08789031215610a0f57600080fd5b8635610a1a81610e8f565b95506020870135610a2a81610e8f565b9450604087013593506060870135925060808701356001600160401b03811115610a5357600080fd5b610a5f89828a01610787565b979a9699509497509295939492505050565b600080600060408486031215610a8657600080fd5b8335610a9181610e8f565b925060208401356001600160401b03811115610aac57600080fd5b610ab886828701610787565b9497909650939450505050565b60008060408385031215610ad857600080fd5b82516001600160401b0380821115610aef57600080fd5b818501915085601f830112610b0357600080fd5b8151602082821115610b1757610b17610e79565b8160051b9250610b28818401610e49565b8281528181019085830185870184018b1015610b4357600080fd5b600096505b84871015610b725780519550610b5d86610e8f565b85835260019690960195918301918301610b48565b509650610b82905087820161072c565b9450505050509250929050565b600060208284031215610ba157600080fd5b5051919050565b600080600060408486031215610bbd57600080fd5b8335925060208401356001600160401b03811115610aac57600080fd5b600060208284031215610bec57600080fd5b81356103a281610ea7565b600060208284031215610c0957600080fd5b81516103a281610ea7565b60008060008060408587031215610c2a57600080fd5b84356001600160401b0380821115610c4157600080fd5b610c4d88838901610787565b90965094506020870135915080821115610c6657600080fd5b50610c7387828801610787565b95989497509550505050565b600060208284031215610c9157600080fd5b81356001600160401b03811115610ca757600080fd5b610cb3848285016107c8565b949350505050565b60008060408385031215610cce57600080fd5b8235610cd981610e8f565b915060208301356001600160401b03811115610cf457600080fd5b610d00858286016107c8565b9150509250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000815180845260005b81811015610d5957602081850181015186830182015201610d3d565b81811115610d6b576000602083870101525b50601f01601f19169290920160200192915050565b6020808252825182820181905260009190848201906040850190845b81811015610dc15783516001600160a01b031683529284019291840191600101610d9c565b50909695505050505050565b858152606060208201526000610de7606083018688610d0a565b8281036040840152610dfa818587610d0a565b98975050505050505050565b6020815260006103a26020830184610d33565b604081526000610e2c6040830186610d33565b8281036020840152610e3f818587610d0a565b9695505050505050565b604051601f8201601f191681016001600160401b0381118282101715610e7157610e71610e79565b604052919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610ea457600080fd5b50565b6001600160e01b031981168114610ea457600080fdfea2646970667358221220ca2effe1d5224bbbc2b140c0766c838fc8aac7e33582760b8a4207348b721a3564736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ce5760003560e01c80636ac247841161008c578063bc197c8111610066578063bc197c8114610205578063bd61951d14610227578063f23a6e611461023a578063ffa1ad741461025a57600080fd5b80636ac2478414610194578063a3f4df7e146101a7578063b2494df3146101f057600080fd5b806223de29146100d357806301ffc9a7146100ed5780630a1028c414610115578063150b7a02146101365780631626ba7e1461016e57806320c13b0b14610181575b600080fd5b6100eb6100e1366004610837565b5050505050505050565b005b6101006100fb366004610bda565b61027e565b60405190151581526020015b60405180910390f35b610128610123366004610c7f565b6102d0565b60405190815260200161010c565b610155610144366004610984565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161010c565b61015561017c366004610ba8565b6102dc565b61015561018f366004610c14565b6103a9565b6101286101a2366004610cbb565b610531565b6101e36040518060400160405280601881526020017f44656661756c742043616c6c6261636b2048616e646c6572000000000000000081525081565b60405161010c9190610e06565b6101f8610658565b60405161010c9190610d80565b6101556102133660046108e7565b63bc197c8160e01b98975050505050505050565b6101e3610235366004610a71565b6106e2565b6101556102483660046109f6565b63f23a6e6160e01b9695505050505050565b6101e3604051806040016040528060058152602001640312e302e360dc1b81525081565b60006001600160e01b03198216630271189760e51b14806102af57506001600160e01b03198216630a85bd0160e11b145b806102ca57506001600160e01b031982166301ffc9a760e01b145b92915050565b60006102ca3383610531565b60408051602080820186905282518083039091018152818301928390526320c13b0b60e01b9092526000913391839183916320c13b0b916103239189908990604401610e19565b60206040518083038186803b15801561033b57600080fd5b505afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190610bf7565b90506001600160e01b031981166320c13b0b60e01b1461039457600061039d565b630b135d3f60e11b5b925050505b9392505050565b60008033905060006103f18288888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061053192505050565b9050836104b957604051635ae6bd3760e01b8152600481018290526001600160a01b03831690635ae6bd379060240160206040518083038186803b15801561043857600080fd5b505afa15801561044c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104709190610b8f565b6104b45760405162461bcd60e51b815260206004820152601160248201527012185cda081b9bdd08185c1c1c9bdd9959607a1b604482015260640160405180910390fd5b61051e565b60405163934f3a1160e01b81526001600160a01b0383169063934f3a11906104ed9084908b908b908b908b90600401610dcd565b60006040518083038186803b15801561050557600080fd5b505afa158015610519573d6000803e3d6000fd5b505050505b506320c13b0b60e01b9695505050505050565b6000807f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca60001b838051906020012060405160200161057a929190918252602082015260400190565b604051602081830303815290604052805190602001209050601960f81b600160f81b856001600160a01b031663f698da256040518163ffffffff1660e01b815260040160206040518083038186803b1580156105d557600080fd5b505afa1580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d9190610b8f565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040528051906020012091505092915050565b604051636617c22960e11b815260016004820152600a60248201526060903390600090829063cc2f84529060440160006040518083038186803b15801561069e57600080fd5b505afa1580156106b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106da9190810190610ac5565b509392505050565b606060405163b4faba0960e01b8152600436036004808301376020600036836000335af1505060203d036040519150808201604052806020833e506000516103a257805160208201fd5b805161073781610e8f565b919050565b60008083601f84011261074e57600080fd5b5081356001600160401b0381111561076557600080fd5b6020830191508360208260051b850101111561078057600080fd5b9250929050565b60008083601f84011261079957600080fd5b5081356001600160401b038111156107b057600080fd5b60208301915083602082850101111561078057600080fd5b600082601f8301126107d957600080fd5b81356001600160401b038111156107f2576107f2610e79565b610805601f8201601f1916602001610e49565b81815284602083860101111561081a57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060008060c0898b03121561085357600080fd5b883561085e81610e8f565b9750602089013561086e81610e8f565b9650604089013561087e81610e8f565b95506060890135945060808901356001600160401b03808211156108a157600080fd5b6108ad8c838d01610787565b909650945060a08b01359150808211156108c657600080fd5b506108d38b828c01610787565b999c989b5096995094979396929594505050565b60008060008060008060008060a0898b03121561090357600080fd5b883561090e81610e8f565b9750602089013561091e81610e8f565b965060408901356001600160401b038082111561093a57600080fd5b6109468c838d0161073c565b909850965060608b013591508082111561095f57600080fd5b61096b8c838d0161073c565b909650945060808b01359150808211156108c657600080fd5b60008060008060006080868803121561099c57600080fd5b85356109a781610e8f565b945060208601356109b781610e8f565b93506040860135925060608601356001600160401b038111156109d957600080fd5b6109e588828901610787565b969995985093965092949392505050565b60008060008060008060a08789031215610a0f57600080fd5b8635610a1a81610e8f565b95506020870135610a2a81610e8f565b9450604087013593506060870135925060808701356001600160401b03811115610a5357600080fd5b610a5f89828a01610787565b979a9699509497509295939492505050565b600080600060408486031215610a8657600080fd5b8335610a9181610e8f565b925060208401356001600160401b03811115610aac57600080fd5b610ab886828701610787565b9497909650939450505050565b60008060408385031215610ad857600080fd5b82516001600160401b0380821115610aef57600080fd5b818501915085601f830112610b0357600080fd5b8151602082821115610b1757610b17610e79565b8160051b9250610b28818401610e49565b8281528181019085830185870184018b1015610b4357600080fd5b600096505b84871015610b725780519550610b5d86610e8f565b85835260019690960195918301918301610b48565b509650610b82905087820161072c565b9450505050509250929050565b600060208284031215610ba157600080fd5b5051919050565b600080600060408486031215610bbd57600080fd5b8335925060208401356001600160401b03811115610aac57600080fd5b600060208284031215610bec57600080fd5b81356103a281610ea7565b600060208284031215610c0957600080fd5b81516103a281610ea7565b60008060008060408587031215610c2a57600080fd5b84356001600160401b0380821115610c4157600080fd5b610c4d88838901610787565b90965094506020870135915080821115610c6657600080fd5b50610c7387828801610787565b95989497509550505050565b600060208284031215610c9157600080fd5b81356001600160401b03811115610ca757600080fd5b610cb3848285016107c8565b949350505050565b60008060408385031215610cce57600080fd5b8235610cd981610e8f565b915060208301356001600160401b03811115610cf457600080fd5b610d00858286016107c8565b9150509250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000815180845260005b81811015610d5957602081850181015186830182015201610d3d565b81811115610d6b576000602083870101525b50601f01601f19169290920160200192915050565b6020808252825182820181905260009190848201906040850190845b81811015610dc15783516001600160a01b031683529284019291840191600101610d9c565b50909695505050505050565b858152606060208201526000610de7606083018688610d0a565b8281036040840152610dfa818587610d0a565b98975050505050505050565b6020815260006103a26020830184610d33565b604081526000610e2c6040830186610d33565b8281036020840152610e3f818587610d0a565b9695505050505050565b604051601f8201601f191681016001600160401b0381118282101715610e7157610e71610e79565b604052919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610ea457600080fd5b50565b6001600160e01b031981168114610ea457600080fdfea2646970667358221220ca2effe1d5224bbbc2b140c0766c838fc8aac7e33582760b8a4207348b721a3564736f6c63430008070033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "author": "Richard Meissner - <richard@gnosis.pm>",
    "kind": "dev",
    "methods": {
      "getMessageHash(bytes)": {
        "details": "Returns hash of a message that can be signed by owners.",
        "params": {
          "message": "Message that should be hashed"
        },
        "returns": {
          "_0": "Message hash."
        }
      },
      "getMessageHashForSafe(address,bytes)": {
        "details": "Returns hash of a message that can be signed by owners.",
        "params": {
          "message": "Message that should be hashed",
          "safe": "Safe to which the message is targeted"
        },
        "returns": {
          "_0": "Message hash."
        }
      },
      "getModules()": {
        "details": "Returns array of first 10 modules.",
        "returns": {
          "_0": "Array of modules."
        }
      },
      "isValidSignature(bytes,bytes)": {
        "details": "Should return whether the signature provided is valid for the provided data.",
        "params": {
          "_data": "Arbitrary length data signed on the behalf of address(msg.sender)",
          "_signature": "Signature byte array associated with _data"
        },
        "returns": {
          "_0": "a bool upon valid or invalid signature with corresponding _data"
        }
      },
      "isValidSignature(bytes32,bytes)": {
        "details": "Should return whether the signature provided is valid for the provided data.       The save does not implement the interface since `checkSignatures` is not a view method.       The method will not perform any state changes (see parameters of `checkSignatures`)",
        "params": {
          "_dataHash": "Hash of the data signed on the behalf of address(msg.sender)",
          "_signature": "Signature byte array associated with _dataHash"
        },
        "returns": {
          "_0": "a bool upon valid or invalid signature with corresponding _dataHash"
        }
      },
      "simulate(address,bytes)": {
        "details": "Performs a delegetecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). Catches revert and returns encoded result as bytes.",
        "params": {
          "calldataPayload": "Calldata that should be sent to the target contract (encoded method name and arguments).",
          "targetContract": "Address of the contract containing the code to execute."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      }
    },
    "title": "Compatibility Fallback Handler - fallback handler to provider compatibility between pre 1.3.0 and 1.3.0+ Safe contracts",
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {},
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6AC24784 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xBD61951D EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6AC24784 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xB2494DF3 EQ PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xA1028C4 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x20C13B0B EQ PUSH2 0x181 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x837 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10C JUMP JUMPDEST PUSH2 0x155 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x984 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10C JUMP JUMPDEST PUSH2 0x155 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x155 PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0xC14 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH2 0x1E3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44656661756C742043616C6C6261636B2048616E646C65720000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xE06 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x658 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x8E7 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x9F6 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x312E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x2AF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x2CA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA CALLER DUP4 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE DUP2 DUP4 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH4 0x20C13B0B PUSH1 0xE0 SHL SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 CALLER SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0x20C13B0B SWAP2 PUSH2 0x323 SWAP2 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x44 ADD PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0xBF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x20C13B0B PUSH1 0xE0 SHL EQ PUSH2 0x394 JUMPI PUSH1 0x0 PUSH2 0x39D JUMP JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH1 0x0 PUSH2 0x3F1 DUP3 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x531 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 POP DUP4 PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5AE6BD37 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x5AE6BD37 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x470 SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x12185CDA081B9BDD08185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x934F3A11 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x934F3A11 SWAP1 PUSH2 0x4ED SWAP1 DUP5 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x519 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP PUSH4 0x20C13B0B PUSH1 0xE0 SHL SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x60B3CBF8B4A223D68D641B3B6DDF9A298E7F33710CF3D3A9D1146B5A6150FBCA PUSH1 0x0 SHL DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x57A SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0xF8 SHL DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF698DA25 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x60D SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP4 DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6617C229 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 SWAP1 CALLER SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH4 0xCC2F8452 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x6DA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xAC5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH4 0xB4FABA09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 CALLDATASIZE SUB PUSH1 0x4 DUP1 DUP4 ADD CALLDATACOPY PUSH1 0x20 PUSH1 0x0 CALLDATASIZE DUP4 PUSH1 0x0 CALLER GAS CALL POP POP PUSH1 0x20 RETURNDATASIZE SUB PUSH1 0x40 MLOAD SWAP2 POP DUP1 DUP3 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP4 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH2 0x3A2 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP1 MLOAD PUSH2 0x737 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x7F2 JUMPI PUSH2 0x7F2 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x805 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xE49 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x85E DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x86E DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x87E DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8AD DUP13 DUP4 DUP14 ADD PUSH2 0x787 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D3 DUP12 DUP3 DUP13 ADD PUSH2 0x787 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x90E DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x91E DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x93A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x946 DUP13 DUP4 DUP14 ADD PUSH2 0x73C JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x95F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96B DUP13 DUP4 DUP14 ADD PUSH2 0x73C JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x9A7 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x9B7 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x9D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9E5 DUP9 DUP3 DUP10 ADD PUSH2 0x787 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0xA1A DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0xA2A DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA5F DUP10 DUP3 DUP11 ADD PUSH2 0x787 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xA91 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xAAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB8 DUP7 DUP3 DUP8 ADD PUSH2 0x787 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0xB17 JUMPI PUSH2 0xB17 PUSH2 0xE79 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL SWAP3 POP PUSH2 0xB28 DUP2 DUP5 ADD PUSH2 0xE49 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP6 DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xB43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xB72 JUMPI DUP1 MLOAD SWAP6 POP PUSH2 0xB5D DUP7 PUSH2 0xE8F JUMP JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xB48 JUMP JUMPDEST POP SWAP7 POP PUSH2 0xB82 SWAP1 POP DUP8 DUP3 ADD PUSH2 0x72C JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xAAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A2 DUP2 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3A2 DUP2 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xC41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC4D DUP9 DUP4 DUP10 ADD PUSH2 0x787 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xC66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC73 DUP8 DUP3 DUP9 ADD PUSH2 0x787 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB3 DUP5 DUP3 DUP6 ADD PUSH2 0x7C8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xCD9 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xCF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD00 DUP6 DUP3 DUP7 ADD PUSH2 0x7C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD59 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xD3D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD6B JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDC1 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD9C JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xDE7 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0xD0A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xDFA DUP2 DUP6 DUP8 PUSH2 0xD0A JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE2C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xD33 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xE3F DUP2 DUP6 DUP8 PUSH2 0xD0A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE71 JUMPI PUSH2 0xE71 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0x2E SELFDESTRUCT 0xE1 0xD5 0x22 0x4B 0xBB 0xC2 0xB1 BLOCKHASH 0xC0 PUSH23 0x6C838FC8AAC7E33582760B8A4207348B721A3564736F6C PUSH4 0x43000807 STOP CALLER ",
      "sourceMap": "373:7042:16:-:0;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@NAME_2628": {
          "entryPoint": null,
          "id": 2628,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@VERSION_2631": {
          "entryPoint": null,
          "id": 2631,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@getMessageHashForSafe_2520": {
          "entryPoint": 1329,
          "id": 2520,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@getMessageHash_2478": {
          "entryPoint": 720,
          "id": 2478,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getModules_2593": {
          "entryPoint": 1624,
          "id": 2593,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@isValidSignature_2458": {
          "entryPoint": 937,
          "id": 2458,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@isValidSignature_2561": {
          "entryPoint": 732,
          "id": 2561,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@onERC1155BatchReceived_2671": {
          "entryPoint": null,
          "id": 2671,
          "parameterSlots": 8,
          "returnSlots": 1
        },
        "@onERC1155Received_2650": {
          "entryPoint": null,
          "id": 2650,
          "parameterSlots": 6,
          "returnSlots": 1
        },
        "@onERC721Received_2688": {
          "entryPoint": null,
          "id": 2688,
          "parameterSlots": 5,
          "returnSlots": 1
        },
        "@simulate_2609": {
          "entryPoint": 1762,
          "id": 2609,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@supportsInterface_2735": {
          "entryPoint": 638,
          "id": 2735,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@tokensReceived_2705": {
          "entryPoint": null,
          "id": 2705,
          "parameterSlots": 8,
          "returnSlots": 0
        },
        "abi_decode_address_fromMemory": {
          "entryPoint": 1836,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_decode_array_uint256_dyn_calldata": {
          "entryPoint": 1852,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_bytes": {
          "entryPoint": 1992,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_bytes_calldata": {
          "entryPoint": 1927,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr": {
          "entryPoint": 2103,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 8
        },
        "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr": {
          "entryPoint": 2279,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 8
        },
        "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
          "entryPoint": 2436,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 5
        },
        "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr": {
          "entryPoint": 2550,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 6
        },
        "abi_decode_tuple_t_addresst_bytes_calldata_ptr": {
          "entryPoint": 2673,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_address_fromMemory": {
          "entryPoint": 2757,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_bytes32_fromMemory": {
          "entryPoint": 2959,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bytes32t_bytes_calldata_ptr": {
          "entryPoint": 2984,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_decode_tuple_t_bytes4": {
          "entryPoint": 3034,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bytes4_fromMemory": {
          "entryPoint": 3063,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr": {
          "entryPoint": 3092,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 4
        },
        "abi_decode_tuple_t_bytes_memory_ptr": {
          "entryPoint": 3199,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_contract$_GnosisSafe_$952t_bytes_memory_ptr": {
          "entryPoint": 3259,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_uint256_fromMemory": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_bytes": {
          "entryPoint": 3379,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_bytes_calldata": {
          "entryPoint": 3338,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_bytes32_t_bytes32__to_t_bytes1_t_bytes1_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 5,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_rational_10_by_1__to_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
          "entryPoint": 3456,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr_t_bytes_calldata_ptr__to_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
          "entryPoint": 3533,
          "id": null,
          "parameterSlots": 6,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
          "entryPoint": 3590,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes_memory_ptr_t_bytes_calldata_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
          "entryPoint": 3609,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_fd8211c71ab965565e8a56b84284a02d17d4d89e6f05f14b26449d5de3a8c5b6__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "allocate_memory": {
          "entryPoint": 3657,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "panic_error_0x41": {
          "entryPoint": 3705,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "validator_revert_address": {
          "entryPoint": 3727,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "validator_revert_bytes4": {
          "entryPoint": 3751,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:15455:95",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:95",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "74:78:95",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "84:22:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "99:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "93:5:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "93:13:95"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "84:5:95"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "140:5:95"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "115:24:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "115:31:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "115:31:95"
                    }
                  ]
                },
                "name": "abi_decode_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "53:6:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "64:5:95",
                    "type": ""
                  }
                ],
                "src": "14:138:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "241:283:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "290:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "299:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "302:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "292:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "292:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "292:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "269:6:95"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "277:4:95",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "265:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "265:17:95"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "284:3:95"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "261:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "261:27:95"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "254:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "254:35:95"
                      },
                      "nodeType": "YulIf",
                      "src": "251:55:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "315:30:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "338:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "325:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "325:20:95"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "315:6:95"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "388:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "397:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "400:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "390:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "390:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "390:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "360:6:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "368:18:95",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "357:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "357:30:95"
                      },
                      "nodeType": "YulIf",
                      "src": "354:50:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "413:29:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "429:6:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "437:4:95",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "425:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "425:17:95"
                      },
                      "variableNames": [
                        {
                          "name": "arrayPos",
                          "nodeType": "YulIdentifier",
                          "src": "413:8:95"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "502:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "511:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "514:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "504:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "504:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "504:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "465:6:95"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "477:1:95",
                                        "type": "",
                                        "value": "5"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "480:6:95"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "473:3:95"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "473:14:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "461:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "461:27:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "490:4:95",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "457:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "457:38:95"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "497:3:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "454:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "454:47:95"
                      },
                      "nodeType": "YulIf",
                      "src": "451:67:95"
                    }
                  ]
                },
                "name": "abi_decode_array_uint256_dyn_calldata",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "204:6:95",
                    "type": ""
                  },
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "212:3:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "arrayPos",
                    "nodeType": "YulTypedName",
                    "src": "220:8:95",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "230:6:95",
                    "type": ""
                  }
                ],
                "src": "157:367:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "601:275:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "650:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "659:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "662:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "652:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "652:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "652:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "629:6:95"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "637:4:95",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "625:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "625:17:95"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "644:3:95"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "621:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "621:27:95"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "614:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "614:35:95"
                      },
                      "nodeType": "YulIf",
                      "src": "611:55:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "675:30:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "698:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "685:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "685:20:95"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "675:6:95"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "748:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "757:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "760:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "750:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "750:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "750:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "720:6:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "728:18:95",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "717:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "717:30:95"
                      },
                      "nodeType": "YulIf",
                      "src": "714:50:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "773:29:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "789:6:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "797:4:95",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "785:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "785:17:95"
                      },
                      "variableNames": [
                        {
                          "name": "arrayPos",
                          "nodeType": "YulIdentifier",
                          "src": "773:8:95"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "854:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "863:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "866:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "856:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "856:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "856:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "825:6:95"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "833:6:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "821:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "821:19:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "842:4:95",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "817:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "817:30:95"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "849:3:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "814:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "814:39:95"
                      },
                      "nodeType": "YulIf",
                      "src": "811:59:95"
                    }
                  ]
                },
                "name": "abi_decode_bytes_calldata",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "564:6:95",
                    "type": ""
                  },
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "572:3:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "arrayPos",
                    "nodeType": "YulTypedName",
                    "src": "580:8:95",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "590:6:95",
                    "type": ""
                  }
                ],
                "src": "529:347:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "933:478:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "982:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "991:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "994:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "984:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "984:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "984:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "961:6:95"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "969:4:95",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "957:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "957:17:95"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "976:3:95"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "953:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "953:27:95"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "946:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "946:35:95"
                      },
                      "nodeType": "YulIf",
                      "src": "943:55:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1007:30:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1030:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1017:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1017:20:95"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "1011:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1076:22:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "1078:16:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1078:18:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1078:18:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1052:2:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1056:18:95",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1049:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1049:26:95"
                      },
                      "nodeType": "YulIf",
                      "src": "1046:52:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1107:70:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1150:2:95"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1154:4:95",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1146:3:95"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1146:13:95"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1165:2:95",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "1161:3:95"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1161:7:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1142:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1142:27:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1171:4:95",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1138:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1138:38:95"
                          }
                        ],
                        "functionName": {
                          "name": "allocate_memory",
                          "nodeType": "YulIdentifier",
                          "src": "1122:15:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1122:55:95"
                      },
                      "variables": [
                        {
                          "name": "array_1",
                          "nodeType": "YulTypedName",
                          "src": "1111:7:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "array_1",
                            "nodeType": "YulIdentifier",
                            "src": "1193:7:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1202:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1186:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1186:19:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1186:19:95"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1253:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1262:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1265:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1255:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1255:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1255:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1228:6:95"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1236:2:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1224:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1224:15:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1241:4:95",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1220:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1220:26:95"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1248:3:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1217:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1217:35:95"
                      },
                      "nodeType": "YulIf",
                      "src": "1214:55:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array_1",
                                "nodeType": "YulIdentifier",
                                "src": "1295:7:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1304:4:95",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1291:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1291:18:95"
                          },
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1315:6:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1323:4:95",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1311:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1311:17:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1330:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "1278:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1278:55:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1278:55:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "array_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1357:7:95"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1366:2:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1353:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1353:16:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1371:4:95",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1349:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1349:27:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1378:1:95",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1342:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1342:38:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1342:38:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1389:16:95",
                      "value": {
                        "name": "array_1",
                        "nodeType": "YulIdentifier",
                        "src": "1398:7:95"
                      },
                      "variableNames": [
                        {
                          "name": "array",
                          "nodeType": "YulIdentifier",
                          "src": "1389:5:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_bytes",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "907:6:95",
                    "type": ""
                  },
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "915:3:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "array",
                    "nodeType": "YulTypedName",
                    "src": "923:5:95",
                    "type": ""
                  }
                ],
                "src": "881:530:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1609:1012:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1656:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1665:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1668:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1658:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1658:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1658:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1630:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1639:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1626:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1626:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1651:3:95",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1622:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1622:33:95"
                      },
                      "nodeType": "YulIf",
                      "src": "1619:53:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1681:36:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1707:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1694:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1694:23:95"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1685:5:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1751:5:95"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "1726:24:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1726:31:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1726:31:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1766:15:95",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1776:5:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1766:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1790:47:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1822:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1833:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1818:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1818:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1805:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1805:32:95"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "1794:7:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "1871:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "1846:24:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1846:33:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1846:33:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1888:17:95",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1898:7:95"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1888:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1914:47:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1946:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1957:2:95",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1942:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1942:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1929:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1929:32:95"
                      },
                      "variables": [
                        {
                          "name": "value_2",
                          "nodeType": "YulTypedName",
                          "src": "1918:7:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "1995:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "1970:24:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1970:33:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1970:33:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2012:17:95",
                      "value": {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "2022:7:95"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2012:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2038:42:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2065:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2076:2:95",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2061:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2061:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2048:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2048:32:95"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "2038:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2089:47:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2120:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2131:3:95",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2116:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2116:19:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2103:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2103:33:95"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2093:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2145:28:95",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2155:18:95",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "2149:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2200:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2209:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2212:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2202:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2202:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2202:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2188:6:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2196:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2185:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2185:14:95"
                      },
                      "nodeType": "YulIf",
                      "src": "2182:34:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2225:84:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2281:9:95"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2292:6:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2277:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2277:22:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2301:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "2251:25:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2251:58:95"
                      },
                      "variables": [
                        {
                          "name": "value4_1",
                          "nodeType": "YulTypedName",
                          "src": "2229:8:95",
                          "type": ""
                        },
                        {
                          "name": "value5_1",
                          "nodeType": "YulTypedName",
                          "src": "2239:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2318:18:95",
                      "value": {
                        "name": "value4_1",
                        "nodeType": "YulIdentifier",
                        "src": "2328:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "2318:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2345:18:95",
                      "value": {
                        "name": "value5_1",
                        "nodeType": "YulIdentifier",
                        "src": "2355:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "2345:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2372:49:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2405:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2416:3:95",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2401:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2401:19:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2388:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2388:33:95"
                      },
                      "variables": [
                        {
                          "name": "offset_1",
                          "nodeType": "YulTypedName",
                          "src": "2376:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2450:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2459:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2462:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2452:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2452:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2452:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2436:8:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2446:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2433:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2433:16:95"
                      },
                      "nodeType": "YulIf",
                      "src": "2430:36:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2475:86:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2531:9:95"
                              },
                              {
                                "name": "offset_1",
                                "nodeType": "YulIdentifier",
                                "src": "2542:8:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2527:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2527:24:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2553:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "2501:25:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2501:60:95"
                      },
                      "variables": [
                        {
                          "name": "value6_1",
                          "nodeType": "YulTypedName",
                          "src": "2479:8:95",
                          "type": ""
                        },
                        {
                          "name": "value7_1",
                          "nodeType": "YulTypedName",
                          "src": "2489:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2570:18:95",
                      "value": {
                        "name": "value6_1",
                        "nodeType": "YulIdentifier",
                        "src": "2580:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value6",
                          "nodeType": "YulIdentifier",
                          "src": "2570:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2597:18:95",
                      "value": {
                        "name": "value7_1",
                        "nodeType": "YulIdentifier",
                        "src": "2607:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value7",
                          "nodeType": "YulIdentifier",
                          "src": "2597:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1519:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1530:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1542:6:95",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1550:6:95",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1558:6:95",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "1566:6:95",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "1574:6:95",
                    "type": ""
                  },
                  {
                    "name": "value5",
                    "nodeType": "YulTypedName",
                    "src": "1582:6:95",
                    "type": ""
                  },
                  {
                    "name": "value6",
                    "nodeType": "YulTypedName",
                    "src": "1590:6:95",
                    "type": ""
                  },
                  {
                    "name": "value7",
                    "nodeType": "YulTypedName",
                    "src": "1598:6:95",
                    "type": ""
                  }
                ],
                "src": "1416:1205:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2853:1111:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2900:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2909:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2912:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2902:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2902:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2902:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2874:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2883:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2870:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2870:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2895:3:95",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2866:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2866:33:95"
                      },
                      "nodeType": "YulIf",
                      "src": "2863:53:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2925:36:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2951:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2938:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2938:23:95"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "2929:5:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2995:5:95"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "2970:24:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2970:31:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2970:31:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3010:15:95",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3020:5:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3010:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3034:47:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3066:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3077:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3062:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3062:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3049:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3049:32:95"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "3038:7:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "3115:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "3090:24:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3090:33:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3090:33:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3132:17:95",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3142:7:95"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3132:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3158:46:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3189:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3200:2:95",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3185:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3185:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3172:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3172:32:95"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3162:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3213:28:95",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3223:18:95",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "3217:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3268:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3277:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3280:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3270:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3270:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3270:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3256:6:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3264:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3253:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3253:14:95"
                      },
                      "nodeType": "YulIf",
                      "src": "3250:34:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3293:96:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3361:9:95"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3372:6:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3357:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3357:22:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3381:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_uint256_dyn_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "3319:37:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3319:70:95"
                      },
                      "variables": [
                        {
                          "name": "value2_1",
                          "nodeType": "YulTypedName",
                          "src": "3297:8:95",
                          "type": ""
                        },
                        {
                          "name": "value3_1",
                          "nodeType": "YulTypedName",
                          "src": "3307:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3398:18:95",
                      "value": {
                        "name": "value2_1",
                        "nodeType": "YulIdentifier",
                        "src": "3408:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3398:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3425:18:95",
                      "value": {
                        "name": "value3_1",
                        "nodeType": "YulIdentifier",
                        "src": "3435:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3425:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3452:48:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3485:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3496:2:95",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3481:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3481:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3468:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3468:32:95"
                      },
                      "variables": [
                        {
                          "name": "offset_1",
                          "nodeType": "YulTypedName",
                          "src": "3456:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3529:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3538:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3541:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3531:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3531:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3531:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "3515:8:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3525:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3512:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3512:16:95"
                      },
                      "nodeType": "YulIf",
                      "src": "3509:36:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3554:98:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3622:9:95"
                              },
                              {
                                "name": "offset_1",
                                "nodeType": "YulIdentifier",
                                "src": "3633:8:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3618:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3618:24:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3644:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_uint256_dyn_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "3580:37:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3580:72:95"
                      },
                      "variables": [
                        {
                          "name": "value4_1",
                          "nodeType": "YulTypedName",
                          "src": "3558:8:95",
                          "type": ""
                        },
                        {
                          "name": "value5_1",
                          "nodeType": "YulTypedName",
                          "src": "3568:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3661:18:95",
                      "value": {
                        "name": "value4_1",
                        "nodeType": "YulIdentifier",
                        "src": "3671:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3661:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3688:18:95",
                      "value": {
                        "name": "value5_1",
                        "nodeType": "YulIdentifier",
                        "src": "3698:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "3688:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3715:49:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3748:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3759:3:95",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3744:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3744:19:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3731:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3731:33:95"
                      },
                      "variables": [
                        {
                          "name": "offset_2",
                          "nodeType": "YulTypedName",
                          "src": "3719:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3793:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3802:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3805:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3795:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3795:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3795:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "3779:8:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3789:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3776:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3776:16:95"
                      },
                      "nodeType": "YulIf",
                      "src": "3773:36:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3818:86:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3874:9:95"
                              },
                              {
                                "name": "offset_2",
                                "nodeType": "YulIdentifier",
                                "src": "3885:8:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3870:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3870:24:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3896:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "3844:25:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3844:60:95"
                      },
                      "variables": [
                        {
                          "name": "value6_1",
                          "nodeType": "YulTypedName",
                          "src": "3822:8:95",
                          "type": ""
                        },
                        {
                          "name": "value7_1",
                          "nodeType": "YulTypedName",
                          "src": "3832:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3913:18:95",
                      "value": {
                        "name": "value6_1",
                        "nodeType": "YulIdentifier",
                        "src": "3923:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value6",
                          "nodeType": "YulIdentifier",
                          "src": "3913:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3940:18:95",
                      "value": {
                        "name": "value7_1",
                        "nodeType": "YulIdentifier",
                        "src": "3950:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value7",
                          "nodeType": "YulIdentifier",
                          "src": "3940:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2763:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2774:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2786:6:95",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2794:6:95",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "2802:6:95",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "2810:6:95",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "2818:6:95",
                    "type": ""
                  },
                  {
                    "name": "value5",
                    "nodeType": "YulTypedName",
                    "src": "2826:6:95",
                    "type": ""
                  },
                  {
                    "name": "value6",
                    "nodeType": "YulTypedName",
                    "src": "2834:6:95",
                    "type": ""
                  },
                  {
                    "name": "value7",
                    "nodeType": "YulTypedName",
                    "src": "2842:6:95",
                    "type": ""
                  }
                ],
                "src": "2626:1338:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4109:614:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4156:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4165:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4168:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4158:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4158:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4158:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4130:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4139:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4126:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4126:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4151:3:95",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "4122:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4122:33:95"
                      },
                      "nodeType": "YulIf",
                      "src": "4119:53:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4181:36:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4207:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4194:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4194:23:95"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "4185:5:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4251:5:95"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "4226:24:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4226:31:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4226:31:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4266:15:95",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4276:5:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4266:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4290:47:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4322:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4333:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4318:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4318:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4305:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4305:32:95"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "4294:7:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "4371:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "4346:24:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4346:33:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4346:33:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4388:17:95",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4398:7:95"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4388:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4414:42:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4441:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4452:2:95",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4437:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4437:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4424:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4424:32:95"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4414:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4465:46:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4496:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4507:2:95",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4492:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4492:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4479:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4479:32:95"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4469:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4554:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4563:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4566:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4556:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4556:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4556:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4526:6:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4534:18:95",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4523:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4523:30:95"
                      },
                      "nodeType": "YulIf",
                      "src": "4520:50:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4579:84:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4635:9:95"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4646:6:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4631:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4631:22:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4655:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "4605:25:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4605:58:95"
                      },
                      "variables": [
                        {
                          "name": "value3_1",
                          "nodeType": "YulTypedName",
                          "src": "4583:8:95",
                          "type": ""
                        },
                        {
                          "name": "value4_1",
                          "nodeType": "YulTypedName",
                          "src": "4593:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4672:18:95",
                      "value": {
                        "name": "value3_1",
                        "nodeType": "YulIdentifier",
                        "src": "4682:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "4672:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4699:18:95",
                      "value": {
                        "name": "value4_1",
                        "nodeType": "YulIdentifier",
                        "src": "4709:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "4699:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4043:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "4054:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4066:6:95",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4074:6:95",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "4082:6:95",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "4090:6:95",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "4098:6:95",
                    "type": ""
                  }
                ],
                "src": "3969:754:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4885:666:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4932:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4941:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4944:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4934:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4934:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4934:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4906:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4915:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4902:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4902:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4927:3:95",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "4898:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4898:33:95"
                      },
                      "nodeType": "YulIf",
                      "src": "4895:53:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4957:36:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4983:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4970:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4970:23:95"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "4961:5:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5027:5:95"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "5002:24:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5002:31:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5002:31:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5042:15:95",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5052:5:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5042:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5066:47:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5098:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5109:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5094:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5094:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5081:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5081:32:95"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "5070:7:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "5147:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "5122:24:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5122:33:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5122:33:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5164:17:95",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "5174:7:95"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5164:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5190:42:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5217:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5228:2:95",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5213:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5213:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5200:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5200:32:95"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5190:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5241:42:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5268:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5279:2:95",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5264:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5264:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5251:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5251:32:95"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "5241:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5292:47:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5323:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5334:3:95",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5319:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5319:19:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5306:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5306:33:95"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5296:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5382:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5391:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5394:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5384:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5384:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5384:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5354:6:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5362:18:95",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5351:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5351:30:95"
                      },
                      "nodeType": "YulIf",
                      "src": "5348:50:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5407:84:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5463:9:95"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5474:6:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5459:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5459:22:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5483:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "5433:25:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5433:58:95"
                      },
                      "variables": [
                        {
                          "name": "value4_1",
                          "nodeType": "YulTypedName",
                          "src": "5411:8:95",
                          "type": ""
                        },
                        {
                          "name": "value5_1",
                          "nodeType": "YulTypedName",
                          "src": "5421:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5500:18:95",
                      "value": {
                        "name": "value4_1",
                        "nodeType": "YulIdentifier",
                        "src": "5510:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "5500:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5527:18:95",
                      "value": {
                        "name": "value5_1",
                        "nodeType": "YulIdentifier",
                        "src": "5537:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "5527:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4811:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "4822:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4834:6:95",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4842:6:95",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "4850:6:95",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "4858:6:95",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "4866:6:95",
                    "type": ""
                  },
                  {
                    "name": "value5",
                    "nodeType": "YulTypedName",
                    "src": "4874:6:95",
                    "type": ""
                  }
                ],
                "src": "4728:823:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5662:438:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5708:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5717:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5720:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5710:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5710:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5710:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "5683:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5692:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5679:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5679:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5704:2:95",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "5675:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5675:32:95"
                      },
                      "nodeType": "YulIf",
                      "src": "5672:52:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5733:36:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5759:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5746:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5746:23:95"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "5737:5:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5803:5:95"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "5778:24:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5778:31:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5778:31:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5818:15:95",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5828:5:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5818:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5842:46:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5873:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5884:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5869:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5869:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5856:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5856:32:95"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5846:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5931:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5940:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5943:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5933:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5933:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5933:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5903:6:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5911:18:95",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5900:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5900:30:95"
                      },
                      "nodeType": "YulIf",
                      "src": "5897:50:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5956:84:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6012:9:95"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6023:6:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6008:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6008:22:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6032:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "5982:25:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5982:58:95"
                      },
                      "variables": [
                        {
                          "name": "value1_1",
                          "nodeType": "YulTypedName",
                          "src": "5960:8:95",
                          "type": ""
                        },
                        {
                          "name": "value2_1",
                          "nodeType": "YulTypedName",
                          "src": "5970:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6049:18:95",
                      "value": {
                        "name": "value1_1",
                        "nodeType": "YulIdentifier",
                        "src": "6059:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6049:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6076:18:95",
                      "value": {
                        "name": "value2_1",
                        "nodeType": "YulIdentifier",
                        "src": "6086:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "6076:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_bytes_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5612:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "5623:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5635:6:95",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "5643:6:95",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "5651:6:95",
                    "type": ""
                  }
                ],
                "src": "5556:544:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6228:986:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6274:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6283:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6286:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6276:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6276:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6276:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6249:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6258:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6245:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6245:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6270:2:95",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6241:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6241:32:95"
                      },
                      "nodeType": "YulIf",
                      "src": "6238:52:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6299:30:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6319:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6313:5:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6313:16:95"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6303:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6338:28:95",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6348:18:95",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "6342:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6393:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6402:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6405:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6395:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6395:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6395:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "6381:6:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6389:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6378:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6378:14:95"
                      },
                      "nodeType": "YulIf",
                      "src": "6375:34:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6418:32:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6432:9:95"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "6443:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6428:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6428:22:95"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "6422:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6498:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6507:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6510:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6500:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6500:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6500:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "6477:2:95"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6481:4:95",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6473:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6473:13:95"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6488:7:95"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "6469:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6469:27:95"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6462:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6462:35:95"
                      },
                      "nodeType": "YulIf",
                      "src": "6459:55:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6523:19:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "6539:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6533:5:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6533:9:95"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "6527:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6551:14:95",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6561:4:95",
                        "type": "",
                        "value": "0x20"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "6555:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6588:22:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "6590:16:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6590:18:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6590:18:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "6580:2:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6584:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6577:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6577:10:95"
                      },
                      "nodeType": "YulIf",
                      "src": "6574:36:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6619:20:95",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6633:1:95",
                            "type": "",
                            "value": "5"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "6636:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6629:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6629:10:95"
                      },
                      "variables": [
                        {
                          "name": "_5",
                          "nodeType": "YulTypedName",
                          "src": "6623:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6648:39:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "6679:2:95"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "6683:2:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6675:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6675:11:95"
                          }
                        ],
                        "functionName": {
                          "name": "allocate_memory",
                          "nodeType": "YulIdentifier",
                          "src": "6659:15:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6659:28:95"
                      },
                      "variables": [
                        {
                          "name": "dst",
                          "nodeType": "YulTypedName",
                          "src": "6652:3:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6696:16:95",
                      "value": {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "6709:3:95"
                      },
                      "variables": [
                        {
                          "name": "dst_1",
                          "nodeType": "YulTypedName",
                          "src": "6700:5:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "6728:3:95"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "6733:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6721:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6721:15:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6721:15:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6745:19:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "6756:3:95"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "6761:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6752:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6752:12:95"
                      },
                      "variableNames": [
                        {
                          "name": "dst",
                          "nodeType": "YulIdentifier",
                          "src": "6745:3:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6773:22:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "6788:2:95"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "6792:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6784:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6784:11:95"
                      },
                      "variables": [
                        {
                          "name": "src",
                          "nodeType": "YulTypedName",
                          "src": "6777:3:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6841:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6850:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6853:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6843:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6843:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6843:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "6818:2:95"
                                  },
                                  {
                                    "name": "_5",
                                    "nodeType": "YulIdentifier",
                                    "src": "6822:2:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6814:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6814:11:95"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "6827:2:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6810:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6810:20:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6832:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6807:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6807:33:95"
                      },
                      "nodeType": "YulIf",
                      "src": "6804:53:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6866:10:95",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6875:1:95",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "6870:1:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6930:186:95",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "6944:23:95",
                            "value": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "6963:3:95"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6957:5:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6957:10:95"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "6948:5:95",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "7005:5:95"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_address",
                                "nodeType": "YulIdentifier",
                                "src": "6980:24:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6980:31:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6980:31:95"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7031:3:95"
                                },
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "7036:5:95"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7024:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7024:18:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7024:18:95"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "7055:19:95",
                            "value": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7066:3:95"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "7071:2:95"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7062:3:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7062:12:95"
                            },
                            "variableNames": [
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "7055:3:95"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "7087:19:95",
                            "value": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "7098:3:95"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "7103:2:95"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7094:3:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7094:12:95"
                            },
                            "variableNames": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "7087:3:95"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6896:1:95"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "6899:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6893:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6893:9:95"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "6903:18:95",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "6905:14:95",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6914:1:95"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6917:1:95",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6910:3:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6910:9:95"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "6905:1:95"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "6889:3:95",
                        "statements": []
                      },
                      "src": "6885:231:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7125:15:95",
                      "value": {
                        "name": "dst_1",
                        "nodeType": "YulIdentifier",
                        "src": "7135:5:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7125:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7149:59:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7193:9:95"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "7204:2:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7189:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7189:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "7159:29:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7159:49:95"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7149:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6186:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "6197:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6209:6:95",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "6217:6:95",
                    "type": ""
                  }
                ],
                "src": "6105:1109:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7300:103:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7346:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7355:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7358:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "7348:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7348:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7348:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "7321:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7330:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7317:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7317:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7342:2:95",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "7313:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7313:32:95"
                      },
                      "nodeType": "YulIf",
                      "src": "7310:52:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7371:26:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7387:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7381:5:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7381:16:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7371:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes32_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7266:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "7277:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7289:6:95",
                    "type": ""
                  }
                ],
                "src": "7219:184:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7514:371:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7560:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7569:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7572:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "7562:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7562:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7562:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "7535:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7544:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7531:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7531:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7556:2:95",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "7527:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7527:32:95"
                      },
                      "nodeType": "YulIf",
                      "src": "7524:52:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7585:33:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7608:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7595:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7595:23:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7585:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7627:46:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7658:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7669:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7654:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7654:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7641:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7641:32:95"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7631:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7716:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7725:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7728:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "7718:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7718:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7718:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "7688:6:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7696:18:95",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7685:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7685:30:95"
                      },
                      "nodeType": "YulIf",
                      "src": "7682:50:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7741:84:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7797:9:95"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7808:6:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7793:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7793:22:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7817:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "7767:25:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7767:58:95"
                      },
                      "variables": [
                        {
                          "name": "value1_1",
                          "nodeType": "YulTypedName",
                          "src": "7745:8:95",
                          "type": ""
                        },
                        {
                          "name": "value2_1",
                          "nodeType": "YulTypedName",
                          "src": "7755:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7834:18:95",
                      "value": {
                        "name": "value1_1",
                        "nodeType": "YulIdentifier",
                        "src": "7844:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7834:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7861:18:95",
                      "value": {
                        "name": "value2_1",
                        "nodeType": "YulIdentifier",
                        "src": "7871:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "7861:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes32t_bytes_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7464:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "7475:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7487:6:95",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "7495:6:95",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "7503:6:95",
                    "type": ""
                  }
                ],
                "src": "7408:477:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7959:176:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8005:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8014:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8017:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8007:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8007:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8007:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "7980:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7989:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7976:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7976:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8001:2:95",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "7972:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7972:32:95"
                      },
                      "nodeType": "YulIf",
                      "src": "7969:52:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8030:36:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8056:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8043:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8043:23:95"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "8034:5:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8099:5:95"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "8075:23:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8075:30:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8075:30:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8114:15:95",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8124:5:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8114:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes4",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7925:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "7936:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7948:6:95",
                    "type": ""
                  }
                ],
                "src": "7890:245:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8220:169:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8266:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8275:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8278:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8268:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8268:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8268:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "8241:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8250:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8237:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8237:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8262:2:95",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8233:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8233:32:95"
                      },
                      "nodeType": "YulIf",
                      "src": "8230:52:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8291:29:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8310:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8304:5:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8304:16:95"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "8295:5:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8353:5:95"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "8329:23:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8329:30:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8329:30:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8368:15:95",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8378:5:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8368:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes4_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8186:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "8197:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "8209:6:95",
                    "type": ""
                  }
                ],
                "src": "8140:249:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8519:592:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8565:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8574:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8577:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8567:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8567:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8567:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "8540:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8549:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8536:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8536:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8561:2:95",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8532:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8532:32:95"
                      },
                      "nodeType": "YulIf",
                      "src": "8529:52:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8590:37:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8617:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8604:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8604:23:95"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8594:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8636:28:95",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8646:18:95",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "8640:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8691:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8700:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8703:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8693:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8693:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8693:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "8679:6:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8687:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8676:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8676:14:95"
                      },
                      "nodeType": "YulIf",
                      "src": "8673:34:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8716:84:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8772:9:95"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8783:6:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8768:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8768:22:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8792:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "8742:25:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8742:58:95"
                      },
                      "variables": [
                        {
                          "name": "value0_1",
                          "nodeType": "YulTypedName",
                          "src": "8720:8:95",
                          "type": ""
                        },
                        {
                          "name": "value1_1",
                          "nodeType": "YulTypedName",
                          "src": "8730:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8809:18:95",
                      "value": {
                        "name": "value0_1",
                        "nodeType": "YulIdentifier",
                        "src": "8819:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8809:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8836:18:95",
                      "value": {
                        "name": "value1_1",
                        "nodeType": "YulIdentifier",
                        "src": "8846:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "8836:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8863:48:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8896:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8907:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8892:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8892:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8879:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8879:32:95"
                      },
                      "variables": [
                        {
                          "name": "offset_1",
                          "nodeType": "YulTypedName",
                          "src": "8867:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8940:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8949:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8952:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8942:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8942:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8942:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "8926:8:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8936:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8923:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8923:16:95"
                      },
                      "nodeType": "YulIf",
                      "src": "8920:36:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8965:86:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9021:9:95"
                              },
                              {
                                "name": "offset_1",
                                "nodeType": "YulIdentifier",
                                "src": "9032:8:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9017:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9017:24:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9043:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "8991:25:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8991:60:95"
                      },
                      "variables": [
                        {
                          "name": "value2_1",
                          "nodeType": "YulTypedName",
                          "src": "8969:8:95",
                          "type": ""
                        },
                        {
                          "name": "value3_1",
                          "nodeType": "YulTypedName",
                          "src": "8979:8:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9060:18:95",
                      "value": {
                        "name": "value2_1",
                        "nodeType": "YulIdentifier",
                        "src": "9070:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "9060:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9087:18:95",
                      "value": {
                        "name": "value3_1",
                        "nodeType": "YulIdentifier",
                        "src": "9097:8:95"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "9087:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8461:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "8472:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "8484:6:95",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "8492:6:95",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "8500:6:95",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "8508:6:95",
                    "type": ""
                  }
                ],
                "src": "8394:717:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9195:241:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9241:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9250:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9253:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "9243:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9243:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9243:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "9216:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9225:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9212:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9212:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9237:2:95",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "9208:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9208:32:95"
                      },
                      "nodeType": "YulIf",
                      "src": "9205:52:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9266:37:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9293:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "9280:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9280:23:95"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9270:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9346:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9355:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9358:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "9348:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9348:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9348:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9318:6:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9326:18:95",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9315:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9315:30:95"
                      },
                      "nodeType": "YulIf",
                      "src": "9312:50:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9371:59:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9402:9:95"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9413:6:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9398:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9398:22:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9422:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "9381:16:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9381:49:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9371:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9161:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "9172:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "9184:6:95",
                    "type": ""
                  }
                ],
                "src": "9116:320:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9555:359:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9601:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9610:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9613:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "9603:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9603:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9603:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "9576:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9585:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9572:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9572:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9597:2:95",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "9568:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9568:32:95"
                      },
                      "nodeType": "YulIf",
                      "src": "9565:52:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9626:36:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9652:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "9639:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9639:23:95"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "9630:5:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9696:5:95"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "9671:24:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9671:31:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9671:31:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9711:15:95",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9721:5:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9711:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9735:46:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9766:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9777:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9762:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9762:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "9749:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9749:32:95"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9739:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9824:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9833:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9836:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "9826:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9826:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9826:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9796:6:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9804:18:95",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9793:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9793:30:95"
                      },
                      "nodeType": "YulIf",
                      "src": "9790:50:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9849:59:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9880:9:95"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9891:6:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9876:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9876:22:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9900:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "9859:16:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9859:49:95"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "9849:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_contract$_GnosisSafe_$952t_bytes_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9513:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "9524:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "9536:6:95",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "9544:6:95",
                    "type": ""
                  }
                ],
                "src": "9441:473:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10000:103:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10046:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10055:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10058:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "10048:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10048:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10048:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "10021:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10030:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10017:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10017:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10042:2:95",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "10013:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10013:32:95"
                      },
                      "nodeType": "YulIf",
                      "src": "10010:52:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10071:26:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10087:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10081:5:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10081:16:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10071:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9966:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "9977:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "9989:6:95",
                    "type": ""
                  }
                ],
                "src": "9919:184:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10174:200:95",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10191:3:95"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10196:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10184:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10184:19:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10184:19:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10229:3:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10234:4:95",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10225:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10225:14:95"
                          },
                          {
                            "name": "start",
                            "nodeType": "YulIdentifier",
                            "src": "10241:5:95"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10248:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "10212:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10212:43:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10212:43:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10279:3:95"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10284:6:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10275:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10275:16:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10293:4:95",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10271:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10271:27:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10300:1:95",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10264:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10264:38:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10264:38:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10311:57:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10326:3:95"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "10339:6:95"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10347:2:95",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10335:3:95"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10335:15:95"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10356:2:95",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "10352:3:95"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10352:7:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10331:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10331:29:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10322:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10322:39:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10363:4:95",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10318:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10318:50:95"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "10311:3:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_bytes_calldata",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "start",
                    "nodeType": "YulTypedName",
                    "src": "10143:5:95",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "10150:6:95",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "10158:3:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "10166:3:95",
                    "type": ""
                  }
                ],
                "src": "10108:266:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10428:422:95",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10438:26:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10458:5:95"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10452:5:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10452:12:95"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "10442:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10480:3:95"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10485:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10473:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10473:19:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10473:19:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10501:10:95",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10510:1:95",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "10505:1:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10572:110:95",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "10586:14:95",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10596:4:95",
                              "type": "",
                              "value": "0x20"
                            },
                            "variables": [
                              {
                                "name": "_1",
                                "nodeType": "YulTypedName",
                                "src": "10590:2:95",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "10628:3:95"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "10633:1:95"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10624:3:95"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10624:11:95"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "10637:2:95"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10620:3:95"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10620:20:95"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value",
                                              "nodeType": "YulIdentifier",
                                              "src": "10656:5:95"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "10663:1:95"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "10652:3:95"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10652:13:95"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "10667:2:95"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10648:3:95"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10648:22:95"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "10642:5:95"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10642:29:95"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "10613:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10613:59:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10613:59:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10531:1:95"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10534:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10528:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10528:13:95"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "10542:21:95",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "10544:17:95",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10553:1:95"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10556:4:95",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10549:3:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10549:12:95"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "10544:1:95"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "10524:3:95",
                        "statements": []
                      },
                      "src": "10520:162:95"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10716:62:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "10745:3:95"
                                        },
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "10750:6:95"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10741:3:95"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10741:16:95"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10759:4:95",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10737:3:95"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10737:27:95"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10766:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "10730:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10730:38:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10730:38:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10697:1:95"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10700:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10694:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10694:13:95"
                      },
                      "nodeType": "YulIf",
                      "src": "10691:87:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10787:57:95",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10802:3:95"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "10815:6:95"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10823:2:95",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10811:3:95"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10811:15:95"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10832:2:95",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "10828:3:95"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10828:7:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10807:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10807:29:95"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10798:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10798:39:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10839:4:95",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10794:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10794:50:95"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "10787:3:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_bytes",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "10405:5:95",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "10412:3:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "10420:3:95",
                    "type": ""
                  }
                ],
                "src": "10379:471:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11054:222:95",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11064:23:95",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11078:3:95",
                            "type": "",
                            "value": "248"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11083:3:95",
                            "type": "",
                            "value": "255"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11074:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11074:13:95"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "11068:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11103:3:95"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "11112:6:95"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "11120:2:95"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11108:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11108:15:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11096:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11096:28:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11096:28:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11144:3:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11149:1:95",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11140:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11140:11:95"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "11157:6:95"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "11165:2:95"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11153:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11153:15:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11133:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11133:36:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11133:36:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11189:3:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11194:1:95",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11185:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11185:11:95"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "11198:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11178:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11178:27:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11178:27:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11225:3:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11230:2:95",
                                "type": "",
                                "value": "34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11221:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11221:12:95"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "11235:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11214:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11214:28:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11214:28:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11251:19:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11262:3:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11267:2:95",
                            "type": "",
                            "value": "66"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11258:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11258:12:95"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "11251:3:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_bytes32_t_bytes32__to_t_bytes1_t_bytes1_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "11006:3:95",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "11011:6:95",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "11019:6:95",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "11027:6:95",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "11035:6:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "11046:3:95",
                    "type": ""
                  }
                ],
                "src": "10855:421:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11419:145:95",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "11429:26:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11441:9:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11452:2:95",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11437:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11437:18:95"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "11429:4:95"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11471:9:95"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "11486:6:95"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11502:3:95",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11507:1:95",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "11498:3:95"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11498:11:95"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11511:1:95",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "11494:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11494:19:95"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11482:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11482:32:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11464:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11464:51:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11464:51:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11535:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11546:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11531:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11531:18:95"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11551:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11524:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11524:34:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11524:34:95"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_rational_10_by_1__to_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "11380:9:95",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "11391:6:95",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "11399:6:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "11410:4:95",
                    "type": ""
                  }
                ],
                "src": "11281:283:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11720:507:95",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11730:12:95",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11740:2:95",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "11734:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11751:32:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11769:9:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11780:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11765:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11765:18:95"
                      },
                      "variables": [
                        {
                          "name": "tail_1",
                          "nodeType": "YulTypedName",
                          "src": "11755:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11799:9:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11810:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11792:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11792:21:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11792:21:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11822:17:95",
                      "value": {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "11833:6:95"
                      },
                      "variables": [
                        {
                          "name": "pos",
                          "nodeType": "YulTypedName",
                          "src": "11826:3:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11848:27:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11868:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11862:5:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11862:13:95"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "11852:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "11891:6:95"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11899:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11884:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11884:22:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11884:22:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11915:25:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11926:9:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11937:2:95",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11922:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11922:18:95"
                      },
                      "variableNames": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "11915:3:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11949:29:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11967:6:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11975:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11963:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11963:15:95"
                      },
                      "variables": [
                        {
                          "name": "srcPtr",
                          "nodeType": "YulTypedName",
                          "src": "11953:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11987:10:95",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11996:1:95",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "11991:1:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12055:146:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12076:3:95"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "12091:6:95"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "12085:5:95"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12085:13:95"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "12108:3:95",
                                              "type": "",
                                              "value": "160"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "12113:1:95",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "12104:3:95"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12104:11:95"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12117:1:95",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "12100:3:95"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12100:19:95"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "12081:3:95"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12081:39:95"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "12069:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12069:52:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "12069:52:95"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "12134:19:95",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12145:3:95"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "12150:2:95"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12141:3:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12141:12:95"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12134:3:95"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "12166:25:95",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "12180:6:95"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "12188:2:95"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12176:3:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12176:15:95"
                            },
                            "variableNames": [
                              {
                                "name": "srcPtr",
                                "nodeType": "YulIdentifier",
                                "src": "12166:6:95"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "12017:1:95"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "12020:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "12014:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12014:13:95"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "12028:18:95",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "12030:14:95",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "12039:1:95"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12042:1:95",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12035:3:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12035:9:95"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "12030:1:95"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "12010:3:95",
                        "statements": []
                      },
                      "src": "12006:195:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12210:11:95",
                      "value": {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12218:3:95"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12210:4:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "11689:9:95",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "11700:6:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "11711:4:95",
                    "type": ""
                  }
                ],
                "src": "11569:658:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12327:92:95",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "12337:26:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12349:9:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12360:2:95",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12345:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12345:18:95"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12337:4:95"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12379:9:95"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12404:6:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12397:6:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12397:14:95"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12390:6:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12390:22:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12372:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12372:41:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12372:41:95"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12296:9:95",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "12307:6:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "12318:4:95",
                    "type": ""
                  }
                ],
                "src": "12232:187:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12525:76:95",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "12535:26:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12547:9:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12558:2:95",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12543:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12543:18:95"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12535:4:95"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12577:9:95"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12588:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12570:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12570:25:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12570:25:95"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12494:9:95",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "12505:6:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "12516:4:95",
                    "type": ""
                  }
                ],
                "src": "12424:177:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12735:119:95",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "12745:26:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12757:9:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12768:2:95",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12753:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12753:18:95"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12745:4:95"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12787:9:95"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12798:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12780:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12780:25:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12780:25:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12825:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12836:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12821:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12821:18:95"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "12841:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12814:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12814:34:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12814:34:95"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12696:9:95",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "12707:6:95",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "12715:6:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "12726:4:95",
                    "type": ""
                  }
                ],
                "src": "12606:248:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13072:289:95",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13089:9:95"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13100:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13082:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13082:25:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13082:25:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13127:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13138:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13123:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13123:18:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13143:2:95",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13116:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13116:30:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13116:30:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13155:75:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "13195:6:95"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "13203:6:95"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13215:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13226:2:95",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13211:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13211:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "13169:25:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13169:61:95"
                      },
                      "variables": [
                        {
                          "name": "tail_1",
                          "nodeType": "YulTypedName",
                          "src": "13159:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13250:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13261:2:95",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13246:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13246:18:95"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "13270:6:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13278:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "13266:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13266:22:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13239:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13239:50:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13239:50:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13298:57:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "13332:6:95"
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "13340:6:95"
                          },
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "13348:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "13306:25:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13306:49:95"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "13298:4:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr_t_bytes_calldata_ptr__to_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13009:9:95",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "13020:6:95",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "13028:6:95",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "13036:6:95",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "13044:6:95",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "13052:6:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "13063:4:95",
                    "type": ""
                  }
                ],
                "src": "12859:502:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13465:103:95",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "13475:26:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13487:9:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13498:2:95",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13483:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13483:18:95"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "13475:4:95"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13517:9:95"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "13532:6:95"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13544:3:95",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13549:10:95",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "13540:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13540:20:95"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "13528:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13528:33:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13510:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13510:52:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13510:52:95"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13434:9:95",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "13445:6:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "13456:4:95",
                    "type": ""
                  }
                ],
                "src": "13366:202:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13692:98:95",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13709:9:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13720:2:95",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13702:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13702:21:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13702:21:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13732:52:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13757:6:95"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13769:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13780:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13765:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13765:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "13740:16:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13740:44:95"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "13732:4:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13661:9:95",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "13672:6:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "13683:4:95",
                    "type": ""
                  }
                ],
                "src": "13573:217:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13970:229:95",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13987:9:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13998:2:95",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13980:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13980:21:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13980:21:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14010:58:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14041:6:95"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14053:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14064:2:95",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14049:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14049:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "14024:16:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14024:44:95"
                      },
                      "variables": [
                        {
                          "name": "tail_1",
                          "nodeType": "YulTypedName",
                          "src": "14014:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14088:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14099:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14084:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14084:18:95"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "14108:6:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14116:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "14104:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14104:22:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14077:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14077:50:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14077:50:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14136:57:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "14170:6:95"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "14178:6:95"
                          },
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "14186:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "14144:25:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14144:49:95"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "14136:4:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes_memory_ptr_t_bytes_calldata_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13923:9:95",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "13934:6:95",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "13942:6:95",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "13950:6:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "13961:4:95",
                    "type": ""
                  }
                ],
                "src": "13795:404:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14325:98:95",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14342:9:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14353:2:95",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14335:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14335:21:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14335:21:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14365:52:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14390:6:95"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14402:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14413:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14398:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14398:18:95"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "14373:16:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14373:44:95"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "14365:4:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "14294:9:95",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "14305:6:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "14316:4:95",
                    "type": ""
                  }
                ],
                "src": "14204:219:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14602:167:95",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14619:9:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14630:2:95",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14612:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14612:21:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14612:21:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14653:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14664:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14649:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14649:18:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14669:2:95",
                            "type": "",
                            "value": "17"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14642:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14642:30:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14642:30:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14692:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14703:2:95",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14688:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14688:18:95"
                          },
                          {
                            "hexValue": "48617368206e6f7420617070726f766564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "14708:19:95",
                            "type": "",
                            "value": "Hash not approved"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14681:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14681:47:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14681:47:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14737:26:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14749:9:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14760:2:95",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14745:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14745:18:95"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "14737:4:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_fd8211c71ab965565e8a56b84284a02d17d4d89e6f05f14b26449d5de3a8c5b6__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "14579:9:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "14593:4:95",
                    "type": ""
                  }
                ],
                "src": "14428:341:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14819:230:95",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "14829:19:95",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14845:2:95",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "14839:5:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14839:9:95"
                      },
                      "variableNames": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulIdentifier",
                          "src": "14829:6:95"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14857:58:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14879:6:95"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "14895:4:95"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14901:2:95",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14891:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14891:13:95"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14910:2:95",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "14906:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14906:7:95"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "14887:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14887:27:95"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14875:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14875:40:95"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "14861:10:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "14990:22:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "14992:16:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14992:18:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14992:18:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "14933:10:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14945:18:95",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "14930:2:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14930:34:95"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "14969:10:95"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "14981:6:95"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "14966:2:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14966:22:95"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "14927:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14927:62:95"
                      },
                      "nodeType": "YulIf",
                      "src": "14924:88:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15028:2:95",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "15032:10:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15021:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15021:22:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15021:22:95"
                    }
                  ]
                },
                "name": "allocate_memory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "size",
                    "nodeType": "YulTypedName",
                    "src": "14799:4:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "memPtr",
                    "nodeType": "YulTypedName",
                    "src": "14808:6:95",
                    "type": ""
                  }
                ],
                "src": "14774:275:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15086:95:95",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15103:1:95",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15110:3:95",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15115:10:95",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "15106:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15106:20:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15096:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15096:31:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15096:31:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15143:1:95",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15146:4:95",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15136:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15136:15:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15136:15:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15167:1:95",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15170:4:95",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "15160:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15160:15:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15160:15:95"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "15054:127:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15231:86:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "15295:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15304:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15307:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "15297:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15297:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "15297:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15254:5:95"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "15265:5:95"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15280:3:95",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15285:1:95",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "15276:3:95"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15276:11:95"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15289:1:95",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15272:3:95"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15272:19:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15261:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15261:31:95"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "15251:2:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15251:42:95"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "15244:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15244:50:95"
                      },
                      "nodeType": "YulIf",
                      "src": "15241:70:95"
                    }
                  ]
                },
                "name": "validator_revert_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "15220:5:95",
                    "type": ""
                  }
                ],
                "src": "15186:131:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15366:87:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "15431:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15440:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15443:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "15433:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15433:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "15433:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15389:5:95"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "15400:5:95"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15411:3:95",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15416:10:95",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "15407:3:95"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15407:20:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15396:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15396:32:95"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "15386:2:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15386:43:95"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "15379:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15379:51:95"
                      },
                      "nodeType": "YulIf",
                      "src": "15376:71:95"
                    }
                  ]
                },
                "name": "validator_revert_bytes4",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "15355:5:95",
                    "type": ""
                  }
                ],
                "src": "15322:131:95"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_array_uint256_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let _4 := 0x20\n        if gt(_3, _1) { panic_error_0x41() }\n        let _5 := shl(5, _3)\n        let dst := allocate_memory(add(_5, _4))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, _5), _4), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := dst_1\n        value1 := abi_decode_address_fromMemory(add(headStart, _4))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_contract$_GnosisSafe_$952t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_bytes1_t_bytes32_t_bytes32__to_t_bytes1_t_bytes1_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        let _1 := shl(248, 255)\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 1), and(value1, _1))\n        mstore(add(pos, 2), value2)\n        mstore(add(pos, 34), value3)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_address_t_rational_10_by_1__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr_t_bytes_calldata_ptr__to_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        let tail_1 := abi_encode_bytes_calldata(value1, value2, add(headStart, 96))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_bytes_calldata(value3, value4, tail_1)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_bytes_calldata_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_bytes(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_bytes_calldata(value1, value2, tail_1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_fd8211c71ab965565e8a56b84284a02d17d4d89e6f05f14b26449d5de3a8c5b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Hash not approved\")\n        tail := add(headStart, 96)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
          "id": 95,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6AC24784 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xBD61951D EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6AC24784 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xB2494DF3 EQ PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xA1028C4 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x20C13B0B EQ PUSH2 0x181 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x837 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10C JUMP JUMPDEST PUSH2 0x155 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x984 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10C JUMP JUMPDEST PUSH2 0x155 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x155 PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0xC14 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH2 0x1E3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44656661756C742043616C6C6261636B2048616E646C65720000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xE06 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x658 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x8E7 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x9F6 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x312E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x2AF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x2CA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA CALLER DUP4 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE DUP2 DUP4 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH4 0x20C13B0B PUSH1 0xE0 SHL SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 CALLER SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0x20C13B0B SWAP2 PUSH2 0x323 SWAP2 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x44 ADD PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0xBF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x20C13B0B PUSH1 0xE0 SHL EQ PUSH2 0x394 JUMPI PUSH1 0x0 PUSH2 0x39D JUMP JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH1 0x0 PUSH2 0x3F1 DUP3 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x531 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 POP DUP4 PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5AE6BD37 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x5AE6BD37 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x470 SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x12185CDA081B9BDD08185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x934F3A11 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x934F3A11 SWAP1 PUSH2 0x4ED SWAP1 DUP5 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x519 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP PUSH4 0x20C13B0B PUSH1 0xE0 SHL SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x60B3CBF8B4A223D68D641B3B6DDF9A298E7F33710CF3D3A9D1146B5A6150FBCA PUSH1 0x0 SHL DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x57A SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0xF8 SHL DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF698DA25 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x60D SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP4 DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6617C229 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 SWAP1 CALLER SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH4 0xCC2F8452 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x6DA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xAC5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH4 0xB4FABA09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 CALLDATASIZE SUB PUSH1 0x4 DUP1 DUP4 ADD CALLDATACOPY PUSH1 0x20 PUSH1 0x0 CALLDATASIZE DUP4 PUSH1 0x0 CALLER GAS CALL POP POP PUSH1 0x20 RETURNDATASIZE SUB PUSH1 0x40 MLOAD SWAP2 POP DUP1 DUP3 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP4 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH2 0x3A2 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP1 MLOAD PUSH2 0x737 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x7F2 JUMPI PUSH2 0x7F2 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x805 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xE49 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x85E DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x86E DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x87E DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8AD DUP13 DUP4 DUP14 ADD PUSH2 0x787 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D3 DUP12 DUP3 DUP13 ADD PUSH2 0x787 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x90E DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x91E DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x93A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x946 DUP13 DUP4 DUP14 ADD PUSH2 0x73C JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x95F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96B DUP13 DUP4 DUP14 ADD PUSH2 0x73C JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x9A7 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x9B7 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x9D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9E5 DUP9 DUP3 DUP10 ADD PUSH2 0x787 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0xA1A DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0xA2A DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA5F DUP10 DUP3 DUP11 ADD PUSH2 0x787 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xA91 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xAAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB8 DUP7 DUP3 DUP8 ADD PUSH2 0x787 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0xB17 JUMPI PUSH2 0xB17 PUSH2 0xE79 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL SWAP3 POP PUSH2 0xB28 DUP2 DUP5 ADD PUSH2 0xE49 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP6 DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xB43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xB72 JUMPI DUP1 MLOAD SWAP6 POP PUSH2 0xB5D DUP7 PUSH2 0xE8F JUMP JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xB48 JUMP JUMPDEST POP SWAP7 POP PUSH2 0xB82 SWAP1 POP DUP8 DUP3 ADD PUSH2 0x72C JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xAAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A2 DUP2 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3A2 DUP2 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xC41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC4D DUP9 DUP4 DUP10 ADD PUSH2 0x787 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xC66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC73 DUP8 DUP3 DUP9 ADD PUSH2 0x787 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB3 DUP5 DUP3 DUP6 ADD PUSH2 0x7C8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xCD9 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xCF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD00 DUP6 DUP3 DUP7 ADD PUSH2 0x7C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD59 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xD3D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD6B JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDC1 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD9C JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xDE7 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0xD0A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xDFA DUP2 DUP6 DUP8 PUSH2 0xD0A JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE2C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xD33 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xE3F DUP2 DUP6 DUP8 PUSH2 0xD0A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE71 JUMPI PUSH2 0xE71 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0x2E SELFDESTRUCT 0xE1 0xD5 0x22 0x4B 0xBB 0xC2 0xB1 BLOCKHASH 0xC0 PUSH23 0x6C838FC8AAC7E33582760B8A4207348B721A3564736F6C PUSH4 0x43000807 STOP CALLER ",
      "sourceMap": "373:7042:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1235:253:17;;;;;;:::i;:::-;;;;;;;;;;;;1494:306;;;;;;:::i;:::-;;:::i;:::-;;;12397:14:95;;12390:22;12372:41;;12360:2;12345:18;1494:306:17;;;;;;;;1982:163:16;;;;;;:::i;:::-;;:::i;:::-;;;12570:25:95;;;12558:2;12543:18;1982:163:16;12424:177:95;1048:181:17;;;;;;:::i;:::-;-1:-1:-1;;;1048:181:17;;;;;;;;;;;-1:-1:-1;;;;;;13528:33:95;;;13510:52;;13498:2;13483:18;1048:181:17;13366:202:95;3406:350:16;;;;;;:::i;:::-;;:::i;1296:528::-;;;;;;:::i;:::-;;:::i;2361:316::-;;;;;;:::i;:::-;;:::i;502:56:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3844:271:16:-;;;:::i;:::-;;;;;;;:::i;816:226:17:-;;;;;;:::i;:::-;-1:-1:-1;;;816:226:17;;;;;;;;;;;4551:2862:16;;;;;;:::i;:::-;;:::i;611:199:17:-;;;;;;:::i;:::-;-1:-1:-1;;;611:199:17;;;;;;;;;564:40;;;;;;;;;;;;;;;-1:-1:-1;;;564:40:17;;;;;1494:306;1581:4;-1:-1:-1;;;;;;1616:53:17;;-1:-1:-1;;;1616:53:17;;:121;;-1:-1:-1;;;;;;;1685:52:17;;-1:-1:-1;;;1685:52:17;1616:121;:177;;;-1:-1:-1;;;;;;;1753:40:17;;-1:-1:-1;;;1753:40:17;1616:177;1597:196;1494:306;-1:-1:-1;;1494:306:17:o;1982:163:16:-;2049:7;2075:63;2116:10;2130:7;2075:21;:63::i;3406:350::-;3634:21;;;;;;;12570:25:95;;;3634:21:16;;;;;;;;;;12543:18:95;;;3634:21:16;;;;-1:-1:-1;;;3607:61:16;;;3501:6;;3571:10;;3501:6;;3571:10;;3607:26;;:61;;3657:10;;;;3607:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3592:76;-1:-1:-1;;;;;;;3686:28:16;;-1:-1:-1;;;3686:28:16;3685:64;;3747:1;3685:64;;;-1:-1:-1;;;3685:64:16;3678:71;;;;3406:350;;;;;;:::o;1296:528::-;1401:6;1454:15;1491:10;1454:49;;1513:19;1535:34;1557:4;1563:5;;1535:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1535:21:16;;-1:-1:-1;;;1535:34:16:i;:::-;1513:56;-1:-1:-1;1583:22:16;1579:203;;1629:32;;-1:-1:-1;;;1629:32:16;;;;;12570:25:95;;;-1:-1:-1;;;;;1629:19:16;;;;;12543:18:95;;1629:32:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1621:67;;;;-1:-1:-1;;;1621:67:16;;14630:2:95;1621:67:16;;;14612:21:95;14669:2;14649:18;;;14642:30;-1:-1:-1;;;14688:18:95;;;14681:47;14745:18;;1621:67:16;;;;;;;;1579:203;;;1719:52;;-1:-1:-1;;;1719:52:16;;-1:-1:-1;;;;;1719:20:16;;;;;:52;;1740:11;;1753:5;;;;1760:10;;;;1719:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1579:203;-1:-1:-1;;;;1798:19:16;1296:528;-1:-1:-1;;;;;;1296:528:16:o;2361:316::-;2452:7;2471:23;574:66;2518:17;;2547:7;2537:18;;;;;;2507:49;;;;;;;;12780:25:95;;;12836:2;12821:18;;12814:34;12768:2;12753:18;;12606:248;2507:49:16;;;;;;;;;;;;;2497:60;;;;;;2471:86;;2608:4;2601:12;;2622:4;2615:12;;2629:4;-1:-1:-1;;;;;2629:20:16;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2584:85;;-1:-1:-1;;;;;;11108:15:95;;;2584:85:16;;;11096:28:95;11153:15;;;;11140:11;;;11133:36;11185:11;;;11178:27;11221:12;;;11214:28;;;11258:12;;2584:85:16;;;;;;;;;;;;2574:96;;;;;;2567:103;;;2361:316;;;;:::o;3844:271::-;4040:46;;-1:-1:-1;;;4040:46:16;;796:3;4040:46;;;11464:51:95;4083:2:16;11531:18:95;;;11524:34;3889:16:16;;3989:10;;3952:15;;3989:10;;4040:24;;11437:18:95;;4040:46:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4040:46:16;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4011:75:16;3844:271;-1:-1:-1;;;3844:271:16:o;4551:2862::-;4643:21;5020:4;5014:11;-1:-1:-1;;;5164:16:16;5157:44;5634:4;5618:14;5614:25;5608:4;5601;5583:16;5579:27;5566:74;6693:4;6667;6233:14;6195:16;6172:1;6142:8;6015:5;5989:726;5968:761;;7132:4;7114:16;7110:27;7168:4;7162:11;7150:23;;7213:12;7203:8;7199:27;7193:4;7186:41;7271:12;7265:4;7255:8;7240:44;;7314:4;7308:11;7298:99;;7373:8;7367:15;7360:4;7350:8;7346:19;7339:44;14:138:95;93:13;;115:31;93:13;115:31;:::i;:::-;14:138;;;:::o;157:367::-;220:8;230:6;284:3;277:4;269:6;265:17;261:27;251:55;;302:1;299;292:12;251:55;-1:-1:-1;325:20:95;;-1:-1:-1;;;;;357:30:95;;354:50;;;400:1;397;390:12;354:50;437:4;429:6;425:17;413:29;;497:3;490:4;480:6;477:1;473:14;465:6;461:27;457:38;454:47;451:67;;;514:1;511;504:12;451:67;157:367;;;;;:::o;529:347::-;580:8;590:6;644:3;637:4;629:6;625:17;621:27;611:55;;662:1;659;652:12;611:55;-1:-1:-1;685:20:95;;-1:-1:-1;;;;;717:30:95;;714:50;;;760:1;757;750:12;714:50;797:4;789:6;785:17;773:29;;849:3;842:4;833:6;825;821:19;817:30;814:39;811:59;;;866:1;863;856:12;881:530;923:5;976:3;969:4;961:6;957:17;953:27;943:55;;994:1;991;984:12;943:55;1030:6;1017:20;-1:-1:-1;;;;;1052:2:95;1049:26;1046:52;;;1078:18;;:::i;:::-;1122:55;1165:2;1146:13;;-1:-1:-1;;1142:27:95;1171:4;1138:38;1122:55;:::i;:::-;1202:2;1193:7;1186:19;1248:3;1241:4;1236:2;1228:6;1224:15;1220:26;1217:35;1214:55;;;1265:1;1262;1255:12;1214:55;1330:2;1323:4;1315:6;1311:17;1304:4;1295:7;1291:18;1278:55;1378:1;1353:16;;;1371:4;1349:27;1342:38;;;;1357:7;881:530;-1:-1:-1;;;881:530:95:o;1416:1205::-;1542:6;1550;1558;1566;1574;1582;1590;1598;1651:3;1639:9;1630:7;1626:23;1622:33;1619:53;;;1668:1;1665;1658:12;1619:53;1707:9;1694:23;1726:31;1751:5;1726:31;:::i;:::-;1776:5;-1:-1:-1;1833:2:95;1818:18;;1805:32;1846:33;1805:32;1846:33;:::i;:::-;1898:7;-1:-1:-1;1957:2:95;1942:18;;1929:32;1970:33;1929:32;1970:33;:::i;:::-;2022:7;-1:-1:-1;2076:2:95;2061:18;;2048:32;;-1:-1:-1;2131:3:95;2116:19;;2103:33;-1:-1:-1;;;;;2185:14:95;;;2182:34;;;2212:1;2209;2202:12;2182:34;2251:58;2301:7;2292:6;2281:9;2277:22;2251:58;:::i;:::-;2328:8;;-1:-1:-1;2225:84:95;-1:-1:-1;2416:3:95;2401:19;;2388:33;;-1:-1:-1;2433:16:95;;;2430:36;;;2462:1;2459;2452:12;2430:36;;2501:60;2553:7;2542:8;2531:9;2527:24;2501:60;:::i;:::-;1416:1205;;;;-1:-1:-1;1416:1205:95;;-1:-1:-1;1416:1205:95;;;;;;2580:8;-1:-1:-1;;;1416:1205:95:o;2626:1338::-;2786:6;2794;2802;2810;2818;2826;2834;2842;2895:3;2883:9;2874:7;2870:23;2866:33;2863:53;;;2912:1;2909;2902:12;2863:53;2951:9;2938:23;2970:31;2995:5;2970:31;:::i;:::-;3020:5;-1:-1:-1;3077:2:95;3062:18;;3049:32;3090:33;3049:32;3090:33;:::i;:::-;3142:7;-1:-1:-1;3200:2:95;3185:18;;3172:32;-1:-1:-1;;;;;3253:14:95;;;3250:34;;;3280:1;3277;3270:12;3250:34;3319:70;3381:7;3372:6;3361:9;3357:22;3319:70;:::i;:::-;3408:8;;-1:-1:-1;3293:96:95;-1:-1:-1;3496:2:95;3481:18;;3468:32;;-1:-1:-1;3512:16:95;;;3509:36;;;3541:1;3538;3531:12;3509:36;3580:72;3644:7;3633:8;3622:9;3618:24;3580:72;:::i;:::-;3671:8;;-1:-1:-1;3554:98:95;-1:-1:-1;3759:3:95;3744:19;;3731:33;;-1:-1:-1;3776:16:95;;;3773:36;;;3805:1;3802;3795:12;3969:754;4066:6;4074;4082;4090;4098;4151:3;4139:9;4130:7;4126:23;4122:33;4119:53;;;4168:1;4165;4158:12;4119:53;4207:9;4194:23;4226:31;4251:5;4226:31;:::i;:::-;4276:5;-1:-1:-1;4333:2:95;4318:18;;4305:32;4346:33;4305:32;4346:33;:::i;:::-;4398:7;-1:-1:-1;4452:2:95;4437:18;;4424:32;;-1:-1:-1;4507:2:95;4492:18;;4479:32;-1:-1:-1;;;;;4523:30:95;;4520:50;;;4566:1;4563;4556:12;4520:50;4605:58;4655:7;4646:6;4635:9;4631:22;4605:58;:::i;:::-;3969:754;;;;-1:-1:-1;3969:754:95;;-1:-1:-1;4682:8:95;;4579:84;3969:754;-1:-1:-1;;;3969:754:95:o;4728:823::-;4834:6;4842;4850;4858;4866;4874;4927:3;4915:9;4906:7;4902:23;4898:33;4895:53;;;4944:1;4941;4934:12;4895:53;4983:9;4970:23;5002:31;5027:5;5002:31;:::i;:::-;5052:5;-1:-1:-1;5109:2:95;5094:18;;5081:32;5122:33;5081:32;5122:33;:::i;:::-;5174:7;-1:-1:-1;5228:2:95;5213:18;;5200:32;;-1:-1:-1;5279:2:95;5264:18;;5251:32;;-1:-1:-1;5334:3:95;5319:19;;5306:33;-1:-1:-1;;;;;5351:30:95;;5348:50;;;5394:1;5391;5384:12;5348:50;5433:58;5483:7;5474:6;5463:9;5459:22;5433:58;:::i;:::-;4728:823;;;;-1:-1:-1;4728:823:95;;-1:-1:-1;4728:823:95;;5510:8;;4728:823;-1:-1:-1;;;4728:823:95:o;5556:544::-;5635:6;5643;5651;5704:2;5692:9;5683:7;5679:23;5675:32;5672:52;;;5720:1;5717;5710:12;5672:52;5759:9;5746:23;5778:31;5803:5;5778:31;:::i;:::-;5828:5;-1:-1:-1;5884:2:95;5869:18;;5856:32;-1:-1:-1;;;;;5900:30:95;;5897:50;;;5943:1;5940;5933:12;5897:50;5982:58;6032:7;6023:6;6012:9;6008:22;5982:58;:::i;:::-;5556:544;;6059:8;;-1:-1:-1;5956:84:95;;-1:-1:-1;;;;5556:544:95:o;6105:1109::-;6209:6;6217;6270:2;6258:9;6249:7;6245:23;6241:32;6238:52;;;6286:1;6283;6276:12;6238:52;6319:9;6313:16;-1:-1:-1;;;;;6389:2:95;6381:6;6378:14;6375:34;;;6405:1;6402;6395:12;6375:34;6443:6;6432:9;6428:22;6418:32;;6488:7;6481:4;6477:2;6473:13;6469:27;6459:55;;6510:1;6507;6500:12;6459:55;6539:2;6533:9;6561:4;6584:2;6580;6577:10;6574:36;;;6590:18;;:::i;:::-;6636:2;6633:1;6629:10;6619:20;;6659:28;6683:2;6679;6675:11;6659:28;:::i;:::-;6721:15;;;6752:12;;;;6784:11;;;6814;;;6810:20;;6807:33;-1:-1:-1;6804:53:95;;;6853:1;6850;6843:12;6804:53;6875:1;6866:10;;6885:231;6899:2;6896:1;6893:9;6885:231;;;6963:3;6957:10;6944:23;;6980:31;7005:5;6980:31;:::i;:::-;7024:18;;;6917:1;6910:9;;;;;7062:12;;;;7094;;6885:231;;;-1:-1:-1;7135:5:95;-1:-1:-1;7159:49:95;;-1:-1:-1;7189:18:95;;;7159:49;:::i;:::-;7149:59;;;;;;6105:1109;;;;;:::o;7219:184::-;7289:6;7342:2;7330:9;7321:7;7317:23;7313:32;7310:52;;;7358:1;7355;7348:12;7310:52;-1:-1:-1;7381:16:95;;7219:184;-1:-1:-1;7219:184:95:o;7408:477::-;7487:6;7495;7503;7556:2;7544:9;7535:7;7531:23;7527:32;7524:52;;;7572:1;7569;7562:12;7524:52;7608:9;7595:23;7585:33;;7669:2;7658:9;7654:18;7641:32;-1:-1:-1;;;;;7688:6:95;7685:30;7682:50;;;7728:1;7725;7718:12;7890:245;7948:6;8001:2;7989:9;7980:7;7976:23;7972:32;7969:52;;;8017:1;8014;8007:12;7969:52;8056:9;8043:23;8075:30;8099:5;8075:30;:::i;8140:249::-;8209:6;8262:2;8250:9;8241:7;8237:23;8233:32;8230:52;;;8278:1;8275;8268:12;8230:52;8310:9;8304:16;8329:30;8353:5;8329:30;:::i;8394:717::-;8484:6;8492;8500;8508;8561:2;8549:9;8540:7;8536:23;8532:32;8529:52;;;8577:1;8574;8567:12;8529:52;8617:9;8604:23;-1:-1:-1;;;;;8687:2:95;8679:6;8676:14;8673:34;;;8703:1;8700;8693:12;8673:34;8742:58;8792:7;8783:6;8772:9;8768:22;8742:58;:::i;:::-;8819:8;;-1:-1:-1;8716:84:95;-1:-1:-1;8907:2:95;8892:18;;8879:32;;-1:-1:-1;8923:16:95;;;8920:36;;;8952:1;8949;8942:12;8920:36;;8991:60;9043:7;9032:8;9021:9;9017:24;8991:60;:::i;:::-;8394:717;;;;-1:-1:-1;9070:8:95;-1:-1:-1;;;;8394:717:95:o;9116:320::-;9184:6;9237:2;9225:9;9216:7;9212:23;9208:32;9205:52;;;9253:1;9250;9243:12;9205:52;9293:9;9280:23;-1:-1:-1;;;;;9318:6:95;9315:30;9312:50;;;9358:1;9355;9348:12;9312:50;9381:49;9422:7;9413:6;9402:9;9398:22;9381:49;:::i;:::-;9371:59;9116:320;-1:-1:-1;;;;9116:320:95:o;9441:473::-;9536:6;9544;9597:2;9585:9;9576:7;9572:23;9568:32;9565:52;;;9613:1;9610;9603:12;9565:52;9652:9;9639:23;9671:31;9696:5;9671:31;:::i;:::-;9721:5;-1:-1:-1;9777:2:95;9762:18;;9749:32;-1:-1:-1;;;;;9793:30:95;;9790:50;;;9836:1;9833;9826:12;9790:50;9859:49;9900:7;9891:6;9880:9;9876:22;9859:49;:::i;:::-;9849:59;;;9441:473;;;;;:::o;10108:266::-;10196:6;10191:3;10184:19;10248:6;10241:5;10234:4;10229:3;10225:14;10212:43;-1:-1:-1;10300:1:95;10275:16;;;10293:4;10271:27;;;10264:38;;;;10356:2;10335:15;;;-1:-1:-1;;10331:29:95;10322:39;;;10318:50;;10108:266::o;10379:471::-;10420:3;10458:5;10452:12;10485:6;10480:3;10473:19;10510:1;10520:162;10534:6;10531:1;10528:13;10520:162;;;10596:4;10652:13;;;10648:22;;10642:29;10624:11;;;10620:20;;10613:59;10549:12;10520:162;;;10700:6;10697:1;10694:13;10691:87;;;10766:1;10759:4;10750:6;10745:3;10741:16;10737:27;10730:38;10691:87;-1:-1:-1;10832:2:95;10811:15;-1:-1:-1;;10807:29:95;10798:39;;;;10839:4;10794:50;;10379:471;-1:-1:-1;;10379:471:95:o;11569:658::-;11740:2;11792:21;;;11862:13;;11765:18;;;11884:22;;;11711:4;;11740:2;11963:15;;;;11937:2;11922:18;;;11711:4;12006:195;12020:6;12017:1;12014:13;12006:195;;;12085:13;;-1:-1:-1;;;;;12081:39:95;12069:52;;12176:15;;;;12141:12;;;;12117:1;12035:9;12006:195;;;-1:-1:-1;12218:3:95;;11569:658;-1:-1:-1;;;;;;11569:658:95:o;12859:502::-;13100:6;13089:9;13082:25;13143:2;13138;13127:9;13123:18;13116:30;13063:4;13169:61;13226:2;13215:9;13211:18;13203:6;13195;13169:61;:::i;:::-;13278:9;13270:6;13266:22;13261:2;13250:9;13246:18;13239:50;13306:49;13348:6;13340;13332;13306:49;:::i;:::-;13298:57;12859:502;-1:-1:-1;;;;;;;;12859:502:95:o;13573:217::-;13720:2;13709:9;13702:21;13683:4;13740:44;13780:2;13769:9;13765:18;13757:6;13740:44;:::i;13795:404::-;13998:2;13987:9;13980:21;13961:4;14024:44;14064:2;14053:9;14049:18;14041:6;14024:44;:::i;:::-;14116:9;14108:6;14104:22;14099:2;14088:9;14084:18;14077:50;14144:49;14186:6;14178;14170;14144:49;:::i;:::-;14136:57;13795:404;-1:-1:-1;;;;;;13795:404:95:o;14774:275::-;14845:2;14839:9;14910:2;14891:13;;-1:-1:-1;;14887:27:95;14875:40;;-1:-1:-1;;;;;14930:34:95;;14966:22;;;14927:62;14924:88;;;14992:18;;:::i;:::-;15028:2;15021:22;14774:275;;-1:-1:-1;14774:275:95:o;15054:127::-;15115:10;15110:3;15106:20;15103:1;15096:31;15146:4;15143:1;15136:15;15170:4;15167:1;15160:15;15186:131;-1:-1:-1;;;;;15261:31:95;;15251:42;;15241:70;;15307:1;15304;15297:12;15241:70;15186:131;:::o;15322:::-;-1:-1:-1;;;;;;15396:32:95;;15386:43;;15376:71;;15443:1;15440;15433:12"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "765400",
        "executionCost": "799",
        "totalCost": "766199"
      },
      "external": {
        "NAME()": "infinite",
        "VERSION()": "infinite",
        "getMessageHash(bytes)": "infinite",
        "getMessageHashForSafe(address,bytes)": "infinite",
        "getModules()": "infinite",
        "isValidSignature(bytes,bytes)": "infinite",
        "isValidSignature(bytes32,bytes)": "infinite",
        "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
        "onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
        "onERC721Received(address,address,uint256,bytes)": "infinite",
        "simulate(address,bytes)": "infinite",
        "supportsInterface(bytes4)": "533",
        "tokensReceived(address,address,address,uint256,bytes,bytes)": "infinite"
      }
    },
    "methodIdentifiers": {
      "NAME()": "a3f4df7e",
      "VERSION()": "ffa1ad74",
      "getMessageHash(bytes)": "0a1028c4",
      "getMessageHashForSafe(address,bytes)": "6ac24784",
      "getModules()": "b2494df3",
      "isValidSignature(bytes,bytes)": "20c13b0b",
      "isValidSignature(bytes32,bytes)": "1626ba7e",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
      "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
      "onERC721Received(address,address,uint256,bytes)": "150b7a02",
      "simulate(address,bytes)": "bd61951d",
      "supportsInterface(bytes4)": "01ffc9a7",
      "tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract GnosisSafe\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"getMessageHashForSafe\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModules\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"calldataPayload\",\"type\":\"bytes\"}],\"name\":\"simulate\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Richard Meissner - <richard@gnosis.pm>\",\"kind\":\"dev\",\"methods\":{\"getMessageHash(bytes)\":{\"details\":\"Returns hash of a message that can be signed by owners.\",\"params\":{\"message\":\"Message that should be hashed\"},\"returns\":{\"_0\":\"Message hash.\"}},\"getMessageHashForSafe(address,bytes)\":{\"details\":\"Returns hash of a message that can be signed by owners.\",\"params\":{\"message\":\"Message that should be hashed\",\"safe\":\"Safe to which the message is targeted\"},\"returns\":{\"_0\":\"Message hash.\"}},\"getModules()\":{\"details\":\"Returns array of first 10 modules.\",\"returns\":{\"_0\":\"Array of modules.\"}},\"isValidSignature(bytes,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data.\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(msg.sender)\",\"_signature\":\"Signature byte array associated with _data\"},\"returns\":{\"_0\":\"a bool upon valid or invalid signature with corresponding _data\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data.       The save does not implement the interface since `checkSignatures` is not a view method.       The method will not perform any state changes (see parameters of `checkSignatures`)\",\"params\":{\"_dataHash\":\"Hash of the data signed on the behalf of address(msg.sender)\",\"_signature\":\"Signature byte array associated with _dataHash\"},\"returns\":{\"_0\":\"a bool upon valid or invalid signature with corresponding _dataHash\"}},\"simulate(address,bytes)\":{\"details\":\"Performs a delegetecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). Catches revert and returns encoded result as bytes.\",\"params\":{\"calldataPayload\":\"Calldata that should be sent to the target contract (encoded method name and arguments).\",\"targetContract\":\"Address of the contract containing the code to execute.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"Compatibility Fallback Handler - fallback handler to provider compatibility between pre 1.3.0 and 1.3.0+ Safe contracts\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`)\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Implementation of updated EIP-1271See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@gnosis.pm/safe-contracts/contracts/handler/CompatibilityFallbackHandler.sol\":\"CompatibilityFallbackHandler\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport \\\"./base/ModuleManager.sol\\\";\\nimport \\\"./base/OwnerManager.sol\\\";\\nimport \\\"./base/FallbackManager.sol\\\";\\nimport \\\"./base/GuardManager.sol\\\";\\nimport \\\"./common/EtherPaymentFallback.sol\\\";\\nimport \\\"./common/Singleton.sol\\\";\\nimport \\\"./common/SignatureDecoder.sol\\\";\\nimport \\\"./common/SecuredTokenTransfer.sol\\\";\\nimport \\\"./common/StorageAccessible.sol\\\";\\nimport \\\"./interfaces/ISignatureValidator.sol\\\";\\nimport \\\"./external/GnosisSafeMath.sol\\\";\\n\\n/// @title Gnosis Safe - A multisignature wallet with support for confirmations using signed messages based on ERC191.\\n/// @author Stefan George - <stefan@gnosis.io>\\n/// @author Richard Meissner - <richard@gnosis.io>\\ncontract GnosisSafe is\\n    EtherPaymentFallback,\\n    Singleton,\\n    ModuleManager,\\n    OwnerManager,\\n    SignatureDecoder,\\n    SecuredTokenTransfer,\\n    ISignatureValidatorConstants,\\n    FallbackManager,\\n    StorageAccessible,\\n    GuardManager\\n{\\n    using GnosisSafeMath for uint256;\\n\\n    string public constant VERSION = \\\"1.3.0\\\";\\n\\n    // keccak256(\\n    //     \\\"EIP712Domain(uint256 chainId,address verifyingContract)\\\"\\n    // );\\n    bytes32 private constant DOMAIN_SEPARATOR_TYPEHASH = 0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218;\\n\\n    // keccak256(\\n    //     \\\"SafeTx(address to,uint256 value,bytes data,uint8 operation,uint256 safeTxGas,uint256 baseGas,uint256 gasPrice,address gasToken,address refundReceiver,uint256 nonce)\\\"\\n    // );\\n    bytes32 private constant SAFE_TX_TYPEHASH = 0xbb8310d486368db6bd6f849402fdd73ad53d316b5a4b2644ad6efe0f941286d8;\\n\\n    event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler);\\n    event ApproveHash(bytes32 indexed approvedHash, address indexed owner);\\n    event SignMsg(bytes32 indexed msgHash);\\n    event ExecutionFailure(bytes32 txHash, uint256 payment);\\n    event ExecutionSuccess(bytes32 txHash, uint256 payment);\\n\\n    uint256 public nonce;\\n    bytes32 private _deprecatedDomainSeparator;\\n    // Mapping to keep track of all message hashes that have been approve by ALL REQUIRED owners\\n    mapping(bytes32 => uint256) public signedMessages;\\n    // Mapping to keep track of all hashes (message or transaction) that have been approve by ANY owners\\n    mapping(address => mapping(bytes32 => uint256)) public approvedHashes;\\n\\n    // This constructor ensures that this contract can only be used as a master copy for Proxy contracts\\n    constructor() {\\n        // By setting the threshold it is not possible to call setup anymore,\\n        // so we create a Safe with 0 owners and threshold 1.\\n        // This is an unusable Safe, perfect for the singleton\\n        threshold = 1;\\n    }\\n\\n    /// @dev Setup function sets initial storage of contract.\\n    /// @param _owners List of Safe owners.\\n    /// @param _threshold Number of required confirmations for a Safe transaction.\\n    /// @param to Contract address for optional delegate call.\\n    /// @param data Data payload for optional delegate call.\\n    /// @param fallbackHandler Handler for fallback calls to this contract\\n    /// @param paymentToken Token that should be used for the payment (0 is ETH)\\n    /// @param payment Value that should be paid\\n    /// @param paymentReceiver Adddress that should receive the payment (or 0 if tx.origin)\\n    function setup(\\n        address[] calldata _owners,\\n        uint256 _threshold,\\n        address to,\\n        bytes calldata data,\\n        address fallbackHandler,\\n        address paymentToken,\\n        uint256 payment,\\n        address payable paymentReceiver\\n    ) external {\\n        // setupOwners checks if the Threshold is already set, therefore preventing that this method is called twice\\n        setupOwners(_owners, _threshold);\\n        if (fallbackHandler != address(0)) internalSetFallbackHandler(fallbackHandler);\\n        // As setupOwners can only be called if the contract has not been initialized we don't need a check for setupModules\\n        setupModules(to, data);\\n\\n        if (payment > 0) {\\n            // To avoid running into issues with EIP-170 we reuse the handlePayment function (to avoid adjusting code of that has been verified we do not adjust the method itself)\\n            // baseGas = 0, gasPrice = 1 and gas = payment => amount = (payment + 0) * 1 = payment\\n            handlePayment(payment, 0, 1, paymentToken, paymentReceiver);\\n        }\\n        emit SafeSetup(msg.sender, _owners, _threshold, to, fallbackHandler);\\n    }\\n\\n    /// @dev Allows to execute a Safe transaction confirmed by required number of owners and then pays the account that submitted the transaction.\\n    ///      Note: The fees are always transferred, even if the user transaction fails.\\n    /// @param to Destination address of Safe transaction.\\n    /// @param value Ether value of Safe transaction.\\n    /// @param data Data payload of Safe transaction.\\n    /// @param operation Operation type of Safe transaction.\\n    /// @param safeTxGas Gas that should be used for the Safe transaction.\\n    /// @param baseGas Gas costs that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)\\n    /// @param gasPrice Gas price that should be used for the payment calculation.\\n    /// @param gasToken Token address (or 0 if ETH) that is used for the payment.\\n    /// @param refundReceiver Address of receiver of gas payment (or 0 if tx.origin).\\n    /// @param signatures Packed signature data ({bytes32 r}{bytes32 s}{uint8 v})\\n    function execTransaction(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Enum.Operation operation,\\n        uint256 safeTxGas,\\n        uint256 baseGas,\\n        uint256 gasPrice,\\n        address gasToken,\\n        address payable refundReceiver,\\n        bytes memory signatures\\n    ) public payable virtual returns (bool success) {\\n        bytes32 txHash;\\n        // Use scope here to limit variable lifetime and prevent `stack too deep` errors\\n        {\\n            bytes memory txHashData =\\n                encodeTransactionData(\\n                    // Transaction info\\n                    to,\\n                    value,\\n                    data,\\n                    operation,\\n                    safeTxGas,\\n                    // Payment info\\n                    baseGas,\\n                    gasPrice,\\n                    gasToken,\\n                    refundReceiver,\\n                    // Signature info\\n                    nonce\\n                );\\n            // Increase nonce and execute transaction.\\n            nonce++;\\n            txHash = keccak256(txHashData);\\n            checkSignatures(txHash, txHashData, signatures);\\n        }\\n        address guard = getGuard();\\n        {\\n            if (guard != address(0)) {\\n                Guard(guard).checkTransaction(\\n                    // Transaction info\\n                    to,\\n                    value,\\n                    data,\\n                    operation,\\n                    safeTxGas,\\n                    // Payment info\\n                    baseGas,\\n                    gasPrice,\\n                    gasToken,\\n                    refundReceiver,\\n                    // Signature info\\n                    signatures,\\n                    msg.sender\\n                );\\n            }\\n        }\\n        // We require some gas to emit the events (at least 2500) after the execution and some to perform code until the execution (500)\\n        // We also include the 1/64 in the check that is not send along with a call to counteract potential shortings because of EIP-150\\n        require(gasleft() >= ((safeTxGas * 64) / 63).max(safeTxGas + 2500) + 500, \\\"GS010\\\");\\n        // Use scope here to limit variable lifetime and prevent `stack too deep` errors\\n        {\\n            uint256 gasUsed = gasleft();\\n            // If the gasPrice is 0 we assume that nearly all available gas can be used (it is always more than safeTxGas)\\n            // We only substract 2500 (compared to the 3000 before) to ensure that the amount passed is still higher than safeTxGas\\n            success = execute(to, value, data, operation, gasPrice == 0 ? (gasleft() - 2500) : safeTxGas);\\n            gasUsed = gasUsed.sub(gasleft());\\n            // If no safeTxGas and no gasPrice was set (e.g. both are 0), then the internal tx is required to be successful\\n            // This makes it possible to use `estimateGas` without issues, as it searches for the minimum gas where the tx doesn't revert\\n            require(success || safeTxGas != 0 || gasPrice != 0, \\\"GS013\\\");\\n            // We transfer the calculated tx costs to the tx.origin to avoid sending it to intermediate contracts that have made calls\\n            uint256 payment = 0;\\n            if (gasPrice > 0) {\\n                payment = handlePayment(gasUsed, baseGas, gasPrice, gasToken, refundReceiver);\\n            }\\n            if (success) emit ExecutionSuccess(txHash, payment);\\n            else emit ExecutionFailure(txHash, payment);\\n        }\\n        {\\n            if (guard != address(0)) {\\n                Guard(guard).checkAfterExecution(txHash, success);\\n            }\\n        }\\n    }\\n\\n    function handlePayment(\\n        uint256 gasUsed,\\n        uint256 baseGas,\\n        uint256 gasPrice,\\n        address gasToken,\\n        address payable refundReceiver\\n    ) private returns (uint256 payment) {\\n        // solhint-disable-next-line avoid-tx-origin\\n        address payable receiver = refundReceiver == address(0) ? payable(tx.origin) : refundReceiver;\\n        if (gasToken == address(0)) {\\n            // For ETH we will only adjust the gas price to not be higher than the actual used gas price\\n            payment = gasUsed.add(baseGas).mul(gasPrice < tx.gasprice ? gasPrice : tx.gasprice);\\n            require(receiver.send(payment), \\\"GS011\\\");\\n        } else {\\n            payment = gasUsed.add(baseGas).mul(gasPrice);\\n            require(transferToken(gasToken, receiver, payment), \\\"GS012\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Checks whether the signature provided is valid for the provided data, hash. Will revert otherwise.\\n     * @param dataHash Hash of the data (could be either a message hash or transaction hash)\\n     * @param data That should be signed (this is passed to an external validator contract)\\n     * @param signatures Signature data that should be verified. Can be ECDSA signature, contract signature (EIP-1271) or approved hash.\\n     */\\n    function checkSignatures(\\n        bytes32 dataHash,\\n        bytes memory data,\\n        bytes memory signatures\\n    ) public view {\\n        // Load threshold to avoid multiple storage loads\\n        uint256 _threshold = threshold;\\n        // Check that a threshold is set\\n        require(_threshold > 0, \\\"GS001\\\");\\n        checkNSignatures(dataHash, data, signatures, _threshold);\\n    }\\n\\n    /**\\n     * @dev Checks whether the signature provided is valid for the provided data, hash. Will revert otherwise.\\n     * @param dataHash Hash of the data (could be either a message hash or transaction hash)\\n     * @param data That should be signed (this is passed to an external validator contract)\\n     * @param signatures Signature data that should be verified. Can be ECDSA signature, contract signature (EIP-1271) or approved hash.\\n     * @param requiredSignatures Amount of required valid signatures.\\n     */\\n    function checkNSignatures(\\n        bytes32 dataHash,\\n        bytes memory data,\\n        bytes memory signatures,\\n        uint256 requiredSignatures\\n    ) public view {\\n        // Check that the provided signature data is not too short\\n        require(signatures.length >= requiredSignatures.mul(65), \\\"GS020\\\");\\n        // There cannot be an owner with address 0.\\n        address lastOwner = address(0);\\n        address currentOwner;\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n        uint256 i;\\n        for (i = 0; i < requiredSignatures; i++) {\\n            (v, r, s) = signatureSplit(signatures, i);\\n            if (v == 0) {\\n                // If v is 0 then it is a contract signature\\n                // When handling contract signatures the address of the contract is encoded into r\\n                currentOwner = address(uint160(uint256(r)));\\n\\n                // Check that signature data pointer (s) is not pointing inside the static part of the signatures bytes\\n                // This check is not completely accurate, since it is possible that more signatures than the threshold are send.\\n                // Here we only check that the pointer is not pointing inside the part that is being processed\\n                require(uint256(s) >= requiredSignatures.mul(65), \\\"GS021\\\");\\n\\n                // Check that signature data pointer (s) is in bounds (points to the length of data -> 32 bytes)\\n                require(uint256(s).add(32) <= signatures.length, \\\"GS022\\\");\\n\\n                // Check if the contract signature is in bounds: start of data is s + 32 and end is start + signature length\\n                uint256 contractSignatureLen;\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    contractSignatureLen := mload(add(add(signatures, s), 0x20))\\n                }\\n                require(uint256(s).add(32).add(contractSignatureLen) <= signatures.length, \\\"GS023\\\");\\n\\n                // Check signature\\n                bytes memory contractSignature;\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    // The signature data for contract signatures is appended to the concatenated signatures and the offset is stored in s\\n                    contractSignature := add(add(signatures, s), 0x20)\\n                }\\n                require(ISignatureValidator(currentOwner).isValidSignature(data, contractSignature) == EIP1271_MAGIC_VALUE, \\\"GS024\\\");\\n            } else if (v == 1) {\\n                // If v is 1 then it is an approved hash\\n                // When handling approved hashes the address of the approver is encoded into r\\n                currentOwner = address(uint160(uint256(r)));\\n                // Hashes are automatically approved by the sender of the message or when they have been pre-approved via a separate transaction\\n                require(msg.sender == currentOwner || approvedHashes[currentOwner][dataHash] != 0, \\\"GS025\\\");\\n            } else if (v > 30) {\\n                // If v > 30 then default va (27,28) has been adjusted for eth_sign flow\\n                // To support eth_sign and similar we adjust v and hash the messageHash with the Ethereum message prefix before applying ecrecover\\n                currentOwner = ecrecover(keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", dataHash)), v - 4, r, s);\\n            } else {\\n                // Default is the ecrecover flow with the provided data hash\\n                // Use ecrecover with the messageHash for EOA signatures\\n                currentOwner = ecrecover(dataHash, v, r, s);\\n            }\\n            require(currentOwner > lastOwner && owners[currentOwner] != address(0) && currentOwner != SENTINEL_OWNERS, \\\"GS026\\\");\\n            lastOwner = currentOwner;\\n        }\\n    }\\n\\n    /// @dev Allows to estimate a Safe transaction.\\n    ///      This method is only meant for estimation purpose, therefore the call will always revert and encode the result in the revert data.\\n    ///      Since the `estimateGas` function includes refunds, call this method to get an estimated of the costs that are deducted from the safe with `execTransaction`\\n    /// @param to Destination address of Safe transaction.\\n    /// @param value Ether value of Safe transaction.\\n    /// @param data Data payload of Safe transaction.\\n    /// @param operation Operation type of Safe transaction.\\n    /// @return Estimate without refunds and overhead fees (base transaction and payload data gas costs).\\n    /// @notice Deprecated in favor of common/StorageAccessible.sol and will be removed in next version.\\n    function requiredTxGas(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Enum.Operation operation\\n    ) external returns (uint256) {\\n        uint256 startGas = gasleft();\\n        // We don't provide an error message here, as we use it to return the estimate\\n        require(execute(to, value, data, operation, gasleft()));\\n        uint256 requiredGas = startGas - gasleft();\\n        // Convert response to string and return via error message\\n        revert(string(abi.encodePacked(requiredGas)));\\n    }\\n\\n    /**\\n     * @dev Marks a hash as approved. This can be used to validate a hash that is used by a signature.\\n     * @param hashToApprove The hash that should be marked as approved for signatures that are verified by this contract.\\n     */\\n    function approveHash(bytes32 hashToApprove) external {\\n        require(owners[msg.sender] != address(0), \\\"GS030\\\");\\n        approvedHashes[msg.sender][hashToApprove] = 1;\\n        emit ApproveHash(hashToApprove, msg.sender);\\n    }\\n\\n    /// @dev Returns the chain id used by this contract.\\n    function getChainId() public view returns (uint256) {\\n        uint256 id;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            id := chainid()\\n        }\\n        return id;\\n    }\\n\\n    function domainSeparator() public view returns (bytes32) {\\n        return keccak256(abi.encode(DOMAIN_SEPARATOR_TYPEHASH, getChainId(), this));\\n    }\\n\\n    /// @dev Returns the bytes that are hashed to be signed by owners.\\n    /// @param to Destination address.\\n    /// @param value Ether value.\\n    /// @param data Data payload.\\n    /// @param operation Operation type.\\n    /// @param safeTxGas Gas that should be used for the safe transaction.\\n    /// @param baseGas Gas costs for that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)\\n    /// @param gasPrice Maximum gas price that should be used for this transaction.\\n    /// @param gasToken Token address (or 0 if ETH) that is used for the payment.\\n    /// @param refundReceiver Address of receiver of gas payment (or 0 if tx.origin).\\n    /// @param _nonce Transaction nonce.\\n    /// @return Transaction hash bytes.\\n    function encodeTransactionData(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Enum.Operation operation,\\n        uint256 safeTxGas,\\n        uint256 baseGas,\\n        uint256 gasPrice,\\n        address gasToken,\\n        address refundReceiver,\\n        uint256 _nonce\\n    ) public view returns (bytes memory) {\\n        bytes32 safeTxHash =\\n            keccak256(\\n                abi.encode(\\n                    SAFE_TX_TYPEHASH,\\n                    to,\\n                    value,\\n                    keccak256(data),\\n                    operation,\\n                    safeTxGas,\\n                    baseGas,\\n                    gasPrice,\\n                    gasToken,\\n                    refundReceiver,\\n                    _nonce\\n                )\\n            );\\n        return abi.encodePacked(bytes1(0x19), bytes1(0x01), domainSeparator(), safeTxHash);\\n    }\\n\\n    /// @dev Returns hash to be signed by owners.\\n    /// @param to Destination address.\\n    /// @param value Ether value.\\n    /// @param data Data payload.\\n    /// @param operation Operation type.\\n    /// @param safeTxGas Fas that should be used for the safe transaction.\\n    /// @param baseGas Gas costs for data used to trigger the safe transaction.\\n    /// @param gasPrice Maximum gas price that should be used for this transaction.\\n    /// @param gasToken Token address (or 0 if ETH) that is used for the payment.\\n    /// @param refundReceiver Address of receiver of gas payment (or 0 if tx.origin).\\n    /// @param _nonce Transaction nonce.\\n    /// @return Transaction hash.\\n    function getTransactionHash(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Enum.Operation operation,\\n        uint256 safeTxGas,\\n        uint256 baseGas,\\n        uint256 gasPrice,\\n        address gasToken,\\n        address refundReceiver,\\n        uint256 _nonce\\n    ) public view returns (bytes32) {\\n        return keccak256(encodeTransactionData(to, value, data, operation, safeTxGas, baseGas, gasPrice, gasToken, refundReceiver, _nonce));\\n    }\\n}\\n\",\"keccak256\":\"0x2ca9e3e053c969b9364f62c50c2c25b92525db7fd0bad3ae1fb0c20dd575367c\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/base/Executor.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\nimport \\\"../common/Enum.sol\\\";\\n\\n/// @title Executor - A contract that can execute transactions\\n/// @author Richard Meissner - <richard@gnosis.pm>\\ncontract Executor {\\n    function execute(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        Enum.Operation operation,\\n        uint256 txGas\\n    ) internal returns (bool success) {\\n        if (operation == Enum.Operation.DelegateCall) {\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                success := delegatecall(txGas, to, add(data, 0x20), mload(data), 0, 0)\\n            }\\n        } else {\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                success := call(txGas, to, value, add(data, 0x20), mload(data), 0, 0)\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4d3a900673473466bc27413fdbb11aae60b5580b792c49411f01544e0b24fe08\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport \\\"../common/SelfAuthorized.sol\\\";\\n\\n/// @title Fallback Manager - A contract that manages fallback calls made to this contract\\n/// @author Richard Meissner - <richard@gnosis.pm>\\ncontract FallbackManager is SelfAuthorized {\\n    event ChangedFallbackHandler(address handler);\\n\\n    // keccak256(\\\"fallback_manager.handler.address\\\")\\n    bytes32 internal constant FALLBACK_HANDLER_STORAGE_SLOT = 0x6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d5;\\n\\n    function internalSetFallbackHandler(address handler) internal {\\n        bytes32 slot = FALLBACK_HANDLER_STORAGE_SLOT;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            sstore(slot, handler)\\n        }\\n    }\\n\\n    /// @dev Allows to add a contract to handle fallback calls.\\n    ///      Only fallback calls without value and with data will be forwarded.\\n    ///      This can only be done via a Safe transaction.\\n    /// @param handler contract to handle fallbacks calls.\\n    function setFallbackHandler(address handler) public authorized {\\n        internalSetFallbackHandler(handler);\\n        emit ChangedFallbackHandler(handler);\\n    }\\n\\n    // solhint-disable-next-line payable-fallback,no-complex-fallback\\n    fallback() external {\\n        bytes32 slot = FALLBACK_HANDLER_STORAGE_SLOT;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let handler := sload(slot)\\n            if iszero(handler) {\\n                return(0, 0)\\n            }\\n            calldatacopy(0, 0, calldatasize())\\n            // The msg.sender address is shifted to the left by 12 bytes to remove the padding\\n            // Then the address without padding is stored right after the calldata\\n            mstore(calldatasize(), shl(96, caller()))\\n            // Add 20 bytes for the address appended add the end\\n            let success := call(gas(), handler, 0, 0, add(calldatasize(), 20), 0, 0)\\n            returndatacopy(0, 0, returndatasize())\\n            if iszero(success) {\\n                revert(0, returndatasize())\\n            }\\n            return(0, returndatasize())\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1be9f0f3e80a78134c2e3a026c6a14759785bd35d135e87a4a025aeb6742791f\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport \\\"../common/Enum.sol\\\";\\nimport \\\"../common/SelfAuthorized.sol\\\";\\n\\ninterface Guard {\\n    function checkTransaction(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        Enum.Operation operation,\\n        uint256 safeTxGas,\\n        uint256 baseGas,\\n        uint256 gasPrice,\\n        address gasToken,\\n        address payable refundReceiver,\\n        bytes memory signatures,\\n        address msgSender\\n    ) external;\\n\\n    function checkAfterExecution(bytes32 txHash, bool success) external;\\n}\\n\\n/// @title Fallback Manager - A contract that manages fallback calls made to this contract\\n/// @author Richard Meissner - <richard@gnosis.pm>\\ncontract GuardManager is SelfAuthorized {\\n    event ChangedGuard(address guard);\\n    // keccak256(\\\"guard_manager.guard.address\\\")\\n    bytes32 internal constant GUARD_STORAGE_SLOT = 0x4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c8;\\n\\n    /// @dev Set a guard that checks transactions before execution\\n    /// @param guard The address of the guard to be used or the 0 address to disable the guard\\n    function setGuard(address guard) external authorized {\\n        bytes32 slot = GUARD_STORAGE_SLOT;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            sstore(slot, guard)\\n        }\\n        emit ChangedGuard(guard);\\n    }\\n\\n    function getGuard() internal view returns (address guard) {\\n        bytes32 slot = GUARD_STORAGE_SLOT;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            guard := sload(slot)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x53a532a31f9632d5a73ad0df56f05bd2b66a2f781f571eb48d00367d370707f9\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\nimport \\\"../common/Enum.sol\\\";\\nimport \\\"../common/SelfAuthorized.sol\\\";\\nimport \\\"./Executor.sol\\\";\\n\\n/// @title Module Manager - A contract that manages modules that can execute transactions via this contract\\n/// @author Stefan George - <stefan@gnosis.pm>\\n/// @author Richard Meissner - <richard@gnosis.pm>\\ncontract ModuleManager is SelfAuthorized, Executor {\\n    event EnabledModule(address module);\\n    event DisabledModule(address module);\\n    event ExecutionFromModuleSuccess(address indexed module);\\n    event ExecutionFromModuleFailure(address indexed module);\\n\\n    address internal constant SENTINEL_MODULES = address(0x1);\\n\\n    mapping(address => address) internal modules;\\n\\n    function setupModules(address to, bytes memory data) internal {\\n        require(modules[SENTINEL_MODULES] == address(0), \\\"GS100\\\");\\n        modules[SENTINEL_MODULES] = SENTINEL_MODULES;\\n        if (to != address(0))\\n            // Setup has to complete successfully or transaction fails.\\n            require(execute(to, 0, data, Enum.Operation.DelegateCall, gasleft()), \\\"GS000\\\");\\n    }\\n\\n    /// @dev Allows to add a module to the whitelist.\\n    ///      This can only be done via a Safe transaction.\\n    /// @notice Enables the module `module` for the Safe.\\n    /// @param module Module to be whitelisted.\\n    function enableModule(address module) public authorized {\\n        // Module address cannot be null or sentinel.\\n        require(module != address(0) && module != SENTINEL_MODULES, \\\"GS101\\\");\\n        // Module cannot be added twice.\\n        require(modules[module] == address(0), \\\"GS102\\\");\\n        modules[module] = modules[SENTINEL_MODULES];\\n        modules[SENTINEL_MODULES] = module;\\n        emit EnabledModule(module);\\n    }\\n\\n    /// @dev Allows to remove a module from the whitelist.\\n    ///      This can only be done via a Safe transaction.\\n    /// @notice Disables the module `module` for the Safe.\\n    /// @param prevModule Module that pointed to the module to be removed in the linked list\\n    /// @param module Module to be removed.\\n    function disableModule(address prevModule, address module) public authorized {\\n        // Validate module address and check that it corresponds to module index.\\n        require(module != address(0) && module != SENTINEL_MODULES, \\\"GS101\\\");\\n        require(modules[prevModule] == module, \\\"GS103\\\");\\n        modules[prevModule] = modules[module];\\n        modules[module] = address(0);\\n        emit DisabledModule(module);\\n    }\\n\\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations.\\n    /// @param to Destination address of module transaction.\\n    /// @param value Ether value of module transaction.\\n    /// @param data Data payload of module transaction.\\n    /// @param operation Operation type of module transaction.\\n    function execTransactionFromModule(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        Enum.Operation operation\\n    ) public virtual returns (bool success) {\\n        // Only whitelisted modules are allowed.\\n        require(msg.sender != SENTINEL_MODULES && modules[msg.sender] != address(0), \\\"GS104\\\");\\n        // Execute transaction without further confirmations.\\n        success = execute(to, value, data, operation, gasleft());\\n        if (success) emit ExecutionFromModuleSuccess(msg.sender);\\n        else emit ExecutionFromModuleFailure(msg.sender);\\n    }\\n\\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations and return data\\n    /// @param to Destination address of module transaction.\\n    /// @param value Ether value of module transaction.\\n    /// @param data Data payload of module transaction.\\n    /// @param operation Operation type of module transaction.\\n    function execTransactionFromModuleReturnData(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        Enum.Operation operation\\n    ) public returns (bool success, bytes memory returnData) {\\n        success = execTransactionFromModule(to, value, data, operation);\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            // Load free memory location\\n            let ptr := mload(0x40)\\n            // We allocate memory for the return data by setting the free memory location to\\n            // current free memory location + data size + 32 bytes for data size value\\n            mstore(0x40, add(ptr, add(returndatasize(), 0x20)))\\n            // Store the size\\n            mstore(ptr, returndatasize())\\n            // Store the data\\n            returndatacopy(add(ptr, 0x20), 0, returndatasize())\\n            // Point the return data to the correct memory location\\n            returnData := ptr\\n        }\\n    }\\n\\n    /// @dev Returns if an module is enabled\\n    /// @return True if the module is enabled\\n    function isModuleEnabled(address module) public view returns (bool) {\\n        return SENTINEL_MODULES != module && modules[module] != address(0);\\n    }\\n\\n    /// @dev Returns array of modules.\\n    /// @param start Start of the page.\\n    /// @param pageSize Maximum number of modules that should be returned.\\n    /// @return array Array of modules.\\n    /// @return next Start of the next page.\\n    function getModulesPaginated(address start, uint256 pageSize) external view returns (address[] memory array, address next) {\\n        // Init array with max page size\\n        array = new address[](pageSize);\\n\\n        // Populate return array\\n        uint256 moduleCount = 0;\\n        address currentModule = modules[start];\\n        while (currentModule != address(0x0) && currentModule != SENTINEL_MODULES && moduleCount < pageSize) {\\n            array[moduleCount] = currentModule;\\n            currentModule = modules[currentModule];\\n            moduleCount++;\\n        }\\n        next = currentModule;\\n        // Set correct size of returned array\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            mstore(array, moduleCount)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5512760a0328309f82a71cbe2ac14e0942501b9d44d5fb417bd02174546672e5\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\nimport \\\"../common/SelfAuthorized.sol\\\";\\n\\n/// @title OwnerManager - Manages a set of owners and a threshold to perform actions.\\n/// @author Stefan George - <stefan@gnosis.pm>\\n/// @author Richard Meissner - <richard@gnosis.pm>\\ncontract OwnerManager is SelfAuthorized {\\n    event AddedOwner(address owner);\\n    event RemovedOwner(address owner);\\n    event ChangedThreshold(uint256 threshold);\\n\\n    address internal constant SENTINEL_OWNERS = address(0x1);\\n\\n    mapping(address => address) internal owners;\\n    uint256 internal ownerCount;\\n    uint256 internal threshold;\\n\\n    /// @dev Setup function sets initial storage of contract.\\n    /// @param _owners List of Safe owners.\\n    /// @param _threshold Number of required confirmations for a Safe transaction.\\n    function setupOwners(address[] memory _owners, uint256 _threshold) internal {\\n        // Threshold can only be 0 at initialization.\\n        // Check ensures that setup function can only be called once.\\n        require(threshold == 0, \\\"GS200\\\");\\n        // Validate that threshold is smaller than number of added owners.\\n        require(_threshold <= _owners.length, \\\"GS201\\\");\\n        // There has to be at least one Safe owner.\\n        require(_threshold >= 1, \\\"GS202\\\");\\n        // Initializing Safe owners.\\n        address currentOwner = SENTINEL_OWNERS;\\n        for (uint256 i = 0; i < _owners.length; i++) {\\n            // Owner address cannot be null.\\n            address owner = _owners[i];\\n            require(owner != address(0) && owner != SENTINEL_OWNERS && owner != address(this) && currentOwner != owner, \\\"GS203\\\");\\n            // No duplicate owners allowed.\\n            require(owners[owner] == address(0), \\\"GS204\\\");\\n            owners[currentOwner] = owner;\\n            currentOwner = owner;\\n        }\\n        owners[currentOwner] = SENTINEL_OWNERS;\\n        ownerCount = _owners.length;\\n        threshold = _threshold;\\n    }\\n\\n    /// @dev Allows to add a new owner to the Safe and update the threshold at the same time.\\n    ///      This can only be done via a Safe transaction.\\n    /// @notice Adds the owner `owner` to the Safe and updates the threshold to `_threshold`.\\n    /// @param owner New owner address.\\n    /// @param _threshold New threshold.\\n    function addOwnerWithThreshold(address owner, uint256 _threshold) public authorized {\\n        // Owner address cannot be null, the sentinel or the Safe itself.\\n        require(owner != address(0) && owner != SENTINEL_OWNERS && owner != address(this), \\\"GS203\\\");\\n        // No duplicate owners allowed.\\n        require(owners[owner] == address(0), \\\"GS204\\\");\\n        owners[owner] = owners[SENTINEL_OWNERS];\\n        owners[SENTINEL_OWNERS] = owner;\\n        ownerCount++;\\n        emit AddedOwner(owner);\\n        // Change threshold if threshold was changed.\\n        if (threshold != _threshold) changeThreshold(_threshold);\\n    }\\n\\n    /// @dev Allows to remove an owner from the Safe and update the threshold at the same time.\\n    ///      This can only be done via a Safe transaction.\\n    /// @notice Removes the owner `owner` from the Safe and updates the threshold to `_threshold`.\\n    /// @param prevOwner Owner that pointed to the owner to be removed in the linked list\\n    /// @param owner Owner address to be removed.\\n    /// @param _threshold New threshold.\\n    function removeOwner(\\n        address prevOwner,\\n        address owner,\\n        uint256 _threshold\\n    ) public authorized {\\n        // Only allow to remove an owner, if threshold can still be reached.\\n        require(ownerCount - 1 >= _threshold, \\\"GS201\\\");\\n        // Validate owner address and check that it corresponds to owner index.\\n        require(owner != address(0) && owner != SENTINEL_OWNERS, \\\"GS203\\\");\\n        require(owners[prevOwner] == owner, \\\"GS205\\\");\\n        owners[prevOwner] = owners[owner];\\n        owners[owner] = address(0);\\n        ownerCount--;\\n        emit RemovedOwner(owner);\\n        // Change threshold if threshold was changed.\\n        if (threshold != _threshold) changeThreshold(_threshold);\\n    }\\n\\n    /// @dev Allows to swap/replace an owner from the Safe with another address.\\n    ///      This can only be done via a Safe transaction.\\n    /// @notice Replaces the owner `oldOwner` in the Safe with `newOwner`.\\n    /// @param prevOwner Owner that pointed to the owner to be replaced in the linked list\\n    /// @param oldOwner Owner address to be replaced.\\n    /// @param newOwner New owner address.\\n    function swapOwner(\\n        address prevOwner,\\n        address oldOwner,\\n        address newOwner\\n    ) public authorized {\\n        // Owner address cannot be null, the sentinel or the Safe itself.\\n        require(newOwner != address(0) && newOwner != SENTINEL_OWNERS && newOwner != address(this), \\\"GS203\\\");\\n        // No duplicate owners allowed.\\n        require(owners[newOwner] == address(0), \\\"GS204\\\");\\n        // Validate oldOwner address and check that it corresponds to owner index.\\n        require(oldOwner != address(0) && oldOwner != SENTINEL_OWNERS, \\\"GS203\\\");\\n        require(owners[prevOwner] == oldOwner, \\\"GS205\\\");\\n        owners[newOwner] = owners[oldOwner];\\n        owners[prevOwner] = newOwner;\\n        owners[oldOwner] = address(0);\\n        emit RemovedOwner(oldOwner);\\n        emit AddedOwner(newOwner);\\n    }\\n\\n    /// @dev Allows to update the number of required confirmations by Safe owners.\\n    ///      This can only be done via a Safe transaction.\\n    /// @notice Changes the threshold of the Safe to `_threshold`.\\n    /// @param _threshold New threshold.\\n    function changeThreshold(uint256 _threshold) public authorized {\\n        // Validate that threshold is smaller than number of owners.\\n        require(_threshold <= ownerCount, \\\"GS201\\\");\\n        // There has to be at least one Safe owner.\\n        require(_threshold >= 1, \\\"GS202\\\");\\n        threshold = _threshold;\\n        emit ChangedThreshold(threshold);\\n    }\\n\\n    function getThreshold() public view returns (uint256) {\\n        return threshold;\\n    }\\n\\n    function isOwner(address owner) public view returns (bool) {\\n        return owner != SENTINEL_OWNERS && owners[owner] != address(0);\\n    }\\n\\n    /// @dev Returns array of owners.\\n    /// @return Array of Safe owners.\\n    function getOwners() public view returns (address[] memory) {\\n        address[] memory array = new address[](ownerCount);\\n\\n        // populate return array\\n        uint256 index = 0;\\n        address currentOwner = owners[SENTINEL_OWNERS];\\n        while (currentOwner != SENTINEL_OWNERS) {\\n            array[index] = currentOwner;\\n            currentOwner = owners[currentOwner];\\n            index++;\\n        }\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x01a3d64cc0967f42ae63802409f5404d18352516ea2a6335005003d919ffcf12\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/common/Enum.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title Enum - Collection of enums\\n/// @author Richard Meissner - <richard@gnosis.pm>\\ncontract Enum {\\n    enum Operation {Call, DelegateCall}\\n}\\n\",\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title EtherPaymentFallback - A contract that has a fallback to accept ether payments\\n/// @author Richard Meissner - <richard@gnosis.pm>\\ncontract EtherPaymentFallback {\\n    event SafeReceived(address indexed sender, uint256 value);\\n\\n    /// @dev Fallback function accepts Ether transactions.\\n    receive() external payable {\\n        emit SafeReceived(msg.sender, msg.value);\\n    }\\n}\\n\",\"keccak256\":\"0x1a7928d29877da84a3d0df846d5cd933d48ee095c1bde0aa044e249b12e27a72\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title SecuredTokenTransfer - Secure token transfer\\n/// @author Richard Meissner - <richard@gnosis.pm>\\ncontract SecuredTokenTransfer {\\n    /// @dev Transfers a token and returns if it was a success\\n    /// @param token Token that should be transferred\\n    /// @param receiver Receiver to whom the token should be transferred\\n    /// @param amount The amount of tokens that should be transferred\\n    function transferToken(\\n        address token,\\n        address receiver,\\n        uint256 amount\\n    ) internal returns (bool transferred) {\\n        // 0xa9059cbb - keccack(\\\"transfer(address,uint256)\\\")\\n        bytes memory data = abi.encodeWithSelector(0xa9059cbb, receiver, amount);\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            // We write the return value to scratch space.\\n            // See https://docs.soliditylang.org/en/v0.7.6/internals/layout_in_memory.html#layout-in-memory\\n            let success := call(sub(gas(), 10000), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            switch returndatasize()\\n                case 0 {\\n                    transferred := success\\n                }\\n                case 0x20 {\\n                    transferred := iszero(or(iszero(success), iszero(mload(0))))\\n                }\\n                default {\\n                    transferred := 0\\n                }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x178682d8477da42936c7e8e24d39094c4ac08ecd8623794b9535d77001b665f1\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title SelfAuthorized - authorizes current contract to perform actions\\n/// @author Richard Meissner - <richard@gnosis.pm>\\ncontract SelfAuthorized {\\n    function requireSelfCall() private view {\\n        require(msg.sender == address(this), \\\"GS031\\\");\\n    }\\n\\n    modifier authorized() {\\n        // This is a function call as it minimized the bytecode size\\n        requireSelfCall();\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x59d36efca578b75541a776f62a0d0ef03712fc27b6647c3915c14b572106d7bc\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title SignatureDecoder - Decodes signatures that a encoded as bytes\\n/// @author Richard Meissner - <richard@gnosis.pm>\\ncontract SignatureDecoder {\\n    /// @dev divides bytes signature into `uint8 v, bytes32 r, bytes32 s`.\\n    /// @notice Make sure to peform a bounds check for @param pos, to avoid out of bounds access on @param signatures\\n    /// @param pos which signature to read. A prior bounds check of this parameter should be performed, to avoid out of bounds access\\n    /// @param signatures concatenated rsv signatures\\n    function signatureSplit(bytes memory signatures, uint256 pos)\\n        internal\\n        pure\\n        returns (\\n            uint8 v,\\n            bytes32 r,\\n            bytes32 s\\n        )\\n    {\\n        // The signature format is a compact form of:\\n        //   {bytes32 r}{bytes32 s}{uint8 v}\\n        // Compact means, uint8 is not padded to 32 bytes.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let signaturePos := mul(0x41, pos)\\n            r := mload(add(signatures, add(signaturePos, 0x20)))\\n            s := mload(add(signatures, add(signaturePos, 0x40)))\\n            // Here we are loading the last 32 bytes, including 31 bytes\\n            // of 's'. There is no 'mload8' to do this.\\n            //\\n            // 'byte' is not working due to the Solidity parser, so lets\\n            // use the second best option, 'and'\\n            v := and(mload(add(signatures, add(signaturePos, 0x41))), 0xff)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2d37be182472ccfee62a33e9939f9b3d509be4c32e9fdebc2c1746c573655987\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/common/Singleton.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title Singleton - Base for singleton contracts (should always be first super contract)\\n///         This contract is tightly coupled to our proxy contract (see `proxies/GnosisSafeProxy.sol`)\\n/// @author Richard Meissner - <richard@gnosis.io>\\ncontract Singleton {\\n    // singleton always needs to be first declared variable, to ensure that it is at the same location as in the Proxy contract.\\n    // It should also always be ensured that the address is stored alone (uses a full word)\\n    address private singleton;\\n}\\n\",\"keccak256\":\"0x6e02c18998de8834dd7d69890cb6ede996b6f635d2337081a596d91e35e2c648\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title StorageAccessible - generic base contract that allows callers to access all internal storage.\\n/// @notice See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol\\ncontract StorageAccessible {\\n    /**\\n     * @dev Reads `length` bytes of storage in the currents contract\\n     * @param offset - the offset in the current contract's storage in words to start reading from\\n     * @param length - the number of words (32 bytes) of data to read\\n     * @return the bytes that were read.\\n     */\\n    function getStorageAt(uint256 offset, uint256 length) public view returns (bytes memory) {\\n        bytes memory result = new bytes(length * 32);\\n        for (uint256 index = 0; index < length; index++) {\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                let word := sload(add(offset, index))\\n                mstore(add(add(result, 0x20), mul(index, 0x20)), word)\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Performs a delegetecall on a targetContract in the context of self.\\n     * Internally reverts execution to avoid side effects (making it static).\\n     *\\n     * This method reverts with data equal to `abi.encode(bool(success), bytes(response))`.\\n     * Specifically, the `returndata` after a call to this method will be:\\n     * `success:bool || response.length:uint256 || response:bytes`.\\n     *\\n     * @param targetContract Address of the contract containing the code to execute.\\n     * @param calldataPayload Calldata that should be sent to the target contract (encoded method name and arguments).\\n     */\\n    function simulateAndRevert(address targetContract, bytes memory calldataPayload) external {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let success := delegatecall(gas(), targetContract, add(calldataPayload, 0x20), mload(calldataPayload), 0, 0)\\n\\n            mstore(0x00, success)\\n            mstore(0x20, returndatasize())\\n            returndatacopy(0x40, 0, returndatasize())\\n            revert(0, add(returndatasize(), 0x40))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x36853adb266c2ab7d3c612aca799441a86bd15d9e1d24fc6c70d63f5c2df3aaf\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/**\\n * @title GnosisSafeMath\\n * @dev Math operations with safety checks that revert on error\\n * Renamed from SafeMath to GnosisSafeMath to avoid conflicts\\n * TODO: remove once open zeppelin update to solc 0.5.0\\n */\\nlibrary GnosisSafeMath {\\n    /**\\n     * @dev Multiplies two numbers, reverts on overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Adds two numbers, reverts on overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n}\\n\",\"keccak256\":\"0x2a2b4d74f5834a9437be0cd3254d7a676698fc78aa47941c2009470196998d98\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/handler/CompatibilityFallbackHandler.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport \\\"./DefaultCallbackHandler.sol\\\";\\nimport \\\"../interfaces/ISignatureValidator.sol\\\";\\nimport \\\"../GnosisSafe.sol\\\";\\n\\n/// @title Compatibility Fallback Handler - fallback handler to provider compatibility between pre 1.3.0 and 1.3.0+ Safe contracts\\n/// @author Richard Meissner - <richard@gnosis.pm>\\ncontract CompatibilityFallbackHandler is DefaultCallbackHandler, ISignatureValidator {\\n    //keccak256(\\n    //    \\\"SafeMessage(bytes message)\\\"\\n    //);\\n    bytes32 private constant SAFE_MSG_TYPEHASH = 0x60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca;\\n\\n    bytes4 internal constant SIMULATE_SELECTOR = bytes4(keccak256(\\\"simulate(address,bytes)\\\"));\\n\\n    address internal constant SENTINEL_MODULES = address(0x1);\\n    bytes4 internal constant UPDATED_MAGIC_VALUE = 0x1626ba7e;\\n\\n    /**\\n     * Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`)\\n     * @dev Should return whether the signature provided is valid for the provided data.\\n     * @param _data Arbitrary length data signed on the behalf of address(msg.sender)\\n     * @param _signature Signature byte array associated with _data\\n     * @return a bool upon valid or invalid signature with corresponding _data\\n     */\\n    function isValidSignature(bytes calldata _data, bytes calldata _signature) public view override returns (bytes4) {\\n        // Caller should be a Safe\\n        GnosisSafe safe = GnosisSafe(payable(msg.sender));\\n        bytes32 messageHash = getMessageHashForSafe(safe, _data);\\n        if (_signature.length == 0) {\\n            require(safe.signedMessages(messageHash) != 0, \\\"Hash not approved\\\");\\n        } else {\\n            safe.checkSignatures(messageHash, _data, _signature);\\n        }\\n        return EIP1271_MAGIC_VALUE;\\n    }\\n\\n    /// @dev Returns hash of a message that can be signed by owners.\\n    /// @param message Message that should be hashed\\n    /// @return Message hash.\\n    function getMessageHash(bytes memory message) public view returns (bytes32) {\\n        return getMessageHashForSafe(GnosisSafe(payable(msg.sender)), message);\\n    }\\n\\n    /// @dev Returns hash of a message that can be signed by owners.\\n    /// @param safe Safe to which the message is targeted\\n    /// @param message Message that should be hashed\\n    /// @return Message hash.\\n    function getMessageHashForSafe(GnosisSafe safe, bytes memory message) public view returns (bytes32) {\\n        bytes32 safeMessageHash = keccak256(abi.encode(SAFE_MSG_TYPEHASH, keccak256(message)));\\n        return keccak256(abi.encodePacked(bytes1(0x19), bytes1(0x01), safe.domainSeparator(), safeMessageHash));\\n    }\\n\\n    /**\\n     * Implementation of updated EIP-1271\\n     * @dev Should return whether the signature provided is valid for the provided data.\\n     *       The save does not implement the interface since `checkSignatures` is not a view method.\\n     *       The method will not perform any state changes (see parameters of `checkSignatures`)\\n     * @param _dataHash Hash of the data signed on the behalf of address(msg.sender)\\n     * @param _signature Signature byte array associated with _dataHash\\n     * @return a bool upon valid or invalid signature with corresponding _dataHash\\n     * @notice See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol\\n     */\\n    function isValidSignature(bytes32 _dataHash, bytes calldata _signature) external view returns (bytes4) {\\n        ISignatureValidator validator = ISignatureValidator(msg.sender);\\n        bytes4 value = validator.isValidSignature(abi.encode(_dataHash), _signature);\\n        return (value == EIP1271_MAGIC_VALUE) ? UPDATED_MAGIC_VALUE : bytes4(0);\\n    }\\n\\n    /// @dev Returns array of first 10 modules.\\n    /// @return Array of modules.\\n    function getModules() external view returns (address[] memory) {\\n        // Caller should be a Safe\\n        GnosisSafe safe = GnosisSafe(payable(msg.sender));\\n        (address[] memory array, ) = safe.getModulesPaginated(SENTINEL_MODULES, 10);\\n        return array;\\n    }\\n\\n    /**\\n     * @dev Performs a delegetecall on a targetContract in the context of self.\\n     * Internally reverts execution to avoid side effects (making it static). Catches revert and returns encoded result as bytes.\\n     * @param targetContract Address of the contract containing the code to execute.\\n     * @param calldataPayload Calldata that should be sent to the target contract (encoded method name and arguments).\\n     */\\n    function simulate(address targetContract, bytes calldata calldataPayload) external returns (bytes memory response) {\\n        // Suppress compiler warnings about not using parameters, while allowing\\n        // parameters to keep names for documentation purposes. This does not\\n        // generate code.\\n        targetContract;\\n        calldataPayload;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let internalCalldata := mload(0x40)\\n            // Store `simulateAndRevert.selector`.\\n            // String representation is used to force right padding\\n            mstore(internalCalldata, \\\"\\\\xb4\\\\xfa\\\\xba\\\\x09\\\")\\n            // Abuse the fact that both this and the internal methods have the\\n            // same signature, and differ only in symbol name (and therefore,\\n            // selector) and copy calldata directly. This saves us approximately\\n            // 250 bytes of code and 300 gas at runtime over the\\n            // `abi.encodeWithSelector` builtin.\\n            calldatacopy(add(internalCalldata, 0x04), 0x04, sub(calldatasize(), 0x04))\\n\\n            // `pop` is required here by the compiler, as top level expressions\\n            // can't have return values in inline assembly. `call` typically\\n            // returns a 0 or 1 value indicated whether or not it reverted, but\\n            // since we know it will always revert, we can safely ignore it.\\n            pop(\\n                call(\\n                    gas(),\\n                    // address() has been changed to caller() to use the implementation of the Safe\\n                    caller(),\\n                    0,\\n                    internalCalldata,\\n                    calldatasize(),\\n                    // The `simulateAndRevert` call always reverts, and\\n                    // instead encodes whether or not it was successful in the return\\n                    // data. The first 32-byte word of the return data contains the\\n                    // `success` value, so write it to memory address 0x00 (which is\\n                    // reserved Solidity scratch space and OK to use).\\n                    0x00,\\n                    0x20\\n                )\\n            )\\n\\n            // Allocate and copy the response bytes, making sure to increment\\n            // the free memory pointer accordingly (in case this method is\\n            // called as an internal function). The remaining `returndata[0x20:]`\\n            // contains the ABI encoded response bytes, so we can just write it\\n            // as is to memory.\\n            let responseSize := sub(returndatasize(), 0x20)\\n            response := mload(0x40)\\n            mstore(0x40, add(response, responseSize))\\n            returndatacopy(response, 0x20, responseSize)\\n\\n            if iszero(mload(0x00)) {\\n                revert(add(response, 0x20), mload(response))\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7899e5963d795635e9e36ece68f7e07ed11a49749c635be5f018c510c6682e13\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/handler/DefaultCallbackHandler.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport \\\"../interfaces/ERC1155TokenReceiver.sol\\\";\\nimport \\\"../interfaces/ERC721TokenReceiver.sol\\\";\\nimport \\\"../interfaces/ERC777TokensRecipient.sol\\\";\\nimport \\\"../interfaces/IERC165.sol\\\";\\n\\n/// @title Default Callback Handler - returns true for known token callbacks\\n/// @author Richard Meissner - <richard@gnosis.pm>\\ncontract DefaultCallbackHandler is ERC1155TokenReceiver, ERC777TokensRecipient, ERC721TokenReceiver, IERC165 {\\n    string public constant NAME = \\\"Default Callback Handler\\\";\\n    string public constant VERSION = \\\"1.0.0\\\";\\n\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes calldata\\n    ) external pure override returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address,\\n        address,\\n        uint256[] calldata,\\n        uint256[] calldata,\\n        bytes calldata\\n    ) external pure override returns (bytes4) {\\n        return 0xbc197c81;\\n    }\\n\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external pure override returns (bytes4) {\\n        return 0x150b7a02;\\n    }\\n\\n    function tokensReceived(\\n        address,\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata,\\n        bytes calldata\\n    ) external pure override {\\n        // We implement this for completeness, doesn't really have any value\\n    }\\n\\n    function supportsInterface(bytes4 interfaceId) external view virtual override returns (bool) {\\n        return\\n            interfaceId == type(ERC1155TokenReceiver).interfaceId ||\\n            interfaceId == type(ERC721TokenReceiver).interfaceId ||\\n            interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x1cdc184c3504176383b7f94f9ce06c96ce1c123e1878258fe6dc03cce4a29ff7\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/interfaces/ERC1155TokenReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/**\\n    Note: The ERC-165 identifier for this interface is 0x4e2312e0.\\n*/\\ninterface ERC1155TokenReceiver {\\n    /**\\n        @notice Handle the receipt of a single ERC1155 token type.\\n        @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.        \\n        This function MUST return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61) if it accepts the transfer.\\n        This function MUST revert if it rejects the transfer.\\n        Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\\n        @param _operator  The address which initiated the transfer (i.e. msg.sender)\\n        @param _from      The address which previously owned the token\\n        @param _id        The ID of the token being transferred\\n        @param _value     The amount of tokens being transferred\\n        @param _data      Additional data with no specified format\\n        @return           `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n    */\\n    function onERC1155Received(\\n        address _operator,\\n        address _from,\\n        uint256 _id,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external returns (bytes4);\\n\\n    /**\\n        @notice Handle the receipt of multiple ERC1155 token types.\\n        @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.        \\n        This function MUST return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81) if it accepts the transfer(s).\\n        This function MUST revert if it rejects the transfer(s).\\n        Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\\n        @param _operator  The address which initiated the batch transfer (i.e. msg.sender)\\n        @param _from      The address which previously owned the token\\n        @param _ids       An array containing ids of each token being transferred (order and length must match _values array)\\n        @param _values    An array containing amounts of each token being transferred (order and length must match _ids array)\\n        @param _data      Additional data with no specified format\\n        @return           `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n    */\\n    function onERC1155BatchReceived(\\n        address _operator,\\n        address _from,\\n        uint256[] calldata _ids,\\n        uint256[] calldata _values,\\n        bytes calldata _data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7894ef55ee3334f6388e5e1d749bbabd85fc03d5a2ab949f284bce830f8aa398\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/interfaces/ERC721TokenReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @dev Note: the ERC-165 identifier for this interface is 0x150b7a02.\\ninterface ERC721TokenReceiver {\\n    /// @notice Handle the receipt of an NFT\\n    /// @dev The ERC721 smart contract calls this function on the recipient\\n    ///  after a `transfer`. This function MAY throw to revert and reject the\\n    ///  transfer. Return of other than the magic value MUST result in the\\n    ///  transaction being reverted.\\n    ///  Note: the contract address is always the message sender.\\n    /// @param _operator The address which called `safeTransferFrom` function\\n    /// @param _from The address which previously owned the token\\n    /// @param _tokenId The NFT identifier which is being transferred\\n    /// @param _data Additional data with no specified format\\n    /// @return `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`\\n    ///  unless throwing\\n    function onERC721Received(\\n        address _operator,\\n        address _from,\\n        uint256 _tokenId,\\n        bytes calldata _data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x8a3dd41df3a49d9ae2d45dd4087ca595946ed3c6051b8aa304727017b5eabaa4\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/interfaces/ERC777TokensRecipient.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\ninterface ERC777TokensRecipient {\\n    function tokensReceived(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes calldata data,\\n        bytes calldata operatorData\\n    ) external;\\n}\\n\",\"keccak256\":\"0x1cfbdb95761067c5bc35599fcae6c11e487f2879d7fa2c6f47e7b94506b4039c\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @notice More details at https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5c64c2e071245db8fe3ea8b94f73c5a8de236933858ae240348d502433a9d178\",\"license\":\"LGPL-3.0-only\"},\"@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\ncontract ISignatureValidatorConstants {\\n    // bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\")\\n    bytes4 internal constant EIP1271_MAGIC_VALUE = 0x20c13b0b;\\n}\\n\\nabstract contract ISignatureValidator is ISignatureValidatorConstants {\\n    /**\\n     * @dev Should return whether the signature provided is valid for the provided data\\n     * @param _data Arbitrary length data signed on the behalf of address(this)\\n     * @param _signature Signature byte array associated with _data\\n     *\\n     * MUST return the bytes4 magic value 0x20c13b0b when function passes.\\n     * MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\\n     * MUST allow external calls\\n     */\\n    function isValidSignature(bytes memory _data, bytes memory _signature) public view virtual returns (bytes4);\\n}\\n\",\"keccak256\":\"0x5b6e9bf17f28738ce88e751f420b0559f5151ba7bec2ff3c7bb31e42673d6801\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isValidSignature(bytes,bytes)": {
        "notice": "Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`)"
      },
      "isValidSignature(bytes32,bytes)": {
        "notice": "Implementation of updated EIP-1271See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol"
      }
    },
    "version": 1
  }
}