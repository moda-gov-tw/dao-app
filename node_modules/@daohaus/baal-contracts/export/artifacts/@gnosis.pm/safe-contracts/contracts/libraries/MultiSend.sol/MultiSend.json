{
  "contractName": "MultiSend",
  "sourceName": "@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "transactions",
          "type": "bytes"
        }
      ],
      "name": "multiSend",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x60a060405234801561001057600080fd5b5030606081901b6080526102536100316000396000604301526102536000f3fe60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b610036610031366004610156565b610038565b005b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156100ce5760405162461bcd60e51b815260206004820152603060248201527f4d756c746953656e642073686f756c64206f6e6c792062652063616c6c65642060448201526f1d9a584819195b1959d85d1958d85b1b60821b606482015260840160405180910390fd5b805160205b81811015610151578083015160f81c6001820184015160601c601583018501516035840186015160558501870160008560008114610118576001811461012857610133565b6000808585888a5af19150610133565b6000808585895af491505b508061013e57600080fd5b50508060550185019450505050506100d3565b505050565b60006020828403121561016857600080fd5b813567ffffffffffffffff8082111561018057600080fd5b818401915084601f83011261019457600080fd5b8135818111156101a6576101a6610207565b604051601f8201601f19908116603f011681019083821181831017156101ce576101ce610207565b816040528281528760208487010111156101e757600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052604160045260246000fdfea264697066735822122091b6431c24028f00bc110902593ee03fba4efacf2d97bd183cc38540a196177364736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b610036610031366004610156565b610038565b005b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156100ce5760405162461bcd60e51b815260206004820152603060248201527f4d756c746953656e642073686f756c64206f6e6c792062652063616c6c65642060448201526f1d9a584819195b1959d85d1958d85b1b60821b606482015260840160405180910390fd5b805160205b81811015610151578083015160f81c6001820184015160601c601583018501516035840186015160558501870160008560008114610118576001811461012857610133565b6000808585888a5af19150610133565b6000808585895af491505b508061013e57600080fd5b50508060550185019450505050506100d3565b505050565b60006020828403121561016857600080fd5b813567ffffffffffffffff8082111561018057600080fd5b818401915084601f83011261019457600080fd5b8135818111156101a6576101a6610207565b604051601f8201601f19908116603f011681019083821181831017156101ce576101ce610207565b816040528281528760208487010111156101e757600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052604160045260246000fdfea264697066735822122091b6431c24028f00bc110902593ee03fba4efacf2d97bd183cc38540a196177364736f6c63430008070033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "author": "Nick Dodson - <nick.dodson@consensys.net>Gonçalo Sá - <goncalo.sa@consensys.net>Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>",
    "kind": "dev",
    "methods": {
      "multiSend(bytes)": {
        "details": "Sends multiple transactions and reverts all if one fails.",
        "params": {
          "transactions": "Encoded transactions. Each transaction is encoded as a packed bytes of                     operation as a uint8 with 0 for a call or 1 for a delegatecall (=> 1 byte),                     to as a address (=> 20 bytes),                     value as a uint256 (=> 32 bytes),                     data length as a uint256 (=> 32 bytes),                     data as bytes.                     see abi.encodePacked for more information on packed encoding"
        }
      }
    },
    "title": "Multi Send - Allows to batch multiple transactions into one.",
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_2857": {
          "entryPoint": null,
          "id": 2857,
          "parameterSlots": 0,
          "returnSlots": 0
        }
      },
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADDRESS PUSH1 0x60 DUP2 SWAP1 SHL PUSH1 0x80 MSTORE PUSH2 0x253 PUSH2 0x31 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0x43 ADD MSTORE PUSH2 0x253 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D80FF0A EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x31 CALLDATASIZE PUSH1 0x4 PUSH2 0x156 JUMP JUMPDEST PUSH2 0x38 JUMP JUMPDEST STOP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0xCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C746953656E642073686F756C64206F6E6C792062652063616C6C656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1D9A584819195B1959D85D1958D85B1B PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x151 JUMPI DUP1 DUP4 ADD MLOAD PUSH1 0xF8 SHR PUSH1 0x1 DUP3 ADD DUP5 ADD MLOAD PUSH1 0x60 SHR PUSH1 0x15 DUP4 ADD DUP6 ADD MLOAD PUSH1 0x35 DUP5 ADD DUP7 ADD MLOAD PUSH1 0x55 DUP6 ADD DUP8 ADD PUSH1 0x0 DUP6 PUSH1 0x0 DUP2 EQ PUSH2 0x118 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x128 JUMPI PUSH2 0x133 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 DUP9 DUP11 GAS CALL SWAP2 POP PUSH2 0x133 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 DUP10 GAS DELEGATECALL SWAP2 POP JUMPDEST POP DUP1 PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 PUSH1 0x55 ADD DUP6 ADD SWAP5 POP POP POP POP POP PUSH2 0xD3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1A6 JUMPI PUSH2 0x1A6 PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1CE JUMPI PUSH2 0x1CE PUSH2 0x207 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xB6 NUMBER SHR 0x24 MUL DUP16 STOP 0xBC GT MULMOD MUL MSIZE RETURNDATACOPY 0xE0 EXTCODEHASH 0xBA 0x4E STATICCALL 0xCF 0x2D SWAP8 0xBD XOR EXTCODECOPY 0xC3 DUP6 BLOCKHASH LOG1 SWAP7 OR PUSH20 0x64736F6C63430008070033000000000000000000 ",
      "sourceMap": "353:3128:23:-:0;;;429:65;;;;;;;;;-1:-1:-1;482:4:23;453:34;;;;;;353:3128;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@multiSend_2875": {
          "entryPoint": 56,
          "id": 2875,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "abi_decode_tuple_t_bytes_memory_ptr": {
          "entryPoint": 342,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_be54b8c9bc01d366a87d58d4e594f7b0f8a1032210aae73d17a5ed4f177986bc__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "panic_error_0x41": {
          "entryPoint": 519,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:1486:95",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:95",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "93:842:95",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "139:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "148:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "151:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "141:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "141:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "141:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "114:7:95"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "123:9:95"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "110:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "110:23:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "135:2:95",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "106:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "106:32:95"
                      },
                      "nodeType": "YulIf",
                      "src": "103:52:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "164:37:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "191:9:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "178:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:23:95"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "168:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "210:28:95",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "220:18:95",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "214:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "265:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "274:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "277:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "267:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "267:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "267:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "253:6:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "261:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "250:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:14:95"
                      },
                      "nodeType": "YulIf",
                      "src": "247:34:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "290:32:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "304:9:95"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "315:6:95"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "300:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "300:22:95"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "294:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "370:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "379:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "382:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "372:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "372:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "372:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "349:2:95"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "353:4:95",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "345:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "345:13:95"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "360:7:95"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "341:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "341:27:95"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "334:35:95"
                      },
                      "nodeType": "YulIf",
                      "src": "331:55:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "395:26:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "418:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "405:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "405:16:95"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "399:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "444:22:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "446:16:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "446:18:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "446:18:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "436:2:95"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "440:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "433:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "433:10:95"
                      },
                      "nodeType": "YulIf",
                      "src": "430:36:95"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "475:17:95",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "489:2:95",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "485:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "485:7:95"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "479:2:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "501:23:95",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "521:2:95",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "515:5:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "515:9:95"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "505:6:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "533:71:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "555:6:95"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "579:2:95"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "583:4:95",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "575:3:95"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "575:13:95"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "590:2:95"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "571:3:95"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "571:22:95"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "595:2:95",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "567:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "567:31:95"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "600:2:95"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "563:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "563:40:95"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "551:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "551:53:95"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "537:10:95",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "663:22:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "665:16:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "665:18:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "665:18:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "622:10:95"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "634:2:95"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "619:2:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "619:18:95"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "642:10:95"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "654:6:95"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "639:2:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "639:22:95"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "616:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "616:46:95"
                      },
                      "nodeType": "YulIf",
                      "src": "613:72:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "701:2:95",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "705:10:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "694:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "694:22:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "694:22:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "732:6:95"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "740:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "725:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "725:18:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "725:18:95"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "789:16:95",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "798:1:95",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "801:1:95",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "791:6:95"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "791:12:95"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "791:12:95"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "766:2:95"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "770:2:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "762:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "762:11:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "775:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "758:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "758:20:95"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "780:7:95"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "755:2:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "755:33:95"
                      },
                      "nodeType": "YulIf",
                      "src": "752:53:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "831:6:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "839:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "827:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "827:15:95"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "848:2:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "852:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "844:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "844:11:95"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "857:2:95"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "814:12:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "814:46:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "814:46:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "884:6:95"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "892:2:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "880:3:95"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "880:15:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "897:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "876:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "876:24:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "902:1:95",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "869:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "869:35:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "869:35:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "913:16:95",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "923:6:95"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "913:6:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "59:9:95",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "70:7:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "82:6:95",
                    "type": ""
                  }
                ],
                "src": "14:921:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1114:238:95",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1131:9:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1142:2:95",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1124:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1124:21:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1124:21:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1165:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1176:2:95",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1161:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1161:18:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1181:2:95",
                            "type": "",
                            "value": "48"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1154:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1154:30:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1154:30:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1204:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1215:2:95",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1200:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1200:18:95"
                          },
                          {
                            "hexValue": "4d756c746953656e642073686f756c64206f6e6c792062652063616c6c656420",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1220:34:95",
                            "type": "",
                            "value": "MultiSend should only be called "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1193:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1193:62:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1193:62:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1275:9:95"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1286:2:95",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1271:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1271:18:95"
                          },
                          {
                            "hexValue": "7669612064656c656761746563616c6c",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1291:18:95",
                            "type": "",
                            "value": "via delegatecall"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1264:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:46:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1264:46:95"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1319:27:95",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1331:9:95"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1342:3:95",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1327:3:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1327:19:95"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1319:4:95"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_be54b8c9bc01d366a87d58d4e594f7b0f8a1032210aae73d17a5ed4f177986bc__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1091:9:95",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1105:4:95",
                    "type": ""
                  }
                ],
                "src": "940:412:95"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1389:95:95",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1406:1:95",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1413:3:95",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1418:10:95",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1409:3:95"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1409:20:95"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1399:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1399:31:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1399:31:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1446:1:95",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1449:4:95",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1439:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1439:15:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1439:15:95"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1470:1:95",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1473:4:95",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "1463:6:95"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1463:15:95"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1463:15:95"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "1357:127:95"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_be54b8c9bc01d366a87d58d4e594f7b0f8a1032210aae73d17a5ed4f177986bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"MultiSend should only be called \")\n        mstore(add(headStart, 96), \"via delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
          "id": 95,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {
        "2846": [
          {
            "length": 32,
            "start": 67
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D80FF0A EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x31 CALLDATASIZE PUSH1 0x4 PUSH2 0x156 JUMP JUMPDEST PUSH2 0x38 JUMP JUMPDEST STOP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0xCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C746953656E642073686F756C64206F6E6C792062652063616C6C656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1D9A584819195B1959D85D1958D85B1B PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x151 JUMPI DUP1 DUP4 ADD MLOAD PUSH1 0xF8 SHR PUSH1 0x1 DUP3 ADD DUP5 ADD MLOAD PUSH1 0x60 SHR PUSH1 0x15 DUP4 ADD DUP6 ADD MLOAD PUSH1 0x35 DUP5 ADD DUP7 ADD MLOAD PUSH1 0x55 DUP6 ADD DUP8 ADD PUSH1 0x0 DUP6 PUSH1 0x0 DUP2 EQ PUSH2 0x118 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x128 JUMPI PUSH2 0x133 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 DUP9 DUP11 GAS CALL SWAP2 POP PUSH2 0x133 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 DUP10 GAS DELEGATECALL SWAP2 POP JUMPDEST POP DUP1 PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 PUSH1 0x55 ADD DUP6 ADD SWAP5 POP POP POP POP POP PUSH2 0xD3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1A6 JUMPI PUSH2 0x1A6 PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1CE JUMPI PUSH2 0x1CE PUSH2 0x207 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xB6 NUMBER SHR 0x24 MUL DUP16 STOP 0xBC GT MULMOD MUL MSIZE RETURNDATACOPY 0xE0 EXTCODEHASH 0xBA 0x4E STATICCALL 0xCF 0x2D SWAP8 0xBD XOR EXTCODECOPY 0xC3 DUP6 BLOCKHASH LOG1 SWAP7 OR PUSH20 0x64736F6C63430008070033000000000000000000 ",
      "sourceMap": "353:3128:23:-:0;;;;;;;;;;;;;;;;;;;;;1295:2184;;;;;;:::i;:::-;;:::i;:::-;;;1382:4;-1:-1:-1;;;;;1391:18:23;1374:35;;;1366:96;;;;-1:-1:-1;;;1366:96:23;;1142:2:95;1366:96:23;;;1124:21:95;1181:2;1161:18;;;1154:30;1220:34;1200:18;;;1193:62;-1:-1:-1;;;1271:18:95;;;1264:46;1327:19;;1366:96:23;;;;;;;;1571:12;1565:19;1606:4;1623:1840;1706:6;1703:1;1700:13;1623:1840;;;2097:1;2083:12;2079:20;2073:27;2067:4;2063:38;2371:4;2368:1;2364:12;2350;2346:31;2340:38;2334:4;2330:49;2533:4;2530:1;2526:12;2512;2508:31;2502:38;2716:4;2713:1;2709:12;2695;2691:31;2685:38;2910:4;2907:1;2903:12;2889;2885:31;2948:1;2973:9;3008:1;3003:112;;;;3141:1;3136:113;;;;2966:283;;3003:112;3091:1;3088;3076:10;3070:4;3063:5;3059:2;3052:5;3047:46;3036:57;;3003:112;;3136:113;3225:1;3222;3210:10;3204:4;3200:2;3193:5;3180:47;3169:58;;2966:283;-1:-1:-1;3269:14:23;3266:70;;3316:1;3313;3306:12;3266:70;;;3437:10;3431:4;3427:21;3424:1;3420:29;3415:34;;;;;;1623:1840;;;1627:72;;1295:2184;:::o;14:921:95:-;82:6;135:2;123:9;114:7;110:23;106:32;103:52;;;151:1;148;141:12;103:52;191:9;178:23;220:18;261:2;253:6;250:14;247:34;;;277:1;274;267:12;247:34;315:6;304:9;300:22;290:32;;360:7;353:4;349:2;345:13;341:27;331:55;;382:1;379;372:12;331:55;418:2;405:16;440:2;436;433:10;430:36;;;446:18;;:::i;:::-;521:2;515:9;489:2;575:13;;-1:-1:-1;;571:22:95;;;595:2;567:31;563:40;551:53;;;619:18;;;639:22;;;616:46;613:72;;;665:18;;:::i;:::-;705:10;701:2;694:22;740:2;732:6;725:18;780:7;775:2;770;766;762:11;758:20;755:33;752:53;;;801:1;798;791:12;752:53;857:2;852;848;844:11;839:2;831:6;827:15;814:46;902:1;880:15;;;897:2;876:24;869:35;;;;-1:-1:-1;884:6:95;14:921;-1:-1:-1;;;;;14:921:95:o;1357:127::-;1418:10;1413:3;1409:20;1406:1;1399:31;1449:4;1446:1;1439:15;1473:4;1470:1;1463:15"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "119000",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "multiSend(bytes)": "infinite"
      }
    },
    "methodIdentifiers": {
      "multiSend(bytes)": "8d80ff0a"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"transactions\",\"type\":\"bytes\"}],\"name\":\"multiSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nick Dodson - <nick.dodson@consensys.net>Gon\\u00e7alo S\\u00e1 - <goncalo.sa@consensys.net>Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>\",\"kind\":\"dev\",\"methods\":{\"multiSend(bytes)\":{\"details\":\"Sends multiple transactions and reverts all if one fails.\",\"params\":{\"transactions\":\"Encoded transactions. Each transaction is encoded as a packed bytes of                     operation as a uint8 with 0 for a call or 1 for a delegatecall (=> 1 byte),                     to as a address (=> 20 bytes),                     value as a uint256 (=> 32 bytes),                     data length as a uint256 (=> 32 bytes),                     data as bytes.                     see abi.encodePacked for more information on packed encoding\"}}},\"title\":\"Multi Send - Allows to batch multiple transactions into one.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multiSend(bytes)\":{\"notice\":\"This method is payable as delegatecalls keep the msg.value from the previous call         If the calling method (e.g. execTransaction) received ETH this would revert otherwise\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol\":\"MultiSend\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title Multi Send - Allows to batch multiple transactions into one.\\n/// @author Nick Dodson - <nick.dodson@consensys.net>\\n/// @author Gon\\u00e7alo S\\u00e1 - <goncalo.sa@consensys.net>\\n/// @author Stefan George - <stefan@gnosis.io>\\n/// @author Richard Meissner - <richard@gnosis.io>\\ncontract MultiSend {\\n    address private immutable multisendSingleton;\\n\\n    constructor() {\\n        multisendSingleton = address(this);\\n    }\\n\\n    /// @dev Sends multiple transactions and reverts all if one fails.\\n    /// @param transactions Encoded transactions. Each transaction is encoded as a packed bytes of\\n    ///                     operation as a uint8 with 0 for a call or 1 for a delegatecall (=> 1 byte),\\n    ///                     to as a address (=> 20 bytes),\\n    ///                     value as a uint256 (=> 32 bytes),\\n    ///                     data length as a uint256 (=> 32 bytes),\\n    ///                     data as bytes.\\n    ///                     see abi.encodePacked for more information on packed encoding\\n    /// @notice This method is payable as delegatecalls keep the msg.value from the previous call\\n    ///         If the calling method (e.g. execTransaction) received ETH this would revert otherwise\\n    function multiSend(bytes memory transactions) public payable {\\n        require(address(this) != multisendSingleton, \\\"MultiSend should only be called via delegatecall\\\");\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let length := mload(transactions)\\n            let i := 0x20\\n            for {\\n                // Pre block is not used in \\\"while mode\\\"\\n            } lt(i, length) {\\n                // Post block is not used in \\\"while mode\\\"\\n            } {\\n                // First byte of the data is the operation.\\n                // We shift by 248 bits (256 - 8 [operation byte]) it right since mload will always load 32 bytes (a word).\\n                // This will also zero out unused data.\\n                let operation := shr(0xf8, mload(add(transactions, i)))\\n                // We offset the load address by 1 byte (operation byte)\\n                // We shift it right by 96 bits (256 - 160 [20 address bytes]) to right-align the data and zero out unused data.\\n                let to := shr(0x60, mload(add(transactions, add(i, 0x01))))\\n                // We offset the load address by 21 byte (operation byte + 20 address bytes)\\n                let value := mload(add(transactions, add(i, 0x15)))\\n                // We offset the load address by 53 byte (operation byte + 20 address bytes + 32 value bytes)\\n                let dataLength := mload(add(transactions, add(i, 0x35)))\\n                // We offset the load address by 85 byte (operation byte + 20 address bytes + 32 value bytes + 32 data length bytes)\\n                let data := add(transactions, add(i, 0x55))\\n                let success := 0\\n                switch operation\\n                    case 0 {\\n                        success := call(gas(), to, value, data, dataLength, 0, 0)\\n                    }\\n                    case 1 {\\n                        success := delegatecall(gas(), to, data, dataLength, 0, 0)\\n                    }\\n                if eq(success, 0) {\\n                    revert(0, 0)\\n                }\\n                // Next entry starts at 85 byte + data length\\n                i := add(i, add(0x55, dataLength))\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe6bf0d0a7cd22246fe93dc7da134359d9d61cd2671e20384ec3c9e7677fadc55\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "multiSend(bytes)": {
        "notice": "This method is payable as delegatecalls keep the msg.value from the previous call         If the calling method (e.g. execTransaction) received ETH this would revert otherwise"
      }
    },
    "version": 1
  }
}