import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Poster, PosterInterface } from "../../../contracts/utils/Poster";
declare type PosterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Poster__factory extends ContractFactory {
    constructor(...args: PosterConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<Poster>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): Poster;
    connect(signer: Signer): Poster__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506101d0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630ae1b13d14610030575b600080fd5b61004361003e3660046100ef565b610045565b005b818160405161005592919061015b565b6040518091039020336001600160a01b03167f6c7f3182d7e4cb876251f9ae1489975fdbbf15d9f35d393f2ac9b1ff57cec69f868660405161009892919061016b565b60405180910390a350505050565b60008083601f8401126100b857600080fd5b50813567ffffffffffffffff8111156100d057600080fd5b6020830191508360208285010111156100e857600080fd5b9250929050565b6000806000806040858703121561010557600080fd5b843567ffffffffffffffff8082111561011d57600080fd5b610129888389016100a6565b9096509450602087013591508082111561014257600080fd5b5061014f878288016100a6565b95989497509550505050565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea264697066735822122047d14e65eff5d1c9fa0781fb61ad932575a1d5f9ba4a882df267019c681694b764736f6c63430008070033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "content";
            readonly type: "string";
        }, {
            readonly indexed: true;
            readonly internalType: "string";
            readonly name: "tag";
            readonly type: "string";
        }];
        readonly name: "NewPost";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "content";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "tag";
            readonly type: "string";
        }];
        readonly name: "post";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): PosterInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Poster;
}
export {};
