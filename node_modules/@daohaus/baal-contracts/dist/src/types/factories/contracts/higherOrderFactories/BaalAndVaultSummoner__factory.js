"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaalAndVaultSummoner__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "previousAdmin",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "newAdmin",
                type: "address",
            },
        ],
        name: "AdminChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "beacon",
                type: "address",
            },
        ],
        name: "BeaconUpgraded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "daoAddress",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "delegate",
                type: "address",
            },
        ],
        name: "SetDelegate",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "active",
                        type: "bool",
                    },
                    {
                        internalType: "address",
                        name: "daoAddress",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "vaultAddress",
                        type: "address",
                    },
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                ],
                indexed: false,
                internalType: "struct BaalAndVaultSummoner.Vault",
                name: "vault",
                type: "tuple",
            },
        ],
        name: "SetVault",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "implementation",
                type: "address",
            },
        ],
        name: "Upgraded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "summoner",
                type: "address",
            },
        ],
        name: "setSummoner",
        type: "event",
    },
    {
        inputs: [],
        name: "_baalSummoner",
        outputs: [
            {
                internalType: "contract IBaalSummoner",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "daoAddress",
                type: "address",
            },
        ],
        name: "deactivateVaultAsDao",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "delegates",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "proxiableUUID",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "daoAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "delegate",
                type: "address",
            },
        ],
        name: "setDelegate",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "daoAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "vaultAddress",
                type: "address",
            },
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
        ],
        name: "setNewVault",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "baalSummoner",
                type: "address",
            },
        ],
        name: "setSummonerAddr",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "active",
                type: "bool",
            },
        ],
        name: "setVault",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "initializationParams",
                type: "bytes",
            },
            {
                internalType: "bytes[]",
                name: "initializationActions",
                type: "bytes[]",
            },
            {
                internalType: "uint256",
                name: "saltNonce",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "referrer",
                type: "bytes32",
            },
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
        ],
        name: "summonBaalAndVault",
        outputs: [
            {
                internalType: "address",
                name: "_daoAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "_vaultAddress",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "daoAddress",
                type: "address",
            },
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
        ],
        name: "summonVault",
        outputs: [
            {
                internalType: "address",
                name: "_vaultAddress",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newImplementation",
                type: "address",
            },
        ],
        name: "upgradeTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newImplementation",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "upgradeToAndCall",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "vaultIdx",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "vaults",
        outputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "active",
                type: "bool",
            },
            {
                internalType: "address",
                name: "daoAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "vaultAddress",
                type: "address",
            },
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c611b4c6100526000396000818161049f015281816104df0152818161057f015281816105bf015261064e0152611b4c6000f3fe6080604052600436106101095760003560e01c80638129fc1c11610095578063ac06a9a911610064578063ac06a9a9146102f2578063b395f08614610312578063bb6decc814610332578063bedfb8d414610352578063f2fde38b1461036857600080fd5b80638129fc1c1461024e5780638c64ea4a146102635780638da5cb5b14610294578063a156d863146102b257600080fd5b806352d1902d116100dc57806352d1902d146101a0578063587cde1e146101c35780635c873849146101f9578063619dd5d414610219578063715018a61461023957600080fd5b8063133afcc01461010e57806314b630f9146101305780633659cfe61461016d5780634f1ef2861461018d575b600080fd5b34801561011a57600080fd5b5061012e610129366004611678565b610388565b005b34801561013c57600080fd5b5060c954610150906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561017957600080fd5b5061012e6101883660046113f5565b610494565b61012e61019b3660046114ca565b610574565b3480156101ac57600080fd5b506101b5610641565b604051908152602001610164565b3480156101cf57600080fd5b506101506101de3660046113f5565b60cc602052600090815260409020546001600160a01b031681565b34801561020557600080fd5b5061012e61021436600461142f565b6106f4565b34801561022557600080fd5b5061012e61023436600461169d565b6107a1565b34801561024557600080fd5b5061012e6107b3565b34801561025a57600080fd5b5061012e6107c7565b34801561026f57600080fd5b5061028361027e36600461165f565b6108e5565b6040516101649594939291906119d2565b3480156102a057600080fd5b506033546001600160a01b0316610150565b3480156102be57600080fd5b506102d26102cd36600461158d565b6109b0565b604080516001600160a01b03938416815292909116602083015201610164565b3480156102fe57600080fd5b5061015061030d36600461152e565b610a5b565b34801561031e57600080fd5b5061012e61032d366004611468565b610aee565b34801561033e57600080fd5b5061012e61034d3660046113f5565b610b06565b34801561035e57600080fd5b506101b560ca5481565b34801561037457600080fd5b5061012e6103833660046113f5565b610ba1565b336001600160a01b03821614806103b857506001600160a01b03818116600090815260cc60205260409020541633145b6103ff5760405162461bcd60e51b81526020600482015260136024820152726e6f742044414f206f722064656c656761746560681b60448201526064015b60405180910390fd5b600082815260cb60205260409020600101546001600160a01b03828116610100909204161480156104415750600082815260cb602052604090206001015460ff165b6104855760405162461bcd60e51b8152602060048201526015602482015274085b9bdd081858dd1a5d9948111053c81d985d5b1d605a1b60448201526064016103f6565b610490826000610c17565b5050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104dd5760405162461bcd60e51b81526004016103f690611806565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610526600080516020611ad0833981519152546001600160a01b031690565b6001600160a01b03161461054c5760405162461bcd60e51b81526004016103f690611852565b61055581610c64565b6040805160008082526020820190925261057191839190610c6c565b50565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105bd5760405162461bcd60e51b81526004016103f690611806565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610606600080516020611ad0833981519152546001600160a01b031690565b6001600160a01b03161461062c5760405162461bcd60e51b81526004016103f690611852565b61063582610c64565b61049082826001610c6c565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106e15760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016103f6565b50600080516020611ad083398151915290565b336001600160a01b038316146107355760405162461bcd60e51b81526004016103f6906020808252600490820152632144414f60e01b604082015260600190565b6001600160a01b03828116600081815260cc602090815260409182902080546001600160a01b031916948616948517905581519283528201929092527fbeebfeebc9d1af8057ca45af36b2171fea34cb5b251e394f0bc5fcabde119d7f91015b60405180910390a15050565b6107a9610de6565b6104908282610c17565b6107bb610de6565b6107c56000610e40565b565b600054610100900460ff16158080156107e75750600054600160ff909116105b806108015750303b158015610801575060005460ff166001145b6108645760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103f6565b6000805460ff191660011790558015610887576000805461ff0019166101001790555b61088f610e92565b610897610ec1565b600060ca558015610571576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b60cb602052600090815260409020805460018201546002830154600384018054939460ff8416946101009094046001600160a01b039081169493169290919061092d90611a69565b80601f016020809104026020016040519081016040528092919081815260200182805461095990611a69565b80156109a65780601f1061097b576101008083540402835291602001916109a6565b820191906000526020600020905b81548152906001019060200180831161098957829003601f168201915b5050505050905085565b60c95460405163209f369560e01b815260009182916001600160a01b039091169063209f3695906109ef908c908c908c908c908c908c90600401611738565b602060405180830381600087803b158015610a0957600080fd5b505af1158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190611412565b9150610a4d8284610a5b565b905097509795505050505050565b60c954604051633e2108c760e21b81526001600160a01b038481166004830152600092169063f884231c90602401602060405180830381600087803b158015610aa357600080fd5b505af1158015610ab7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adb9190611412565b9050610ae8828483610ee8565b92915050565b610af6610de6565b610b01818484610ee8565b505050565b610b0e610de6565b6001600160a01b038116610b535760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064016103f6565b60c980546001600160a01b0319166001600160a01b0383169081179091556040519081527ff471c7a7115723e1d5e0a3b924bec97596831b94082a24d73c8c3210c6cb3b06906020016108da565b610ba9610de6565b6001600160a01b038116610c0e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f6565b61057181610e40565b600082815260cb60205260409081902060018101805460ff191684151517905590517f70720885c820c73facaa75bc2669991b591d9fd2a1e2507a4a9a8022f9336f7891610795916118e9565b610571610de6565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610c9f57610b0183611005565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610cd857600080fd5b505afa925050508015610d08575060408051601f3d908101601f19168201909252610d0591810190611574565b60015b610d6b5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016103f6565b600080516020611ad08339815191528114610dda5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016103f6565b50610b018383836110a1565b6033546001600160a01b031633146107c55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f6565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610eb95760405162461bcd60e51b81526004016103f69061189e565b6107c56110cc565b600054610100900460ff166107c55760405162461bcd60e51b81526004016103f69061189e565b600160ca6000828254610efb9190611a17565b90915550506040805160a08101825260ca54808252600160208084018281526001600160a01b0388811686880190815288821660608801908152608088018c8152600097885260cb865298909620875181559251948301805491516001600160a81b0319909216951515610100600160a81b03191695909517610100918316919091021790935592516002840180546001600160a01b03191691909316179091559251805192939192610fb4926003850192019061127a565b505060ca54600090815260cb60205260409081902090517f70720885c820c73facaa75bc2669991b591d9fd2a1e2507a4a9a8022f9336f789250610ff891906118e9565b60405180910390a1505050565b6001600160a01b0381163b6110725760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016103f6565b600080516020611ad083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6110aa836110fc565b6000825111806110b75750805b15610b01576110c6838361113c565b50505050565b600054610100900460ff166110f35760405162461bcd60e51b81526004016103f69061189e565b6107c533610e40565b61110581611005565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6111a45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016103f6565b600080846001600160a01b0316846040516111bf919061171c565b600060405180830381855af49150503d80600081146111fa576040519150601f19603f3d011682016040523d82523d6000602084013e6111ff565b606091505b50915091506112278282604051806060016040528060278152602001611af060279139611230565b95945050505050565b6060831561123f575081611249565b6112498383611250565b9392505050565b8151156112605781518083602001fd5b8060405162461bcd60e51b81526004016103f691906117f3565b82805461128690611a69565b90600052602060002090601f0160209004810192826112a857600085556112ee565b82601f106112c157805160ff19168380011785556112ee565b828001600101855582156112ee579182015b828111156112ee5782518255916020019190600101906112d3565b506112fa9291506112fe565b5090565b5b808211156112fa57600081556001016112ff565b600067ffffffffffffffff8084111561132e5761132e611aa4565b604051601f8501601f19908116603f0116810190828211818310171561135657611356611aa4565b8160405280935085815286868601111561136f57600080fd5b858560208301376000602087830101525050509392505050565b60008083601f84011261139b57600080fd5b50813567ffffffffffffffff8111156113b357600080fd5b6020830191508360208260051b85010111156113ce57600080fd5b9250929050565b600082601f8301126113e657600080fd5b61124983833560208501611313565b60006020828403121561140757600080fd5b813561124981611aba565b60006020828403121561142457600080fd5b815161124981611aba565b6000806040838503121561144257600080fd5b823561144d81611aba565b9150602083013561145d81611aba565b809150509250929050565b60008060006060848603121561147d57600080fd5b833561148881611aba565b9250602084013561149881611aba565b9150604084013567ffffffffffffffff8111156114b457600080fd5b6114c0868287016113d5565b9150509250925092565b600080604083850312156114dd57600080fd5b82356114e881611aba565b9150602083013567ffffffffffffffff81111561150457600080fd5b8301601f8101851361151557600080fd5b61152485823560208401611313565b9150509250929050565b6000806040838503121561154157600080fd5b823561154c81611aba565b9150602083013567ffffffffffffffff81111561156857600080fd5b611524858286016113d5565b60006020828403121561158657600080fd5b5051919050565b600080600080600080600060a0888a0312156115a857600080fd5b873567ffffffffffffffff808211156115c057600080fd5b818a0191508a601f8301126115d457600080fd5b8135818111156115e357600080fd5b8b60208285010111156115f557600080fd5b60209283019950975090890135908082111561161057600080fd5b61161c8b838c01611389565b909750955060408a0135945060608a0135935060808a013591508082111561164357600080fd5b506116508a828b016113d5565b91505092959891949750929550565b60006020828403121561167157600080fd5b5035919050565b6000806040838503121561168b57600080fd5b82359150602083013561145d81611aba565b600080604083850312156116b057600080fd5b823591506020830135801515811461145d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008151808452611708816020860160208601611a3d565b601f01601f19169290920160200192915050565b6000825161172e818460208701611a3d565b9190910192915050565b60808152600061174c60808301888a6116c7565b602083820381850152818783528183019050818860051b8401018960005b8a8110156117d957858303601f190184528135368d9003601e1901811261179057600080fd5b8c01803567ffffffffffffffff8111156117a957600080fd5b8036038e13156117b857600080fd5b6117c585828985016116c7565b95870195945050509084019060010161176a565b505060408601979097525050505060600152949350505050565b60208152600061124960208301846116f0565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b602080825282548282015260018084015460ff81161515604085015260081c6001600160a01b039081166060850152600285015416608084015260a080840152600384018054600093929190849080841c8185168061194957607f821691505b86821081141561196757634e487b7160e01b84526022600452602484fd5b60c0890182905260e089018180156119865760018114611997576119c2565b60ff198516825288820195506119c2565b60008781526020902060005b858110156119bc57815484820152908901908a016119a3565b83019650505b50939a9950505050505050505050565b85815284151560208201526001600160a01b0384811660408301528316606082015260a060808201819052600090611a0c908301846116f0565b979650505050505050565b60008219821115611a3857634e487b7160e01b600052601160045260246000fd5b500190565b60005b83811015611a58578181015183820152602001611a40565b838111156110c65750506000910152565b600181811c90821680611a7d57607f821691505b60208210811415611a9e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461057157600080fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201a147e58c05b20357cb3919a570b985d63b405a5c57197b71f94854fda882a9a64736f6c63430008070033";
const isSuperArgs = (xs) => xs.length > 1;
class BaalAndVaultSummoner__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.BaalAndVaultSummoner__factory = BaalAndVaultSummoner__factory;
BaalAndVaultSummoner__factory.bytecode = _bytecode;
BaalAndVaultSummoner__factory.abi = _abi;
