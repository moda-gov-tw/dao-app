import { jsxs, jsx, Fragment } from 'react/jsx-runtime';
import * as RadixAvatar from '@radix-ui/react-avatar';
import styled, { useTheme, keyframes, css, createGlobalStyle, ThemeProvider } from 'styled-components';
import React, { useState, forwardRef, useEffect, useCallback, createContext, useContext, useMemo, useReducer } from 'react';
import classNames from 'classnames';
import { RiCheckLine, RiAsterisk, RiCheckboxCircleLine, RiErrorWarningLine, RiExternalLinkLine, RiArrowDropDownLine, RiCheckboxCircleFill, RiErrorWarningFill, RiCloseCircleFill, RiCloseFill, RiFileCopyLine, RiToolsLine, RiDiscordFill, RiRadioButtonFill } from 'react-icons/ri/index.js';
import * as AccessibleIcon from '@radix-ui/react-accessible-icon';
import * as CheckboxPrimitive from '@radix-ui/react-checkbox';
import * as TooltipPrimitive from '@radix-ui/react-tooltip';
import * as RadixDivider from '@radix-ui/react-separator';
import { slateDark, amber, amberA, amberDark, amberDarkA, indigo, indigoA, indigoDark, indigoDarkA, slate, blue, blueDark, green, greenDark, orange, orangeDark, red, redDark, violetDark, pinkDark, yellowDark, violet, pink, yellow } from '@radix-ui/colors';
import * as SwitchPrimitive from '@radix-ui/react-switch';
import { generateExplorerLink } from '@daohaus/keychain-utils';
import { truncateAddress, handlePluralNoun, SHAMAN_PERMISSIONS, isNumberString, conversionFns, toSeconds } from '@daohaus/utils';
import { normalize as normalize$1 } from 'polished';
import * as ToastPrimitive from '@radix-ui/react-toast';
import { useFormContext, Controller } from 'react-hook-form';
import * as reactHookForm from 'react-hook-form';
export { reactHookForm as RHF };
import * as Collapsible from '@radix-ui/react-collapsible';
import * as DialogPrimitive from '@radix-ui/react-dialog';
import makeBlockie from 'ethereum-blockies-base64';
import * as Dropdown from '@radix-ui/react-dropdown-menu';
import * as RadixNavMenu from '@radix-ui/react-navigation-menu';
import * as RadioGroupPrimitive from '@radix-ui/react-radio-group';

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global$d =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || commonjsGlobal || Function('return this')();

var objectGetOwnPropertyDescriptor = {};

var fails$c = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

var fails$b = fails$c;

// Detect IE8's incomplete defineProperty implementation
var descriptors = !fails$b(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});

var fails$a = fails$c;

var functionBindNative = !fails$a(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});

var NATIVE_BIND$1 = functionBindNative;

var call$6 = Function.prototype.call;

var functionCall = NATIVE_BIND$1 ? call$6.bind(call$6) : function () {
  return call$6.apply(call$6, arguments);
};

var objectPropertyIsEnumerable = {};

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor$2 && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor$2(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;

var createPropertyDescriptor$3 = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var NATIVE_BIND = functionBindNative;

var FunctionPrototype$1 = Function.prototype;
var call$5 = FunctionPrototype$1.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype$1.bind.bind(call$5, call$5);

var functionUncurryThis = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
  return function () {
    return call$5.apply(fn, arguments);
  };
};

var uncurryThis$e = functionUncurryThis;

var toString$5 = uncurryThis$e({}.toString);
var stringSlice$3 = uncurryThis$e(''.slice);

var classofRaw$2 = function (it) {
  return stringSlice$3(toString$5(it), 8, -1);
};

var uncurryThis$d = functionUncurryThis;
var fails$9 = fails$c;
var classof$3 = classofRaw$2;

var $Object$4 = Object;
var split = uncurryThis$d(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var indexedObject = fails$9(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object$4('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof$3(it) == 'String' ? split(it, '') : $Object$4(it);
} : $Object$4;

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
var isNullOrUndefined$2 = function (it) {
  return it === null || it === undefined;
};

var isNullOrUndefined$1 = isNullOrUndefined$2;

var $TypeError$7 = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible$4 = function (it) {
  if (isNullOrUndefined$1(it)) throw $TypeError$7("Can't call method on " + it);
  return it;
};

// toObject with fallback for non-array-like ES3 strings
var IndexedObject$1 = indexedObject;
var requireObjectCoercible$3 = requireObjectCoercible$4;

var toIndexedObject$5 = function (it) {
  return IndexedObject$1(requireObjectCoercible$3(it));
};

var documentAll$2 = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
var IS_HTMLDDA = typeof documentAll$2 == 'undefined' && documentAll$2 !== undefined;

var documentAll_1 = {
  all: documentAll$2,
  IS_HTMLDDA: IS_HTMLDDA
};

var $documentAll$1 = documentAll_1;

var documentAll$1 = $documentAll$1.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
var isCallable$g = $documentAll$1.IS_HTMLDDA ? function (argument) {
  return typeof argument == 'function' || argument === documentAll$1;
} : function (argument) {
  return typeof argument == 'function';
};

var isCallable$f = isCallable$g;
var $documentAll = documentAll_1;

var documentAll = $documentAll.all;

var isObject$7 = $documentAll.IS_HTMLDDA ? function (it) {
  return typeof it == 'object' ? it !== null : isCallable$f(it) || it === documentAll;
} : function (it) {
  return typeof it == 'object' ? it !== null : isCallable$f(it);
};

var global$c = global$d;
var isCallable$e = isCallable$g;

var aFunction = function (argument) {
  return isCallable$e(argument) ? argument : undefined;
};

var getBuiltIn$3 = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global$c[namespace]) : global$c[namespace] && global$c[namespace][method];
};

var uncurryThis$c = functionUncurryThis;

var objectIsPrototypeOf = uncurryThis$c({}.isPrototypeOf);

var engineUserAgent = typeof navigator != 'undefined' && String(navigator.userAgent) || '';

var global$b = global$d;
var userAgent = engineUserAgent;

var process = global$b.process;
var Deno = global$b.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

var engineV8Version = version;

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = engineV8Version;
var fails$8 = fails$c;
var global$a = global$d;

var $String$5 = global$a.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$8(function () {
  var symbol = Symbol();
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
  // of course, fail.
  return !$String$5(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL$2 = symbolConstructorDetection;

var useSymbolAsUid = NATIVE_SYMBOL$2
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';

var getBuiltIn$2 = getBuiltIn$3;
var isCallable$d = isCallable$g;
var isPrototypeOf$1 = objectIsPrototypeOf;
var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;

var $Object$3 = Object;

var isSymbol$2 = USE_SYMBOL_AS_UID$1 ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn$2('Symbol');
  return isCallable$d($Symbol) && isPrototypeOf$1($Symbol.prototype, $Object$3(it));
};

var $String$4 = String;

var tryToString$1 = function (argument) {
  try {
    return $String$4(argument);
  } catch (error) {
    return 'Object';
  }
};

var isCallable$c = isCallable$g;
var tryToString = tryToString$1;

var $TypeError$6 = TypeError;

// `Assert: IsCallable(argument) is true`
var aCallable$2 = function (argument) {
  if (isCallable$c(argument)) return argument;
  throw $TypeError$6(tryToString(argument) + ' is not a function');
};

var aCallable$1 = aCallable$2;
var isNullOrUndefined = isNullOrUndefined$2;

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
var getMethod$1 = function (V, P) {
  var func = V[P];
  return isNullOrUndefined(func) ? undefined : aCallable$1(func);
};

var call$4 = functionCall;
var isCallable$b = isCallable$g;
var isObject$6 = isObject$7;

var $TypeError$5 = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
var ordinaryToPrimitive$1 = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable$b(fn = input.toString) && !isObject$6(val = call$4(fn, input))) return val;
  if (isCallable$b(fn = input.valueOf) && !isObject$6(val = call$4(fn, input))) return val;
  if (pref !== 'string' && isCallable$b(fn = input.toString) && !isObject$6(val = call$4(fn, input))) return val;
  throw $TypeError$5("Can't convert object to primitive value");
};

var shared$3 = {exports: {}};

var global$9 = global$d;

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$6 = Object.defineProperty;

var defineGlobalProperty$3 = function (key, value) {
  try {
    defineProperty$6(global$9, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global$9[key] = value;
  } return value;
};

var global$8 = global$d;
var defineGlobalProperty$2 = defineGlobalProperty$3;

var SHARED = '__core-js_shared__';
var store$3 = global$8[SHARED] || defineGlobalProperty$2(SHARED, {});

var sharedStore = store$3;

var store$2 = sharedStore;

(shared$3.exports = function (key, value) {
  return store$2[key] || (store$2[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.32.0',
  mode: 'global',
  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.32.0/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});

var requireObjectCoercible$2 = requireObjectCoercible$4;

var $Object$2 = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
var toObject$3 = function (argument) {
  return $Object$2(requireObjectCoercible$2(argument));
};

var uncurryThis$b = functionUncurryThis;
var toObject$2 = toObject$3;

var hasOwnProperty = uncurryThis$b({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject$2(it), key);
};

var uncurryThis$a = functionUncurryThis;

var id = 0;
var postfix = Math.random();
var toString$4 = uncurryThis$a(1.0.toString);

var uid$2 = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$4(++id + postfix, 36);
};

var global$7 = global$d;
var shared$2 = shared$3.exports;
var hasOwn$9 = hasOwnProperty_1;
var uid$1 = uid$2;
var NATIVE_SYMBOL$1 = symbolConstructorDetection;
var USE_SYMBOL_AS_UID = useSymbolAsUid;

var Symbol$1 = global$7.Symbol;
var WellKnownSymbolsStore = shared$2('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$1['for'] || Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid$1;

var wellKnownSymbol$a = function (name) {
  if (!hasOwn$9(WellKnownSymbolsStore, name)) {
    WellKnownSymbolsStore[name] = NATIVE_SYMBOL$1 && hasOwn$9(Symbol$1, name)
      ? Symbol$1[name]
      : createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};

var call$3 = functionCall;
var isObject$5 = isObject$7;
var isSymbol$1 = isSymbol$2;
var getMethod = getMethod$1;
var ordinaryToPrimitive = ordinaryToPrimitive$1;
var wellKnownSymbol$9 = wellKnownSymbol$a;

var $TypeError$4 = TypeError;
var TO_PRIMITIVE = wellKnownSymbol$9('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
var toPrimitive$1 = function (input, pref) {
  if (!isObject$5(input) || isSymbol$1(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call$3(exoticToPrim, input, pref);
    if (!isObject$5(result) || isSymbol$1(result)) return result;
    throw $TypeError$4("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};

var toPrimitive = toPrimitive$1;
var isSymbol = isSymbol$2;

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
var toPropertyKey$2 = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};

var global$6 = global$d;
var isObject$4 = isObject$7;

var document$1 = global$6.document;
// typeof document.createElement is 'object' in old IE
var EXISTS$1 = isObject$4(document$1) && isObject$4(document$1.createElement);

var documentCreateElement$2 = function (it) {
  return EXISTS$1 ? document$1.createElement(it) : {};
};

var DESCRIPTORS$a = descriptors;
var fails$7 = fails$c;
var createElement = documentCreateElement$2;

// Thanks to IE8 for its funny defineProperty
var ie8DomDefine = !DESCRIPTORS$a && !fails$7(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});

var DESCRIPTORS$9 = descriptors;
var call$2 = functionCall;
var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
var createPropertyDescriptor$2 = createPropertyDescriptor$3;
var toIndexedObject$4 = toIndexedObject$5;
var toPropertyKey$1 = toPropertyKey$2;
var hasOwn$8 = hasOwnProperty_1;
var IE8_DOM_DEFINE$1 = ie8DomDefine;

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
objectGetOwnPropertyDescriptor.f = DESCRIPTORS$9 ? $getOwnPropertyDescriptor$1 : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject$4(O);
  P = toPropertyKey$1(P);
  if (IE8_DOM_DEFINE$1) try {
    return $getOwnPropertyDescriptor$1(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn$8(O, P)) return createPropertyDescriptor$2(!call$2(propertyIsEnumerableModule$1.f, O, P), O[P]);
};

var objectDefineProperty = {};

var DESCRIPTORS$8 = descriptors;
var fails$6 = fails$c;

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
var v8PrototypeDefineBug = DESCRIPTORS$8 && fails$6(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype != 42;
});

var isObject$3 = isObject$7;

var $String$3 = String;
var $TypeError$3 = TypeError;

// `Assert: Type(argument) is Object`
var anObject$5 = function (argument) {
  if (isObject$3(argument)) return argument;
  throw $TypeError$3($String$3(argument) + ' is not an object');
};

var DESCRIPTORS$7 = descriptors;
var IE8_DOM_DEFINE = ie8DomDefine;
var V8_PROTOTYPE_DEFINE_BUG$1 = v8PrototypeDefineBug;
var anObject$4 = anObject$5;
var toPropertyKey = toPropertyKey$2;

var $TypeError$2 = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE$1 = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
objectDefineProperty.f = DESCRIPTORS$7 ? V8_PROTOTYPE_DEFINE_BUG$1 ? function defineProperty(O, P, Attributes) {
  anObject$4(O);
  P = toPropertyKey(P);
  anObject$4(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject$4(O);
  P = toPropertyKey(P);
  anObject$4(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw $TypeError$2('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var DESCRIPTORS$6 = descriptors;
var definePropertyModule$3 = objectDefineProperty;
var createPropertyDescriptor$1 = createPropertyDescriptor$3;

var createNonEnumerableProperty$4 = DESCRIPTORS$6 ? function (object, key, value) {
  return definePropertyModule$3.f(object, key, createPropertyDescriptor$1(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var makeBuiltIn$3 = {exports: {}};

var DESCRIPTORS$5 = descriptors;
var hasOwn$7 = hasOwnProperty_1;

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS$5 && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn$7(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS$5 || (DESCRIPTORS$5 && getDescriptor(FunctionPrototype, 'name').configurable));

var functionName = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};

var uncurryThis$9 = functionUncurryThis;
var isCallable$a = isCallable$g;
var store$1 = sharedStore;

var functionToString = uncurryThis$9(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable$a(store$1.inspectSource)) {
  store$1.inspectSource = function (it) {
    return functionToString(it);
  };
}

var inspectSource$1 = store$1.inspectSource;

var global$5 = global$d;
var isCallable$9 = isCallable$g;

var WeakMap$1 = global$5.WeakMap;

var weakMapBasicDetection = isCallable$9(WeakMap$1) && /native code/.test(String(WeakMap$1));

var shared$1 = shared$3.exports;
var uid = uid$2;

var keys = shared$1('keys');

var sharedKey$3 = function (key) {
  return keys[key] || (keys[key] = uid(key));
};

var hiddenKeys$4 = {};

var NATIVE_WEAK_MAP = weakMapBasicDetection;
var global$4 = global$d;
var isObject$2 = isObject$7;
var createNonEnumerableProperty$3 = createNonEnumerableProperty$4;
var hasOwn$6 = hasOwnProperty_1;
var shared = sharedStore;
var sharedKey$2 = sharedKey$3;
var hiddenKeys$3 = hiddenKeys$4;

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError$1 = global$4.TypeError;
var WeakMap = global$4.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject$2(it) || (state = get(it)).type !== TYPE) {
      throw TypeError$1('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set = function (it, metadata) {
    if (store.has(it)) throw TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store.get(it) || {};
  };
  has = function (it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey$2('state');
  hiddenKeys$3[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn$6(it, STATE)) throw TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty$3(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn$6(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn$6(it, STATE);
  };
}

var internalState = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};

var uncurryThis$8 = functionUncurryThis;
var fails$5 = fails$c;
var isCallable$8 = isCallable$g;
var hasOwn$5 = hasOwnProperty_1;
var DESCRIPTORS$4 = descriptors;
var CONFIGURABLE_FUNCTION_NAME$1 = functionName.CONFIGURABLE;
var inspectSource = inspectSource$1;
var InternalStateModule$1 = internalState;

var enforceInternalState = InternalStateModule$1.enforce;
var getInternalState$1 = InternalStateModule$1.get;
var $String$2 = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$5 = Object.defineProperty;
var stringSlice$2 = uncurryThis$8(''.slice);
var replace$2 = uncurryThis$8(''.replace);
var join = uncurryThis$8([].join);

var CONFIGURABLE_LENGTH = DESCRIPTORS$4 && !fails$5(function () {
  return defineProperty$5(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn$2 = makeBuiltIn$3.exports = function (value, name, options) {
  if (stringSlice$2($String$2(name), 0, 7) === 'Symbol(') {
    name = '[' + replace$2($String$2(name), /^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn$5(value, 'name') || (CONFIGURABLE_FUNCTION_NAME$1 && value.name !== name)) {
    if (DESCRIPTORS$4) defineProperty$5(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn$5(options, 'arity') && value.length !== options.arity) {
    defineProperty$5(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn$5(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS$4) defineProperty$5(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwn$5(state, 'source')) {
    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn$2(function toString() {
  return isCallable$8(this) && getInternalState$1(this).source || inspectSource(this);
}, 'toString');

var isCallable$7 = isCallable$g;
var definePropertyModule$2 = objectDefineProperty;
var makeBuiltIn$1 = makeBuiltIn$3.exports;
var defineGlobalProperty$1 = defineGlobalProperty$3;

var defineBuiltIn$3 = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable$7(value)) makeBuiltIn$1(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty$1(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule$2.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};

var objectGetOwnPropertyNames = {};

var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
var mathTrunc = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor : ceil)(n);
};

var trunc = mathTrunc;

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
var toIntegerOrInfinity$2 = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};

var toIntegerOrInfinity$1 = toIntegerOrInfinity$2;

var max = Math.max;
var min$2 = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
var toAbsoluteIndex$1 = function (index, length) {
  var integer = toIntegerOrInfinity$1(index);
  return integer < 0 ? max(integer + length, 0) : min$2(integer, length);
};

var toIntegerOrInfinity = toIntegerOrInfinity$2;

var min$1 = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
var toLength$2 = function (argument) {
  return argument > 0 ? min$1(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

var toLength$1 = toLength$2;

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
var lengthOfArrayLike$1 = function (obj) {
  return toLength$1(obj.length);
};

var toIndexedObject$3 = toIndexedObject$5;
var toAbsoluteIndex = toAbsoluteIndex$1;
var lengthOfArrayLike = lengthOfArrayLike$1;

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod$1 = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject$3($this);
    var length = lengthOfArrayLike(O);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var arrayIncludes = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod$1(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod$1(false)
};

var uncurryThis$7 = functionUncurryThis;
var hasOwn$4 = hasOwnProperty_1;
var toIndexedObject$2 = toIndexedObject$5;
var indexOf = arrayIncludes.indexOf;
var hiddenKeys$2 = hiddenKeys$4;

var push = uncurryThis$7([].push);

var objectKeysInternal = function (object, names) {
  var O = toIndexedObject$2(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn$4(hiddenKeys$2, key) && hasOwn$4(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn$4(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};

// IE8- don't enum bug keys
var enumBugKeys$3 = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];

var internalObjectKeys$1 = objectKeysInternal;
var enumBugKeys$2 = enumBugKeys$3;

var hiddenKeys$1 = enumBugKeys$2.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys$1(O, hiddenKeys$1);
};

var objectGetOwnPropertySymbols = {};

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;

var getBuiltIn$1 = getBuiltIn$3;
var uncurryThis$6 = functionUncurryThis;
var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
var anObject$3 = anObject$5;

var concat$1 = uncurryThis$6([].concat);

// all object keys, includes non-enumerable and symbols
var ownKeys$1 = getBuiltIn$1('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject$3(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;
  return getOwnPropertySymbols ? concat$1(keys, getOwnPropertySymbols(it)) : keys;
};

var hasOwn$3 = hasOwnProperty_1;
var ownKeys = ownKeys$1;
var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
var definePropertyModule$1 = objectDefineProperty;

var copyConstructorProperties$2 = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule$1.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn$3(target, key) && !(exceptions && hasOwn$3(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

var fails$4 = fails$c;
var isCallable$6 = isCallable$g;

var replacement = /#|\.prototype\./;

var isForced$1 = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : isCallable$6(detection) ? fails$4(detection)
    : !!detection;
};

var normalize = isForced$1.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced$1.data = {};
var NATIVE = isForced$1.NATIVE = 'N';
var POLYFILL = isForced$1.POLYFILL = 'P';

var isForced_1 = isForced$1;

var global$3 = global$d;
var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
var createNonEnumerableProperty$2 = createNonEnumerableProperty$4;
var defineBuiltIn$2 = defineBuiltIn$3;
var defineGlobalProperty = defineGlobalProperty$3;
var copyConstructorProperties$1 = copyConstructorProperties$2;
var isForced = isForced_1;

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
var _export = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global$3;
  } else if (STATIC) {
    target = global$3[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = (global$3[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor$1(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties$1(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty$2(sourceProperty, 'sham', true);
    }
    defineBuiltIn$2(target, key, sourceProperty, options);
  }
};

var internalObjectKeys = objectKeysInternal;
var enumBugKeys$1 = enumBugKeys$3;

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
var objectKeys$2 = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys$1);
};

var DESCRIPTORS$3 = descriptors;
var uncurryThis$5 = functionUncurryThis;
var call$1 = functionCall;
var fails$3 = fails$c;
var objectKeys$1 = objectKeys$2;
var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
var propertyIsEnumerableModule = objectPropertyIsEnumerable;
var toObject$1 = toObject$3;
var IndexedObject = indexedObject;

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty$4 = Object.defineProperty;
var concat = uncurryThis$5([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
var objectAssign = !$assign || fails$3(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS$3 && $assign({ b: 1 }, $assign(defineProperty$4({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty$4(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] != 7 || objectKeys$1($assign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject$1(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat(objectKeys$1(S), getOwnPropertySymbols(S)) : objectKeys$1(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS$3 || call$1(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;

var $$4 = _export;
var assign = objectAssign;

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$$4({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign }, {
  assign: assign
});

const sizes = {
  sm: '2.5rem',
  md: '3.5rem',
  lg: '4.5rem',
  xl: '5.5rem'
};
const handleSizing = size => sizes[size] ? sizes[size] : size;
const AvatarBase = /*#__PURE__*/styled(RadixAvatar.Root).withConfig({
  displayName: "Avatarstyles__AvatarBase",
  componentId: "qyzyi8-0"
})(["display:inline-flex;align-items:center;justify-content:center;vertical-align:middle;overflow:hidden;user-select:none;border-radius:100%;width:", ";height:", ";"], ({
  size
}) => handleSizing(size), ({
  size
}) => handleSizing(size));
const AvatarFallback = /*#__PURE__*/styled(RadixAvatar.Fallback).withConfig({
  displayName: "Avatarstyles__AvatarFallback",
  componentId: "qyzyi8-1"
})(["width:100%;height:100%;display:flex;align-items:center;justify-content:center;background:", ";"], ({
  theme
}) => theme.avatar.bg);
const AvatarImage = /*#__PURE__*/styled(RadixAvatar.Image).withConfig({
  displayName: "Avatarstyles__AvatarImage",
  componentId: "qyzyi8-2"
})(["width:100%;height:100%;object-fit:cover;border-radius:inherit;"]);

const Avatar = ({
  src,
  size: _size = 'sm',
  alt: _alt = 'Picture of an Avatar',
  delayMs: _delayMs = 500,
  fallback: _fallback = 'X',
  className
}) => {
  return jsxs(AvatarBase, Object.assign({
    size: _size,
    className: className
  }, {
    children: [jsx(AvatarImage, {
      src: src,
      alt: _alt
    }), jsx(AvatarFallback, Object.assign({
      delayMs: src ? _delayMs : 0
    }, {
      children: _fallback
    }))]
  }));
};

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

const StyledLoader = /*#__PURE__*/styled.svg.withConfig({
  displayName: "Loadingstyles__StyledLoader",
  componentId: "cgbaup-0"
})(["animation:spin 1s linear infinite;margin:", ";padding:", ";@keyframes spin{to{transform:rotate(360deg);}}"], ({
  $margin
}) => $margin, ({
  $padding
}) => $padding);
const StyledInvisibleSpan$1 = /*#__PURE__*/styled.span.withConfig({
  displayName: "Loadingstyles__StyledInvisibleSpan",
  componentId: "cgbaup-1"
})(["position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0;"]);

const Loading = _a => {
  var {
      color = 'primary',
      size = 50,
      margin = '0',
      padding = '0'
    } = _a,
    rest = __rest(_a, ["color", "size", "margin", "padding"]);
  const theme = useTheme();
  return jsxs(Fragment, {
    children: [jsxs(StyledLoader, Object.assign({
      className: "loading",
      viewBox: "0 0 100 101",
      xmlns: "http://www.w3.org/2000/svg",
      height: size,
      width: size,
      "$padding": padding,
      "$margin": margin
    }, rest, {
      children: [jsx("path", {
        d: "M100 50.59c0 27.615-22.386 50.001-50 50.001s-50-22.386-50-50 22.386-50 50-50 50 22.386 50 50zm-90.919 0c0 22.6 18.32 40.92 40.919 40.92 22.599 0 40.919-18.32 40.919-40.92 0-22.598-18.32-40.918-40.919-40.918-22.599 0-40.919 18.32-40.919 40.919z",
        fill: theme.loading[color].color
      }), jsx("path", {
        d: "M93.968 39.04c2.425-.636 3.894-3.128 3.04-5.486A50 50 0 0041.735 1.279c-2.474.414-3.922 2.919-3.285 5.344.637 2.426 3.12 3.849 5.6 3.484a40.916 40.916 0 0144.131 25.769c.902 2.34 3.361 3.802 5.787 3.165z",
        fill: theme.loading[color].bg
      })]
    })), jsx(StyledInvisibleSpan$1, {
      children: "Loading..."
    })]
  });
};

const StyledButton = /*#__PURE__*/styled.button.withConfig({
  displayName: "Buttonstyles__StyledButton",
  componentId: "j15zqa-0"
})(["align-items:center;border-radius:", ";cursor:pointer;display:flex;font-size:", ";font-weight:", ";height:4.8rem;justify-content:", ";letter-spacing:1.8px;outline:none;padding:1.2rem;text-decoration:none;transition:0.2s all;width:fit-content;white-space:nowrap;svg{width:2.2rem;height:2.2rem;&.icon-left{margin-right:1rem;}&.icon-right{margin-left:0.5rem;}}&.solid{background-color:", ";border:0.1rem solid ", ";color:", ";&:hover{background-color:", ";border:0.1rem solid ", ";}&:focus{background-color:", ";border:0.1rem solid ", ";}&:disabled{background-color:", ";border:0.1rem solid ", ";cursor:not-allowed;}}&.outline{background-color:transparent;border:0.1rem solid ", ";color:", ";&:hover{border:0.1rem solid ", ";color:", ";}&:focus{border:0.1rem solid ", ";color:", ";}&:disabled{border:0.1rem solid ", ";color:", ";cursor:not-allowed;}}&.ghost{background-color:", ";border:1px solid ", ";color:", ";&:hover{background-color:", ";}&:focus{border:1px solid ", ";}&:disabled{color:", ";cursor:not-allowed;}}&.link{height:auto;font-family:", ";font-weight:", ";font-size:", ";text-decoration:none;letter-spacing:1.5px;padding:0;background-color:transparent;border:none;color:", ";&:hover{color:", ";text-decoration:underline;}&:focus{color:", ";}&:disabled{color:", ";cursor:not-allowed;}}&.lg{font-size:", ";height:6rem;min-width:10.7rem;padding:1.5rem;svg{height:3.2rem;width:3.2rem;}}&.sm{font-size:", ";height:3.6rem;min-width:6.6rem;padding:0.9rem;svg{height:1.8rem;width:1.8rem;}}&.loading{.icon-left,.icon-right{visibility:hidden;}}&.full-width{min-width:100%;}"], ({
  theme
}) => theme.button.radius, ({
  theme
}) => theme.font.size.md, ({
  theme
}) => theme.font.weight.bold, ({
  $justify
}) => $justify, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.bg, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.border, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.text, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.bgHover, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.borderHover, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.bgFocus, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.borderFocus, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.bgDisabled, ({
  theme,
  $color
}) => theme.button[`${$color}`].solid.borderDisabled, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.border, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.text, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.hover, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.hover, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.focus, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.focus, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.disabled, ({
  theme,
  $color
}) => theme.button[`${$color}`].outline.disabled, ({
  theme
}) => theme.transparent, ({
  theme
}) => theme.transparent, ({
  theme,
  $color
}) => theme.button[`${$color}`].ghost.text, ({
  theme,
  $color
}) => theme.button[`${$color}`].ghost.bgHover, ({
  theme,
  $color
}) => theme.button[`${$color}`].ghost.borderFocus, ({
  theme,
  $color
}) => theme.button[`${$color}`].ghost.disabled, ({
  theme
}) => theme.font.family.body, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.size.md, ({
  theme,
  $color
}) => theme.button[`${$color}`].link.text, ({
  theme,
  $color
}) => theme.button[`${$color}`].link.hover, ({
  theme,
  $color
}) => theme.button[`${$color}`].link.focus, ({
  theme,
  $color
}) => theme.button[`${$color}`].link.disabled, ({
  theme
}) => theme.font.size.lg, ({
  theme
}) => theme.font.size.xs);
const LoadingAbsolute = /*#__PURE__*/styled(Loading).withConfig({
  displayName: "Buttonstyles__LoadingAbsolute",
  componentId: "j15zqa-1"
})(["position:fixed;"]);
const StyledInvisibleSpan = /*#__PURE__*/styled.span.withConfig({
  displayName: "Buttonstyles__StyledInvisibleSpan",
  componentId: "j15zqa-2"
})(["visibility:hidden;"]);

const Button = /*#__PURE__*/React.forwardRef((_a, ref) => {
  var {
      type = 'button',
      IconLeft,
      IconRight,
      color = 'primary',
      variant = 'solid',
      size = 'md',
      isLoading = false,
      loadingText,
      fullWidth,
      justify = 'center',
      className,
      children,
      href
    } = _a,
    rest = __rest(_a, ["type", "IconLeft", "IconRight", "color", "variant", "size", "isLoading", "loadingText", "fullWidth", "justify", "className", "children", "href"]);
  const classes = classNames({
    [variant]: variant,
    [size]: size,
    'full-width': fullWidth
  });
  return jsxs(StyledButton, Object.assign({}, rest, {
    "$color": color,
    "$justify": justify,
    className: `${classes} ${className}`,
    ref: ref,
    type: !href ? type : undefined,
    as: href ? 'a' : 'button',
    href: href ? href : undefined,
    target: href ? '_blank' : undefined,
    rel: href ? 'noopener noreferrer' : undefined
  }, {
    children: [IconLeft && jsx(IconLeft, {
      className: `icon-left`
    }), isLoading && jsx(LoadingAbsolute, {
      color: color
    }), isLoading ? jsx(StyledInvisibleSpan, {
      children: children
    }) : children, IconRight && jsx(IconRight, {
      className: `icon-right`
    })]
  }));
});

const IconButton = /*#__PURE__*/React.forwardRef((_a, ref) => {
  var {
      type = 'button',
      isLoading = false,
      Icon,
      color = 'primary',
      variant = 'solid',
      size = 'md',
      className
    } = _a,
    rest = __rest(_a, ["type", "isLoading", "Icon", "color", "variant", "size", "className"]);
  const classes = classNames({
    [variant]: variant,
    [size]: size
  });
  return jsxs(StyledButton, Object.assign({}, rest, {
    "$justify": "center",
    "$color": color,
    className: `${classes} ${className}`,
    ref: ref,
    type: type
  }, {
    children: [isLoading && jsx(LoadingAbsolute, {}), isLoading && Icon ? jsx(StyledInvisibleSpan, {
      children: jsx(Icon, {})
    }) : jsx(Icon, {})]
  }));
});

const StyledLabel$1 = /*#__PURE__*/styled.label.withConfig({
  displayName: "Labelstyles__StyledLabel",
  componentId: "sc-1b2z2vj-0"
})(["font-family:", ";font-weight:", ";font-size:", ";color:", ";"], ({
  theme
}) => theme.field.labelFont, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.size.md, props => props.color);

const Label$2 = ({
  children: _children = 'label',
  id,
  className
}) => {
  return jsx(StyledLabel$1, Object.assign({
    htmlFor: id,
    className: className
  }, {
    children: _children
  }));
};

const Icon$1 = ({
  label: _label = '',
  children
}) => {
  return jsx(AccessibleIcon.Root, Object.assign({
    label: _label
  }, {
    children: children
  }));
};

const Container$3 = /*#__PURE__*/styled.div.withConfig({
  displayName: "Checkboxstyles__Container",
  componentId: "sc-17gwq50-0"
})(["align-items:center;display:flex;margin-bottom:12px;"]);
const StyledCheckbox = /*#__PURE__*/styled(CheckboxPrimitive.Root).withConfig({
  displayName: "Checkboxstyles__StyledCheckbox",
  componentId: "sc-17gwq50-1"
})(["align-items:center;background-color:", ";border:2px solid ", ";border-radius:", ";cursor:pointer;display:flex;height:18px;justify-content:center;width:18px;&:hover{background-color:", ";border:2px solid ", ";}:focus{background-color:", ";border:2px solid ", ";outline:none;}:disabled{background-color:", ";border:2px solid ", ";cursor:not-allowed;}&[data-state='checked']{background-color:", ";border:2px solid ", ";&:hover{background-color:", ";border:2px solid ", ";}:focus{background-color:", ";border:2px solid ", ";outline:none;}:disabled{background-color:", ";border:2px solid ", ";cursor:not-allowed;}}"], ({
  theme
}) => theme.checkbox.bg, ({
  theme
}) => theme.checkbox.border, ({
  theme
}) => theme.checkbox.radius, ({
  theme
}) => theme.checkbox.hover.bg, ({
  theme
}) => theme.checkbox.hover.border, ({
  theme
}) => theme.checkbox.focus.bg, ({
  theme
}) => theme.checkbox.focus.border, ({
  theme
}) => theme.checkbox.disabled.bg, ({
  theme
}) => theme.checkbox.disabled.border, ({
  theme
}) => theme.checkbox.active.bg, ({
  theme
}) => theme.checkbox.active.border, ({
  theme
}) => theme.checkbox.active.hover.bg, ({
  theme
}) => theme.checkbox.active.hover.border, ({
  theme
}) => theme.checkbox.active.focus.bg, ({
  theme
}) => theme.checkbox.active.focus.border, ({
  theme
}) => theme.checkbox.active.disabled.bg, ({
  theme
}) => theme.checkbox.active.disabled.border);
const StyledIndicator = /*#__PURE__*/styled(CheckboxPrimitive.Indicator).withConfig({
  displayName: "Checkboxstyles__StyledIndicator",
  componentId: "sc-17gwq50-2"
})(["color:", ";font-size:", ";padding-top:3px;:disabled{color:", ";}"], ({
  theme
}) => theme.checkbox.indicator.color, ({
  theme
}) => theme.font.size.lg, ({
  theme
}) => theme.checkbox.indicator.disabled.color);
const LabelContainer$3 = /*#__PURE__*/styled.label.withConfig({
  displayName: "Checkboxstyles__LabelContainer",
  componentId: "sc-17gwq50-3"
})(["align-items:center;display:flex;margin-left:1.2rem;label{margin-right:0.1rem;}svg{transform:translateY(0.1rem);}"]);
const RequiredAsterisk$1 = /*#__PURE__*/styled.span.withConfig({
  displayName: "Checkboxstyles__RequiredAsterisk",
  componentId: "sc-17gwq50-4"
})(["color:", ";font-weight:", ";margin-right:8px;transform:translateY(-0.25rem);"], ({
  theme
}) => theme.warning.step9, ({
  theme
}) => theme.font.weight.bold);

const Checkbox = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    id,
    title,
    disabled,
    required
  } = props;
  const classes = classNames({
    disabled
  });
  return jsxs(Container$3, {
    children: [jsx(StyledCheckbox, Object.assign({}, props, {
      ref: ref
    }, {
      children: jsx(StyledIndicator, Object.assign({
        className: classes
      }, {
        children: jsx(RiCheckLine, {})
      }))
    })), jsxs(LabelContainer$3, {
      children: [required && jsx(RequiredAsterisk$1, {
        children: jsx(Icon$1, Object.assign({
          label: "Required"
        }, {
          children: jsx(RiAsterisk, {})
        }))
      }), jsx(Label$2, Object.assign({
        id: id
      }, {
        children: title ? title : 'No Title Found'
      }))]
    })]
  });
});

const BaseInput = /*#__PURE__*/styled.input.withConfig({
  displayName: "Inputstyles__BaseInput",
  componentId: "sc-18gbb3o-0"
})(["background-color:", ";border:1px solid ", ";border-radius:", ";color:", ";font-size:", ";font-weight:", ";font-family:", ";height:4.8rem;line-height:150%;letter-spacing:1.5px;max-width:", ";padding:1.2rem 1.8rem;transition:", ";width:100%;::placeholder{color:", ";}&:hover{background-color:", ";border:1px solid ", ";}:focus{background-color:", ";border:1px solid ", ";outline:none;}:disabled{background-color:", ";border:1px solid ", ";color:", ";cursor:not-allowed;font-style:italic;::placeholder{color:", ";}}&.number{font-family:", ";font-weight:", ";letter-spacing:1px;}&.long{max-width:", ";}&.full{max-width:", ";}&.input-select{max-width:", ";}&.success{border:1px solid ", ";}&.warning{border:1px solid ", ";}&.error{border:1px solid ", ";}"], ({
  theme
}) => theme.input.bg, ({
  theme
}) => theme.input.border, ({
  theme
}) => theme.field.radius, ({
  theme
}) => theme.input.color, ({
  theme
}) => theme.field.fontSize, ({
  theme
}) => theme.field.fontWeight, ({
  theme
}) => theme.field.inputFont, ({
  theme
}) => theme.field.size.md, ({
  theme
}) => theme.field.transition, ({
  theme
}) => theme.input.placeholder, ({
  theme
}) => theme.input.hover.bg, ({
  theme
}) => theme.input.hover.border, ({
  theme
}) => theme.input.focus.bg, ({
  theme
}) => theme.input.focus.border, ({
  theme
}) => theme.input.disabled.bg, ({
  theme
}) => theme.input.disabled.border, ({
  theme
}) => theme.input.disabled.color, ({
  theme
}) => theme.input.disabled.placeholder, ({
  theme
}) => theme.font.family.data, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.full, ({
  theme
}) => theme.field.size.full, ({
  theme
}) => theme.input.success.border, ({
  theme
}) => theme.input.warning.border, ({
  theme
}) => theme.input.error.border);
const WithIcon$2 = /*#__PURE__*/styled.div.withConfig({
  displayName: "Inputstyles__WithIcon",
  componentId: "sc-18gbb3o-1"
})(["display:inline-block;position:relative;max-width:", ";width:100%;svg{color:", ";position:absolute;right:2rem;top:1.4rem;}input{padding:1.2rem 4.2rem 1.2rem 1.8rem;}&.long{max-width:", ";}&.full{max-width:", ";}"], ({
  theme
}) => theme.field.size.md, ({
  theme
}) => theme.input.icon.color, ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.full);

const Input = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    id,
    long,
    full,
    icon,
    success,
    warning,
    error,
    number,
    address,
    className,
    placeholder,
    defaultValue,
    value,
    disabled,
    hidden,
    onChange
  } = props;
  const inputClasses = classNames({
    long: long || address,
    full,
    success,
    warning,
    error,
    number: number || address
  });
  if (icon) {
    const wrapperClasses = classNames({
      long: long || address,
      full
    });
    const Icon = icon;
    return jsxs(WithIcon$2, Object.assign({
      className: wrapperClasses
    }, {
      children: [jsx(BaseInput, {
        name: id,
        className: `${inputClasses} ${className}`,
        ref: ref,
        placeholder: placeholder,
        defaultValue: defaultValue,
        value: value,
        disabled: disabled,
        hidden: hidden,
        onChange: onChange
      }), jsx(Icon, {
        size: "2rem"
      })]
    }));
  }
  return jsx(BaseInput, {
    name: id,
    className: `${inputClasses} ${className}`,
    ref: ref,
    placeholder: placeholder,
    defaultValue: defaultValue,
    value: value,
    disabled: disabled,
    hidden: hidden,
    onChange: onChange
  }, id);
});

const WithIcon$1 = /*#__PURE__*/styled.div.withConfig({
  displayName: "HelperTextstyles__WithIcon",
  componentId: "fhxkpv-0"
})(["display:flex;align-items:flex-start;svg{color:", ";}p{margin-left:0.65rem;color:", ";}"], props => props.color, props => props.color);

////////////////////PARAGRAPH TEXT////////////////////
const Par = /*#__PURE__*/styled.p.withConfig({
  displayName: "Typography__Par",
  componentId: "gwgnan-0"
})(["font-family:", ";font-weight:", ";color:", ";"], ({
  theme
}) => theme.font.family.body, ({
  theme
}) => theme.font.weight.reg, ({
  theme,
  color
}) => color || theme.rootFontColor);
const Data = /*#__PURE__*/styled.p.withConfig({
  displayName: "Typography__Data",
  componentId: "gwgnan-1"
})(["font-family:", ";font-weight:", ";color:", ";letter-spacing:1px;"], ({
  theme
}) => theme.font.family.data, ({
  theme
}) => theme.font.weight.reg, props => props.color);
const ParXs = /*#__PURE__*/styled(Par).withConfig({
  displayName: "Typography__ParXs",
  componentId: "gwgnan-2"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.xs);
const ParSm = /*#__PURE__*/styled(Par).withConfig({
  displayName: "Typography__ParSm",
  componentId: "gwgnan-3"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.sm);
const ParMd = /*#__PURE__*/styled(Par).withConfig({
  displayName: "Typography__ParMd",
  componentId: "gwgnan-4"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.md);
const ParLg = /*#__PURE__*/styled(Par).withConfig({
  displayName: "Typography__ParLg",
  componentId: "gwgnan-5"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.lg);
const ParXl = /*#__PURE__*/styled(Par).withConfig({
  displayName: "Typography__ParXl",
  componentId: "gwgnan-6"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.xl);
////////////////////HEADER TEXT////////////////////
const H6 = /*#__PURE__*/styled.h6.withConfig({
  displayName: "Typography__H6",
  componentId: "gwgnan-7"
})(["font-size:", ";font-weight:", ";font-family:", ";color:", ";"], ({
  theme
}) => theme.font.size.md, ({
  theme
}) => theme.font.weight.black, ({
  theme
}) => theme.font.family.header, props => props.color);
const H5 = /*#__PURE__*/styled.h5.withConfig({
  displayName: "Typography__H5",
  componentId: "gwgnan-8"
})(["font-size:", ";font-weight:", ";font-family:", ";color:", ";"], ({
  theme
}) => theme.font.size.lg, ({
  theme
}) => theme.font.weight.bold, ({
  theme
}) => theme.font.family.header, props => props.color);
const H4 = /*#__PURE__*/styled.h4.withConfig({
  displayName: "Typography__H4",
  componentId: "gwgnan-9"
})(["font-size:", ";font-weight:", ";font-family:", ";color:", ";"], ({
  theme
}) => theme.font.size.xl, ({
  theme
}) => theme.font.weight.bold, ({
  theme
}) => theme.font.family.header, props => props.color);
const H3 = /*#__PURE__*/styled.h3.withConfig({
  displayName: "Typography__H3",
  componentId: "gwgnan-10"
})(["font-size:", ";font-weight:", ";font-family:", ";color:", ";"], ({
  theme
}) => theme.font.size.xxl, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.family.header, props => props.color);
const H2 = /*#__PURE__*/styled.h2.withConfig({
  displayName: "Typography__H2",
  componentId: "gwgnan-11"
})(["font-size:", ";font-weight:", ";font-family:", ";color:", ";"], ({
  theme
}) => theme.font.size.xxxl, ({
  theme
}) => theme.font.weight.light, ({
  theme
}) => theme.font.family.header, props => props.color);
const H1 = /*#__PURE__*/styled.h1.withConfig({
  displayName: "Typography__H1",
  componentId: "gwgnan-12"
})(["font-size:", ";font-weight:", ";font-family:", ";color:", ";"], ({
  theme
}) => theme.font.size.xxxxl, ({
  theme
}) => theme.font.weight.light, ({
  theme
}) => theme.font.family.header, props => props.color);
////////////////////DATA TEXT////////////////////
const DataXs = /*#__PURE__*/styled(Data).withConfig({
  displayName: "Typography__DataXs",
  componentId: "gwgnan-13"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.xs);
const DataSm = /*#__PURE__*/styled(Data).withConfig({
  displayName: "Typography__DataSm",
  componentId: "gwgnan-14"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.sm);
const DataMd = /*#__PURE__*/styled(Data).withConfig({
  displayName: "Typography__DataMd",
  componentId: "gwgnan-15"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.md);
const DataLg = /*#__PURE__*/styled(Data).withConfig({
  displayName: "Typography__DataLg",
  componentId: "gwgnan-16"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.lg);
const DataXl = /*#__PURE__*/styled(Data).withConfig({
  displayName: "Typography__DataXl",
  componentId: "gwgnan-17"
})(["font-size:", ";"], ({
  theme
}) => theme.font.size.xl);
///////////////////////FONT-MODS/////////////////////
const ExtraLight = /*#__PURE__*/styled.span.withConfig({
  displayName: "Typography__ExtraLight",
  componentId: "gwgnan-18"
})(["font-weight:", ";"], ({
  theme
}) => theme.font.weight.extraLight);
const Light = /*#__PURE__*/styled.span.withConfig({
  displayName: "Typography__Light",
  componentId: "gwgnan-19"
})(["font-weight:", ";"], ({
  theme
}) => theme.font.weight.light);
const Bold = /*#__PURE__*/styled.span.withConfig({
  displayName: "Typography__Bold",
  componentId: "gwgnan-20"
})(["font-weight:", ";color:", ";"], ({
  theme
}) => theme.font.weight.bold, ({
  theme,
  color
}) => color || theme.rootFontColor);
const ExtraBold = /*#__PURE__*/styled.span.withConfig({
  displayName: "Typography__ExtraBold",
  componentId: "gwgnan-21"
})(["font-weight:", ";"], ({
  theme
}) => theme.font.weight.black);
const Italic = /*#__PURE__*/styled.span.withConfig({
  displayName: "Typography__Italic",
  componentId: "gwgnan-22"
})(["font-style:italic;"]);
const Underline = /*#__PURE__*/styled.span.withConfig({
  displayName: "Typography__Underline",
  componentId: "gwgnan-23"
})(["text-decoration:underline;"]);
const StrikeThrough = /*#__PURE__*/styled.span.withConfig({
  displayName: "Typography__StrikeThrough",
  componentId: "gwgnan-24"
})(["text-decoration:line-through;"]);
const TintSecondary = /*#__PURE__*/styled.span.withConfig({
  displayName: "Typography__TintSecondary",
  componentId: "gwgnan-25"
})(["color:", ";"], ({
  theme
}) => theme.secondary.step11);

const HelperText = ({
  color,
  icon,
  children
}) => {
  if (icon) {
    const Icon = icon;
    return jsxs(WithIcon$1, {
      children: [jsx(Icon, {
        size: "1.6rem",
        color: color
      }), jsx(ParXs, Object.assign({
        color: color
      }, {
        children: children
      }))]
    });
  }
  return jsx(ParXs, Object.assign({
    color: color
  }, {
    children: children
  }));
};
const SuccessText = ({
  children
}) => {
  /*  Using 'as Theme' here because useTheme only seems to return a
  'DefaultTheme' type, despite being initialized with a 'Theme' type.*/
  const theme = useTheme();
  return jsx(HelperText, Object.assign({
    color: theme.success.step9,
    icon: RiCheckboxCircleLine
  }, {
    children: children
  }));
};
const WarningText = ({
  children
}) => {
  const theme = useTheme();
  return jsx(HelperText, Object.assign({
    color: theme.warning.step9,
    icon: RiErrorWarningLine
  }, {
    children: children
  }));
};
const ErrorText = ({
  children
}) => {
  const theme = useTheme();
  return jsx(HelperText, Object.assign({
    color: theme.danger.step9,
    icon: RiErrorWarningLine
  }, {
    children: children
  }));
};

const BaseFileInput = /*#__PURE__*/styled(BaseInput).withConfig({
  displayName: "FileInputstyles__BaseFileInput",
  componentId: "sc-12m54vz-0"
})(["padding-bottom:4.3rem;"]);

const FileInput = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    id,
    success,
    warning,
    error,
    multiple,
    className
  } = props;
  const inputClasses = classNames({
    success,
    warning,
    error
  });
  return jsx(BaseFileInput, Object.assign({
    name: id,
    className: `${inputClasses} ${className}`,
    ref: ref,
    type: "file",
    multiple: multiple
  }, props), id);
});

const BaseTextArea = /*#__PURE__*/styled.textarea.withConfig({
  displayName: "TextAreastyles__BaseTextArea",
  componentId: "kmnx0c-0"
})(["background-color:", ";border:1px solid ", ";border-radius:", ";color:", ";font-size:", ";font-weight:", ";font-family:", ";height:", ";line-height:150%;letter-spacing:1.5px;max-width:", ";padding:1.2rem 1.8rem;resize:none;transition:", ";width:100%;::placeholder{color:", ";}&:hover{background-color:", ";border:1px solid ", ";}:focus{background-color:", ";border:1px solid ", ";outline:none;}:disabled{background-color:", ";border:1px solid ", ";cursor:not-allowed;font-style:italic;::placeholder{color:", ";}}&.full{max-width:", ";}&.success{border:1px solid ", ";}&.warning{border:1px solid ", ";}&.error{border:1px solid ", ";}"], ({
  theme
}) => theme.textarea.bg, ({
  theme
}) => theme.textarea.border, ({
  theme
}) => theme.field.radius, ({
  theme
}) => theme.textarea.color, ({
  theme
}) => theme.field.fontSize, ({
  theme
}) => theme.field.fontWeight, ({
  theme
}) => theme.field.inputFont, ({
  height
}) => height || '12rem', ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.transition, ({
  theme
}) => theme.textarea.placeholder, ({
  theme
}) => theme.textarea.hover.bg, ({
  theme
}) => theme.textarea.hover.border, ({
  theme
}) => theme.textarea.focus.bg, ({
  theme
}) => theme.textarea.focus.border, ({
  theme
}) => theme.textarea.disabled.bg, ({
  theme
}) => theme.textarea.disabled.border, ({
  theme
}) => theme.textarea.disabled.placeholder, ({
  theme
}) => theme.field.size.full, ({
  theme
}) => theme.textarea.success.border, ({
  theme
}) => theme.textarea.warning.border, ({
  theme
}) => theme.textarea.error.border);

const TextArea = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
      full,
      warning,
      error,
      success,
      className,
      height
    } = props,
    rest = __rest(props, ["full", "warning", "error", "success", "className", "height"]);
  const classes = classNames({
    full,
    success,
    warning,
    error
  });
  return jsx(BaseTextArea, Object.assign({}, rest, {
    className: `${classes} ${className}`,
    ref: ref,
    rows: 10,
    height: height
  }));
});

var objectDefineProperties = {};

var DESCRIPTORS$2 = descriptors;
var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
var definePropertyModule = objectDefineProperty;
var anObject$2 = anObject$5;
var toIndexedObject$1 = toIndexedObject$5;
var objectKeys = objectKeys$2;

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
objectDefineProperties.f = DESCRIPTORS$2 && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject$2(O);
  var props = toIndexedObject$1(Properties);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);
  return O;
};

var getBuiltIn = getBuiltIn$3;

var html$1 = getBuiltIn('document', 'documentElement');

/* global ActiveXObject -- old IE, WSH */
var anObject$1 = anObject$5;
var definePropertiesModule = objectDefineProperties;
var enumBugKeys = enumBugKeys$3;
var hiddenKeys = hiddenKeys$4;
var html = html$1;
var documentCreateElement$1 = documentCreateElement$2;
var sharedKey$1 = sharedKey$3;

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO$1 = sharedKey$1('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement$1('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO$1] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
var objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject$1(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO$1] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};

var wellKnownSymbol$8 = wellKnownSymbol$a;
var create$1 = objectCreate;
var defineProperty$3 = objectDefineProperty.f;

var UNSCOPABLES = wellKnownSymbol$8('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  defineProperty$3(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create$1(null)
  });
}

// add a key to Array.prototype[@@unscopables]
var addToUnscopables$1 = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};

var iterators = {};

var fails$2 = fails$c;

var correctPrototypeGetter = !fails$2(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});

var hasOwn$2 = hasOwnProperty_1;
var isCallable$5 = isCallable$g;
var toObject = toObject$3;
var sharedKey = sharedKey$3;
var CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;

var IE_PROTO = sharedKey('IE_PROTO');
var $Object$1 = Object;
var ObjectPrototype = $Object$1.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
var objectGetPrototypeOf = CORRECT_PROTOTYPE_GETTER ? $Object$1.getPrototypeOf : function (O) {
  var object = toObject(O);
  if (hasOwn$2(object, IE_PROTO)) return object[IE_PROTO];
  var constructor = object.constructor;
  if (isCallable$5(constructor) && object instanceof constructor) {
    return constructor.prototype;
  } return object instanceof $Object$1 ? ObjectPrototype : null;
};

var fails$1 = fails$c;
var isCallable$4 = isCallable$g;
var isObject$1 = isObject$7;
var getPrototypeOf$1 = objectGetPrototypeOf;
var defineBuiltIn$1 = defineBuiltIn$3;
var wellKnownSymbol$7 = wellKnownSymbol$a;

var ITERATOR$2 = wellKnownSymbol$7('iterator');
var BUGGY_SAFARI_ITERATORS$1 = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype$2, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf$1(getPrototypeOf$1(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$2 = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = !isObject$1(IteratorPrototype$2) || fails$1(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype$2[ITERATOR$2].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$2 = {};

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if (!isCallable$4(IteratorPrototype$2[ITERATOR$2])) {
  defineBuiltIn$1(IteratorPrototype$2, ITERATOR$2, function () {
    return this;
  });
}

var iteratorsCore = {
  IteratorPrototype: IteratorPrototype$2,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1
};

var defineProperty$2 = objectDefineProperty.f;
var hasOwn$1 = hasOwnProperty_1;
var wellKnownSymbol$6 = wellKnownSymbol$a;

var TO_STRING_TAG$3 = wellKnownSymbol$6('toStringTag');

var setToStringTag$2 = function (target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;
  if (target && !hasOwn$1(target, TO_STRING_TAG$3)) {
    defineProperty$2(target, TO_STRING_TAG$3, { configurable: true, value: TAG });
  }
};

var IteratorPrototype$1 = iteratorsCore.IteratorPrototype;
var create = objectCreate;
var createPropertyDescriptor = createPropertyDescriptor$3;
var setToStringTag$1 = setToStringTag$2;
var Iterators$2 = iterators;

var returnThis$1 = function () { return this; };

var iteratorCreateConstructor = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype$1, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });
  setToStringTag$1(IteratorConstructor, TO_STRING_TAG, false);
  Iterators$2[TO_STRING_TAG] = returnThis$1;
  return IteratorConstructor;
};

var uncurryThis$4 = functionUncurryThis;
var aCallable = aCallable$2;

var functionUncurryThisAccessor = function (object, key, method) {
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    return uncurryThis$4(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));
  } catch (error) { /* empty */ }
};

var isCallable$3 = isCallable$g;

var $String$1 = String;
var $TypeError$1 = TypeError;

var aPossiblePrototype$1 = function (argument) {
  if (typeof argument == 'object' || isCallable$3(argument)) return argument;
  throw $TypeError$1("Can't set " + $String$1(argument) + ' as a prototype');
};

/* eslint-disable no-proto -- safe */
var uncurryThisAccessor = functionUncurryThisAccessor;
var anObject = anObject$5;
var aPossiblePrototype = aPossiblePrototype$1;

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
var objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);

var $$3 = _export;
var call = functionCall;
var FunctionName = functionName;
var isCallable$2 = isCallable$g;
var createIteratorConstructor = iteratorCreateConstructor;
var getPrototypeOf = objectGetPrototypeOf;
var setPrototypeOf = objectSetPrototypeOf;
var setToStringTag = setToStringTag$2;
var createNonEnumerableProperty$1 = createNonEnumerableProperty$4;
var defineBuiltIn = defineBuiltIn$3;
var wellKnownSymbol$5 = wellKnownSymbol$a;
var Iterators$1 = iterators;
var IteratorsCore = iteratorsCore;

var PROPER_FUNCTION_NAME$1 = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR$1 = wellKnownSymbol$5('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

var iteratorDefine = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR$1]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (!isCallable$2(CurrentIteratorPrototype[ITERATOR$1])) {
          defineBuiltIn(CurrentIteratorPrototype, ITERATOR$1, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true);
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (PROPER_FUNCTION_NAME$1 && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if (CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty$1(IterablePrototype, 'name', VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() { return call(nativeIterator, this); };
    }
  }

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
      }
    } else $$3({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  // define iterator
  if (IterablePrototype[ITERATOR$1] !== defaultIterator) {
    defineBuiltIn(IterablePrototype, ITERATOR$1, defaultIterator, { name: DEFAULT });
  }
  Iterators$1[NAME] = defaultIterator;

  return methods;
};

// `CreateIterResultObject` abstract operation
// https://tc39.es/ecma262/#sec-createiterresultobject
var createIterResultObject$1 = function (value, done) {
  return { value: value, done: done };
};

var toIndexedObject = toIndexedObject$5;
var addToUnscopables = addToUnscopables$1;
var Iterators = iterators;
var InternalStateModule = internalState;
var defineProperty$1 = objectDefineProperty.f;
var defineIterator = iteratorDefine;
var createIterResultObject = createIterResultObject$1;
var DESCRIPTORS$1 = descriptors;

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
var es_array_iterator = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return createIterResultObject(undefined, true);
  }
  if (kind == 'keys') return createIterResultObject(index, false);
  if (kind == 'values') return createIterResultObject(target[index], false);
  return createIterResultObject([index, target[index]], false);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
var values = Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

// V8 ~ Chrome 45- bug
if (DESCRIPTORS$1 && values.name !== 'values') try {
  defineProperty$1(values, 'name', { value: 'values' });
} catch (error) { /* empty */ }

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
var domIterables = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};

// in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`
var documentCreateElement = documentCreateElement$2;

var classList = documentCreateElement('span').classList;
var DOMTokenListPrototype$1 = classList && classList.constructor && classList.constructor.prototype;

var domTokenListPrototype = DOMTokenListPrototype$1 === Object.prototype ? undefined : DOMTokenListPrototype$1;

var global$2 = global$d;
var DOMIterables = domIterables;
var DOMTokenListPrototype = domTokenListPrototype;
var ArrayIteratorMethods = es_array_iterator;
var createNonEnumerableProperty = createNonEnumerableProperty$4;
var wellKnownSymbol$4 = wellKnownSymbol$a;

var ITERATOR = wellKnownSymbol$4('iterator');
var TO_STRING_TAG$2 = wellKnownSymbol$4('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

var handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG$2]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG$2, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  handlePrototype(global$2[COLLECTION_NAME] && global$2[COLLECTION_NAME].prototype, COLLECTION_NAME);
}

handlePrototype(DOMTokenListPrototype, 'DOMTokenList');

const SmTooltipIcon = () => jsx(RiErrorWarningLine, {
  size: "1.4rem"
});
const LgTooltipIcon = () => jsx(RiErrorWarningLine, {
  size: "2rem"
});

const fadeIn = /*#__PURE__*/keyframes(["from{opacity:0}to{opacity:1}"]);

const TooltipProvider = TooltipPrimitive.Provider;
const TooltipRoot = TooltipPrimitive.Root;
const TooltipPortal = TooltipPrimitive.Portal;
const TooltipTrigger = /*#__PURE__*/styled(TooltipPrimitive.Trigger).withConfig({
  displayName: "Tooltipstyles__TooltipTrigger",
  componentId: "sc-1v5546e-0"
})(["background-color:transparent;border:none;padding:0;svg{color:", ";}"], ({
  theme
}) => theme.tooltip.icon.color);
const TooltipArrow = /*#__PURE__*/styled(TooltipPrimitive.Arrow).withConfig({
  displayName: "Tooltipstyles__TooltipArrow",
  componentId: "sc-1v5546e-1"
})(["fill:", ";"], ({
  theme
}) => theme.tooltip.content.bg);
const TooltipContent = /*#__PURE__*/styled(TooltipPrimitive.Content).withConfig({
  displayName: "Tooltipstyles__TooltipContent",
  componentId: "sc-1v5546e-2"
})(["background-color:", ";border-radius:", ";color:", ";font-size:", ";line-height:2.4rem;max-width:30rem;padding:1.2rem 1.5rem;&[data-state='delayed-open']{animation:", " 0.15s ease-in forwards;}"], ({
  theme
}) => theme.tooltip.content.bg, ({
  theme
}) => theme.tooltip.radius, ({
  theme
}) => theme.tooltip.content.color, ({
  theme
}) => theme.font.size.md, fadeIn);

const Tooltip = ({
  content: _content = 'Content goes here',
  side: _side = 'right',
  triggerEl: _triggerEl = jsx(SmTooltipIcon, {}),
  offset: _offset = 18,
  delay: _delay = 400,
  triggerAsChild: _triggerAsChild = false
}) => {
  const [open, setOpen] = useState(false);
  const [stayOpen, setStayOpen] = useState(false);
  const handleClickOpen = () => {
    setOpen(true);
    setStayOpen(true);
  };
  const handleClickOutside = () => {
    setOpen(false);
    setStayOpen(false);
  };
  return jsx(TooltipProvider, Object.assign({
    delayDuration: _delay
  }, {
    children: jsxs(TooltipRoot, Object.assign({
      open: open || stayOpen,
      onOpenChange: setOpen
    }, {
      children: [jsx(TooltipTrigger, Object.assign({
        onClick: handleClickOpen,
        asChild: _triggerAsChild
      }, {
        children: _triggerEl
      })), jsx(TooltipPortal, {
        children: jsxs(TooltipContent, Object.assign({
          side: _side,
          sideOffset: _offset,
          onEscapeKeyDown: handleClickOutside,
          onPointerDownOutside: handleClickOutside
        }, {
          children: [_content, jsx(TooltipArrow, {})]
        }))
      })]
    }))
  }));
};

const LinkStyles = /*#__PURE__*/css(["align-items:center;color:", ";cursor:pointer;display:inline-flex;font-family:", ";font-weight:", ";font-size:", ";text-decoration:none;letter-spacing:1.5px;&:hover{text-decoration:underline;}.icon-left{width:25px;margin-right:0.5rem;}svg{margin-left:0.3rem;}&.button-link{&:hover{text-decoration:none;}}"], ({
  theme
}) => theme.link.color, ({
  theme
}) => theme.font.family.body, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.size.md);
const StyledLink = /*#__PURE__*/styled.a.withConfig({
  displayName: "Linkstyles__StyledLink",
  componentId: "sc-1884z77-0"
})(["", ""], LinkStyles);

const Link$1 = /*#__PURE__*/React.forwardRef(({
  href: _href = '/',
  target: _target = '_blank',
  showExternalIcon: _showExternalIcon = true,
  selected,
  disabled,
  RightIcon,
  LeftIcon,
  className,
  children
}, ref) => {
  const classes = classNames({
    selected,
    disabled
  });
  return jsxs(StyledLink, Object.assign({
    href: _href,
    className: `${classes} ${className}`,
    target: _target,
    ref: ref
  }, {
    children: [LeftIcon && jsx(LeftIcon, {
      className: "icon-left"
    }), children, _showExternalIcon && jsx(RiExternalLinkLine, {}) || RightIcon && jsx(RightIcon, {
      className: "icon-right"
    })]
  }));
});

const WithIcon = /*#__PURE__*/styled.div.withConfig({
  displayName: "Selectstyles__WithIcon",
  componentId: "sc-19rqg1t-0"
})(["position:relative;width:100%;max-width:", ";svg{position:absolute;color:", ";top:1.4rem;right:2rem;pointer-events:none;}&.long{max-width:", ";}&.full{max-width:", ";}&.success{border:1px solid ", ";}&.warning{border:1px solid ", ";}&.error{border:1px solid ", ";}"], ({
  theme
}) => theme.field.size.md, ({
  theme
}) => theme.select.icon.color, ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.full, ({
  theme
}) => theme.select.success.border, ({
  theme
}) => theme.select.warning.border, ({
  theme
}) => theme.select.error.border);
const BaseSelect = /*#__PURE__*/styled.select.withConfig({
  displayName: "Selectstyles__BaseSelect",
  componentId: "sc-19rqg1t-1"
})(["align-items:center;appearance:none;background-color:", ";border:1px ", " solid;border-radius:", ";color:", ";cursor:pointer;display:inline-flex;font-size:", ";font-weight:", ";font-family:", ";height:4.8rem;justify-content:space-between;line-height:150%;max-width:", ";padding:0 1.8rem;transition:", ";width:100%;&.long{max-width:", ";}&.full{max-width:", ";}&.success{border:1px solid ", ";}&.warning{border:1px solid ", ";}&.error{border:1px solid ", ";}&:hover{background-color:", ";border:1px solid ", ";}:focus{background-color:", ";border:1px solid ", ";outline:none;}:disabled{background-color:", ";color:", ";cursor:not-allowed;font-style:italic;::placeholder{color:", ";}}"], ({
  theme
}) => theme.select.bg, ({
  theme
}) => theme.select.border, ({
  theme
}) => theme.select.radius, ({
  theme
}) => theme.select.color, ({
  theme
}) => theme.field.fontSize, ({
  theme
}) => theme.field.fontWeight, ({
  theme
}) => theme.field.inputFont, ({
  theme
}) => theme.field.size.md, ({
  theme
}) => theme.field.transition, ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.full, ({
  theme
}) => theme.select.success.border, ({
  theme
}) => theme.select.warning.border, ({
  theme
}) => theme.select.error.border, ({
  theme
}) => theme.select.hover.bg, ({
  theme
}) => theme.select.hover.border, ({
  theme
}) => theme.select.focus.bg, ({
  theme
}) => theme.select.focus.border, ({
  theme
}) => theme.select.disabled.bg, ({
  theme
}) => theme.select.disabled.color, ({
  theme
}) => theme.select.disabled.placeholder);
const StyledOption = /*#__PURE__*/styled.option.withConfig({
  displayName: "Selectstyles__StyledOption",
  componentId: "sc-19rqg1t-2"
})(["background-color:", ";color:", ";font-family:", ";font-size:", ";font-weight:", ";height:4.8rem;"], ({
  theme
}) => theme.select.option.bg, ({
  theme
}) => theme.select.option.color, ({
  theme
}) => theme.font.family.body, ({
  theme
}) => theme.field.fontSize, ({
  theme
}) => theme.field.fontWeight);

const Select = /*#__PURE__*/forwardRef((_a, ref) => {
  var {
      options,
      defaultValue,
      long,
      full,
      placeholder,
      disabled,
      error,
      success,
      warning,
      className,
      containerClassName
    } = _a,
    props = __rest(_a, ["options", "defaultValue", "long", "full", "placeholder", "disabled", "error", "success", "warning", "className", "containerClassName"]);
  const theme = useTheme();
  const wrapperClasses = classNames({
    long,
    full
  });
  const classes = classNames({
    long,
    full,
    success,
    error,
    warning
  });
  return jsxs(WithIcon, Object.assign({
    className: `${containerClassName} ${wrapperClasses}`
  }, {
    children: [jsxs(BaseSelect, Object.assign({}, props, {
      ref: ref,
      className: `${className} ${classes}`,
      defaultValue: defaultValue,
      disabled: disabled
    }, {
      children: [placeholder && jsx(StyledOption, Object.assign({
        value: ""
      }, {
        children: placeholder
      })), options === null || options === void 0 ? void 0 : options.map(option => jsx(StyledOption, Object.assign({
        value: option.value
      }, {
        children: option.name
      }), option.key || option.value))]
    })), jsx(RiArrowDropDownLine, {
      size: "2rem",
      color: disabled ? theme.neutral.step11 : theme.secondary.step11
    })]
  }));
});

const StyledSpinner = /*#__PURE__*/styled.div.withConfig({
  displayName: "Spinner__StyledSpinner",
  componentId: "sc-1w53g4s-0"
})(["&.loader,&.loader:after{border-radius:50%;width:100%;height:100%;}&.loader{font-size:1rem;position:relative;text-indent:-9999em;border-top:", ";border-right:", ";border-bottom:", ";border-left:", ";-webkit-transform:translateZ(0);-ms-transform:translateZ(0);transform:translateZ(0);-webkit-animation:load8 ", " infinite linear;animation:load8 ", " infinite linear;}@-webkit-keyframes load8{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg);}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg);}}@keyframes load8{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg);}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg);}}"], props => `${props.$strokeWidth} solid ${props.$bottomColor}`, props => `${props.$strokeWidth} solid ${props.$bottomColor}`, props => `${props.$strokeWidth} solid ${props.$bottomColor}`, props => `${props.$strokeWidth} solid ${props.$topColor}`, ({
  $speed
}) => $speed, ({
  $speed
}) => $speed);
const Container$2 = /*#__PURE__*/styled.div.withConfig({
  displayName: "Spinner__Container",
  componentId: "sc-1w53g4s-1"
})(["display:inline-flex;align-items:center;justify-content:center;width:", ";height:", ";margin:", ";padding:", ";"], ({
  $size
}) => $size, ({
  $size
}) => $size, ({
  $margin
}) => $margin, ({
  $padding
}) => $padding);
const Spinner = ({
  topColor,
  bottomColor,
  size: _size = '4rem',
  margin: _margin = '0',
  padding: _padding = '0',
  strokeWidth: _strokeWidth = '.5rem',
  speed: _speed = '1.1s'
}) => {
  const theme = useTheme();
  return jsx(Container$2, Object.assign({
    "$size": _size,
    "$margin": _margin,
    "$padding": _padding
  }, {
    children: jsx(StyledSpinner, {
      "$topColor": topColor || theme.primary.step9,
      "$bottomColor": bottomColor || theme.primary.step4,
      className: "loader",
      "$strokeWidth": _strokeWidth,
      "$speed": _speed
    })
  }));
};

const StyledDivider$1 = /*#__PURE__*/styled(RadixDivider.Root).withConfig({
  displayName: "Divider__StyledDivider",
  componentId: "sc-1ovh19q-0"
})(["background-color:", ";margin:", ";&[data-orientation='horizontal']{height:0.1rem;width:100%;}&[data-orientation='vertical']{height:100%;width:0.1rem;}"], ({
  color
}) => color || slateDark.slate6, ({
  margin
}) => margin || '0rem');
const Divider = ({
  orientation: _orientation = 'horizontal',
  decorative: _decorative = false,
  asChild: _asChild = false,
  margin: _margin = '0rem',
  className,
  color
}) => {
  return jsx(StyledDivider$1, {
    margin: _margin,
    orientation: _orientation,
    decorative: _decorative,
    asChild: _asChild,
    className: className,
    color: color
  });
};

const Container$1 = /*#__PURE__*/styled.div.withConfig({
  displayName: "Switchstyles__Container",
  componentId: "sc-434dnk-0"
})(["align-items:center;display:flex;padding-top:12px;padding-bottom:12px;"]);
const SwitchBase = /*#__PURE__*/styled(SwitchPrimitive.Root).withConfig({
  displayName: "Switchstyles__SwitchBase",
  componentId: "sc-434dnk-1"
})(["all:unset;background-color:", ";border-radius:9999px;cursor:pointer;height:16px;left:9px;position:relative;width:54px;&[data-disabled]{background-color:", ";cursor:not-allowed;}&[data-state='checked']{background-color:", ";&[data-disabled]{background-color:", ";cursor:not-allowed;}}"], ({
  theme
}) => theme.switch.base.bg, ({
  theme
}) => theme.switch.base.disabled.bg, ({
  theme
}) => theme.switch.base.active.bg, ({
  theme
}) => theme.switch.base.active.disabled.bg);
const SwitchSlider = /*#__PURE__*/styled(SwitchPrimitive.Thumb).withConfig({
  displayName: "Switchstyles__SwitchSlider",
  componentId: "sc-434dnk-2"
})(["background-color:", ";border:2px solid ", ";border-radius:9999px;height:34px;position:absolute;top:-10px;transform:translateX(-9px);transition:transform 0.4s;width:34px;will-change:transform;&:hover{background-color:", ";border:1px solid ", ";}:focus{background-color:", ";border:1px solid ", ";outline:none;}&[data-disabled]{background-color:", ";border:1px solid ", ";cursor:not-allowed;}&[data-state='checked']{background-color:", ";border:2px solid ", ";transform:translateX(27px);&:hover{background-color:", ";border:1px solid ", ";}:focus{background-color:", ";border:1px solid ", ";outline:none;}&[data-disabled]{background-color:", ";border:1px solid ", ";cursor:not-allowed;}}"], ({
  theme
}) => theme.switch.indicator.bg, ({
  theme
}) => theme.switch.indicator.border, ({
  theme
}) => theme.switch.indicator.hover.bg, ({
  theme
}) => theme.switch.indicator.hover.border, ({
  theme
}) => theme.switch.indicator.focus.bg, ({
  theme
}) => theme.switch.indicator.focus.border, ({
  theme
}) => theme.switch.indicator.disabled.bg, ({
  theme
}) => theme.switch.indicator.disabled.border, ({
  theme
}) => theme.switch.indicator.active.bg, ({
  theme
}) => theme.switch.indicator.active.border, ({
  theme
}) => theme.switch.indicator.active.hover.bg, ({
  theme
}) => theme.switch.indicator.active.hover.border, ({
  theme
}) => theme.switch.indicator.active.focus.bg, ({
  theme
}) => theme.switch.indicator.active.focus.border, ({
  theme
}) => theme.switch.indicator.active.disabled.bg, ({
  theme
}) => theme.switch.indicator.active.disabled.border);
const LabelContainer$2 = /*#__PURE__*/styled.label.withConfig({
  displayName: "Switchstyles__LabelContainer",
  componentId: "sc-434dnk-3"
})(["align-items:center;display:flex;margin-left:28px;label{margin-right:10px;}svg{transform:translateY(0.1rem);}"]);
const StyledLabel = /*#__PURE__*/styled.label.withConfig({
  displayName: "Switchstyles__StyledLabel",
  componentId: "sc-434dnk-4"
})(["color:", ";font-family:", ";font-weight:", ";font-size:", ";&.disabled{color:", ";}"], ({
  theme
}) => theme.switch.label.color, ({
  theme
}) => theme.font.family.body, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.size.md, ({
  theme
}) => theme.switch.label.disabled.color);

// ! Why this here? Should use label component. Refactor label out
const Label$1 = ({
  children: _children = 'label',
  id,
  className
}) => {
  return jsx(StyledLabel, Object.assign({
    htmlFor: id,
    className: className
  }, {
    children: _children
  }));
};
const Switch = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    fieldLabel,
    id,
    className,
    disabled,
    switchOn,
    defaultOn = false,
    onBlur,
    onChange,
    onCheckedChange
  } = props;
  const classes = classNames({
    disabled
  });
  return jsxs(Container$1, Object.assign({
    className: className
  }, {
    children: [jsx(SwitchBase, Object.assign({
      checked: switchOn,
      defaultChecked: defaultOn,
      onBlur: onBlur,
      onChange: onChange,
      onCheckedChange: onCheckedChange,
      disabled: disabled
    }, {
      children: jsx(SwitchSlider, {
        ref: ref
      })
    })), jsx(LabelContainer$2, {
      children: jsx(Label$1, Object.assign({
        id: id,
        className: classes
      }, {
        children: fieldLabel
      }))
    })]
  }));
});

const CardStyles = /*#__PURE__*/css(["background-color:", ";border:1px solid ", ";border-radius:", ";padding:2rem;width:", ";max-width:90vw;"], ({
  theme
}) => theme.card.bg, ({
  theme
}) => theme.card.border, ({
  theme
}) => theme.card.radius, ({
  width
}) => width);
const BaseCard = /*#__PURE__*/styled.div.withConfig({
  displayName: "Cardstyles__BaseCard",
  componentId: "sc-1yd85w7-0"
})(["", ""], CardStyles);

const Card = ({
  className,
  width: _width = 'fit-content',
  children
}) => {
  return jsx(BaseCard, Object.assign({
    className: className,
    width: _width
  }, {
    children: children
  }));
};

/* TODO: Component specific border radius ?*/
const BaseTag = /*#__PURE__*/styled.div.withConfig({
  displayName: "Tagstyles__BaseTag",
  componentId: "sc-1npyc2x-0"
})(["display:inline-flex;align-items:center;background-color:", ";border:1px solid ", ";border-radius:", ";color:", ";height:fit-content;width:fit-content;padding:0.5rem 0.8rem;font-size:", ";&:hover{background-color:", ";border:1px solid ", ";}:focus{background-color:", ";border:1px solid ", ";outline:none;}:disabled{background-color:", ";border:1px solid ", ";cursor:not-allowed;}svg{width:1.2rem;height:1.2rem;color:", ";}svg.icon-left{margin-right:1rem;}svg.icon-right{margin-left:0.5rem;}"], ({
  theme,
  $tagColor
}) => theme[`${$tagColor}3`], ({
  theme,
  $tagColor
}) => theme[`${$tagColor}3`], ({
  theme
}) => theme.tag.radius, ({
  theme,
  $tagColor
}) => theme[`${$tagColor}11`], ({
  $fontSize
}) => $fontSize, ({
  theme,
  $tagColor
}) => theme[`${$tagColor}3`], ({
  theme,
  $tagColor
}) => theme[`${$tagColor}4`], ({
  theme,
  $tagColor
}) => theme[`${$tagColor}3`], ({
  theme,
  $tagColor
}) => theme[`${$tagColor}5`], ({
  theme
}) => theme.neutral.step2, ({
  theme
}) => theme.neutral.step5, ({
  theme,
  $tagColor
}) => theme[`${$tagColor}11`]);

const Tag = ({
  className,
  children,
  tagColor,
  IconLeft,
  IconRight,
  fontSize: _fontSize = '1.2rem'
}) => {
  const iconClasses = classNames({
    tagColor
  });
  return jsxs(BaseTag, Object.assign({
    className: className,
    "$tagColor": tagColor || 'green',
    "$fontSize": _fontSize
  }, {
    children: [IconLeft && jsx(IconLeft, {
      className: `${iconClasses} icon-left`
    }), children, IconRight && jsx(IconRight, {
      className: `${iconClasses} icon-right`
    })]
  }));
};

const ProgressVisualFull = /*#__PURE__*/styled.div.withConfig({
  displayName: "Progressstyles__ProgressVisualFull",
  componentId: "ea8s12-0"
})(["background-color:", ";display:flex;height:10px;"], ({
  $backgroundColor
}) => $backgroundColor);
const ProgressVisualPart = /*#__PURE__*/styled.div.withConfig({
  displayName: "Progressstyles__ProgressVisualPart",
  componentId: "ea8s12-1"
})(["width:", ";background-color:", ";transition:width 2s;"], props => props.width, ({
  $backgroundColor
}) => $backgroundColor);

const Progress = ({
  backgroundColor,
  progressSection: _progressSection = [{
    percentage: '0%',
    color: 'transparent'
  }]
}) => {
  const theme = useTheme();
  // Starting values needed for the animation
  // Mapped by "progressSection" so it can work with multiple values dynamically
  const [widths, setWidths] = useState(_progressSection.map(() => {
    return '0%';
  }));
  useEffect(() => {
    // https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame
    // You need to wrap it to trigger the animation
    requestAnimationFrame(() => {
      // Set a new array of percentage widths based on the props
      setWidths(_progressSection.map(item => {
        return item.percentage;
      }));
    });
  }, [_progressSection]);
  return jsx(ProgressVisualFull, Object.assign({
    "$backgroundColor": backgroundColor || theme.neutral.step10
  }, {
    children: _progressSection.map((item, index) => {
      // map each part into separate div where each will be animated
      return jsx(ProgressVisualPart, {
        width: widths[index],
        "$backgroundColor": item.color
      }, index);
    })
  }));
};

const BaseBadge = /*#__PURE__*/styled.div.withConfig({
  displayName: "Badgestyles__BaseBadge",
  componentId: "n6obw9-0"
})(["display:inline-flex;align-items:center;background-color:", ";border:1px solid ", ";border-radius:2.1rem;justify-content:center;min-height:", ";min-width:", ";padding:", ";font-size:", ";color:", ";:focus{background-color:", ";border:1px solid ", ";}:disabled{background-color:", ";color:", ";}"], ({
  theme,
  $color
}) => theme[`${$color}7`], ({
  theme,
  $color
}) => theme[`${$color}3`], ({
  $size
}) => {
  return $size === 'sm' ? '2.4rem;' : '3.6rem;';
}, ({
  $size
}) => {
  return $size === 'sm' ? '3rem;' : '8.1rem;';
}, ({
  $size
}) => {
  return $size === 'sm' ? '0.3rem 0.8rem;' : '0.6rem 1.6rem;';
}, ({
  $size
}) => $size === 'sm' ? '1.2rem;' : '1.6rem;', ({
  theme,
  $color
}) => theme[`${$color}12`], ({
  theme,
  $color
}) => theme[`${$color}6`], ({
  theme,
  $color
}) => theme[`${$color}8`], ({
  theme,
  $color
}) => theme[`${$color}7`], ({
  theme,
  $color
}) => theme[`${$color}9`]);

const Badge = ({
  className,
  badgeLabel,
  badgeSize: _badgeSize = 'sm',
  badgeColor: _badgeColor = 'blue'
}) => {
  return jsxs(BaseBadge, Object.assign({
    "$color": _badgeColor,
    "$size": _badgeSize,
    className: className
  }, {
    children: [_badgeSize === 'sm' && jsx(ParXs, {
      children: jsx(Bold, {
        children: badgeLabel
      })
    }), _badgeSize === 'lg' && jsx(ParMd, {
      children: jsx(Bold, {
        children: badgeLabel
      })
    })]
  }));
};

const getMatches = query => {
  if (typeof window !== 'undefined') {
    return window.matchMedia(query).matches;
  }
  return false;
};
const useBreakpoint = query => {
  const [matches, setMatches] = useState(getMatches(query));
  const handleChange = useCallback(() => {
    setMatches(getMatches(query));
  }, [query]);
  useEffect(() => {
    window.addEventListener('resize', handleChange);
    return () => {
      window.removeEventListener('resize', handleChange);
    };
  }, [query, handleChange]);
  return matches;
};

var wellKnownSymbol$3 = wellKnownSymbol$a;

var TO_STRING_TAG$1 = wellKnownSymbol$3('toStringTag');
var test = {};

test[TO_STRING_TAG$1] = 'z';

var toStringTagSupport = String(test) === '[object z]';

var TO_STRING_TAG_SUPPORT = toStringTagSupport;
var isCallable$1 = isCallable$g;
var classofRaw$1 = classofRaw$2;
var wellKnownSymbol$2 = wellKnownSymbol$a;

var TO_STRING_TAG = wellKnownSymbol$2('toStringTag');
var $Object = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw$1(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
var classof$2 = TO_STRING_TAG_SUPPORT ? classofRaw$1 : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw$1(O)
    // ES3 arguments fallback
    : (result = classofRaw$1(O)) == 'Object' && isCallable$1(O.callee) ? 'Arguments' : result;
};

var classof$1 = classof$2;

var $String = String;

var toString$3 = function (argument) {
  if (classof$1(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
  return $String(argument);
};

var makeBuiltIn = makeBuiltIn$3.exports;
var defineProperty = objectDefineProperty;

var defineBuiltInAccessor$1 = function (target, name, descriptor) {
  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });
  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });
  return defineProperty.f(target, name, descriptor);
};

var $$2 = _export;
var DESCRIPTORS = descriptors;
var global$1 = global$d;
var uncurryThis$3 = functionUncurryThis;
var hasOwn = hasOwnProperty_1;
var isCallable = isCallable$g;
var isPrototypeOf = objectIsPrototypeOf;
var toString$2 = toString$3;
var defineBuiltInAccessor = defineBuiltInAccessor$1;
var copyConstructorProperties = copyConstructorProperties$2;

var NativeSymbol = global$1.Symbol;
var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;

if (DESCRIPTORS && isCallable(NativeSymbol) && (!('description' in SymbolPrototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString$2(arguments[0]);
    var result = isPrototypeOf(SymbolPrototype, this)
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };

  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  SymbolWrapper.prototype = SymbolPrototype;
  SymbolPrototype.constructor = SymbolWrapper;

  var NATIVE_SYMBOL = String(NativeSymbol('test')) == 'Symbol(test)';
  var thisSymbolValue = uncurryThis$3(SymbolPrototype.valueOf);
  var symbolDescriptiveString = uncurryThis$3(SymbolPrototype.toString);
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  var replace$1 = uncurryThis$3(''.replace);
  var stringSlice$1 = uncurryThis$3(''.slice);

  defineBuiltInAccessor(SymbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = thisSymbolValue(this);
      if (hasOwn(EmptyStringDescriptionStore, symbol)) return '';
      var string = symbolDescriptiveString(symbol);
      var desc = NATIVE_SYMBOL ? stringSlice$1(string, 7, -1) : replace$1(string, regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $$2({ global: true, constructor: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}

/*
 * COLORS
 * We're leveraging Radix Colors (https://www.radix-ui.com/colors) for the DAO
 * Haus Component Lib. Additionally we're following the scale provided by Radix.
 * To understand why each alias is mapping to each number in the scale please
 * reference this doc (https://www.radix-ui.com/docs/colors/palette-composition/understanding-the-scale).
 * Designs for DAO Haus Component Lib can be found here (figma.com/file/R1a1bwODnzCHHHw0EJALAU/DAOhaus-v3-Pattern-Library-(In-Progress)?node-id=1%3A3)
 */
// * Brand Colors
const primary = {
  step1: amber.amber1,
  step2: amber.amber2,
  step3: amber.amber3,
  step4: amber.amber4,
  step5: amber.amber5,
  step6: amber.amber6,
  step7: amber.amber7,
  step8: amber.amber8,
  step9: amber.amber9,
  step10: amber.amber10,
  step11: amber.amber11,
  step12: amber.amber12
};
const primaryA = {
  step1: amberA.amberA1,
  step2: amberA.amberA2,
  step3: amberA.amberA3,
  step4: amberA.amberA4,
  step5: amberA.amberA5,
  step6: amberA.amberA6,
  step7: amberA.amberA7,
  step8: amberA.amberA8,
  step9: amberA.amberA9,
  step10: amberA.amberA10,
  step11: amberA.amberA11,
  step12: amberA.amberA12
};
const primaryDark = {
  step1: amberDark.amber1,
  step2: amberDark.amber2,
  step3: amberDark.amber3,
  step4: amberDark.amber4,
  step5: amberDark.amber5,
  step6: amberDark.amber6,
  step7: amberDark.amber7,
  step8: amberDark.amber8,
  step9: amberDark.amber9,
  step10: amberDark.amber10,
  step11: amberDark.amber11,
  step12: amberDark.amber12
};
const primaryDarkA = {
  step1: amberDarkA.amberA1,
  step2: amberDarkA.amberA2,
  step3: amberDarkA.amberA3,
  step4: amberDarkA.amberA4,
  step5: amberDarkA.amberA5,
  step6: amberDarkA.amberA6,
  step7: amberDarkA.amberA7,
  step8: amberDarkA.amberA8,
  step9: amberDarkA.amberA9,
  step10: amberDarkA.amberA10,
  step11: amberDarkA.amberA11,
  step12: amberDarkA.amberA12
};
const secondary = {
  step1: indigo.indigo1,
  step2: indigo.indigo2,
  step3: indigo.indigo3,
  step4: indigo.indigo4,
  step5: indigo.indigo5,
  step6: indigo.indigo6,
  step7: indigo.indigo7,
  step8: indigo.indigo8,
  step9: indigo.indigo9,
  step10: indigo.indigo10,
  step11: indigo.indigo11,
  step12: indigo.indigo12
};
const secondaryA = {
  step1: indigoA.indigoA1,
  step2: indigoA.indigoA2,
  step3: indigoA.indigoA3,
  step4: indigoA.indigoA4,
  step5: indigoA.indigoA5,
  step6: indigoA.indigoA6,
  step7: indigoA.indigoA7,
  step8: indigoA.indigoA8,
  step9: indigoA.indigoA9,
  step10: indigoA.indigoA10,
  step11: indigoA.indigoA11,
  step12: indigoA.indigoA12
};
const secondaryDark = {
  step1: indigoDark.indigo1,
  step2: indigoDark.indigo2,
  step3: indigoDark.indigo3,
  step4: indigoDark.indigo4,
  step5: indigoDark.indigo5,
  step6: indigoDark.indigo6,
  step7: indigoDark.indigo7,
  step8: indigoDark.indigo8,
  step9: indigoDark.indigo9,
  step10: indigoDark.indigo10,
  step11: indigoDark.indigo11,
  step12: indigoDark.indigo12
};
const secondaryDarkA = {
  step1: indigoDarkA.indigoA1,
  step2: indigoDarkA.indigoA2,
  step3: indigoDarkA.indigoA3,
  step4: indigoDarkA.indigoA4,
  step5: indigoDarkA.indigoA5,
  step6: indigoDarkA.indigoA6,
  step7: indigoDarkA.indigoA7,
  step8: indigoDarkA.indigoA8,
  step9: indigoDarkA.indigoA9,
  step10: indigoDarkA.indigoA10,
  step11: indigoDarkA.indigoA11,
  step12: indigoDarkA.indigoA12
};
// * Neutral Colors
const neutral = {
  step1: slate.slate1,
  step2: slate.slate2,
  step3: slate.slate3,
  step4: slate.slate4,
  step5: slate.slate5,
  step6: slate.slate6,
  step7: slate.slate7,
  step8: slate.slate8,
  step9: slate.slate9,
  step10: slate.slate10,
  step11: slate.slate11,
  step12: slate.slate12
};
const neutralDark = {
  step1: slateDark.slate1,
  step2: slateDark.slate2,
  step3: slateDark.slate3,
  step4: slateDark.slate4,
  step5: slateDark.slate5,
  step6: slateDark.slate6,
  step7: slateDark.slate7,
  step8: slateDark.slate8,
  step9: slateDark.slate9,
  step10: slateDark.slate10,
  step11: slateDark.slate11,
  step12: slateDark.slate12
};
// * Utility Colors
const info = {
  step1: blue.blue1,
  step2: blue.blue2,
  step3: blue.blue3,
  step4: blue.blue4,
  step5: blue.blue5,
  step6: blue.blue6,
  step7: blue.blue7,
  step8: blue.blue8,
  step9: blue.blue9,
  step10: blue.blue10,
  step11: blue.blue11,
  step12: blue.blue12
};
const infoDark = {
  step1: blueDark.blue1,
  step2: blueDark.blue2,
  step3: blueDark.blue3,
  step4: blueDark.blue4,
  step5: blueDark.blue5,
  step6: blueDark.blue6,
  step7: blueDark.blue7,
  step8: blueDark.blue8,
  step9: blueDark.blue9,
  step10: blueDark.blue10,
  step11: blueDark.blue11,
  step12: blueDark.blue12
};
const success = {
  step1: green.green1,
  step2: green.green2,
  step3: green.green3,
  step4: green.green4,
  step5: green.green5,
  step6: green.green6,
  step7: green.green7,
  step8: green.green8,
  step9: green.green9,
  step10: green.green10,
  step11: green.green11,
  step12: green.green12
};
const successDark = {
  step1: greenDark.green1,
  step2: greenDark.green2,
  step3: greenDark.green3,
  step4: greenDark.green4,
  step5: greenDark.green5,
  step6: greenDark.green6,
  step7: greenDark.green7,
  step8: greenDark.green8,
  step9: greenDark.green9,
  step10: greenDark.green10,
  step11: greenDark.green11,
  step12: greenDark.green12
};
const warning = {
  step1: orange.orange1,
  step2: orange.orange2,
  step3: orange.orange3,
  step4: orange.orange4,
  step5: orange.orange5,
  step6: orange.orange6,
  step7: orange.orange7,
  step8: orange.orange8,
  step9: orange.orange9,
  step10: orange.orange10,
  step11: orange.orange11,
  step12: orange.orange12
};
const warningDark = {
  step1: orangeDark.orange1,
  step2: orangeDark.orange2,
  step3: orangeDark.orange3,
  step4: orangeDark.orange4,
  step5: orangeDark.orange5,
  step6: orangeDark.orange6,
  step7: orangeDark.orange7,
  step8: orangeDark.orange8,
  step9: orangeDark.orange9,
  step10: orangeDark.orange10,
  step11: orangeDark.orange11,
  step12: orangeDark.orange12
};
const danger = {
  step1: red.red1,
  step2: red.red2,
  step3: red.red3,
  step4: red.red4,
  step5: red.red5,
  step6: red.red6,
  step7: red.red7,
  step8: red.red8,
  step9: red.red9,
  step10: red.red10,
  step11: red.red11,
  step12: red.red12
};
const dangerDark = {
  step1: redDark.red1,
  step2: redDark.red2,
  step3: redDark.red3,
  step4: redDark.red4,
  step5: redDark.red5,
  step6: redDark.red6,
  step7: redDark.red7,
  step8: redDark.red8,
  step9: redDark.red9,
  step10: redDark.red10,
  step11: redDark.red11,
  step12: redDark.red12
};

const primaryDarkBtn = {
  solid: {
    text: primaryDark.step1,
    bg: primaryDark.step9,
    border: primaryDark.step9,
    bgHover: primaryDark.step10,
    borderHover: primaryDark.step10,
    bgFocus: primaryDark.step9,
    borderFocus: primaryDark.step11,
    bgDisabled: primaryDark.step6,
    borderDisabled: primaryDark.step6
  },
  outline: {
    text: primaryDark.step9,
    border: primaryDark.step9,
    hover: primaryDark.step10,
    focus: primaryDark.step11,
    disabled: primaryDark.step6
  },
  ghost: {
    text: primaryDark.step10,
    bgHover: primaryDark.step3,
    borderFocus: primaryDark.step4,
    disabled: primaryDark.step8
  },
  link: {
    text: primaryDark.step9,
    hover: primaryDark.step10,
    focus: primaryDark.step11,
    disabled: primaryDark.step6
  }
};
const secondaryDarkBtn = {
  solid: {
    text: secondaryDark.step12,
    bg: secondaryDark.step6,
    border: secondaryDark.step6,
    bgHover: secondaryDark.step7,
    borderHover: secondaryDark.step7,
    bgFocus: secondaryDark.step6,
    borderFocus: secondaryDark.step8,
    bgDisabled: secondaryDark.step3,
    borderDisabled: secondaryDark.step3
  },
  outline: {
    text: secondaryDark.step9,
    border: secondaryDark.step9,
    hover: secondaryDark.step10,
    focus: secondaryDark.step11,
    disabled: secondaryDark.step6
  },
  ghost: {
    text: secondaryDark.step10,
    bgHover: secondaryDark.step3,
    borderFocus: secondaryDark.step4,
    disabled: secondaryDark.step8
  },
  link: {
    text: secondaryDark.step9,
    hover: secondaryDark.step10,
    focus: secondaryDark.step11,
    disabled: secondaryDark.step6
  }
};
const successDarkBtn = {
  solid: {
    text: successDark.step1,
    bg: successDark.step9,
    border: successDark.step9,
    bgHover: successDark.step10,
    borderHover: successDark.step10,
    bgFocus: successDark.step9,
    borderFocus: successDark.step11,
    bgDisabled: successDark.step6,
    borderDisabled: successDark.step6
  },
  outline: {
    text: successDark.step9,
    border: successDark.step9,
    hover: successDark.step10,
    focus: successDark.step11,
    disabled: successDark.step6
  },
  ghost: {
    text: successDark.step10,
    bgHover: successDark.step3,
    borderFocus: successDark.step4,
    disabled: successDark.step8
  },
  link: {
    text: successDark.step9,
    hover: successDark.step10,
    focus: successDark.step11,
    disabled: successDark.step6
  }
};
const warningDarkBtn = {
  solid: {
    text: warningDark.step1,
    bg: warningDark.step9,
    border: warningDark.step9,
    bgHover: warningDark.step10,
    borderHover: warningDark.step10,
    bgFocus: warningDark.step9,
    borderFocus: warningDark.step11,
    bgDisabled: warningDark.step6,
    borderDisabled: warningDark.step6
  },
  outline: {
    text: warningDark.step9,
    border: warningDark.step9,
    hover: warningDark.step10,
    focus: warningDark.step11,
    disabled: warningDark.step6
  },
  ghost: {
    text: warningDark.step10,
    bgHover: warningDark.step3,
    borderFocus: warningDark.step4,
    disabled: warningDark.step8
  },
  link: {
    text: warningDark.step9,
    hover: warningDark.step10,
    focus: warningDark.step11,
    disabled: warningDark.step6
  }
};
const dangerDarkBtn = {
  solid: {
    text: dangerDark.step1,
    bg: dangerDark.step9,
    border: dangerDark.step9,
    bgHover: dangerDark.step10,
    borderHover: dangerDark.step10,
    bgFocus: dangerDark.step9,
    borderFocus: dangerDark.step11,
    bgDisabled: dangerDark.step6,
    borderDisabled: dangerDark.step6
  },
  outline: {
    text: dangerDark.step9,
    border: dangerDark.step9,
    hover: dangerDark.step10,
    focus: dangerDark.step11,
    disabled: dangerDark.step6
  },
  ghost: {
    text: dangerDark.step10,
    bgHover: dangerDark.step3,
    borderFocus: dangerDark.step4,
    disabled: dangerDark.step8
  },
  link: {
    text: dangerDark.step9,
    hover: dangerDark.step10,
    focus: dangerDark.step11,
    disabled: dangerDark.step6
  }
};
const primaryBtn = {
  solid: {
    text: primary.step1,
    bg: primary.step9,
    border: primary.step9,
    bgHover: primary.step10,
    borderHover: primary.step10,
    bgFocus: primary.step9,
    borderFocus: primary.step11,
    bgDisabled: primary.step6,
    borderDisabled: primary.step6
  },
  outline: {
    text: primary.step9,
    border: primary.step9,
    hover: primary.step10,
    focus: primary.step11,
    disabled: primary.step6
  },
  ghost: {
    text: primary.step10,
    bgHover: primary.step3,
    borderFocus: primary.step4,
    disabled: primary.step8
  },
  link: {
    text: primary.step9,
    hover: primary.step10,
    focus: primary.step11,
    disabled: primary.step6
  }
};
const secondaryBtn = {
  solid: {
    text: secondary.step12,
    bg: secondary.step6,
    border: secondary.step6,
    bgHover: secondary.step7,
    borderHover: secondary.step7,
    bgFocus: secondary.step6,
    borderFocus: secondary.step8,
    bgDisabled: secondary.step3,
    borderDisabled: secondary.step3
  },
  outline: {
    text: secondary.step9,
    border: secondary.step9,
    hover: secondary.step10,
    focus: secondary.step11,
    disabled: secondary.step6
  },
  ghost: {
    text: secondary.step10,
    bgHover: secondary.step3,
    borderFocus: secondary.step4,
    disabled: secondary.step8
  },
  link: {
    text: secondary.step9,
    hover: secondary.step10,
    focus: secondary.step11,
    disabled: secondary.step6
  }
};
const successBtn = {
  solid: {
    text: success.step1,
    bg: success.step9,
    border: success.step9,
    bgHover: success.step10,
    borderHover: success.step10,
    bgFocus: success.step9,
    borderFocus: success.step11,
    bgDisabled: success.step6,
    borderDisabled: success.step6
  },
  outline: {
    text: success.step9,
    border: success.step9,
    hover: success.step10,
    focus: success.step11,
    disabled: success.step6
  },
  ghost: {
    text: success.step10,
    bgHover: success.step3,
    borderFocus: success.step4,
    disabled: success.step8
  },
  link: {
    text: success.step9,
    hover: success.step10,
    focus: success.step11,
    disabled: success.step6
  }
};
const warningBtn = {
  solid: {
    text: warning.step1,
    bg: warning.step9,
    border: warning.step9,
    bgHover: warning.step10,
    borderHover: warning.step10,
    bgFocus: warning.step9,
    borderFocus: warning.step11,
    bgDisabled: warning.step6,
    borderDisabled: warning.step6
  },
  outline: {
    text: warning.step9,
    border: warning.step9,
    hover: warning.step10,
    focus: warning.step11,
    disabled: warning.step6
  },
  ghost: {
    text: warning.step10,
    bgHover: warning.step3,
    borderFocus: warning.step4,
    disabled: warning.step8
  },
  link: {
    text: warning.step9,
    hover: warning.step10,
    focus: warning.step11,
    disabled: warning.step6
  }
};
const dangerBtn = {
  solid: {
    text: danger.step1,
    bg: danger.step9,
    border: danger.step9,
    bgHover: danger.step10,
    borderHover: danger.step10,
    bgFocus: danger.step9,
    borderFocus: danger.step11,
    bgDisabled: danger.step6,
    borderDisabled: danger.step6
  },
  outline: {
    text: danger.step9,
    border: danger.step9,
    hover: danger.step10,
    focus: danger.step11,
    disabled: danger.step6
  },
  ghost: {
    text: danger.step10,
    bgHover: danger.step3,
    borderFocus: danger.step4,
    disabled: danger.step8
  },
  link: {
    text: danger.step9,
    hover: danger.step10,
    focus: danger.step11,
    disabled: danger.step6
  }
};

// TODO: Update to use theme value across all packages
const font = {
  family: {
    header: `'Mulish', sans-serif`,
    body: `'Mulish', sans-serif`,
    data: `'Space Mono', monospace`
  },
  size: {
    xs: '1.2rem',
    sm: '1.4rem',
    md: '1.6rem',
    lg: '2rem',
    xl: '2.4rem',
    xxl: '3.2rem',
    xxxl: '4rem',
    xxxxl: '4.8rem'
  },
  weight: {
    extraLight: 200,
    light: 300,
    reg: 400,
    med: 500,
    bold: 700,
    black: 900
  },
  lineHeight: '150%',
  letterSpacing: '1.5px'
};

let _ = t => t,
  _t;
const GlobalStyles = /*#__PURE__*/createGlobalStyle(_t || (_t = _`
  ${0}

  * {
    &,
    &::before,
    &::after {
      box-sizing: border-box;
    }
  }
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;

  #root {
     min-height: 100%;
     height: 100%;
     margin: 0px;
     padding: 0px;
  }

  h1, h2, h3, h4, h5, h6, p{
    margin: 0;
    line-height: ${0};
    letter-spacing: ${0};
  }

  html {
    font-size: 10px;
    background-color: ${0};
  }

  body {
    font-family: ${0};
    color: ${0}
  }

`), normalize$1(), font.lineHeight, font.letterSpacing, ({
  theme
}) => theme.rootBgColor, ({
  theme
}) => theme.font.family.body, ({
  theme
}) => theme.rootFontColor);

const breakpoints = {
  xs: '480px',
  sm: '768px',
  md: '1024px',
  lg: '1250px'
};
const widthQuery = {
  xs: `(max-width: ${breakpoints.xs})`,
  sm: `(max-width: ${breakpoints.sm})`,
  md: `(max-width: ${breakpoints.md})`,
  lg: `(max-width: ${breakpoints.lg})`
};

const border = {
  radius: '0.4rem'
};

const defaultDarkTheme = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({
  themeName: 'dark',
  font,
  transparent: 'transparent',
  rootBgColor: neutralDark.step1,
  rootFontColor: secondaryDark.step12,
  primary: Object.assign({}, primaryDark),
  primaryA: Object.assign({}, primaryDarkA),
  secondary: Object.assign({}, secondaryDark),
  secondaryA: Object.assign({}, secondaryDarkA),
  success: Object.assign({}, successDark),
  warning: Object.assign({}, warningDark),
  danger: Object.assign({}, dangerDark),
  info: Object.assign({}, infoDark),
  neutral: Object.assign({}, neutralDark)
}, blueDark), violetDark), pinkDark), greenDark), yellowDark), redDark), {
  field: {
    fontWeight: font.weight.reg,
    fontSize: font.size.md,
    inputFont: font.family.body,
    labelFont: font.family.header,
    size: {
      md: '28rem',
      lg: '52rem',
      full: '100%'
    },
    radius: border.radius,
    transition: '0.2s all ease-in-out'
  },
  // *** ATOMS *** //
  avatar: {
    bg: neutralDark.step9
  },
  button: {
    primary: primaryDarkBtn,
    secondary: secondaryDarkBtn,
    success: successDarkBtn,
    warning: warningDarkBtn,
    danger: dangerDarkBtn,
    radius: border.radius
  },
  card: {
    bg: secondaryDark.step2,
    border: secondaryDark.step5,
    radius: '0.8rem'
  },
  checkbox: {
    bg: secondaryDark.step3,
    border: secondaryDark.step6,
    radius: '1px',
    hover: {
      bg: secondaryDark.step4,
      border: secondaryDark.step6
    },
    focus: {
      bg: secondaryDark.step3,
      border: secondaryDark.step7
    },
    disabled: {
      bg: neutralDark.step2,
      border: neutralDark.step6
    },
    active: {
      bg: primaryDark.step3,
      border: primaryDark.step9,
      hover: {
        bg: primaryDark.step4,
        border: primaryDark.step9
      },
      focus: {
        bg: primaryDark.step3,
        border: primaryDark.step10
      },
      disabled: {
        bg: neutralDark.step2,
        border: neutralDark.step6
      }
    },
    indicator: {
      color: primaryDark.step9,
      disabled: {
        color: neutralDark.step2
      }
    }
  },
  input: {
    bg: secondaryDark.step3,
    border: secondaryDark.step3,
    color: secondaryDark.step12,
    placeholder: secondaryDark.step11,
    hover: {
      bg: secondaryDark.step4,
      border: secondaryDark.step4
    },
    focus: {
      bg: secondaryDark.step3,
      border: secondaryDark.step6
    },
    disabled: {
      bg: neutralDark.step5,
      border: neutralDark.step5,
      color: neutralDark.step10,
      placeholder: neutralDark.step10
    },
    success: {
      border: successDark.step9
    },
    warning: {
      border: warningDark.step9
    },
    error: {
      border: dangerDark.step9
    },
    icon: {
      color: secondaryDark.step11
    }
  },
  link: {
    color: primaryDark.step10
  },
  loading: {
    primary: {
      color: primaryDark.step11,
      bg: primaryDark.step8
    },
    secondary: {
      color: secondaryDark.step11,
      bg: secondaryDark.step8
    },
    success: {
      color: successDark.step11,
      bg: successDark.step8
    },
    warning: {
      color: warningDark.step11,
      bg: warningDark.step8
    },
    danger: {
      color: dangerDark.step11,
      bg: dangerDark.step8
    }
  },
  radio: {
    bg: secondaryDark.step3,
    border: secondaryDark.step6,
    hover: {
      bg: secondaryDark.step4,
      border: secondaryDark.step6
    },
    focus: {
      bg: secondaryDark.step3,
      border: secondaryDark.step7
    },
    disabled: {
      bg: neutralDark.step2,
      border: neutralDark.step6
    },
    active: {
      bg: primaryDark.step9,
      border: primaryDark.step9,
      hover: {
        bg: primaryDark.step10,
        border: primaryDark.step10
      },
      focus: {
        bg: primaryDark.step9,
        border: primaryDark.step11
      },
      disabled: {
        bg: neutralDark.step9,
        border: neutralDark.step9
      }
    },
    indicator: {
      bg: primaryDark.step3,
      disabled: {
        bg: neutralDark.step1
      }
    }
  },
  select: {
    bg: secondaryDark.step2,
    border: 'transparent',
    radius: border.radius,
    color: secondaryDark.step11,
    hover: {
      bg: secondaryDark.step4,
      border: secondaryDark.step4
    },
    focus: {
      bg: secondaryDark.step3,
      border: secondaryDark.step6
    },
    disabled: {
      bg: neutralDark.step5,
      color: neutralDark.step5,
      placeholder: neutralDark.step10
    },
    success: {
      border: successDark.step9
    },
    warning: {
      border: warningDark.step9
    },
    error: {
      border: dangerDark.step9
    },
    option: {
      bg: secondaryDark.step3,
      color: secondaryDark.step11
    },
    icon: {
      color: secondaryDark.step11
    }
  },
  switch: {
    base: {
      bg: secondaryDark.step6,
      disabled: {
        bg: neutralDark.step6
      },
      active: {
        bg: primaryDark.step6,
        disabled: {
          bg: neutralDark.step6
        }
      }
    },
    indicator: {
      bg: secondaryDark.step9,
      border: secondaryDark.step9,
      hover: {
        bg: secondaryDark.step10,
        border: secondaryDark.step10
      },
      focus: {
        bg: secondaryDark.step9,
        border: secondaryDark.step11
      },
      disabled: {
        bg: neutralDark.step9,
        border: neutralDark.step9
      },
      active: {
        bg: primaryDark.step9,
        border: primaryDark.step9,
        hover: {
          bg: primaryDark.step10,
          border: primaryDark.step10
        },
        focus: {
          bg: primaryDark.step9,
          border: primaryDark.step11
        },
        disabled: {
          bg: neutralDark.step9,
          border: neutralDark.step9
        }
      }
    },
    label: {
      color: secondaryDark.step12,
      disabled: {
        color: neutralDark.step9
      }
    }
  },
  tag: {
    radius: border.radius
  },
  textarea: {
    bg: secondaryDark.step3,
    border: secondaryDark.step1,
    color: secondaryDark.step12,
    placeholder: secondaryDark.step11,
    hover: {
      bg: secondaryDark.step4,
      border: secondaryDark.step4
    },
    focus: {
      bg: secondaryDark.step3,
      border: secondaryDark.step6
    },
    disabled: {
      bg: neutralDark.step5,
      border: neutralDark.step5,
      placeholder: neutralDark.step10
    },
    success: {
      border: successDark.step9
    },
    warning: {
      border: warningDark.step9
    },
    error: {
      border: dangerDark.step9
    }
  },
  tooltip: {
    radius: border.radius,
    icon: {
      color: primaryDark.step9
    },
    content: {
      bg: secondaryDark.step6,
      color: secondaryDark.step12
    }
  },
  // *** MOLECULES *** //
  addressDisplay: {
    color: secondaryDark.step11,
    icon: {
      color: primaryDark.step10
    }
  },
  banner: {
    bg: infoDark.step9,
    border: infoDark.step9,
    color: secondaryDark.step12
  },
  collapsibleCard: {
    outer: {
      bg: secondaryDark.step2,
      border: secondaryDark.step5
    },
    inner: {
      bg: secondaryDarkA.step3,
      border: secondaryDarkA.step5
    },
    trigger: {
      color: primaryDark.step11,
      hover: {
        color: primaryDark.step10
      },
      focus: {
        color: primaryDark.step12
      }
    }
  },
  dialog: {
    radius: '8px',
    overlay: {
      bg: secondaryDarkA.step4
    },
    content: {
      bg: secondaryDark.step2,
      color: secondaryDark.step12
    }
  },
  dropdown: {
    content: {
      primary: {
        bg: primaryDark.step3
      },
      secondary: {
        bg: secondaryDark.step3
      }
    },
    item: {
      primary: {
        bg: primaryDark.step3
      },
      secondary: {
        bg: secondaryDark.step3
      },
      focus: {
        primary: {
          bg: primaryDark.step5
        },
        secondary: {
          bg: secondaryDark.step5
        }
      },
      highlight: {
        primary: {
          bg: primaryDark.step4
        },
        secondary: {
          bg: secondaryDark.step4
        }
      },
      disabled: {
        color: neutralDark.step10
      }
    },
    separator: {
      bg: secondaryDark.step12
    },
    link: {
      color: secondaryDark.step12,
      hover: {
        bg: secondaryDark.step4,
        border: secondaryDark.step4
      },
      disabled: {
        color: secondaryDark.step11
      }
    }
  },
  fieldAlert: {
    bg: primaryDark.step3,
    border: primaryDark.step6,
    radius: border.radius,
    warning: {
      bg: warningDark.step2,
      border: warningDark.step5,
      button: {
        bg: warningDark.step9,
        border: warningDark.step9,
        hover: {
          bg: warningDark.step9,
          border: warningDark.step9
        },
        active: {
          bg: warningDark.step9,
          border: warningDark.step9
        }
      }
    }
  },
  imageInput: {
    imageWrapper: {
      bg: secondaryDark.step2
    },
    cancelIcon: {
      color: secondaryDark.step6
    }
  },
  inputSelect: {
    bg: secondaryDark.step6,
    color: secondaryDark.step12,
    hover: {
      bg: secondaryDark.step7
    },
    focus: {
      bg: secondaryDark.step6
    },
    disabled: {
      bg: secondaryDark.step3
    },
    selectBox: {
      bg: primaryDark.step6
    }
  },
  navigationMenu: {
    root: {
      bg: secondaryDark.step2
    },
    content: {
      bg: secondaryDark.step4,
      border: secondaryDark.step3
    },
    baseItem: {
      color: secondaryDark.step9,
      hover: {
        bg: secondaryDark.step10
      },
      focus: {
        bg: secondaryDark.step11
      }
    },
    link: {
      active: {
        border: secondaryDark.step9,
        color: secondaryDark.step12
      }
    }
  },
  tabs: {
    links: {
      color: secondaryDark.step2
    },
    link: {
      color: secondaryDark.step9,
      hover: {
        color: secondaryDark.step10
      },
      active: {
        border: secondaryDark.step9
      }
    }
  },
  toast: {
    bg: secondaryDark.step3,
    border: secondaryDark.step5,
    radius: border.radius,
    success: {
      bg: successDark.step3,
      border: successDark.step7
    },
    warning: {
      bg: warningDark.step3,
      border: warningDark.step7
    },
    error: {
      bg: dangerDark.step3,
      border: dangerDark.step7
    },
    icon: {
      default: successDark.step9,
      success: successDark.step9,
      warning: warningDark.step9,
      error: dangerDark.step9
    }
  }
});
const defaultLightTheme = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({
  themeName: 'light',
  font,
  border: {
    radius: border.radius
  },
  transparent: 'transparent',
  rootBgColor: secondary.step1,
  rootFontColor: secondary.step12,
  primary: Object.assign({}, primary),
  primaryA: Object.assign({}, primaryA),
  secondary: Object.assign({}, secondary),
  secondaryA: Object.assign({}, secondaryA),
  success: Object.assign({}, success),
  warning: Object.assign({}, warning),
  danger: Object.assign({}, danger),
  info: Object.assign({}, info),
  neutral: Object.assign({}, neutral)
}, blue), violet), pink), green), yellow), red), {
  field: {
    fontWeight: font.weight.reg,
    fontSize: font.size.md,
    inputFont: font.family.body,
    labelFont: font.family.header,
    size: {
      md: '28rem',
      lg: '52rem',
      full: '100%'
    },
    radius: border.radius,
    transition: '0.2s all ease-in-out'
  },
  // *** ATOMS *** //
  avatar: {
    bg: neutral.step9
  },
  button: {
    primary: primaryBtn,
    secondary: secondaryBtn,
    success: successBtn,
    warning: warningBtn,
    danger: dangerBtn,
    radius: border.radius
  },
  card: {
    bg: secondary.step2,
    border: secondary.step5,
    radius: '0.8rem'
  },
  checkbox: {
    bg: secondary.step3,
    border: secondary.step6,
    radius: border.radius,
    hover: {
      bg: secondary.step4,
      border: secondary.step6
    },
    focus: {
      bg: secondary.step3,
      border: secondary.step7
    },
    disabled: {
      bg: neutral.step2,
      border: neutral.step6
    },
    active: {
      bg: primary.step3,
      border: primary.step9,
      hover: {
        bg: primary.step4,
        border: primary.step9
      },
      focus: {
        bg: primary.step3,
        border: primary.step10
      },
      disabled: {
        bg: neutral.step2,
        border: neutral.step6
      }
    },
    indicator: {
      color: primary.step9,
      disabled: {
        color: neutral.step2
      }
    }
  },
  input: {
    bg: secondary.step3,
    border: secondary.step3,
    color: secondary.step12,
    placeholder: secondary.step11,
    hover: {
      bg: secondary.step4,
      border: secondary.step4
    },
    focus: {
      bg: secondary.step3,
      border: secondary.step6
    },
    disabled: {
      bg: neutral.step5,
      border: neutral.step5,
      color: neutral.step10,
      placeholder: neutral.step10
    },
    success: {
      border: success.step9
    },
    warning: {
      border: warning.step9
    },
    error: {
      border: danger.step9
    },
    icon: {
      color: secondary.step11
    }
  },
  link: {
    color: primary.step10
  },
  loading: {
    primary: {
      color: primary.step11,
      bg: primary.step8
    },
    secondary: {
      color: secondary.step11,
      bg: secondary.step8
    },
    success: {
      color: success.step11,
      bg: success.step8
    },
    warning: {
      color: warning.step11,
      bg: warning.step8
    },
    danger: {
      color: danger.step11,
      bg: danger.step8
    }
  },
  radio: {
    bg: secondary.step3,
    border: secondary.step6,
    hover: {
      bg: secondary.step4,
      border: secondary.step6
    },
    focus: {
      bg: secondary.step3,
      border: secondary.step7
    },
    disabled: {
      bg: neutral.step2,
      border: neutral.step6
    },
    active: {
      bg: primary.step9,
      border: primary.step9,
      hover: {
        bg: primary.step10,
        border: primary.step10
      },
      focus: {
        bg: primary.step9,
        border: primary.step11
      },
      disabled: {
        bg: neutral.step9,
        border: neutral.step9
      }
    },
    indicator: {
      bg: primary.step3,
      disabled: {
        bg: neutral.step1
      }
    }
  },
  select: {
    bg: secondary.step2,
    border: 'transparent',
    radius: border.radius,
    color: secondary.step11,
    hover: {
      bg: secondary.step4,
      border: secondary.step4
    },
    focus: {
      bg: secondary.step3,
      border: secondary.step6
    },
    disabled: {
      bg: neutral.step5,
      color: neutral.step5,
      placeholder: neutral.step10
    },
    success: {
      border: success.step9
    },
    warning: {
      border: warning.step9
    },
    error: {
      border: danger.step9
    },
    option: {
      bg: secondary.step3,
      color: secondary.step11
    },
    icon: {
      color: secondary.step11
    }
  },
  switch: {
    base: {
      bg: secondary.step6,
      disabled: {
        bg: neutral.step6
      },
      active: {
        bg: primary.step6,
        disabled: {
          bg: neutral.step6
        }
      }
    },
    indicator: {
      bg: secondary.step9,
      border: secondary.step9,
      hover: {
        bg: secondary.step10,
        border: secondary.step10
      },
      focus: {
        bg: secondary.step9,
        border: secondary.step11
      },
      disabled: {
        bg: neutral.step9,
        border: neutral.step9
      },
      active: {
        bg: primary.step9,
        border: primary.step9,
        hover: {
          bg: primary.step10,
          border: primary.step10
        },
        focus: {
          bg: primary.step9,
          border: primary.step11
        },
        disabled: {
          bg: neutral.step9,
          border: neutral.step9
        }
      }
    },
    label: {
      color: secondary.step12,
      disabled: {
        color: neutral.step9
      }
    }
  },
  tag: {
    radius: border.radius
  },
  textarea: {
    bg: secondary.step3,
    border: secondary.step1,
    color: secondary.step12,
    placeholder: secondary.step11,
    hover: {
      bg: secondary.step4,
      border: secondary.step4
    },
    focus: {
      bg: secondary.step3,
      border: secondary.step6
    },
    disabled: {
      bg: neutral.step5,
      border: neutral.step5,
      placeholder: neutral.step10
    },
    success: {
      border: success.step9
    },
    warning: {
      border: warning.step9
    },
    error: {
      border: danger.step9
    }
  },
  tooltip: {
    radius: border.radius,
    icon: {
      color: primary.step9
    },
    content: {
      bg: secondary.step6,
      color: secondary.step12
    }
  },
  // *** MOLECULES *** //
  addressDisplay: {
    color: secondary.step11,
    icon: {
      color: primary.step10
    }
  },
  banner: {
    bg: info.step9,
    border: info.step9,
    color: secondary.step12
  },
  collapsibleCard: {
    outer: {
      bg: secondary.step2,
      border: secondary.step5
    },
    inner: {
      bg: secondary.step3,
      border: secondary.step5
    },
    trigger: {
      color: primary.step11,
      hover: {
        color: primary.step10
      },
      focus: {
        color: primary.step12
      }
    }
  },
  dialog: {
    radius: border.radius,
    overlay: {
      bg: secondaryA.step4
    },
    content: {
      bg: secondary.step2,
      color: secondary.step12
    }
  },
  dropdown: {
    content: {
      primary: {
        bg: primary.step3
      },
      secondary: {
        bg: secondary.step3
      }
    },
    item: {
      primary: {
        bg: primary.step3
      },
      secondary: {
        bg: secondary.step3
      },
      focus: {
        primary: {
          bg: primary.step5
        },
        secondary: {
          bg: secondary.step5
        }
      },
      highlight: {
        primary: {
          bg: primary.step4
        },
        secondary: {
          bg: secondary.step4
        }
      },
      disabled: {
        color: neutral.step10
      }
    },
    separator: {
      bg: secondary.step12
    },
    link: {
      color: secondary.step12,
      hover: {
        bg: secondary.step4,
        border: secondary.step4
      },
      disabled: {
        color: secondary.step11
      }
    }
  },
  fieldAlert: {
    bg: primary.step3,
    border: primary.step6,
    radius: border.radius,
    warning: {
      bg: warning.step2,
      border: warning.step5,
      button: {
        bg: warning.step9,
        border: warning.step9,
        hover: {
          bg: warning.step9,
          border: warning.step9
        },
        active: {
          bg: warning.step9,
          border: warning.step9
        }
      }
    }
  },
  imageInput: {
    imageWrapper: {
      bg: secondary.step2
    },
    cancelIcon: {
      color: secondary.step6
    }
  },
  inputSelect: {
    bg: secondary.step6,
    color: secondary.step12,
    hover: {
      bg: secondary.step7
    },
    focus: {
      bg: secondary.step6
    },
    disabled: {
      bg: secondary.step3
    },
    selectBox: {
      bg: primary.step6
    }
  },
  navigationMenu: {
    root: {
      bg: secondary.step2
    },
    content: {
      bg: secondary.step4,
      border: secondary.step3
    },
    baseItem: {
      color: secondary.step9,
      hover: {
        bg: secondary.step10
      },
      focus: {
        bg: secondary.step11
      }
    },
    link: {
      active: {
        border: secondary.step9,
        color: secondary.step12
      }
    }
  },
  tabs: {
    links: {
      color: secondary.step2
    },
    link: {
      color: secondary.step9,
      hover: {
        color: secondary.step10
      },
      active: {
        border: secondary.step9
      }
    }
  },
  toast: {
    bg: secondary.step3,
    border: secondary.step5,
    radius: border.radius,
    success: {
      bg: success.step3,
      border: success.step7
    },
    warning: {
      bg: warning.step3,
      border: warning.step7
    },
    error: {
      bg: danger.step3,
      border: danger.step7
    },
    icon: {
      default: success.step9,
      success: success.step9,
      warning: warning.step9,
      error: danger.step9
    }
  }
});

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';
  style.setAttribute('nonce', 'cm1vaw==');

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = "@import url('https://fonts.googleapis.com/css2?family=Mulish:wght@300;400;500;700;900&family=Space+Mono:wght@400;700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Space+Mono:ital,wght@0,400;0,700;1,400;1,700&display=swap');\n";
styleInject(css_248z);

// TODO Rename to follow pattern established in Dropdown & Navigation Menu
const Provider = ToastPrimitive.Provider;
const Title = ToastPrimitive.Title;
const Description = ToastPrimitive.Description;
const Close = ToastPrimitive.Close;
const VIEWPORT_PADDING = 25;
const hide = /*#__PURE__*/keyframes(["0%{opacity:1};100%{opacity:0};"]);
const slideIn = /*#__PURE__*/keyframes(["from{transform:translateX(calc(100% + ", "px))};to{transform:'translateX(0)'};"], VIEWPORT_PADDING);
const swipeOut = /*#__PURE__*/keyframes({
  from: {
    transform: 'translateX(var(--radix-toast-swipe-end-x))'
  },
  to: {
    transform: `translateX(calc(100% + ${VIEWPORT_PADDING}px))`
  }
});
const Viewport$1 = /*#__PURE__*/styled(ToastPrimitive.Viewport).withConfig({
  displayName: "Toaststyles__Viewport",
  componentId: "sc-1vuovxk-0"
})(["position:fixed;bottom:0;right:0;display:flex;flex-direction:column;padding:20px;gap:10px;width:395px;max-width:90vw;margin:0;list-style:none;z-index:2147483647;outline:none;"]);
const Root$2 = /*#__PURE__*/styled(ToastPrimitive.Root).withConfig({
  displayName: "Toaststyles__Root",
  componentId: "sc-1vuovxk-1"
})(["display:flex;flex-direction:column;background-color:", ";border:1px solid ", ";border-radius:", ";height:auto;padding:2rem;width:auto;&.success{background-color:", ";border:0.1rem solid ", ";}&.warning{background-color:", ";border:0.1rem solid ", ";}&.error{background-color:", ";border:0.1rem solid ", ";}@media (prefers-reduced-motion:no-preference){&[data-state='open']{animation:", " 150ms cubic-bezier(0.16,1,0.3,1);}&[data-state='closed']{animation:", " 100ms ease-in forwards;}&[data-swipe='move']{transform:'translateX(var(--radix-toast-swipe-move-x))';}&[data-swipe='cancel']{transform:'translateX(0)';transition:'transform 200ms ease-out';}&[data-swipe='end']{animation:", " 100ms ease-out forwards;}}"], ({
  theme
}) => theme.secondary.step3, ({
  theme
}) => theme.secondary.step5, ({
  theme
}) => theme.toast.radius, ({
  theme
}) => theme.success.step3, ({
  theme
}) => theme.success.step7, ({
  theme
}) => theme.warning.step3, ({
  theme
}) => theme.warning.step7, ({
  theme
}) => theme.danger.step3, ({
  theme
}) => theme.danger.step7, slideIn, hide, swipeOut);
const HeaderContainer$1 = /*#__PURE__*/styled.div.withConfig({
  displayName: "Toaststyles__HeaderContainer",
  componentId: "sc-1vuovxk-2"
})(["display:flex;"]);
const Icon = /*#__PURE__*/styled.span.withConfig({
  displayName: "Toaststyles__Icon",
  componentId: "sc-1vuovxk-3"
})(["color:", ";font-size:24px;margin-right:1rem;"], ({
  theme,
  $iconType
}) => theme.toast.icon[$iconType]);
const CopyContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "Toaststyles__CopyContainer",
  componentId: "sc-1vuovxk-4"
})(["display:block;width:100%;"]);
const Action = /*#__PURE__*/styled(ToastPrimitive.Action).withConfig({
  displayName: "Toaststyles__Action",
  componentId: "sc-1vuovxk-5"
})(["display:flex;justify-content:space-between;margin-top:20px;"]);
const CloseIcon$1 = /*#__PURE__*/styled.div.withConfig({
  displayName: "Toaststyles__CloseIcon",
  componentId: "sc-1vuovxk-6"
})(["cursor:pointer;font-size:17px;"]);

const ToastProvider = Provider;
const Toast = props => {
  const {
    title,
    description,
    type,
    defaultOpen,
    open,
    onOpenChange,
    duration,
    label,
    hotkey,
    toastType = 'default',
    ariaLabelClose = 'Close',
    toastLinks
  } = props;
  return jsxs(Fragment, {
    children: [jsxs(Root$2, Object.assign({
      type: type,
      open: open,
      duration: duration,
      onOpenChange: onOpenChange,
      defaultOpen: defaultOpen,
      className: toastType
    }, {
      children: [jsxs(HeaderContainer$1, {
        children: [getEnumIcons(toastType), jsxs(CopyContainer, {
          children: [jsx(Title, Object.assign({
            asChild: true
          }, {
            children: jsx(ParSm, {
              children: title
            })
          })), description && jsx(Description, Object.assign({
            asChild: true
          }, {
            children: jsx(ParSm, {
              children: description
            })
          }))]
        }), jsx(Close, Object.assign({
          asChild: true,
          "aria-label": ariaLabelClose
        }, {
          children: jsx(CloseIcon$1, {
            children: jsx(RiCloseFill, {
              "aria-hidden": true
            })
          })
        }))]
      }), toastLinks && jsx(ToastLinks, Object.assign({}, toastLinks))]
    })), jsx(Viewport$1, {
      label: label,
      hotkey: hotkey
    })]
  });
};
// If Toast contains links
const ToastLinks = ({
  leftLink,
  rightLink,
  actionAltText
}) => {
  return jsx(Action, Object.assign({
    asChild: true,
    altText: actionAltText || 'Related Link(s)'
  }, {
    children: jsxs("div", {
      children: [leftLink && jsx(Link$1, Object.assign({
        href: leftLink.path
      }, {
        children: leftLink.text
      })), rightLink && jsx(Link$1, Object.assign({
        href: rightLink.path
      }, {
        children: rightLink.text
      }))]
    })
  }));
};
// Creating enum object of Icons
const EnumIconsObject = {
  default: jsx(RiCheckboxCircleFill, {}),
  success: jsx(RiCheckboxCircleFill, {}),
  warning: jsx(RiErrorWarningFill, {}),
  error: jsx(RiCloseCircleFill, {})
};
function getEnumIcons(toastType) {
  return jsx(Icon, Object.assign({
    "$iconType": toastType
  }, {
    children: EnumIconsObject[toastType]
  }));
}

const HausThemeContext = /*#__PURE__*/createContext({
  theme: defaultDarkTheme,
  setTheme: () => null,
  toggleLightDark: () => undefined,
  setToast: () => undefined
});
const DEFAULT_TOAST_DURATION = 6000;
const mergeThemeProperties = (theme, overrides) => Object.assign(Object.assign({}, theme), overrides);
const HausThemeProvider = ({
  children,
  defaultDark: _defaultDark = defaultDarkTheme,
  defaultLight: _defaultLight = defaultLightTheme,
  startDark: _startDark = true,
  themeOverrides
}) => {
  const [theme, setTheme] = useState(mergeThemeProperties(_startDark ? _defaultDark : _defaultLight, themeOverrides));
  const [toast, setToast] = useState(null);
  useEffect(() => {
    setTheme(mergeThemeProperties(_startDark ? _defaultDark : _defaultLight, themeOverrides));
  }, [_startDark, _defaultDark, _defaultLight, themeOverrides]);
  const toggleLightDark = () => {
    setTheme(prevState => mergeThemeProperties(prevState.themeName === _defaultDark.themeName ? _defaultLight : _defaultDark, themeOverrides));
  };
  const handleOpenChange = open => {
    if (!open) {
      setToast(null);
    }
  };
  return jsx(HausThemeContext.Provider, Object.assign({
    value: {
      theme,
      setTheme,
      toggleLightDark,
      setToast
    }
  }, {
    children: jsx(ThemeProvider, Object.assign({
      theme: theme
    }, {
      children: jsx(ToastProvider, Object.assign({
        duration: (toast === null || toast === void 0 ? void 0 : toast.duration) || DEFAULT_TOAST_DURATION
      }, {
        children: jsxs(Fragment, {
          children: [toast && jsx(Toast, Object.assign({}, toast, {
            onOpenChange: handleOpenChange
          })), children, jsx(GlobalStyles, {
            theme: theme
          })]
        })
      }))
    }))
  }));
};

const useToast = () => {
  const {
    setToast
  } = useContext(HausThemeContext);
  const defaultToast = ({
    title,
    description
  }) => {
    setToast({
      title,
      description,
      toastType: 'default'
    });
  };
  const successToast = ({
    title,
    description
  }) => {
    setToast({
      title,
      description,
      toastType: 'success'
    });
  };
  const warningToast = ({
    title,
    description
  }) => {
    setToast({
      title,
      description,
      toastType: 'warning'
    });
  };
  const errorToast = ({
    title,
    description
  }) => {
    setToast({
      title,
      description,
      toastType: 'error'
    });
  };
  return {
    setToast,
    defaultToast,
    successToast,
    warningToast,
    errorToast
  };
};

var classofRaw = classofRaw$2;
var uncurryThis$2 = functionUncurryThis;

var functionUncurryThisClause = function (fn) {
  // Nashorn bug:
  //   https://github.com/zloirock/core-js/issues/1128
  //   https://github.com/zloirock/core-js/issues/1130
  if (classofRaw(fn) === 'Function') return uncurryThis$2(fn);
};

var isObject = isObject$7;
var classof = classofRaw$2;
var wellKnownSymbol$1 = wellKnownSymbol$a;

var MATCH$1 = wellKnownSymbol$1('match');

// `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp
var isRegexp = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH$1]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};

var isRegExp = isRegexp;

var $TypeError = TypeError;

var notARegexp = function (it) {
  if (isRegExp(it)) {
    throw $TypeError("The method doesn't accept regular expressions");
  } return it;
};

var wellKnownSymbol = wellKnownSymbol$a;

var MATCH = wellKnownSymbol('match');

var correctIsRegexpLogic = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) { /* empty */ }
  } return false;
};

var $$1 = _export;
var uncurryThis$1 = functionUncurryThisClause;
var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
var toLength = toLength$2;
var toString$1 = toString$3;
var notARegExp = notARegexp;
var requireObjectCoercible$1 = requireObjectCoercible$4;
var correctIsRegExpLogic = correctIsRegexpLogic;

// eslint-disable-next-line es/no-string-prototype-startswith -- safe
var nativeStartsWith = uncurryThis$1(''.startsWith);
var stringSlice = uncurryThis$1(''.slice);
var min = Math.min;

var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG = !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.startsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.startswith
$$1({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = toString$1(requireObjectCoercible$1(this));
    notARegExp(searchString);
    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = toString$1(searchString);
    return nativeStartsWith
      ? nativeStartsWith(that, search, index)
      : stringSlice(that, index, index + search.length) === search;
  }
});

const useCopyToClipboard = () => {
  // ! Will we need to get the text back from this hook? Does firing the Toast from the hook make sense?
  const [, setCopiedText] = useState(null); // eslint-disable-line no-eval
  const {
    successToast,
    errorToast
  } = useToast();
  const copy = (text, toastTitle = 'Success', toastDescription = 'was copied to your clipboard.') => __awaiter(void 0, void 0, void 0, function* () {
    if (!(navigator === null || navigator === void 0 ? void 0 : navigator.clipboard)) {
      console.warn('Clipboard not supported');
      return false;
    }
    // Try to save to clipboard then save it in the state if worked
    let toastText = text;
    if (text.startsWith('0x')) {
      toastText = truncateAddress(text);
    }
    try {
      yield navigator.clipboard.writeText(text);
      setCopiedText(text);
      successToast({
        title: toastTitle,
        description: `${toastText} ${toastDescription}`
      });
      return true;
    } catch (error) {
      errorToast({
        title: 'Copy failed:',
        description: `${error}`
      });
      setCopiedText(null);
      return false;
    }
  });
  return copy;
};

const useDebounce = (value, delay) => {
  const [debouncedValue, setDebouncedValue] = useState(value);
  useEffect(() => {
    const timer = setTimeout(() => setDebouncedValue(value), delay || 500);
    return () => {
      clearTimeout(timer);
    };
  }, [value, delay]);
  return debouncedValue;
};

const AddressContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "AddressDisplaystyles__AddressContainer",
  componentId: "x1eodv-0"
})(["display:flex;justify-content:flex-start;align-items:center;gap:1rem;"]);
const AddressDataSm = /*#__PURE__*/styled(DataSm).withConfig({
  displayName: "AddressDisplaystyles__AddressDataSm",
  componentId: "x1eodv-1"
})(["color:", ";"], ({
  theme
}) => theme.addressDisplay.color);
const AddressCopyIcon = /*#__PURE__*/styled.div.withConfig({
  displayName: "AddressDisplaystyles__AddressCopyIcon",
  componentId: "x1eodv-2"
})(["cursor:pointer;margin-top:0.5em;"]);

// ! Where the rest of the props go?
const AddressDisplay = _a => {
  var {
      address,
      explorerNetworkId,
      copy,
      truncate,
      txHash,
      textOverride,
      className
    } = _a;
    __rest(_a, ["address", "explorerNetworkId", "copy", "truncate", "txHash", "textOverride", "className"]);
  const theme = useTheme();
  const copyToClipboard = useCopyToClipboard();
  const explorerLink = useMemo(() => {
    if (explorerNetworkId) {
      return generateExplorerLink({
        chainId: explorerNetworkId,
        address,
        type: txHash ? 'tx' : 'address'
      });
    }
  }, [address, txHash, explorerNetworkId]);
  const handleCopy = () => {
    copyToClipboard(address, `Success ${txHash ? 'Transaction Hash:' : 'Address:'}`);
  };
  const displayAddress = truncate ? truncateAddress(address) : address;
  return jsxs(AddressContainer, Object.assign({
    className: className
  }, {
    children: [jsx(AddressDataSm, {
      children: textOverride ? textOverride : displayAddress
    }), copy && jsx(AddressCopyIcon, {
      children: jsx(Icon$1, {
        children: jsx(RiFileCopyLine, {
          size: "1.5rem",
          color: theme.addressDisplay.icon.color,
          onClick: handleCopy
        })
      })
    }), explorerLink && jsx(Link$1, {
      href: explorerLink
    })]
  }));
};

const StyledBanner = /*#__PURE__*/styled.div.withConfig({
  displayName: "Bannerstyles__StyledBanner",
  componentId: "sc-19tttap-0"
})(["align-items:center;display:flex;background-color:", ";border:1px solid ", ";color:", ";flex-wrap:wrap;height:auto;justify-content:space-between;min-height:8rem;padding:2rem 4rem;width:100%;.banner--text-container{align-items:center;display:flex;margin-bottom:1.6rem;@media (min-width:", "){margin-bottom:0;}svg{font-size:10.8rem;margin-right:1.4rem;@media (min-width:", "){font-size:2.8rem;}}}.banner--link-container{align-items:center;display:flex;justify-content:space-between;width:100%;@media (min-width:", "){justify-content:flex-start;width:auto;}svg{font-size:2.4rem;margin-right:1rem;}}.banner--link-item{@media (min-width:", "){margin:0 6rem;}}"], ({
  theme
}) => theme.banner.bg, ({
  theme
}) => theme.banner.border, ({
  theme
}) => theme.banner.color, breakpoints.xs, breakpoints.xs, breakpoints.xs, breakpoints.xs);

const Banner = ({
  className,
  bannerText: _bannerText = 'DAOhaus v3 is currently in beta. Please report bugs, request features or provide feedback.'
}) => {
  return jsxs(StyledBanner, Object.assign({
    className: className
  }, {
    children: [jsxs("div", Object.assign({
      className: "banner--text-container"
    }, {
      children: [jsx(RiToolsLine, {}), jsx(ParMd, {
        children: _bannerText
      })]
    })), jsxs("div", Object.assign({
      className: "banner--link-container"
    }, {
      children: [jsx(Link$1, Object.assign({
        href: "https://github.com/HausDAO/daohaus-monorepo/issues/new/choose",
        showExternalIcon: false,
        className: "banner--link-item"
      }, {
        children: "Give Feedback"
      })), jsxs(Link$1, Object.assign({
        showExternalIcon: false,
        href: "https://discord.gg/daohaus"
      }, {
        children: [jsx(RiDiscordFill, {}), "Support"]
      }))]
    }))]
  }));
};

// a string of all valid unicode whitespaces
var whitespaces$2 = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
  '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

var uncurryThis = functionUncurryThis;
var requireObjectCoercible = requireObjectCoercible$4;
var toString = toString$3;
var whitespaces$1 = whitespaces$2;

var replace = uncurryThis(''.replace);
var ltrim = RegExp('^[' + whitespaces$1 + ']+');
var rtrim = RegExp('(^|[^' + whitespaces$1 + '])[' + whitespaces$1 + ']+$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod = function (TYPE) {
  return function ($this) {
    var string = toString(requireObjectCoercible($this));
    if (TYPE & 1) string = replace(string, ltrim, '');
    if (TYPE & 2) string = replace(string, rtrim, '$1');
    return string;
  };
};

var stringTrim = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};

var PROPER_FUNCTION_NAME = functionName.PROPER;
var fails = fails$c;
var whitespaces = whitespaces$2;

var non = '\u200B\u0085\u180E';

// check that a method works with the correct list
// of whitespaces and has a correct name
var stringTrimForced = function (METHOD_NAME) {
  return fails(function () {
    return !!whitespaces[METHOD_NAME]()
      || non[METHOD_NAME]() !== non
      || (PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME);
  });
};

var $ = _export;
var $trim = stringTrim.trim;
var forcedStringTrimMethod = stringTrimForced;

// `String.prototype.trim` method
// https://tc39.es/ecma262/#sec-string.prototype.trim
$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {
  trim: function trim() {
    return $trim(this);
  }
});

const FieldWrapperBase = /*#__PURE__*/styled.div.withConfig({
  displayName: "FieldWrapperstyles__FieldWrapperBase",
  componentId: "y7o03w-0"
})(["width:100%;max-width:", ";.field-slot{margin-bottom:1.2rem;}&.long{max-width:", ";}&.full{max-width:", ";}&.hidden{display:none;}"], ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.full);
const LabelContainer$1 = /*#__PURE__*/styled.label.withConfig({
  displayName: "FieldWrapperstyles__LabelContainer",
  componentId: "y7o03w-1"
})(["display:flex;align-items:center;margin-bottom:12px;label{margin-right:10px;}svg{transform:translateY(0.1rem);}"]);
const BottomContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "FieldWrapperstyles__BottomContainer",
  componentId: "y7o03w-2"
})(["display:flex;margin-bottom:12px;width:100%;max-width:", ";&.long{max-width:", ";}&.full{max-width:", ";}"], ({
  theme
}) => theme.field.size.md, ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.full);
const LeftAddonContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "FieldWrapperstyles__LeftAddonContainer",
  componentId: "y7o03w-3"
})(["display:flex;align-items:end;min-width:70%;"]);
const RightAddonContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "FieldWrapperstyles__RightAddonContainer",
  componentId: "y7o03w-4"
})(["display:flex;justify-content:flex-end;min-width:30%;"]);
const RequiredAsterisk = /*#__PURE__*/styled.span.withConfig({
  displayName: "FieldWrapperstyles__RequiredAsterisk",
  componentId: "y7o03w-5"
})(["margin-right:8px;font-weight:", ";color:", ";transform:translateY(-0.25rem);"], font.weight.bold, ({
  theme
}) => theme.warning.step9);

// type FieldWrapperType = PrimitiveElement & PrimitiveWrapper & PrimitiveSizable;
const FieldWrapper = ({
  children,
  label,
  loading,
  info,
  error,
  success,
  warning,
  helperText,
  hidden,
  long,
  full,
  address,
  id,
  rules,
  rightAddon
}) => {
  const classes = classNames({
    long: long || address,
    full,
    hidden
  });
  const {
    getFieldState
  } = useFormContext();
  const fieldError = getFieldState(id).error;
  return jsxs(FieldWrapperBase, Object.assign({
    className: classes
  }, {
    children: [jsxs(LabelContainer$1, {
      children: [(rules === null || rules === void 0 ? void 0 : rules.required) && jsx(RequiredAsterisk, {
        children: jsx(Icon$1, Object.assign({
          label: "Required"
        }, {
          children: jsx(RiAsterisk, {})
        }))
      }), label && jsx(Label$2, Object.assign({
        id: id
      }, {
        children: label
      })), info && jsx(Tooltip, {
        content: info
      })]
    }), jsx("div", Object.assign({
      className: "field-slot"
    }, {
      children: children
    })), jsxs(BottomContainer, Object.assign({
      className: classes
    }, {
      children: [jsxs(LeftAddonContainer, {
        children: [loading && jsx(Loading, {
          size: 20
        }), jsx(HelperTextFactory, {
          error: error || fieldError,
          success: success,
          warning: warning,
          helperText: helperText
        })]
      }), rightAddon && jsx(RightAddonContainer, {
        children: rightAddon
      })]
    }))]
  }));
};
const HelperTextFactory = ({
  error,
  success,
  warning,
  helperText
}) => {
  if (!error && !success && !warning && !helperText) return null;
  if (error) return jsx(ErrorText, {
    children: error.message
  });
  if (warning) return jsx(WarningText, {
    children: warning.message
  });
  if (success) return jsx(SuccessText, {
    children: success.message
  });
  return jsx(HelperText, {
    children: helperText
  });
};

const WrappedInput = ({
  id,
  rules,
  helperText,
  long,
  full,
  icon,
  success,
  warning,
  error,
  number,
  address,
  className,
  placeholder,
  defaultValue,
  value,
  disabled,
  hidden,
  rightAddon,
  label,
  loading,
  info
}) => {
  const {
    register
  } = useFormContext();
  return jsx(FieldWrapper, Object.assign({
    label: label,
    loading: loading,
    info: info,
    error: error,
    success: success,
    warning: warning,
    helperText: helperText,
    hidden: hidden,
    long: long,
    full: full,
    address: address,
    rightAddon: rightAddon,
    id: id,
    rules: rules
  }, {
    children: jsx(Input, Object.assign({}, register(id, rules), {
      id: id,
      long: long,
      full: full,
      icon: icon,
      success: success,
      warning: warning,
      error: error,
      number: number,
      address: address,
      className: className,
      placeholder: placeholder,
      defaultValue: defaultValue,
      value: value,
      disabled: disabled,
      hidden: hidden
    }))
  }));
};

const CSInput = props => {
  const {
    rules,
    id,
    itemNoun = {
      singular: 'item',
      plural: 'items'
    }
  } = props;
  const {
    watch
  } = useFormContext();
  const value = watch(id);
  const amtItems = Array.isArray(value) ? value.length : 0;
  const helperText = `${amtItems} ${handlePluralNoun(itemNoun, amtItems)} typed`;
  const newRules = Object.assign(Object.assign({}, rules), {
    setValueAs: value => value.trim().split(',').filter(Boolean)
  });
  return jsx(WrappedInput, Object.assign({}, props, {
    rules: newRules,
    helperText: helperText
  }));
};

const StyledCollapsibleCard = /*#__PURE__*/styled(Collapsible.Root).withConfig({
  displayName: "CollapsibleCardstyles__StyledCollapsibleCard",
  componentId: "sc-1lepuva-0"
})(["", " background-color:", ";border:", "px solid ", ";width:", ";"], CardStyles, ({
  noBackground,
  theme
}) => noBackground ? 'inherit' : theme.collapsibleCard.outer.bg, ({
  noBackground
}) => noBackground ? '0' : '1', ({
  theme
}) => theme.collapsibleCard.outer.border, props => props.width);
const InnerCard = /*#__PURE__*/styled(Card).withConfig({
  displayName: "CollapsibleCardstyles__InnerCard",
  componentId: "sc-1lepuva-1"
})(["background-color:", ";border:1px solid ", ";display:flex;flex-direction:row;justify-content:space-between;align-items:center;width:", ";"], ({
  theme
}) => theme.collapsibleCard.inner.bg, ({
  theme
}) => theme.collapsibleCard.inner.border, props => props.width);
const StyledCardActionsContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "CollapsibleCardstyles__StyledCardActionsContainer",
  componentId: "sc-1lepuva-2"
})(["display:flex;"]);
const StyledCollapsibleCardTrigger = /*#__PURE__*/styled(Collapsible.Trigger).withConfig({
  displayName: "CollapsibleCardstyles__StyledCollapsibleCardTrigger",
  componentId: "sc-1lepuva-3"
})(["align-items:center;background-color:transparent;border:none;border-bottom:2px transparent solid;color:", ";cursor:pointer;display:inline-flex;font-size:14px;letter-spacing:1.5px;margin-left:2rem;padding:0;transition:0.2s all;&:hover{color:", ";text-decoration:none;}:focus{color:", ";}svg{font-size:20px;margin-left:auto;}&[data-state='open']{svg{transform:rotate(180deg);}}"], ({
  theme
}) => theme.collapsibleCard.trigger.color, ({
  theme
}) => theme.collapsibleCard.trigger.hover.color, ({
  theme
}) => theme.collapsibleCard.trigger.focus.color);
const open = /*#__PURE__*/keyframes(["from{height:0}to{height:100}"]);
const close = /*#__PURE__*/keyframes(["from{height:100}to{height:0}"]);
const StyledCollapsibleContent = /*#__PURE__*/styled(Collapsible.Content).withConfig({
  displayName: "CollapsibleCardstyles__StyledCollapsibleContent",
  componentId: "sc-1lepuva-4"
})(["margin-top:2rem;overflow:hidden;&[data-state='open']{animation:", " 300ms ease-out;}&[data-state='closed']{animation:", " 300ms ease-out;}"], open, close);

const CollapsibleContent = StyledCollapsibleContent;
const CollapsibleCard = ({
  defaultOpen,
  open,
  onChange,
  width: _width = 'fit-content',
  children,
  collapsibleActions,
  collapsibleContent,
  triggerLabel: _triggerLabel = 'Show More'
}) => {
  return jsxs(StyledCollapsibleCard, Object.assign({
    defaultOpen: defaultOpen,
    open: open,
    onChange: onChange,
    width: _width
  }, {
    children: [jsxs(InnerCard, Object.assign({
      width: _width
    }, {
      children: [children, jsxs(StyledCardActionsContainer, {
        children: [collapsibleActions, jsxs(StyledCollapsibleCardTrigger, {
          children: [_triggerLabel, jsx(RiArrowDropDownLine, {})]
        })]
      })]
    })), jsx(StyledCollapsibleContent, {
      children: collapsibleContent ? collapsibleContent : jsx("p", {
        children: "No Content found"
      })
    })]
  }));
};

const DataIndicatorContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "DataIndicatorstyles__DataIndicatorContainer",
  componentId: "sc-40tqyd-0"
})(["display:flex;flex-direction:column;"]);
const DataIndicatorLabelMd = /*#__PURE__*/styled(ParMd).withConfig({
  displayName: "DataIndicatorstyles__DataIndicatorLabelMd",
  componentId: "sc-40tqyd-1"
})(["margin-bottom:0.5rem;opacity:0.9;"]);
const DataIndicatorLabelSm = /*#__PURE__*/styled(ParSm).withConfig({
  displayName: "DataIndicatorstyles__DataIndicatorLabelSm",
  componentId: "sc-40tqyd-2"
})(["opacity:0.9;"]);

const DataIndicator = ({
  label,
  data,
  size: _size = 'lg',
  info
}) => {
  if (_size === 'sm') {
    return jsxs(DataIndicatorContainer, {
      children: [jsxs(DataIndicatorLabelMd, {
        children: [label, " ", info && jsx(Tooltip, {
          content: info
        })]
      }), jsx(DataMd, {
        children: data
      })]
    });
  }
  return jsxs(DataIndicatorContainer, {
    children: [jsxs(DataIndicatorLabelSm, {
      children: [label, " ", info && jsx(Tooltip, {
        content: info
      })]
    }), jsx(DataXl, {
      children: data
    })]
  });
};

const DialogRoot = DialogPrimitive.Root;
const DialogPrimitaveTrigger = DialogPrimitive.Trigger;
const DialogClose = DialogPrimitive.Close;
const DialogPortal = DialogPrimitive.Portal;
const DialogTitle = DialogPrimitive.Title;
const DialogDescription = DialogPrimitive.Description;
const overlayShow = /*#__PURE__*/keyframes(["0%{opacity:0};100%{opacity:1};"]);
const StyledDialogOverlay = /*#__PURE__*/styled(DialogPrimitive.Overlay).withConfig({
  displayName: "Dialogstyles__StyledDialogOverlay",
  componentId: "amevq3-0"
})(["background-color:", ";position:fixed;inset:0;@media (prefers-reduced-motion:no-preference){animation:", " 150ms cubic-bezier(0.16,1,0.3,1);}"], ({
  theme
}) => theme.dialog.overlay.bg, overlayShow);
const contentShow = /*#__PURE__*/keyframes(["0%{opacity:0;transform:translate(-50%,-48%) scale(.96)};100%{opacity:1;transform:translate(-50%,-50%) scale(1)};"]);
const StyledDialogContent = /*#__PURE__*/styled(DialogPrimitive.Content).withConfig({
  displayName: "Dialogstyles__StyledDialogContent",
  componentId: "amevq3-1"
})(["background-color:", ";border-radius:", ";box-shadow:hsl(206 22% 7% / 35%) 0px 10px 38px -10px,hsl(206 22% 7% / 20%) 0px 10px 20px -15px;color:", ";display:flex;flex-direction:column;justify-content:space-between;left:50%;max-height:85vh;max-width:80%;min-height:23rem;padding:3rem;position:fixed;top:50%;transform:translate(-50%,-50%);overflow-y:auto;@media (prefers-reduced-motion:no-preference){animation:", " 150ms cubic-bezier(0.16,1,0.3,1);}&:focus{outline:none;}"], ({
  theme
}) => theme.dialog.content.bg, ({
  theme
}) => theme.dialog.radius, ({
  theme
}) => theme.dialog.content.color, contentShow);
const DialogBody = /*#__PURE__*/styled.div.withConfig({
  displayName: "Dialogstyles__DialogBody",
  componentId: "amevq3-2"
})(["display:flex;height:auto;width:100%;"]);
const HeaderContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "Dialogstyles__HeaderContainer",
  componentId: "amevq3-3"
})(["align-items:baseline;display:flex;justify-content:space-between;margin-bottom:1rem;"]);
const CloseIcon = /*#__PURE__*/styled.div.withConfig({
  displayName: "Dialogstyles__CloseIcon",
  componentId: "amevq3-4"
})(["margin-left:auto;cursor:pointer;font-size:24px;"]);
const ButtonContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "Dialogstyles__ButtonContainer",
  componentId: "amevq3-5"
})(["align-self:", ";display:flex;gap:1rem;@media ", "{width:100%;}"], props => `flex-${props.align}`, widthQuery.sm);

const Dialog = DialogRoot;
const DialogTrigger = DialogPrimitaveTrigger;
const DialogContent = /*#__PURE__*/React.forwardRef((_a, ref) => {
  var {
      title,
      children,
      description,
      alignButtons = 'end',
      leftButton,
      rightButton
    } = _a,
    props = __rest(_a, ["title", "children", "description", "alignButtons", "leftButton", "rightButton"]);
  return jsxs(DialogPortal, {
    children: [jsx(StyledDialogOverlay, {}), jsxs(StyledDialogContent, Object.assign({}, props, {
      ref: ref
    }, {
      children: [jsxs("div", {
        children: [jsxs(HeaderContainer, {
          children: [jsx(DialogTitle, Object.assign({
            asChild: true
          }, {
            children: jsx(H5, {
              children: title
            })
          })), jsx(DialogClose, Object.assign({
            asChild: true
          }, {
            children: jsx(CloseIcon, {
              children: jsx(RiCloseFill, {
                "aria-hidden": true
              })
            })
          }))]
        }), jsx(DialogBody, {
          children: jsx(DialogDescription, {
            children: description
          })
        }), children]
      }), (leftButton || rightButton) && jsxs(ButtonContainer, Object.assign({
        align: alignButtons
      }, {
        children: [leftButton && jsx(Button, Object.assign({
          color: "secondary",
          size: "sm"
        }, leftButton, {
          children: leftButton === null || leftButton === void 0 ? void 0 : leftButton.children
        })), rightButton && rightButton.$closeDialog ? jsx(DialogClose, Object.assign({
          asChild: true
        }, {
          children: jsx(Button, Object.assign({
            color: "secondary",
            size: "sm"
          }, rightButton, {
            children: "Close"
          }))
        })) : jsx(Button, Object.assign({
          color: "secondary",
          size: "sm"
        }, rightButton, {
          children: rightButton === null || rightButton === void 0 ? void 0 : rightButton.children
        }))]
      }))]
    }))]
  });
});

const ProfileAvatar = _a => {
  var {
      address,
      image,
      src
    } = _a,
    props = __rest(_a, ["address", "image", "src"]);
  const blockie = useMemo(() => {
    if (address) {
      return jsx(BlockieImg, {
        src: makeBlockie(address),
        alt: "user avatar"
      });
    }
    return '?';
  }, [address]);
  return jsx(Avatar, Object.assign({}, props, {
    src: image || src,
    fallback: blockie
  }));
};
const BlockieImg = /*#__PURE__*/styled.img.withConfig({
  displayName: "ProfileAvatar__BlockieImg",
  componentId: "sc-1s4jsyu-0"
})(["width:100%;height:100%;object-fit:cover;border-radius:inherit;"]);

const StyledProfileButton = /*#__PURE__*/styled(Button).withConfig({
  displayName: "ProfileButtonstyles__StyledProfileButton",
  componentId: "sc-1jqi3im-0"
})(["font-weight:400;svg{&.icon-right{margin-left:auto;}}.interior{display:flex;flex-direction:column;align-items:flex-start;}"]);
const ProfileBtnAvatar = /*#__PURE__*/styled(ProfileAvatar).withConfig({
  displayName: "ProfileButtonstyles__ProfileBtnAvatar",
  componentId: "sc-1jqi3im-1"
})(["margin-right:1rem;&.sm{margin-right:0.8rem;}&.lg{margin-right:1.4rem;}"]);

const ProfileButton = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
      color = 'secondary',
      variant = 'solid',
      size = 'md',
      profile,
      avatarOnly = false,
      IconRight,
      children,
      className
    } = props,
    rest = __rest(props, ["color", "variant", "size", "profile", "avatarOnly", "IconRight", "children", "className"]);
  const classes = classNames({
    [variant]: variant,
    [size]: size,
    profile: true
  });
  return jsxs(StyledProfileButton, Object.assign({}, rest, {
    color: color,
    size: size,
    variant: variant,
    className: `${classes} ${className}`,
    ref: ref,
    IconRight: !avatarOnly ? IconRight : undefined
  }, {
    children: [!avatarOnly ? jsx(ProfileBtnAvatar, {
      address: profile.address,
      image: profile.avatar,
      size: size
    }) : jsx(ProfileAvatar, {
      address: profile.address,
      image: profile.avatar,
      size: size
    }), !avatarOnly && jsxs("div", Object.assign({
      className: "interior"
    }, {
      children: [profile.ens && profile.ens, !profile.ens && profile.address && truncateAddress(profile.address), children]
    }))]
  }));
});

// * Start New Dropdown implementation
const Root$1 = Dropdown.Root;
const Portal = Dropdown.Portal;
const Group = Dropdown.Group;
const RadioGroup$1 = Dropdown.RadioGroup;
const Trigger$1 = /*#__PURE__*/styled(Dropdown.Trigger).withConfig({
  displayName: "Dropdownstyles__Trigger",
  componentId: "v728h3-0"
})(["svg.icon-right{transition:0.2s all;margin-left:auto;}&[data-state='open'] svg.icon-right{transform:rotate(180deg);}"]);
const BaseContentStyle = /*#__PURE__*/css(["background-color:", ";border-radius:4px;font-weight:", ";line-height:", ";letter-spacing:", ";font-size:", ";padding:5px;display:flex;flex-direction:column;gap:4px;"], ({
  $color: _$color = 'primary',
  theme
}) => theme.dropdown.content[_$color].bg, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.lineHeight, ({
  theme
}) => theme.font.letterSpacing, ({
  theme
}) => theme.font.size.md);
const Content$1 = /*#__PURE__*/styled(Dropdown.DropdownMenuContent).withConfig({
  displayName: "Dropdownstyles__Content",
  componentId: "v728h3-1"
})(["", ""], BaseContentStyle);
const Label = /*#__PURE__*/styled(Dropdown.Label).withConfig({
  displayName: "Dropdownstyles__Label",
  componentId: "v728h3-3"
})(["font-size:", ";min-height:4.8rem;padding:12px;"], ({
  theme
}) => theme.font.size.xs);
const BaseItemStyles = /*#__PURE__*/css(["align-items:center;background-color:", ";border-radius:4px;cursor:pointer;display:flex;font-weight:400;height:48px;outline:none;padding:0 12px;width:100%;&:focus-visible{background-color:", ";}&[data-highlighted]{background-color:", ";}&[data-disabled]{cursor:not-allowed;color:", ";& *{color:", ";}}"], ({
  $color: _$color2 = 'primary',
  theme
}) => theme.dropdown.item[_$color2].bg, ({
  $color: _$color3 = 'primary',
  theme
}) => theme.dropdown.item.focus[_$color3].bg, ({
  $color: _$color4 = 'primary',
  theme
}) => theme.dropdown.item.highlight[_$color4].bg, ({
  theme
}) => theme.dropdown.item.disabled.color, ({
  theme
}) => theme.dropdown.item.disabled.color);
const Item$1 = /*#__PURE__*/styled(Dropdown.Item).withConfig({
  displayName: "Dropdownstyles__Item",
  componentId: "v728h3-4"
})(["", " svg{width:2.2rem;height:2.2rem;&.icon-left{margin-right:1rem;}&.icon-right{margin-left:0.5rem;}}"], BaseItemStyles);
const CheckboxItem = /*#__PURE__*/styled(Dropdown.CheckboxItem).withConfig({
  displayName: "Dropdownstyles__CheckboxItem",
  componentId: "v728h3-5"
})(["", ""], BaseItemStyles);
const RadioItem$1 = /*#__PURE__*/styled(Dropdown.RadioItem).withConfig({
  displayName: "Dropdownstyles__RadioItem",
  componentId: "v728h3-6"
})(["", ""], BaseItemStyles);
const Separator = /*#__PURE__*/styled(Dropdown.Separator).withConfig({
  displayName: "Dropdownstyles__Separator",
  componentId: "v728h3-8"
})(["background-color:", ";height:1px;margin:5px 0;width:100%;"], ({
  theme
}) => theme.dropdown.separator.bg);
const ItemIndicator = /*#__PURE__*/styled(Dropdown.ItemIndicator).withConfig({
  displayName: "Dropdownstyles__ItemIndicator",
  componentId: "v728h3-9"
})(["margin-left:auto;display:inline-flex;align-items:center;justify-content:center;"]);
const DropdownLinkStyles = /*#__PURE__*/css(["", " color:", ";&:hover{background-color:", ";border-color:", ";text-decoration:none;}&.disabled{color:", ";}"], LinkStyles, ({
  theme
}) => theme.dropdown.link.color, ({
  theme
}) => theme.dropdown.link.hover.bg, ({
  theme
}) => theme.dropdown.link.hover.border, ({
  theme
}) => theme.dropdown.link.disabled.color);
const StyledDropdownLink = /*#__PURE__*/styled(Link$1).withConfig({
  displayName: "Dropdownstyles__StyledDropdownLink",
  componentId: "v728h3-10"
})(["", ""], DropdownLinkStyles);

// * Start New Dropdown Implementation
const DropdownMenu = Root$1;
const DropdownLabel = Label;
const DropdownGroup = Group;
const DropdownRadioGroup = RadioGroup$1;
const DropdownSeparator = Separator;
// ! Is this link used anywhere?
const DropdownLink = StyledDropdownLink;
const DropdownTrigger = Trigger$1;
const DropdownButtonTrigger = _a => {
  var {
      color = 'secondary',
      children
    } = _a,
    props = __rest(_a, ["color", "children"]);
  return jsx(Trigger$1, Object.assign({
    asChild: true
  }, {
    children: jsx(Button, Object.assign({
      color: color,
      IconRight: RiArrowDropDownLine
    }, props, {
      children: children
    }))
  }));
};
const DropdownProfileTrigger = _a => {
  var {
      color = 'secondary',
      children
    } = _a,
    props = __rest(_a, ["color", "children"]);
  return jsx(Trigger$1, Object.assign({
    asChild: true
  }, {
    children: jsx(ProfileButton, Object.assign({
      color: color,
      IconRight: RiArrowDropDownLine
    }, props, {
      children: children
    }))
  }));
};
const DropdownIconTrigger = _a => {
  var {
      color = 'secondary',
      children
    } = _a,
    props = __rest(_a, ["color", "children"]);
  return jsx(Trigger$1, Object.assign({
    asChild: true
  }, {
    children: jsx(IconButton, Object.assign({
      color: color
    }, props))
  }));
};
const DropdownContent = /*#__PURE__*/React.forwardRef((_a, forwardedRef) => {
  var {
      color = 'secondary',
      className,
      children
    } = _a,
    props = __rest(_a, ["color", "className", "children"]);
  return jsx(Portal, {
    children: jsx(Content$1, Object.assign({
      "$color": color
    }, props, {
      ref: forwardedRef
    }, {
      children: children
    }))
  });
});
const DropdownItem = _a => {
  var {
      color = 'secondary',
      className,
      children
    } = _a,
    props = __rest(_a, ["color", "className", "children"]);
  return jsx(Item$1, Object.assign({
    "$color": color,
    className: `${className}`
  }, props, {
    children: children
  }));
};
const DropdownCheckbox = /*#__PURE__*/React.forwardRef((_a, forwardedRef) => {
  var {
      color = 'secondary',
      checked,
      children
    } = _a,
    props = __rest(_a, ["color", "checked", "children"]);
  return jsxs(CheckboxItem, Object.assign({
    "$color": color,
    checked: checked,
    ref: forwardedRef
  }, props, {
    children: [children, jsx(ItemIndicator, {
      children: jsx(RiCheckLine, {})
    })]
  }));
});
const DropdownRadio = /*#__PURE__*/React.forwardRef((_a, forwardedRef) => {
  var {
      color = 'secondary',
      className,
      children
    } = _a,
    props = __rest(_a, ["color", "className", "children"]);
  return jsxs(RadioItem$1, Object.assign({
    "$color": color,
    ref: forwardedRef
  }, props, {
    children: [children, jsx(ItemIndicator, {
      children: jsx(RiRadioButtonFill, {})
    })]
  }));
});

const CheckGateBox = /*#__PURE__*/styled.div.withConfig({
  displayName: "CheckGatestyles__CheckGateBox",
  componentId: "sc-1xn3371-0"
})(["margin-top:3.6rem;"]);

const CheckGate = _a => {
  var {
      id,
      fields,
      gateLabel,
      onUnchecked,
      rules
    } = _a,
    props = __rest(_a, ["id", "fields", "gateLabel", "onUnchecked", "rules"]);
  const [gatedOn, toggleGate] = useState(false);
  const onCheckedChanged = checked => {
    toggleGate(checked.valueOf());
    if (!checked) onUnchecked === null || onUnchecked === void 0 ? void 0 : onUnchecked();
  };
  return jsxs(FieldWrapper, Object.assign({}, props, {
    id: id,
    rules: rules
  }, {
    children: [jsx(Checkbox, {
      id: id,
      title: gateLabel,
      onCheckedChange: onCheckedChanged
    }), gatedOn && jsx(CheckGateBox, {
      children: fields
    })]
  }));
};

// TODO: Delete props added to styled div
const FieldAlertWrapper = /*#__PURE__*/styled.div.withConfig({
  displayName: "FieldAlertstyles__FieldAlertWrapper",
  componentId: "ftwiw9-0"
})(["padding:1.6rem;display:flex;justify-content:space-between;align-items:center;border-radius:", ";max-width:600px;background:", ";border:1px solid ", ";&.full{max-width:", ";}&.warning{background:", ";border:1px solid ", ";p{color:", ";}button{background-color:", ";border:1px solid ", ";&:hover{background-color:", ";border:1px solid ", ";}:active{background-color:", ";border:1px solid ", ";}}}"], ({
  theme
}) => theme.fieldAlert.radius, ({
  theme
}) => theme.primary.step3, ({
  theme
}) => theme.primary.step6, ({
  theme
}) => theme.field.size.full, ({
  theme
}) => theme.warning.step2, ({
  theme
}) => theme.warning.step5, ({
  theme
}) => theme.warning.step10, ({
  theme
}) => theme.warning.step9, ({
  theme
}) => theme.warning.step9, ({
  theme
}) => theme.warning.step10, ({
  theme
}) => theme.warning.step10, ({
  theme
}) => theme.warning.step9, ({
  theme
}) => theme.warning.step9);

const FieldAlert = ({
  className,
  message,
  children
}) => {
  return jsxs(FieldAlertWrapper, Object.assign({
    className: className
  }, {
    children: [jsx(ParXs, {
      children: message
    }), children]
  }));
};

const HighlightInputText = ({
  color,
  description,
  highlightColor,
  highlightInputId
}) => {
  const {
    watch
  } = useFormContext();
  const highlightValue = highlightInputId ? watch(highlightInputId) : '';
  return jsxs(ParSm, Object.assign({
    color: color
  }, {
    children: [description, highlightValue && jsx(Bold, Object.assign({
      color: highlightColor
    }, {
      children: highlightValue
    }))]
  }));
};

const InputSelectBox = /*#__PURE__*/styled.div.withConfig({
  displayName: "InputSelectstyles__InputSelectBox",
  componentId: "sc-18wc6eu-0"
})(["display:flex;width:100%;max-width:", ";.select{max-width:100%;padding:0 0.8rem;border-radius:", ";border-left:none;color:white;font-weight:", ";background-color:", ";color:", ";&:hover{background-color:", ";}:focus{background-color:", ";}:disabled{background-color:", ";cursor:not-allowed;}}.select-box{max-width:10rem;svg{right:0.6rem;color:", ";}&.match-long{max-width:16rem;}&.match-full{max-width:18rem;}}.input{border-right:none;border-radius:", ";}&.long{max-width:", ";}&.full{max-width:", ";}"], ({
  theme
}) => theme.field.size.md, ({
  theme
}) => `0 ${theme.field.radius} ${theme.field.radius} 0`, ({
  theme
}) => theme.font.weight.bold, ({
  theme
}) => theme.inputSelect.bg, ({
  theme
}) => theme.inputSelect.color, ({
  theme
}) => theme.inputSelect.hover.bg, ({
  theme
}) => theme.inputSelect.focus.bg, ({
  theme
}) => theme.inputSelect.disabled.bg, ({
  theme
}) => theme.inputSelect.selectBox.bg, ({
  theme
}) => `0 ${theme.field.radius} ${theme.field.radius} 0`, ({
  theme
}) => theme.field.size.lg, ({
  theme
}) => theme.field.size.full);

const InputSelect = ({
  selectId,
  id,
  options,
  disabled,
  long,
  full,
  error,
  warning,
  placeholder,
  selectPlaceholder,
  registerSelect: _registerSelect = {},
  registerInput: _registerInput = {},
  defaultValue,
  selectDefault
}) => {
  const classes = classNames({
    long,
    full
  });
  const selectClasses = classNames({
    'match-long': long,
    'match-full': full
  });
  return jsxs(InputSelectBox, Object.assign({
    className: classes
  }, {
    children: [jsx(Input, Object.assign({
      id: id,
      disabled: disabled,
      className: `input ${classes}`,
      placeholder: placeholder,
      error: error,
      warning: warning,
      full: true,
      defaultValue: defaultValue
    }, _registerInput)), jsx(Select, Object.assign({
      id: selectId,
      options: options,
      defaultValue: selectDefault,
      disabled: disabled,
      className: "select",
      containerClassName: `select-box ${selectClasses}`,
      placeholder: selectPlaceholder,
      error: error,
      warning: warning
    }, _registerSelect))]
  }));
};

const Root = /*#__PURE__*/styled(RadixNavMenu.Root).withConfig({
  displayName: "NavigationMenustyles__Root",
  componentId: "wgivfz-0"
})(["background-color:", ";padding:2.8rem;"], props => props.theme.secondary.step2);
const Content = /*#__PURE__*/styled(RadixNavMenu.Content).withConfig({
  displayName: "NavigationMenustyles__Content",
  componentId: "wgivfz-1"
})(["position:absolute;top:100%;background-color:", ";border:1px solid ", ";border-radius:4px;font-weight:", ";line-height:", ";letter-spacing:", ";font-size:", ";padding:5px;display:flex;flex-direction:column;gap:4px;width:fit-content;"], ({
  theme
}) => theme.navigationMenu.content.bg, ({
  theme
}) => theme.navigationMenu.content.border, ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.lineHeight, ({
  theme
}) => theme.font.letterSpacing, ({
  theme
}) => theme.font.size.md);
const NavMenuBaseItemStyles = /*#__PURE__*/css(["padding:8px 12px;cursor:pointer;outline:none;user-select:none;font-weight:", ";line-height:", ";letter-spacing:", ";font-size:", ";border-radius:4px;color:", ";&:hover{color:", ";}&:focus{color:", ";}"], ({
  theme
}) => theme.font.weight.reg, ({
  theme
}) => theme.font.lineHeight, ({
  theme
}) => theme.font.letterSpacing, ({
  theme
}) => theme.font.size.lg, ({
  theme
}) => theme.navigationMenu.baseItem.color, ({
  theme
}) => theme.navigationMenu.baseItem.hover.bg, ({
  theme
}) => theme.navigationMenu.baseItem.focus.bg);
const List = /*#__PURE__*/styled(RadixNavMenu.List).withConfig({
  displayName: "NavigationMenustyles__List",
  componentId: "wgivfz-2"
})(["display:flex;list-style:none;margin:0;padding:0;gap:30px;"]);
const Trigger = /*#__PURE__*/styled(RadixNavMenu.Trigger).withConfig({
  displayName: "NavigationMenustyles__Trigger",
  componentId: "wgivfz-3"
})(["all:unset;", " display:flex;align-items:center;justify-content:space-between;"], NavMenuBaseItemStyles);
const Item = /*#__PURE__*/styled(RadixNavMenu.Item).withConfig({
  displayName: "NavigationMenustyles__Item",
  componentId: "wgivfz-4"
})([""]);
const Link = /*#__PURE__*/styled(RadixNavMenu.Link).withConfig({
  displayName: "NavigationMenustyles__Link",
  componentId: "wgivfz-5"
})(["", " display:block;text-decoration:none;&[data-active]{color:", ";border-bottom:2px ", " solid;}"], NavMenuBaseItemStyles, ({
  theme
}) => theme.navigationMenu.link.active.color, ({
  theme
}) => theme.navigationMenu.link.active.border);
const Indicator = /*#__PURE__*/styled(RadixNavMenu.Indicator).withConfig({
  displayName: "NavigationMenustyles__Indicator",
  componentId: "wgivfz-6"
})(["bottom:0;height:2px;background-color:", ";transition:all 0.5s ease;display:flex;align-items:flex-end;justify-content:center;overflow:hidden;"], ({
  theme
}) => theme.secondary.step11);
const scaleIn = /*#__PURE__*/keyframes({
  from: {
    transform: 'rotateX(-30deg) scale(0.9)',
    opacity: 0
  },
  to: {
    transform: 'rotateX(0deg) scale(1)',
    opacity: 1
  }
});
const scaleOut = /*#__PURE__*/keyframes({
  from: {
    transform: 'rotateX(0deg) scale(1)',
    opacity: 1
  },
  to: {
    transform: 'rotateX(-10deg) scale(0.95)',
    opacity: 0
  }
});
const Viewport = /*#__PURE__*/styled(RadixNavMenu.Viewport).withConfig({
  displayName: "NavigationMenustyles__Viewport",
  componentId: "wgivfz-7"
})(["position:relative;transform-origin:top center;transition:width,height,300ms ease;&[data-state='open']{animation:", " 200ms ease;}&[data-state='closed']{animation:", " 200ms ease;}"], scaleIn, scaleOut);

const NavMenuViewport = Viewport;
const NavMenuIndicator = Indicator;
const NavMenu = _a => {
  var {
      children
    } = _a,
    props = __rest(_a, ["children"]);
  return jsx(Root, Object.assign({}, props, {
    children: children
  }));
};
const NavMenuList = _a => {
  var {
      children
    } = _a,
    props = __rest(_a, ["children"]);
  return jsx(List, Object.assign({}, props, {
    children: children
  }));
};
const NavMenuItem = _a => {
  var {
      active = false,
      className,
      children
    } = _a,
    props = __rest(_a, ["active", "className", "children"]);
  const classes = classNames({
    active
  });
  return jsx(Item, Object.assign({
    className: `${className} ${classes}`
  }, props, {
    children: children
  }));
};
const NavMenuTrigger = _a => {
  var {
      color = 'secondary',
      children
    } = _a,
    props = __rest(_a, ["color", "children"]);
  return jsx(Trigger, Object.assign({}, props, {
    children: children
  }));
};
const NavMenuContent = _a => {
  var {
      color = 'secondary',
      className,
      children
    } = _a,
    props = __rest(_a, ["color", "className", "children"]);
  return jsx(Content, Object.assign({}, props, {
    children: children
  }));
};
const NavMenuLink = _a => {
  var {
      children
    } = _a,
    props = __rest(_a, ["children"]);
  return jsx(Link, Object.assign({}, props, {
    children: children
  }));
};

const WrappedSelect = ({
  id,
  rules,
  helperText,
  address,
  long,
  full,
  success,
  warning,
  error,
  className,
  placeholder,
  defaultValue,
  value,
  disabled,
  hidden,
  rightAddon,
  label,
  loading,
  info,
  options,
  containerClassName
}) => {
  const {
    register
  } = useFormContext();
  return jsx(FieldWrapper, Object.assign({
    id: id,
    helperText: helperText,
    rules: rules,
    label: label,
    loading: loading,
    info: info,
    error: error,
    success: success,
    warning: warning,
    hidden: hidden,
    long: long,
    full: full,
    address: address,
    rightAddon: rightAddon
  }, {
    children: jsx(Select, Object.assign({}, register(id, rules), {
      id: id,
      long: long,
      full: full,
      success: success,
      warning: warning,
      error: error,
      className: className,
      placeholder: placeholder,
      defaultValue: defaultValue,
      value: value,
      disabled: disabled,
      hidden: hidden,
      options: options,
      containerClassName: containerClassName
    }))
  }));
};

const ShamanPermission = props => {
  const {
    id = 'shamanPermission'
  } = props;
  const options = SHAMAN_PERMISSIONS.map(permission => ({
    name: permission.displayName,
    value: permission.id
  }));
  return jsx(WrappedSelect, Object.assign({}, props, {
    id: id,
    options: options
  }));
};

const WrappedInputSelect = ({
  id,
  selectId,
  rules,
  options,
  disabled,
  long,
  full,
  error,
  warning,
  placeholder,
  selectPlaceholder,
  defaultValue,
  selectDefault,
  helperText,
  label,
  loading,
  info,
  success,
  hidden,
  address,
  rightAddon
}) => {
  const {
    register
  } = useFormContext();
  return jsx(FieldWrapper, Object.assign({
    id: id,
    rules: rules,
    helperText: helperText,
    label: label,
    loading: loading,
    info: info,
    error: error,
    success: success,
    warning: warning,
    hidden: hidden,
    long: long,
    full: full,
    address: address,
    rightAddon: rightAddon
  }, {
    children: jsx(InputSelect, {
      options: options,
      disabled: disabled,
      long: long,
      full: full,
      error: error,
      warning: warning,
      placeholder: placeholder,
      selectPlaceholder: selectPlaceholder,
      defaultValue: defaultValue,
      selectDefault: selectDefault,
      registerInput: register(id, rules),
      registerSelect: register(selectId),
      id: id,
      selectId: selectId
    })
  }));
};

const defaultOptions = [{
  name: 'Days',
  value: '天'
}, {
  name: 'Hours',
  value: 'hours'
}, {
  name: 'Minutes',
  value: 'minutes'
}, {
  name: 'Seconds',
  value: 'seconds'
}];
const TimePicker = _a => {
  var {
      id,
      options = defaultOptions,
      selectId,
      rules
    } = _a,
    props = __rest(_a, ["id", "options", "selectId", "rules"]);
  const {
    setValue,
    watch
  } = useFormContext();
  const unitId = useMemo(() => selectId || `${id}Units`, [selectId, id]);
  const [amt, units] = watch([id, unitId]);
  useEffect(() => {
    if (isNumberString(amt) && units in conversionFns) {
      setValue(`${id}InSeconds`, toSeconds(amt, units));
    }
    if (amt === '') {
      setValue(`${id}InSeconds`, 0);
    }
  }, [amt, units, id, setValue]);
  return jsx(WrappedInputSelect, Object.assign({
    id: id,
    selectId: unitId,
    options: options,
    rules: Object.assign(Object.assign({}, rules), {
      validate: {
        isNumber: value => value === '' || isNumberString(value) ? true : 'Must be a number',
        noZero: value => value !== '0' ? true : 'Time units cannot be zero'
      }
    })
  }, props));
};

const handleFieldLabel = (fieldLabel, switchOn) => {
  if (typeof fieldLabel === 'string') {
    return fieldLabel;
  }
  if (switchOn) {
    return fieldLabel.on;
  }
  return fieldLabel.off;
};
const WrappedSwitch = props => {
  const {
    id,
    helperText,
    info,
    label,
    error,
    success,
    warning,
    switches,
    disabled,
    rules
  } = props;
  const {
    control,
    watch
  } = useFormContext();
  return jsx(FieldWrapper, Object.assign({
    id: id,
    helperText: helperText,
    info: info,
    label: label,
    error: error,
    success: success,
    warning: warning
  }, {
    children: switches.map(switchProps => {
      const switchValue = watch(switchProps.id);
      return jsx(Controller, {
        name: switchProps.id,
        rules: rules,
        control: control,
        defaultValue: switchProps.defaultChecked || false,
        render: ({
          field
        }) => {
          return jsx(Switch, Object.assign({}, field, switchProps, {
            switchOn: field.value,
            onCheckedChange: field.onChange,
            fieldLabel: handleFieldLabel(switchProps.fieldLabel, switchValue),
            disabled: disabled,
            ref: field.ref
          }));
        }
      }, switchProps.id);
    })
  }));
};

const WrappedTextArea = ({
  id,
  rules,
  helperText,
  long,
  full,
  icon,
  success,
  warning,
  error,
  number,
  address,
  className,
  placeholder,
  defaultValue,
  value,
  disabled,
  hidden,
  rightAddon,
  label,
  loading,
  info
}) => {
  const {
    register
  } = useFormContext();
  return jsx(FieldWrapper, Object.assign({
    helperText: helperText,
    label: label,
    loading: loading,
    info: info,
    error: error,
    success: success,
    warning: warning,
    hidden: hidden,
    long: long,
    full: full,
    address: address,
    rightAddon: rightAddon,
    id: id,
    rules: rules
  }, {
    children: jsx(TextArea, Object.assign({}, register(id, rules), {
      id: id,
      long: long,
      full: full,
      icon: icon,
      success: success,
      warning: warning,
      error: error,
      number: number,
      address: address,
      className: className,
      placeholder: placeholder,
      defaultValue: defaultValue,
      value: value,
      disabled: disabled,
      hidden: hidden
    }))
  }));
};

const Container = /*#__PURE__*/styled.div.withConfig({
  displayName: "Radiostyles__Container",
  componentId: "sc-1t9l4j4-0"
})(["align-items:center;display:flex;padding-bottom:1.4rem;"]);
const RadioGroup = RadioGroupPrimitive.Root;
const RadioItem = /*#__PURE__*/styled(RadioGroupPrimitive.Item).withConfig({
  displayName: "Radiostyles__RadioItem",
  componentId: "sc-1t9l4j4-1"
})(["all:unset;background-color:", ";border:2px solid ", ";border-radius:100%;cursor:pointer;height:2rem;position:relative;width:2rem;&:hover{background-color:", ";border:2px solid ", ";}:focus{background-color:", ";border:2px solid ", ";outline:none;}:disabled{background-color:", ";border:2px solid ", ";cursor:not-allowed;}&[data-state='checked']{background-color:", ";border:2px solid ", ";&:hover{background-color:", ";border:2px solid ", ";}:focus{background-color:", ";border:2px solid ", ";outline:none;}:disabled{background-color:", ";border:2px solid ", ";cursor:not-allowed;}}"], ({
  theme
}) => theme.radio.bg, ({
  theme
}) => theme.radio.border, ({
  theme
}) => theme.radio.hover.bg, ({
  theme
}) => theme.radio.hover.border, ({
  theme
}) => theme.radio.focus.bg, ({
  theme
}) => theme.radio.focus.border, ({
  theme
}) => theme.radio.disabled.bg, ({
  theme
}) => theme.radio.disabled.border, ({
  theme
}) => theme.radio.active.bg, ({
  theme
}) => theme.radio.active.border, ({
  theme
}) => theme.radio.active.hover.bg, ({
  theme
}) => theme.radio.active.hover.border, ({
  theme
}) => theme.radio.active.focus.bg, ({
  theme
}) => theme.radio.active.focus.border, ({
  theme
}) => theme.radio.active.disabled.bg, ({
  theme
}) => theme.radio.active.disabled.border);
const RadioIndicator = /*#__PURE__*/styled(RadioGroupPrimitive.Indicator).withConfig({
  displayName: "Radiostyles__RadioIndicator",
  componentId: "sc-1t9l4j4-2"
})(["align-items:center;display:flex;height:100%;justify-content:center;position:relative;width:100%;&::after{background-color:", ";border-radius:50%;content:'';display:block;height:1rem;width:1rem;}&[data-disabled]{&::after{background-color:", ";}}"], ({
  theme
}) => theme.radio.indicator.bg, ({
  theme
}) => theme.radio.indicator.disabled.bg);
const LabelContainer = /*#__PURE__*/styled.label.withConfig({
  displayName: "Radiostyles__LabelContainer",
  componentId: "sc-1t9l4j4-3"
})(["align-items:center;display:flex;margin-left:1.2rem;label{margin-right:0.1rem;}svg{transform:translateY(0.1rem);}"]);

const Radio = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    className,
    radios,
    defaultValue
  } = props;
  return jsx(RadioGroup, Object.assign({}, props, {
    defaultValue: defaultValue,
    className: className
  }, {
    children: radios.map(radio => jsxs(Container, {
      children: [jsx(RadioItem, Object.assign({}, radio, {
        children: jsx(RadioIndicator, {
          ref: ref
        })
      })), jsx(LabelContainer, {
        children: jsx(Label$2, Object.assign({
          id: radio.id
        }, {
          children: radio.label
        }))
      })]
    }, radio.id))
  }));
});

const WrappedRadio = props => {
  const {
    id,
    helperText,
    info,
    label,
    error,
    success,
    warning,
    radioGroup,
    disabled,
    rules
  } = props;
  const disableAll = disabled;
  const radios = useMemo(() => {
    return disableAll ? radioGroup === null || radioGroup === void 0 ? void 0 : radioGroup.radios.map(radio => Object.assign(Object.assign({}, radio), {
      disabled: true
    })) : radioGroup.radios;
  }, [radioGroup, disableAll]);
  return jsx(FieldWrapper, Object.assign({
    id: id,
    helperText: helperText,
    info: info,
    label: label,
    error: error,
    success: success,
    warning: warning
  }, {
    children: jsx(Controller, {
      name: radioGroup.name || id,
      defaultValue: radioGroup.defaultValue,
      rules: rules,
      render: ({
        field
      }) => {
        return jsx(Radio, {
          onValueChange: field.onChange,
          radios: radios,
          defaultValue: radioGroup.defaultValue,
          ref: field.ref
        });
      }
    })
  }));
};

const WrappedCheckbox = props => {
  const {
    id,
    helperText,
    info,
    label,
    error,
    success,
    warning,
    checkboxes
  } = props;
  const {
    control
  } = useFormContext();
  return jsx(FieldWrapper, Object.assign({
    id: id,
    helperText: helperText,
    info: info,
    label: label,
    error: error,
    success: success,
    warning: warning
  }, {
    children: checkboxes.map(checkbox => jsx(Controller, {
      name: checkbox.name || id,
      control: control,
      defaultValue: checkbox.defaultChecked,
      render: ({
        field
      }) => {
        return jsx(Checkbox, Object.assign({}, field, checkbox, {
          value: field.value,
          checked: field.value,
          onCheckedChange: checkbox.onCheckedChange || field.onChange,
          ref: field.ref
        }));
      }
    }, checkbox.id))
  }));
};

const TabsContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "Tabsstyles__TabsContainer",
  componentId: "lgf5si-0"
})(["display:flex;flex-direction:column;"]);
const TabLinks = /*#__PURE__*/styled.div.withConfig({
  displayName: "Tabsstyles__TabLinks",
  componentId: "lgf5si-1"
})(["background-color:", ";display:flex;list-style:none;width:'100%';.nav-link-list{a{margin-right:4rem;}}.mobile-box{padding:2.6rem;}"], ({
  theme
}) => theme.secondary.step2);
const TabLink = /*#__PURE__*/styled.li.withConfig({
  displayName: "Tabsstyles__TabLink",
  componentId: "lgf5si-2"
})(["border-bottom:2px transparent solid;color:", ";cursor:pointer;font-size:2.2rem;letter-spacing:1.5px;margin:2.2rem 2.2rem 2.2rem 0;padding-bottom:1rem;transition:0.2s all;svg{margin-left:0.3rem;}&:hover{color:", ";text-decoration:none;}&.selected{color:white;border-bottom:2px ", " solid;}&.nav-tabs{padding-bottom:1rem;}"], ({
  theme
}) => theme.secondary.step9, ({
  theme
}) => theme.secondary.step10, ({
  theme
}) => theme.secondary.step9);

// TODO: REFACTOR TO USE RADIX TABS
function reducer(state, action) {
  switch (action.type) {
    case 'selected':
      return {
        selected: action.payload
      };
    default:
      return state;
  }
}
const Tabs = ({
  tabList
}) => {
  const [{
    selected
  }, dispatch] = useReducer(reducer, {
    selected: 0
  });
  const TabsContent = tabList && tabList.find((_, index) => index === selected);
  return jsxs(TabsContainer, {
    children: [jsx(TabLinks, Object.assign({
      className: "nav-link-list"
    }, {
      children: tabList.map((tab, index) => jsx(TabLink, Object.assign({
        role: "tab",
        tabIndex: selected === index ? 0 : -1,
        className: selected === index ? 'selected' : '',
        onClick: () => dispatch({
          type: 'selected',
          payload: index
        })
      }, {
        children: tab.label
      }), tab.label))
    })), jsx("div", Object.assign({
      className: "tab-content"
    }, {
      children: jsx("div", Object.assign({
        className: "tab-panel",
        role: "tabpanel"
      }, {
        children: TabsContent && jsx(TabsContent.Component, {})
      }))
    }))]
  });
};

const GatedButton = _a => {
  var {
      rules
    } = _a,
    props = __rest(_a, ["rules"]);
  const error = useMemo(() => rules.find(rule => typeof rule === 'string'), [rules]);
  return !error ? jsx(Button, Object.assign({}, props)) : jsx(Tooltip, Object.assign({
    triggerAsChild: true,
    triggerEl: jsx(Button, Object.assign({}, props, {
      disabled: true
    })),
    content: error,
    side: "bottom"
  }, props));
};

const MemberCard = ({
  align: _align = 'end',
  size,
  variant,
  profile,
  fullWidth,
  profileButtonColor,
  dropdownColor,
  children
}) => {
  return jsxs(DropdownMenu, {
    children: [jsx(DropdownProfileTrigger, {
      size: size,
      variant: variant,
      color: profileButtonColor,
      profile: profile,
      fullWidth: fullWidth
    }), jsx(DropdownContent, Object.assign({
      color: dropdownColor,
      align: _align
    }, {
      children: children
    }))]
  });
};
const MemberCardExplorerLink = ({
  explorerNetworkId,
  profileAddress,
  children
}) => {
  const explorerLink = useMemo(() => {
    if (explorerNetworkId) {
      return generateExplorerLink({
        chainId: explorerNetworkId,
        address: profileAddress,
        type: 'address'
      });
    }
  }, [profileAddress, explorerNetworkId]);
  return jsx(DropdownItem, Object.assign({
    asChild: true
  }, {
    children: jsx(DropdownLink, Object.assign({
      href: explorerLink
    }, {
      children: children
    }))
  }));
};
const MemberCardCopyAddress = _a => {
  var {
      profileAddress,
      children
    } = _a,
    props = __rest(_a, ["profileAddress", "children"]);
  const copy = useCopyToClipboard();
  const handleCopy = () => {
    copy(profileAddress, 'Success!');
  };
  return jsx(DropdownItem, Object.assign({
    onClick: handleCopy
  }, props, {
    children: children
  }));
};
const MemberCardItem = _a => {
  var {
      children
    } = _a,
    props = __rest(_a, ["children"]);
  return jsx(DropdownItem, Object.assign({
    asChild: true
  }, props, {
    children: children
  }));
};

function makeAppList(apps) {
  return apps.map((app, index) => jsx(DropdownItem, Object.assign({
    asChild: true
  }, {
    children: jsx(Button, Object.assign({
      href: app.url,
      IconLeft: app.Icon,
      justify: "flex-start",
      color: "secondary"
    }, {
      children: app.name
    }))
  }), index));
}
const AppSwitcher = ({
  currentApp,
  apps
}) => {
  const appList = makeAppList(apps);
  return jsxs(DropdownMenu, {
    children: [jsx(DropdownButtonTrigger, Object.assign({
      IconLeft: currentApp.Icon
    }, {
      children: currentApp.name
    })), jsx(DropdownContent, Object.assign({
      align: "end"
    }, {
      children: appList
    }))]
  });
};

var img = "data:image/svg+xml,%3csvg width='73' height='61' viewBox='0 0 73 61' fill='none' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3crect width='73' height='61' fill='url(%23pattern0)'/%3e%3cdefs%3e%3cpattern id='pattern0' patternContentUnits='objectBoundingBox' width='1' height='1'%3e%3cuse xlink:href='%23image0_4960_98745' transform='translate(-0.00272859) scale(0.00226454 0.00271003)'/%3e%3c/pattern%3e%3cimage id='image0_4960_98745' width='444' height='369' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAbwAAAFxCAYAAAAIxh21AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAADZ4SURBVHgB7d15kBzXfR/w3%2bvZg%2bIhDgnQNi2JaIqiyMi0MZBEWwRIYtaKXJbtGAO5LEupJJgtmYBVPhZwUpbsJIVBKoqL9B9YWFbJBGnvwKkUXbLLu6xinCon8Q7EEJLKB5a2YpHWgSYVRRIBAksJhHDs9PP79bwBBouZPma6e153fz/l9oA7vYd2p%2bfb7/i9JwggAeVPL9sla6ppCdp7cve2FQIAGDOLAGK24cljNas0dVwKsb1NYrG8sFwmAIAxmyCAmHCwWWvT%2b6VLe4lE98P2hPqYetxHAABjJAggBtyFaVlTSyTE5r4nSNp3es/WeQIAGBMEHoxsw5Nf2CXdNRVmwq/rctWdvLBldXbGIQCAMUDgwdC6XZiq9bY35KesqNCbUaG3SgAAKcOkFRiK14V5cfp4hLBjFT2eBwCQOgQeRHbr4c/P8SxM1T9gU0SuCkiexUkAAClDlyaExl2YpUvXHZQk6zQajOcBQOrQwoNQyoeXK9yFGUPYeV/OujS9SAAAKULgQSCvC5OmlofpwvRR2fjEsYMEAJASdGnCQF4X5tr0gpSU2JibK9ozq4881CIAgIQh8KCvjU88W3Xd0kLMrbp%2bMJ4HAKlAlyZcg7swXVlaTiHsWLl0aXqBAAAShhYeXKa7MBdVF2aVUmYJmj/1yFastwkAiUHggSfFLsyBMJ4HAElClybQrU98bn%2bKXZgDWbK0oFqZNgEAJADbAxWYt0nrBM/ClFUyg63H82YIACBmaOEVFHdhepu0jmG8zo8kqt76%2bLEo63MCAISCwCugW584dtDrwvTfzmd8BB0sq0CmDFGtZOzqDmA4TFopkCtdmGa16gZwdH2e8VsJqbCbUw91dcwIIbD1EYCh0MIrCN6hwMQuTB926aL59Xkq7Hi7I97JvaIOrA8KYDC08HJuiE1azSJp3%2bk9W%2bfJQCrsOJDr6z7cVK28WQIA4yDwcszbpNWaWiIhNlOGlUhuObl72woZQo/XcWuuOuCUhgq9AwQARkGXZk5tePILuzqbtGY77FibxCK3VMkcVSLfruGGCkXMNAUwDAIvZzgYeBamdNtNY2dhRmfzxrNkCNV6W1IPQS24gyr0dhEAGANdmjnS6cKcHvuKKYkxbDxPBVpDPez3OYVnbPLMTWO6YwGKDIGXE7zDger8a%2bSoVdfPqhrPmzFsPK%2bpHvxachx6W1ToOQQAY4XAyzhvhwPV3SdJ1qkYjKvPU6G3TP5jeg51WnoOAcDYYAwvw8qHlyvWxenjBQo7Zk9wmYVZdlIn1Aax1bGI1VgAxguBl1HchWnRVH7H63y4kvaatN6mXl2FF7x2fE5DYTrAmKFLM2P0Jq28PFiNim1Vd206ZAjVgrPVw3F1%2bLXkUJgOMCZo4WWIt8MBd2Ei7FjZujRtVH2eHqPjlp7f%2bGJdL0cGAClD4GUEd2GasEmrYSqmjefpEoR9Aac1EHoA6UOXpuF0F%2bZihhZ9Tp2waOerv7h1iQwSokaP1VVAHiEASAUCz2Dchem6pQW06gIZN57HUJgOYBZ0aRrq1ic%2btx9dmKF543lkGBVkDfXg14Lj8cdlPdkFABKGFp5hMrZJq1EsQfOnHtkaNH6WOhSmA5gBgWcQrwtTWos5Xx4sUa5oz6w%2b8lCLDKILzrlcwfY5zaHOEmTYMR0gIejSNATvcOB1YSLsRmLJEpcq2GSQkIXpNqEwHSBRCLwx4y7MDU8cW87sjuTmKZcuTS%2bQYULW6FX1LuoAkAAE3hhtePJYjTdpxXhdvKQKjo2qxUyGQWE6wHhhDG8MuLbO4oJptOoSZeJ4HlOBVlcPQS25hgrIoE1mASACBF7KvLC7ONVSt/ubCZLGWwnNmFafx1CYDpA%2bdGmmjPdxU29iZwjSYJs4nsd0jV5QC25eBWOFACAWCLwxaLfFrOrOdAgSx%2bN5Jm0l1AuF6QDpQpfmmHRq7rgMAdJg6ngeQ2E6QDrQwhuTU/zmKyUmJaTEkqUFk7YSWod3TPdbT9OmTksPNZoAI0DgjdHpPdsaqondIkgDj%2bcZWditC9ODlkSzCYXpACNB4I2ZN57nX5cFMTF1PE%2b33MJMrkFhOsAIMIZnAIznpatEcsvJ3duM2ZJHhRj/LFHKVFCjBzAEtPAM4I3nkTxEkIo2iUVTxvNU2PGKMFFrMrFjOsAQEHiGOL17G3e1YSPQdKjxvOvGvvSYDq1hu1g59HYRAISGwDOI2xY8Ww/jeSmQJOvjHM/TYdeg0aAwHSACBJ5BVj/6gCMkzRKkQ9D%2b2w4/l3pg6JZZI%2bC0JeosNO0HhekAEWDSioFuPfzcvPrTzBGkgdfb3MJLvlEKdIvseMBpDunNYEMuNM3nozAdIABaeAZyJy82CON5abEneOeKFOiWWNBsXIc64eUFsHpsUvCamzahMB0gEALPQNzawHheelxJe5Mez%2bsJO79QcqhPSy3kQtM2BYcpQKEh8AzF43mqwxm1VmlR43nlhWWbEtATdrbPaXxzs3NQt2SIhaZZBYXpAIMh8Ax2%2bpGt86jPS03ZujQde32e7mbkCSh2wKmzKtSCurHDlK5gx3SAARB4hvPG87CVUFoqCYznhSks36fCbingnO6amzxz0wk4FYXpAH0g8Aznjee5gt/kMJ6XAh7P2/Dk52Ip6NahUw847YAKsnkKKWLooTAdoAfKEjLi1ieO7VUtvbGvDlIQq7pUwaEhhSwsP6DH5ob5%2bjZ1yhuCumC3hOgqBSgEtPAygsfzhAyctADx8MbzaEgqjLiGshFw2pFhw47pyS1hWv4oTAfQEHgZ0p66sBfjeampbHziWOQWtQqXmnoI6qJ8noZfQ/My3XIL2kcPq7EAaOjSzJjy4ecqFomglTogJq5oz6x6u1kE06uoDFVrNwr1fRvqIWiSikN69RYCKCi08DJmlfdxE4F39RATS5YWw9Tn6RYUd4OmGnYMhekA4SDwMojH86SkwGnsEIty6dK0bzF3hMLyxNa7RGE6QDAEXkbJqQuzGM9LhySqDhrP04XlQWHHEl/cWX39unpoBZyGwnQoLAReRnF9nmW1sZVQSrg%2br/zEs9U%2bT3GLyQ749DCrqMSF12AN%2bl4oTIdCQuBl2CmeTIHxvNSo8byF3vE8FRrc6qsFfNoBveNBKvSkFA49J%2bBUFKZD4SDwMs6rzwvuxoJ42N3xPN1CCiotGLqwfBQ9NXpOwKlN7JgORYLAy4F2W2A8LyU8nrf0tVM8ZtcIOPXIOMKuS4demC2mUKMHhYE6vJzYqMaXXFnCtPOEffjt30e/t/2uoNOeV4FjRMtJF8IHrRrjEHZMhwJACy8nvPE8KbF/XoJ%2beMP19In3bAo6zVFHlQyhd2EIGue1CTumQwGghZczGw4fW5YGveHmxR03TdPTP/1D3qMPhwxtKYVcjWVF/exbCCCn0MLLGW88D1sJxSrrYcf0eGLQZsIoTIdcQ%2bDlzOpHH3As0d5JEIubpyfChJ1XCmD6GJj6%2bXhWadBqLChMh9xC4OWQN55HMuhuHkIIEXa079mv0S3NlkPZwKGHwnQoJAReTp3evS3MGxv4%2bNT2t3kTVfw8%2brdfpz964dvl0qXrMrE5L3ZMhyJD4OWY2xZh6rCgj4%2b98y30obff5nsOh91jf/P/vH9LkvVbHz828h53aYgQeihMh1xB4OUYj%2bcJSVhvMyIOu99415t9z/n9L37zcthdJmj/bYefy0RARChMX0RhOuQFyhIK4NbDz82rP/UcQaBfuu92%2bsQDtu85f%2b6cpn/9P18c9LTjTl7Ywot7UwaoMKtS8D553DU%2bk8XNY3Vt4aCWd0v9b2oRFMYEQe65kxcb1qXp7eqf6J7yse32NwaG3d%2bfPke/8tmv%2bp1iT6xN84SPTCzqzW/4KhS4F8CvHKGin8/i7F8OPL8JOC2CwkCXZgFwawPjef54JuZ/fd89vue8fPYC/Zu/eIFeu7Dmex5vJZSV8Tymd3MIWqWnpneHAMgsBF5B8Hie6sDG0mN9dAvLueZuEA67Hc/8X3r5uxcoFDWe17uVkOl0YXrQ62MvyhUgyxB4BcJbCaE%2b72phVlF57eJatLDrKKtu5EUVeplZn1KHXlBhOpcrZKb1CtALgVcwPJ6HrYQ6uEX3R%2b%2b7N7Cw/FeOfjVq2HVV9HheZqjQq1Nw/eZB1OhBFiHwCsYbz3MF12AVfjzv9x6%2bK7Cw/Lc%2b53izMofF43lZauVpYWr05lGjB1mDwCsgjOd1au1%2byr7V9xwuLH/8i9%2bkka1NZCoYQhamc4hj81jIFAReQfF4npCB4zW5FKawvHcVlZFJK3OtaV2YHtQTgNCDTEHgFVh76sLeoo3ncWF5UNg99Y%2bvxBZ2QtDS6u5tmVzTNGTo2YTNYyEjEHgF5o3nCVmYrYS4CzNUYflR38Ly0KQKu/bEGzK9tJsKPQ7rMDumLxKA4RB4Bee1PkQ2VgUZBU9O4UkqfrqF5TFYVS3nfWce2bpzdXZL5icH6cL0oNdIFZvHgukQeOCN50lJS5RTXHbA5QexFpYPJByX5MzpPVzzmB8q9Ph/T9BEJ2weC0ZD4IFHTl2YzeN4XoKF5dfgSUDu5HVbsjpmF0QXpgctXIDNY8FYCDzw8HieZbVztZUQt%2bjC7FgeQ9h5XZiv7tlaz0MXph8VerzKSivgNGweC0ZC4MFlpx55qJWn8TxeDDoo7H756Ffp7189R8NTXZiTYkveujAD8ESnoFZsU289BGAMBB5cxavPy8GWKf/lAdvb7scP19r98T%2b%2bQsNSv6dDXhfm7AMOFYguTOfQcwJOxeaxYBQEHlyjPXlhZ5bH87iwfM99t/ueM2Jh%2baogMfvq7q17896FOUhPjZ7jcxoK08Eo2PE8I9SbRo06byDrOUns2rzxiWerriwF7YRtjJunJugTW231WKKf2uS/ZNhrF9v05y8Nvz7mlluvP3rvhhtOEDBbHdWAcxzq9Boc1SUOqdFhO%2bhvdUBPxIGCQOBlhLpw%2baK1%2bzzVVBdtIpNNbn38uYa6lc/EjDseqzv%2boXcSGC2x1%2bogCDzoNUEAA5zes62x4fCx7TL4Dh4AUna2Xq/I/r0%2bmbOmhgluaTYTL%2bdB4IGvdlvMWiV5nHJyYQHkRZsEL%2bdmUw5YJHlRg8QDD5NWwBdvJWSJdmHW2wTIgjOqdUc5CTvmphB2DIEHgbz6PJJBK2wAQEos8hYAyBOHUoDAg1BO797GF1gul8yCdLS/8Q2bIC7bKUfSGL9jGMOD0Ny22JnF8TwuQfitzzmB5226cerA0z9zX5MMcvY3PnacMrTXnLVxA13/sY/1fc49caKquuKq6s2tRTC079TrdZmj7kxK8UYagQeh8XjehsePzUqRrb3PXrvQpq/7rpUp1Djl2uzzH35Xy7Q6ndfqs456qFBOlMiaoxys5DNOkrJRKhSWIJla4KFLEyJ5dc/WpTyN5wlBLV4erDNOaSJ5lHJEkqypVp5NMBRu3VG%2bWnfqNUHPU0oQeBCZO3mxQXkYz%2bMdDh7ZOmPy8mAih%2bOmqpWH7YOGlLfWHXNTbPEj8CAy3kqIx/P4n5RJ3IXZzsQmre0cdv%2bpVl6dx/IIIslj645SKjjvQuDBUHg8T/W9Z24rITX%2buGR2F%2bbV1JuBQ5m9sRislMOWSpLUDUI5j627NMfvGAIPhvbq7m3NDI3neZu0nnlk687s7XAgn6ac4eXqXqvX81ZLlpiJTjewTTmjXgepvrYReDASbzzP8K2ENl436bgkM9GF2U8e9ifsT%2bzHBJZg/DtSr99c3hy4KY9RI/BgJN54nit4XzRjW03vu6PcWt29LbOTP9Q43hLlU1l1bS4QDMRdmRaJzGzTFZGTdk0mAg9GxuN5qhlygCAR6k2BbyZyucoNujb95bUrk6nxuxalDIEHsTj9yNZ5IekIQULyN453hTiIWZvXOlv/yFxeuzKZ6rlIvcYUgQexaU9d2Gv6eF5WuTlfnUR12y1gPO8K3g2hTW4mx5wjSL2rHoEHsfHG84Qcy1ZC6g0zd1P3e%2bmxjjz/b7R5rAqh15mkYnX2ussx%2bbTuqk8VAg9i5U0OEZRufZ6Uz//8224rwJ59Mu9dxt4bPU/UoILSYceTVGzKMXdME7EQeBA7Hs%2bTMp0XtCA65E5dX/34u9/sUM65%2bZ2t2auiW3qFC72ihJ2GwIP8kFMXZhMez1sVFu18dffWvdkrJB%2bO7tYswp6EHHrHi9S9WaSwEySb4%2bjOZAg8SASP51lWe5YS0NnhQGx59Re3FqHFs06eZ2tepTBjet%2bt16sc8FSMlh3Pzhxb1zwCDxLjrVcZ83ged2F2djh4wKECUt2aeZ%2b516sbejXKqU7pgdeyK0oXrjPODYCxAWz2VaSUDYqBEKIR5Xz1fblGKPBCPbTyjdXzbXfoC/qPv3ySXv7uhVVLtHdmZdHnpHBX0Hfqsy0u2KacmnrwQRIbN3T/01bHYrvRaFqbNr1E0cUWJOr1XqUYf%2b/tf/iHzWtf/nKt90340v95jtxTpyi/xjvxCoGXfRWKb0fsBkXDu1fbgSdV3kSjeHH1fMs5f3H29OxDDoHqEpIHVMunSjk1uW0ble69Z/2H6zR%2bVXXEtmNB6R3v8I5e7RdeyHXgqR6KJo0RujTBeH/43rsPFLULsx/uEsrvgtKQV3qyikNjhMADyCBZnMkrkBNtNbpBY4bAA8gg3TVUiHIMyD5eKDrNnc0HQeABZFCnjikzm%2b9CwY2zFKEXAg8go3SJAlp5YDouRWiSATBLMx9mIpx7kOKb1TkIvwkHrm2579mv1i%2b06eY7bpx8/uPvvsNWH9pFEBq38l6r1w/xzuFUEOcefTTS%2bRPvfrcz9d732pSw8089Re7LL4c6d/LBB72ZqEXhkjRmr0wEXg4IIVphz5VSptEiWA35M10%2b5%2bMx1RIWDbfyrE55SCEKl9deeDHS%2bdbG2%2bxBz7mnT4f%2bnX2vXrfdl17aZG3a1P9rqbAL%2b7OV7r2XCsSY1h1D4AFkWBFbeXG59Oyzc6/VZ/lmYbV7CN1FLK/Ul3Ioli%2bq/ydWVmh6QOBBf6p1l8jygsNC4AFknG7lcXewTTCMsj446CAmuu6uRQbBpBUAA6muZ1sfgd1u3MpTd9Lp7kEIEKBNZMzYXRcCD2DMONR4XVJ1LKrjhDq4oXFCH2fUf/KxrI55vZ7jNVToLWH1FTCFCauq9JO5Ls1adcFW9w4VardtIYQ66GY5oCtHvQE4rpQvkSUc9V/qmFhZas1iGjcYQYcXj71VA04t63P4mFOf56jHA%2br13%2bw9qa1aeXqbGYBxckxs3THjA08FXJnaF%2buWJTarC71G7sVOF4/g/ydJ%2bnS6y%2b5prtT/dZF2bj%2b8oj624grraaJSCwEIadPdlBx0e2k4tjoW1Nfhr3E5%2bHglCz2BZY4AxoTLEExs3TEjA68bcsISO1TAVTm1pIxpOFnKivpKFSHbdb4n/sD2x5dcUTqy1PrFAm4mCmlTr2OugVykeCaY2NQJvk0q9Lw7apeoocYpdhAmsMAY6CXEmmQoowKvVn2iKly3rkJuh/rNlSmukPOhvkVNhV9t58OPO6o7aL5ttZ9ean3UIYCY6bBLYrPPBk9wUaE3yxNYztTrs1ZnU1GAVKmuTKPKENYzYtIKB53qalxWYccXKU%2bvHkcRra2a4vPCtZY/8PAT%2b2vVT9sEEJMEw66rrr7HAv%2bjMxUc62xCukzuyuwaa%2bBx1%2bUHHn78oBd0A2afjYEtyW1w8NUeOlwngBFx64s63Zhhw45XlW/qo0Xh18us613ova5N9eAQQAp0V2aDDDe2wPu5hw/PCffiCTn8wH3SVBeRXFBdnSfQ2oMRNSh4TM1RB9fS3aK6Jrdw96Q%2bZtRxi/r4Fgq34vxBnv2pa/OM7l6C3HBM78rsSj3wvFbd9scXufuQsrH%2bn61aeye4m5MAIlLhU6fgRbEPqVC7Ux3z6ujbmlMfX1FHXf3zTgpuuXmvVXRtQhqy0JXZleqklVr1UxUhLy5Kmb0ZZNzN%2bYHth21XTO7LaymDjL6Ac1o3LLtkcJe3qTdPQTdKs%2bvr6fyocx31u%2bDdMbiLdNCuF1X%2bffEC3jc3m3u/U5/dLINr/RJXumMTTdd2BJ5nbdxAaSi95Y5QP0/XxD2FWvQ5FBV2h0yelbleaoH3cw8/uct121lp1fXFd%2bsqsKuqi3MmpzM5TW3F1imDdEjbPqcciBJ2XTr0ePslngRjDziN/5Yt/kdbdW3qWZuDzk2FdcdbaFodpph45xbvgKHxTgimDkn1lUqXJncHutRuUj62MLG9CS0Y14NgdZ/nHBVcDRoShx75j5tUu%2btwcncTxvMgZvyairIPpxESDzwOO%2b4OpHxB6EEYm32eGzmA9J6DLZ9Tat1/8HgeFpiGuPBrKSvjdr0SDbychl0XQg8G0q2rQWNsTpRNewM87fPcVd9fvUHNYxILjEpPUsnkylSJBV6t%2bngtx2HXhdCDQSo%2bzz1P8fF747HXf4AnsWBXBRiWDrsGZVQigccBIFxaoGKwhSwtEkB4KxQTPZY3SN/tudvkTXhxCCACQXIpy2HHYp%2bl6YWdtJJcQsk8UlZ4xZg/%2b%2byeLIyR8M%2bY9N9mmLKNJo3W8uD/TSbdeNg%2bzzmUjr5/Z73e5kzaMzfbL75IF5bS7Qlbe%2bEFOvfoo5S09stfpzyTqlfCzUhxuZ/YA0918TWogCu184oxqhv36FJrT%2bxXtBoP4sJl2%2bf5/d3V8oNwATMZSLdUHBqSXr4LQuIJB2mHnnvypAqgFylN7qlT3mEKa%2bNGmtq2beDz1334X9LrKqDluXNkEEeSrPGNEmVcrF2aqnVXp%2bBVJXKLu3G9rY1ipMOuGXBaQ%2b%2bNBhCaLlfgqeW5XEjBNBx2N3zsN0iox4Hn3PEWdc7HSFx/PRnCe41kcUZmP7EFnu7KLPqbbtmSlw5STEKGXRdCDyJD6KUjTNhdPtec0MtV2LHYAs/ryszgkmFx49VYVPhXaUQRw64LoQeR8U7pOvQcgthFCbvLnzP%2b0Mtd2LFYAk9Pyy9sV%2bZ6QpZGCp0hw66r0d0iBiAshF4yhgm7y587vtDLZdixWAJPT1SBLimrw7byRgy7roP66wCE1tO96RCMjIPq%2bl/91aHCrivt0OvMxpRb8hh2bOTAQ%2buuv2FaeRHCjmdkBo25NBF6EBVCLx4cUBxUVsBi2Zeee47cgJKGtEJP/d2PSOrspUg5NXLgoXU3QMRWXoSwm9WLDoeZaIDQg8h06G0RJDK5fNS4RQm77z35B14ZwrhDT2/zU89z2LGRAk9PwQ%2b/oVTBWNKaC3NexLDzztP1dAg9SAS/8b2x%2bYc7eSkpgtCihh3jmrtxhp5eCLoQ4/4jtvDO82rsxVlRJSIpqRpUlzdM2HUh9CBpvJQUdlkIZ5iw6xpT6K3qySnzVBAjBZ4ap8KbqL8ytS/WBz05Sth1IfQgafyGyF2chHG9gUYJu640Q69nckqLCmTowPMmq3R2dAYfwhJ9u3zjCLvL3yNa6FUJIKJu2QLG9fobNey60gg9Hq/Tk1McKpjhW3htq0IQTMrK%2bm7NOMOuS4fezhCnLqrvj78dRMZvkBjXu9YbPvKRwLBb%2b9vjgWHXlWDocRfmLI/X5X1yyiBDB54QV3ZTBl8q7M5fDpgkwq5LbyoatKI5h%2b8yQg%2bGpcf17iR0cXphN/ngNt9zOLi%2b9wfhwq4r7tATJFu6C7NJBTbCGJ7YTBCObg2HDDu%2b85qJGnZd%2bvMQepAobu3d3Fy4s8itvbBhN%2bzuBzGFHrfq9r2x2czlyilRDRV4nS46vFmGJmQ1Yti1aJRvh9CDlBS1tZd02HWNEno9rbrCzMIMMmQLbw1vkhH85M%2b%2bYzuFD7tY9qtD6EFaitbaSyvsuiKH3g03eGN1aNVda7jAa7uovQvpx99/D%2b35tw8F/b5iDbsuhB6kiVt70x/8%2bS2UY2mHXVc39Himpx8OvZt%2b75NOeWEBs2n7GC7wBOHNMYRfmH0X/crHtwedlkjYdUUMPZsARjB5//25nf133Yc/PJaw6%2bKvyTM9g0JP4fdnvp7RMFlngoZjE/jisPuF%2bruCTks07Lo49PSL329z2m7o8c/jECTpIPYtzJbpHTto6ife53tOkmHXq1veMLnNN3y7ocfXcyFLEPoZNvDAh0lh16W%2bz7wOPb83WpsQemkoE5bkywwOu%2bma/5LB7qlTdO6Tn0w87LrOP/lka/JHfmSVbrqp5nMaQm%2bdobo01S9vE0FfJoZdl95lIWhigU3o3oQETD74YJMnU1CGZnSGDrtHH/Mek6ZnXs7whBTxxjfyQhNHAj4F3Zs9YtkAFjpMDrsuhB6MExc%2b6xmdM%2brN2%2biJFQaF3ar6XTW7Qde7/qW6nusULvSO43pGl2ZsshB2XRx66sXP/0T3JoyFftNunanXbXXX3VCvSp7dZZMhDAk7Li84pB7n/ZYC49DT17Pf4vA24XoeMvAkvUZwWZbCrguhBybQdWJ1/rcKv3qJaIckUaMxGnPYcWtuqa1abVF2MkDohTNUl6YkiQFQLUzYnTt7gf7imS/NmhJ2XejeBJNwd6fqsuPFqbnLc5bHqyhlYwq7VT02N8v/29XvYHaYbXtCdm/aVODrecguTQ48QUUXNuz%2b49wz9LWvnTTyJgEtvWTo%2bscmQWS61dfkg7s81WNVt/yqlODs1pTDTr0fyCMuEY9jrsS1ewFaev6G7NJUv6SC512UsDvxlVdVW/o6o1p3vRB6YKre8OP/VgFYVQ8VHYA8GSOWAEwh7LxWnOqqPKr%2b3eL9BSkhCL3Bhp204lCBRQ479WJfas0a3Q2M0IMs6E52Ucc8/7cKQA69qhqbqah78E26FRhJAmHH4bbS2VWcONhaaa9pidDrb7jAK7kr5BazomGIsONXn7Gtu14IPcga3VK66vrSIWjzod6lbBWEm6XXEhT8satahCOEHXdJOuprO%2bprv%2bR2GgF8rJiyYDNC71pDBd5S66POzocf5xZLoYoZhwo74n3w6HnKCIQeZF2/EOylxwXLN/76v2tM/PAP7Qj4cs75Z57Zt3bKG4N39Nd3KCMQelcbvg6PWy1SVqkghg07j6RMtPC6EHqQZxxYei3TwLBTx8wNs7MOZRhC74qh%2byWlK5%2bmghgp7Fip3aKMiVCysIhliyBL1Ot1jrxid18OdepmHcoBlCx0DD8Qx%2bN4BTBy2KkLh7uAKYN06B0KOA1r9UFmqNcpt3LmA05zKEdh14XQGyHw1Jt4izqrh%2bRWDGHHL7IWZZj6%2bfcSFqiFHNBh1ww4jd/Tdua1W6/ooTfSVEtJMugXl1lxhB1zRTvzv6MIC9Qi9MBIEcLOmOX/klLk0ButtsAye7XzYcUVdtTpzmxRDiD0IKsQdtcqauiNFHjem3nGu%2bzWCxN2J7/1Xfr1j/xZUNipC00ETfrIFIQeZA3CbrAiht7I2wNJ1WUnpFWlBNxX%2bUH6oS23U1q%2b7wdupJmfvCfwvG%2brwONg9POKOuf%2brfb2xbc/YlM8VineMdNhv16TOqG22ecc7LQMYxcy7BjfmJblcGVWce9en8TXu9nnea5XCKqptqlzPWf9Br4Vy4qYOx9%2b/AwlUIQectsdMNeSCrydlAJ9B3piwNNN9XPMEiTOlL%2bDDq9lArhiNpb1waSkXHXdQWxq6o1ngQBSpF5z3MOwSADrxBJ4S8/umSdR7AWlYaA6AaSLS2kwhgzXiG0FaClcdBkBAICxYgs8nrEpBOWyTAEAALIv1j1%2bXDHFrTzMygMAAOPEMkuzV6366apwrUzNjrpvy%2b30n%2bb/Rd/nnvnTL9Izf/L3QV%2bCrJJw/tXud%2b3cWr077rGDuKcp2xSvTfqxRgN%2bTqFQwjBL0wwm/B3Uz9CkwTsDcC8U35S/RmaU%2baT19aIa9B7OtYr7KJtWRq7DW4%2b7NmsP//4hQWKOcuD1sxe8mrog0nJnts283aGC0m90VQIw26Gsr2%2bbBr2dUD%2brWf79JbJt%2bdJnf2lv3lZg8aNeG/uyuiMCAEBRJBJ4TIrJnVSApXokuQe8sgwAADBaYoG31JpdlaK9M8/1eV7YffajDQIAAOMlFniMu/mkcGfyGHoIOwCAbEk08NiV0MtP9ybCDgAgexIPPMaht3h09xZJ8hBl26o3QQVhBwCQOakEXhfP3uTWEWWTI621GUxQAQDIplQDj3HrSFrunVka1%2bOWqbSmtiy1frlQG0QCAORJ7IXnYeiatTtrD3%2b6IcjaTwb78fffe%2bhDs%2b/eSwAAkGmpt/B6dVt7Mnib%2bbG57ftvwNqgkCpetWbdga1uAGIwlhZeL93aq9eqn26Qa6kW38A18ABypWc5Nt6wdDt11jktDziXH7hL3VHH8%2bpoYYksgGjG2sLrxcG39Nk99cstvhTH%2bKamJxwCSIFuse1XBy%2bwzAfvCM/rznLoBbXk%2bBxepJuHAZbV1zijjkV11AkAAo29hbdet8XH/%2badF1Srry6EuvuVMa/yr%2b6OpWwfJau09B8efT%2b/0WRqhwfIFhVKVeoEVZXiw69bDsAah6h6bKrjiGr5OQQA1zAu8HrxzgvqgQ8Vfp9Sd7dWhdxSRQXgZvUOEuaOuEO1FlVX6YorxUtkSfX1plq89NmVEx6pEkACEgq6fmx1NNSxV31PLp3hXQEw/gzQw%2bjA66VLAq4qC6hVF1TgnbNVEPYJPldd7NYqdjGAcdATTTh40h6T5u/bUEdd/QwHVOg1CQA8mQm8fnQrDbVxYBTdquOxOZvGx%2bafQf0sm9XjAbT2ADIeeACm0WNpDRoOh5JD197E2dRpuVUoOq4h5TG%2bGYztQdEh8ABiokKFW3X1CJ/CAcc1qBxwrTCBpFuPHHw7KPy4oE2dWZ07RQH2qAQYxJiyBIAsixh2LXXMqONOFUB7eZwtbOuLa%2b/UMa8O7/OpE5hhPtemTugN00oEyAUEHsCIIoQdF4xz1%2bKMDq6RxtU4JNVRp054hlmtyCu/QehBUSHwAEagx%2bzqIU7dp8KpksTqKD3Bxy0%2bJ%2bB0Dr1FvcoLQKEg8ACGpEKDV0hpBJzmqGMLd0NSwnTwcegFbcFlUyf0sEYnFAoCD2AIuoXUCDit24WZ6kQR9f0aFBx63K1p9E4lAHFD4AEMh5ei82shcdhVx1UKoENvNuC0vXrWJ0AhIPAAItKLNds%2bpzjqqI272FuvshLU0ltA1yYUBQIPIALdlenXFcghZ0yRt27pHfI5xaZOcTpA7iHwAKLhtTFtn%2bf3GbiiSYP8Z2/OoZUHRYDAA4im7vNc08TFmnXXqt94HocdWnmQewg8gJBCjN0FjZeNja7/8ytOT3tXB4DUIfAAwvMLhaaBXZnr%2bbXibMzYhLxD4AGEoCerVH1OMbZ116W7Nv1aeTUCyDEEHkA4VZ/nns7Q1jtNn%2bfQrQm5hsADCMev9bNEGaHH8pwBT5exxibkGQIPIJzNPs9lJvC0p32eqxJATiHwAALoGjV7wNMr415RZQgtn%2bewdRDkFgIPIJhfCByl7PFbzNomgJxC4AEEs32ecyhj9ASbQa3SzQSQUwg8gGC2z3MOZdOgwMMSY5BbCDyA0WRt/K7LGfBxBB7kFgIPAAAKAYEHAACFgMADAIBCQOABAEAhIPAAAKAQEHgAAFAICDwAACiECQKj6U05t1NneSs%2byvrg%2bi9HH7y81VKGtqgBKBy9Jitfw7zzBq9oY9OV69mhq6/nFq7n%2bCHwDKQvjDnq7FA9qBC4e/F0L6CD6vN4jcRD6kJpEgAYQW%2b5xNcy7zc46Hq26cqKPnX9eU3qXM9%2ba59CBOjSNIx6kXPQnVBHg6KvesHht6C%2bxgnsawYwXnzjqo791Lme%2bbqOej3X1XFcfY0FXM/xQOAZQl8ci%2bqf8zT68k62Ok7oiw0AUqYD6jh1blxHVVfHsvqaNYKRIPAM0HNxxP2CbvDdIQFAatQ1xz0tfD3bFB9bHYu4iR0NAm/MdNgtU3L7kNURegDp0GHH13NSi3DzTexegqFg0sr4cRjZIc9dpSuzM%2b0In8eh56jB7wMEAInQN688LBE27Hqv50qEz/MmqKnruUU5VltesPU/V5dmZmPZlQSBN0a6e6IacBr/oY9Qp%2bygte7zy/rzefZXUHco3xkezftFAjBGByn4JpSv50PqaK4vO9CBWVXH/hBfhyeybFFfI5PbU%2bkwUyHvqkdrs7wy65zxcyQvn%2b29Z81QDBB4Y6Jf3I2A01rqmB1Uj6Nf7Et86Hq9oNbifv01ASBG6vqrU/BNJwddY1BI6eu8yYfutjzo87Vs6pQ6NMhwKty8MHOJtotOoFfk5dZsuqNqCLyULFQXytedP1sptamm/uibnWdeqNo/c6/fp3D9Tei%2bem65qYuE74K4S6Uy4LQqX5io0wOIXdBkktko1506d15dqy3yHw%2bcU%2bfMm9jK67Tg3Joka4fU3bWCxg%2bBl6Cn3vPJ6oRL21XbvEqvn612P37D7TdRQNgtRQm7Lr5DVBfATvKfBMPdn00CgFjocgHb55QDw9xkcsF5z/XcDwehMa08bsmpVtwct%2bKk15Izb04kAi9Gn7n/UxUh21X1St2hQq5C7f53Zhvf9Wa/L%2bOoYx8NSYfeLA2%2bSLiVZ2PZIoDY%2bHVl8s1rg4ake254stmgFiQXtDdojFTQccDt55AzoRXnB4E3gqfe82l7Yu1STVpiu3D5jsYtq1do50mfv/ybtt/p92UPjBpG%2biJp0eAJMXyBzhMAxGGHz3ND37z24Gt10EotvGBFJe3lx3pac3WZXElV7BB4EXDAUftSddKytsu26sZor3kBJ3g6UYRbm9ve%2bSa/p1sUD74rrA54bjMBwMh03d2gMbaVOHpSeIxOfR%2beqT034BT%2bGVIJvO9culD%2b2eUFbs3tFcnVGiYGgRfglS98ffNn7v%2bkusOSO0R7zeZkk66MFHC9Jm%2ba9o4B4lwh3e8CqBIAxMH2ee4oxadF/oGXipdfP1MRKX6/uCHwApz6u2/WOtkWT%2b/01I1Tfk87FBN9V%2bhQhrobADLI9nkuzlaX39e6mSCUQgdet1Tg7%2baf3fEjex%2biNFz/g2/0e/o1iteg6co2AUAc/Lr1HErHLQShFC7wvFKBNdXvzjMpz55Vj1Q%2b8%2bIpMkTc9TSZXIUBACJBCy%2bk3Adet1Tg8kxKLhUIMZMSAKBoePal7KzYlEu5C7xuqYAoWZu9mZS6VCDqTEoAgCLR9XRRFrPPnMwHnjcO9/p3ayUSlcszKcVoMykBAIpEhd2cLEBtbuYCjwPu%2bnNnq4KX6%2bKAe/2sfSXZkHAAAFH87PLCQdlZoiz3jA%2b89Ysu965JiYADABiOt1qKlC1RoIUojAy8qxZd1jMpCQAAYsG7GahW3bIQwqYCMSLwfBddRiMOACA23bCjAtbjjiXwBs2k9CDgAAASUeSwY6kH3p/c/8llaq9VMZMSACA9RQ87lnrgrZXWZktuaVlIYRNAxp393/%2b59u1H31rlf6vXdNmyrqx60Zbype6/O/sUtlctl1bPXqCVOxsOVsGB1CDsOlIPvA9/fp/z1HsOziD0wHTf/G3bLpVK1Qsv/o/t0/e8v%2b857ZNfmrN6uuNlz3OXP64JUSJS/3fj9UQnH7tLfUSuqI86rpTPW67bQhBCEvRszKWiTVDpZyxjeAg9MJEKuGppYqIiXLlDWFSRsjN5qn3qy0QDAm80vFgCVVQw1qhU2t8JwreuCBIrLtHRdrvduv03HYcARqBeS/tV2GEPTBrjLE2EHozbiYZdvm6aKiVRqlkl2uUFnOyMK0tJYyIq6lvznmP1iVLJC0AprCMXL6613vzvnVR3tYbsq%2bnNWgk8Yy1LQOjBOHgtud6Qo3EGXBBREVJWpid1%2bJE4hJYfhKHCrqZe1g2Cy8Zeh4fQgzRwa%2b7GG6w5NchW012JBofcIIJbfgudlt9dS9RuH7rtN50WAayjJ6kcJLiKRQbg0Gtb7RkpvB26AWJ18WtHqzfdUDpBUjS6YZcDPO63fOqxu0688thddQLokfddD4ZlROAxhB4kxT33qt3tuswb9cZmc6sPwQddPG6nHqoE1zAm8Fg39CjHO3Xf8P03LRFAzBB8wHRXZoOgrwkpZZUM8%2bU/%2bbvG///Lr6a2N1P57o0Dn7vtnW%2bidzzyoxSXt/zzu/1aGjX199hE8bEHPaG%2bT4PiZVN636ufgb/Xye/7Z3T91l%2bjYU3e8WMDn7vuvp%2bjybf8GBnEVsfC9/7m5v3XvXPXkYDz%2bhrx7%2bX3%2bq6k9Frwm4K/K%2bb3vO0%2bzzXU9zpB8fD7vdrd3%2bt//8aXdn330gVKyg0TU3Rf%2bQcoDifOnqbX1y5SmoT6RWVu6B4AALJt9%2bf/lF45fzbEmaL19Ex9hmJgVJcmAABAUhB4AABQCAg8AAAoBAQeAAAUAgIPAAAKgZcWm6UM%2bc7Lq%2bWv/Lfj%2b9uX3EwVEt/%2bwB2H3vy%2bu9Ne/JcLUO0%2bH%2bc6x32UEd/76z/Y0T75Yi3ovBvf/1jfj1/88v%2bii1/5C4I%2bJqZXp%2b756UNTd7zHofzg1XTmBjx3QB0O5cSRr/313GsXz8e%2betBH3vajXgnCel9c/Rb95be%2bQnFIuySBTQghmpQxn7n/Uy1BLm9mmJnQc555sfnBn3h7qoEnpdxFAwIvK3/3Vx9765xLIjDs2KDAW3vlH%2bj8F/%2bMoK/yhZWndl1qt2fysiC1rrMbFHgt9dpvUQ4kuV7mh%2bxK38DjMoK4Am8cMtml%2bcG/%2buUVSVZmVmTh5dL4ZyaI5NXfeet%2bFXapLUBQVLxKy2SptMwb3hJkSZUydNNvgsyO4WUp9NQbyvMEkXhh5y32DGng0JsolY6/8om787K4du7JzpAFRJDpSStZCT0hCetnRoCwG5uymHSXEXrmU92ZVcJuCJFlfpZmNkKvhO7MkBB2Y%2beFHro3zeZKqhNElouyBJNDD%2bN34SHsjFHGmJ7ZhKAdBJHlpg7P1NCzpNUiCPTtR%2b%2bqIezM0Z3IcqZhY1KEYVR3Js9axt9lCLkqPDcx9FxyjxL44pZEyfJ2aAaDcOitvaG0SGAU1Z0ZqkwHrpW7lVZMC712qd0iGIjDbrJkLed1R/LME1Q9%2bTtvTaTWC4ajujO3Ewwll0uLmRJ6PH7Hu7gTDDRhlRYkCZvAXFLs/dajb91LMHaqO5Nn0NoEQ8ntWpomhB7G7/zxJBVuQRAYryTEfkxiMUKVYGi5Xjx63KGH8bvB1JtnFZNUMqWMSSxGwOzMEeR%2bt4Rxhh7G7/rT43aYpJIx3iSWGyys7jFGsrMwNgypENsDjSP01AtzBeN3/ZWsUgPjdhmlxvNO/vbbqmQ2rnudGXBktiZWj9%2bhhT2CwuyHl3boWSRQbN7HK4/dVReCdhFklijJBZO7NoUQvBtIa8CRiQXnB7AJRlKoDWDTDL22K58muIZFEl1iGcddmxffYGHWZvrQnTmiwu14nlbouZNraOGtw7My0ZWZD5YQc5i1mS5XIvBGVbjAY0mHHsbvrsVvjpiVmStlrqEkSI0aCthEMJJCBh5LMvQwfnctnqhCkC%2b8Cov5E1jyxCYYSWEDjyUVehi/uxq37jBRJacsjMmmoba8wJOEMENzRIUOPJZE6J1rr7UILkPrLsfQyksLwi4GhQ881gk9uY9iwON3syv7sjz1OVZo3RUAWnlpsAlGhsDTPvhXv9ZUoTdLo8NyYj3QuisAtPIgIxB4PeIIPelSi8CD1l2BoJWXNJtgZAi8dUYNPYzfXTE1MTFHUAyqlYeFpcF0CLw%2bhg890cL43RVSutiZuUCw%2bgqYboKgLw69z9z/u%2brGVYQurlUh%2bTyB59Sjd9UkumEKhVdfUQ8Ngtgtzcw21UOTUrIk6yeoz/X74z/wtuZ7b787jrkOY4EWno%2boLT1RoiUCT1tQnaBoypi8AiZDCy9AlJbe2fNYP5PxZBVrDBtVnnvud/t%2b/NLXv0CQDlmSPEmpRQAGQuCFEC70MH7XVSqVqjQG5479LsF4CaLamYa975aGg2sBjIMuzZCCujcxfneFGrvDZJXiKq9NT2BVfzASAi8Cv9DD%2bN0V4%2bjOBHNIgdm5YCYEXkSDQu/nP/%2brLQI6%2bdt2laDQhCWw2AAYCYE3hGtDT7QIPLJk4e4eytgcFkyEwBtSb%2bi5QmL9TE2QtZ2g8ISFGx8wDwJvBN3QsyxMw2ZnDvLSUhITFoCL0DcTgGFQljAiDj0Cz9p5qlCJAPhOukoAhkELD2IjLQutO/DwsnJYTBpMg8CD2EghqgSgoR4PTIPAg9hYJDYRgNa2XAQeGAWBBzHChBW4AhNXwDQIPIgF6q5gPTWOdwsBGASBB7GYwN53sE6JCC08MAoCD2IhrBJm5MFVsAEwmAaBB7FwSdoEsA5KE8AkCDyIhbqbxxsbXOP8NF4XYA4EHsQELTy4VttF4IE5EHgAkJhpawKBB8ZA4EE8hIU3NgAwGgIPYlGSdDMBrCNL6OoGc2C3BIiFdMUBUZJHCKDHWrvdIgBDIPAgFrf95ldaBABgMHRpAgBAIaCFBwAAVxFC3Ek5hBYeAAAUAgIPAAAKAYEHAACFgMADAIBCQOABAEAhIPAAAKAQEHgAAFAICDwAACgEBB4AABQCAg8AAAoBgQcAAIWAwAMAgEJA4AEAQCEg8AAAoBAQeAAAUAgIPAAAKAQEHgAAFAICDwAACgGBBwAAhYDAAwCAQkDgAQBAISDwAACgEBB4AABQCBMEeXZEHUf7fHyVAAAK5p8Agwdh0YbzVlQAAAAASUVORK5CYII='/%3e%3c/defs%3e%3c/svg%3e";

const StyledFooter = /*#__PURE__*/styled.footer.withConfig({
  displayName: "Footer__StyledFooter",
  componentId: "sc-1kifw7y-0"
})(["margin-top:17rem;padding-bottom:5rem;display:flex;justify-content:center;.logo-box{display:flex;align-items:center;img{margin-right:1.8rem;}}@media ", "{margin-top:12rem;}@media ", "{margin-top:6rem;}@media ", "{margin-top:3rem;}"], widthQuery.md, widthQuery.sm, widthQuery.xs);
const Footer = () => {
  return jsx(StyledFooter, {
    children: jsxs("div", Object.assign({
      className: "logo-box"
    }, {
      children: [jsx("img", {
        src: img,
        alt: "daohaus castle logo"
      }), jsxs(ParMd, {
        children: ["Built by ", jsx(Link$1, Object.assign({
          href: "https://daohaus.club"
        }, {
          children: "DAOhaus"
        }))]
      })]
    }))
  });
};

const OuterLayout = /*#__PURE__*/styled.div.withConfig({
  displayName: "OuterLayout",
  componentId: "n2mprg-0"
})(["width:100%;"]);

const StyledFormSegment = /*#__PURE__*/styled.section.withConfig({
  displayName: "FormSegmentstyles__StyledFormSegment",
  componentId: "eccgnt-0"
})(["width:100%;.segment-title{margin-bottom:3.2rem;}.segment-description{margin-bottom:3rem;}"]);
const StyledDivider = /*#__PURE__*/styled(Divider).withConfig({
  displayName: "FormSegmentstyles__StyledDivider",
  componentId: "eccgnt-1"
})(["margin:3.6rem 0 0 0;"]);

// REVIEW: No stories until there's a solid form sub-layout
const FormSegment = ({
  collapsible,
  defaultOpen,
  title,
  description,
  formArea,
  showDivider: _showDivider = true
}) => {
  if (collapsible) {
    return jsxs(Fragment, {
      children: [jsx(CollapsibleCard, {
        children: jsxs("div", {
          children: [jsx(H5, Object.assign({
            className: "segment-title"
          }, {
            children: title
          })), jsx(ParMd, Object.assign({
            className: "segment-description"
          }, {
            children: description
          }))]
        }),
        collapsibleContent: jsx("div", {
          children: formArea
        }),
        defaultOpen: defaultOpen,
        triggerLabel: '',
        width: "100%"
      }), _showDivider && jsx(StyledDivider, {})]
    });
  }
  return jsxs(StyledFormSegment, {
    children: [jsx(H5, Object.assign({
      className: "segment-title"
    }, {
      children: title
    })), jsx(ParMd, Object.assign({
      className: "segment-description"
    }, {
      children: description
    })), jsx("div", {
      children: formArea
    }), _showDivider && jsx(Divider, {})]
  });
};

const StyledSplitColumn = /*#__PURE__*/styled.div.withConfig({
  displayName: "SplitColumnstyles__StyledSplitColumn",
  componentId: "sc-11l039s-0"
})(["display:flex;width:100%;justify-content:space-between;flex-direction:column;"]);
const StyledRow = /*#__PURE__*/styled.div.withConfig({
  displayName: "SplitColumnstyles__StyledRow",
  componentId: "sc-11l039s-1"
})(["display:flex;width:100%;justify-content:space-between;.left-section,.right-section{width:24rem;@media ", "{width:100%;margin-bottom:1.6rem;}}@media ", "{flex-direction:column;}"], widthQuery.sm, widthQuery.sm);

// REVIEW: No stories until there's a solid form sub-layout
const SplitColumn = ({
  rows
}) => {
  return jsx(StyledSplitColumn, {
    children: Array.isArray(rows) ? rows.map(row => {
      return jsx(Row, Object.assign({}, row), row.rowId);
    }) : jsx(Row, Object.assign({}, rows))
  });
};
const Row = ({
  left,
  right
}) => {
  return jsxs(StyledRow, {
    children: [jsx("div", Object.assign({
      className: "left-section"
    }, {
      children: left
    })), jsx("div", Object.assign({
      className: "right-section"
    }, {
      children: right
    }))]
  });
};

const MainLayout = /*#__PURE__*/styled.main.withConfig({
  displayName: "MainLayout",
  componentId: "sc-1xme1bg-0"
})(["display:flex;width:100%;justify-content:center;padding:0 3.2rem 2.4rem 3.2rem;@media ", "{padding:0 2.4rem 2.4rem 2.4rem;}"], widthQuery.sm);

const FormContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "FormLayoutstyles__FormContainer",
  componentId: "sc-18y4tnc-0"
})(["width:58rem;margin-top:5rem;.subtitle{margin-bottom:1.2rem;opacity:0.6;}.title{margin-bottom:3rem;}.description{margin-bottom:5rem;}"]);

const FormLayout = ({
  title,
  subtitle,
  description,
  children
}) => {
  const formSubtitle = useMemo(() => {
    if (!subtitle) return null;
    if (typeof subtitle === 'string') return jsx(DataMd, Object.assign({
      className: "subtitle"
    }, {
      children: subtitle
    }));
    return jsx("div", Object.assign({
      className: "subtitle"
    }, {
      children: subtitle
    }));
  }, [subtitle]);
  const formTitle = useMemo(() => {
    if (!title) return null;
    if (typeof title === 'string') return jsx(H2, Object.assign({
      className: "title"
    }, {
      children: title
    }));
    return jsx("div", Object.assign({
      className: "title"
    }, {
      children: title
    }));
  }, [title]);
  const formDescription = useMemo(() => {
    if (!description) return null;
    if (typeof description === 'string') return jsx(DataMd, Object.assign({
      className: "description"
    }, {
      children: description
    }));
    return jsx("div", Object.assign({
      className: "description"
    }, {
      children: description
    }));
  }, [description]);
  return jsxs(FormContainer, {
    children: [formSubtitle, formTitle, formDescription, children]
  });
};

const BiColumnBox = /*#__PURE__*/styled.div.withConfig({
  displayName: "BiColumnstyles__BiColumnBox",
  componentId: "sc-1gbncfs-0"
})(["margin-top:5rem;width:100%;max-width:110rem;.subtitle{margin-bottom:1.2rem;opacity:0.6;}.title{margin-bottom:3rem;}.description{margin-bottom:5rem;}.split{display:flex;flex-direction:row;gap:3rem;@media ", "{flex-direction:column;}}@media ", "{margin-top:3rem;}"], widthQuery.md, widthQuery.sm);
const TitleContainerWithActions$1 = /*#__PURE__*/styled.div.withConfig({
  displayName: "BiColumnstyles__TitleContainerWithActions",
  componentId: "sc-1gbncfs-1"
})(["display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;width:100%;"]);
const ActionButtonContainer$1 = /*#__PURE__*/styled.div.withConfig({
  displayName: "BiColumnstyles__ActionButtonContainer",
  componentId: "sc-1gbncfs-2"
})(["display:flex;gap:1rem;margin-bottom:3rem;"]);

const BiColumnLayout = ({
  left,
  right,
  title,
  subtitle,
  description,
  actions
}) => {
  const sectionSubtitle = useMemo(() => {
    if (!subtitle) return null;
    if (typeof subtitle === 'string') return jsx(DataMd, Object.assign({
      className: "subtitle"
    }, {
      children: subtitle
    }));
    return jsx("div", Object.assign({
      className: "subtitle"
    }, {
      children: subtitle
    }));
  }, [subtitle]);
  const sectionTitle = useMemo(() => {
    if (!title) return null;
    if (!actions) return typeof title === 'string' ? jsx(H2, Object.assign({
      className: "title"
    }, {
      children: title
    })) : jsx("div", Object.assign({
      className: "title"
    }, {
      children: title
    }));
    return jsxs(TitleContainerWithActions$1, {
      children: [typeof title === 'string' ? jsx(H2, Object.assign({
        className: "title"
      }, {
        children: title
      })) : jsx("div", Object.assign({
        className: "title"
      }, {
        children: title
      })), actions && jsx(ActionButtonContainer$1, {
        children: actions
      })]
    });
  }, [title, actions]);
  const sectionDescription = useMemo(() => {
    if (!description) return null;
    if (typeof description === 'string') return jsx(DataMd, Object.assign({
      className: "description"
    }, {
      children: description
    }));
    return jsx("div", Object.assign({
      className: "description"
    }, {
      children: description
    }));
  }, [description]);
  return jsxs(BiColumnBox, {
    children: [sectionSubtitle, sectionTitle, sectionDescription, jsxs("div", Object.assign({
      className: "split"
    }, {
      children: [left, right]
    }))]
  });
};

const ColumnBox = /*#__PURE__*/styled.div.withConfig({
  displayName: "SingleColumnLayoutstyles__ColumnBox",
  componentId: "sc-1bimpbb-0"
})(["display:flex;flex-direction:column;justify-content:flex-start;width:100%;max-width:110rem;"]);
const ColumnHeader = /*#__PURE__*/styled.div.withConfig({
  displayName: "SingleColumnLayoutstyles__ColumnHeader",
  componentId: "sc-1bimpbb-1"
})(["display:flex;flex-direction:column;justify-content:flex-start;margin-top:5rem;width:100%;.subtitle{margin-bottom:1.2rem;opacity:0.6;}.title{margin-bottom:3rem;}.description{margin-bottom:5rem;}@media ", "{margin-top:3rem;}"], widthQuery.sm);
const ContentBox = /*#__PURE__*/styled.div.withConfig({
  displayName: "SingleColumnLayoutstyles__ContentBox",
  componentId: "sc-1bimpbb-2"
})(["display:flex;flex-direction:column;justify-content:center;align-items:center;"]);
const TitleContainerWithActions = /*#__PURE__*/styled.div.withConfig({
  displayName: "SingleColumnLayoutstyles__TitleContainerWithActions",
  componentId: "sc-1bimpbb-3"
})(["display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;width:100%;@media ", "{flex-direction:column;align-items:flex-start;}"], widthQuery.sm);
const ActionButtonContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "SingleColumnLayoutstyles__ActionButtonContainer",
  componentId: "sc-1bimpbb-4"
})(["display:flex;gap:1rem;margin-bottom:3rem;@media ", "{width:100%;flex-direction:column;}"], widthQuery.sm);

const SingleColumnLayout = ({
  title,
  subtitle,
  description,
  actions,
  children
}) => {
  const sectionSubtitle = useMemo(() => {
    if (!subtitle) return null;
    if (typeof subtitle === 'string') return jsx(DataMd, Object.assign({
      className: "subtitle"
    }, {
      children: subtitle
    }));
    return jsx("div", Object.assign({
      className: "subtitle"
    }, {
      children: subtitle
    }));
  }, [subtitle]);
  const sectionTitle = useMemo(() => {
    if (!title) return null;
    if (!actions) return typeof title === 'string' ? jsx(H2, Object.assign({
      className: "title"
    }, {
      children: title
    })) : jsx("div", Object.assign({
      className: "title"
    }, {
      children: title
    }));
    return jsxs(TitleContainerWithActions, {
      children: [typeof title === 'string' ? jsx(H2, Object.assign({
        className: "title"
      }, {
        children: title
      })) : jsx("div", Object.assign({
        className: "title"
      }, {
        children: title
      })), actions && jsx(ActionButtonContainer, {
        children: actions
      })]
    });
  }, [title, actions]);
  const sectionDescription = useMemo(() => {
    if (!description) return null;
    if (typeof description === 'string') return jsx(DataMd, Object.assign({
      className: "description"
    }, {
      children: description
    }));
    return jsx("div", Object.assign({
      className: "description"
    }, {
      children: description
    }));
  }, [description]);
  return jsxs(ColumnBox, {
    children: [jsxs(ColumnHeader, {
      children: [sectionSubtitle, sectionTitle, sectionDescription]
    }), jsx(ContentBox, {
      children: children
    })]
  });
};

export { AddressDisplay, AppSwitcher, Avatar, Badge, Banner, BiColumnLayout, Bold, Button, CSInput, Card, CheckGate, Checkbox, CollapsibleCard, CollapsibleContent, DataIndicator, DataLg, DataMd, DataSm, DataXl, DataXs, Dialog, DialogContent, DialogTrigger, Divider, DropdownButtonTrigger, DropdownCheckbox, DropdownContent, DropdownGroup, DropdownIconTrigger, DropdownItem, DropdownLabel, DropdownLink, DropdownLinkStyles, DropdownMenu, DropdownProfileTrigger, DropdownRadio, DropdownRadioGroup, DropdownSeparator, DropdownTrigger, ErrorText, ExtraBold, ExtraLight, FieldAlert, FieldWrapper, FileInput, Footer, FormLayout, FormSegment, GatedButton, GlobalStyles, H1, H2, H3, H4, H5, H6, HausThemeContext, HausThemeProvider, HelperText, HighlightInputText, Icon$1 as Icon, IconButton, Input, InputSelect, Italic, Label$2 as Label, LgTooltipIcon, Light, Link$1 as Link, LinkStyles, Loading, MainLayout, MemberCard, MemberCardCopyAddress, MemberCardExplorerLink, MemberCardItem, NavMenu, NavMenuBaseItemStyles, NavMenuContent, NavMenuIndicator, NavMenuItem, NavMenuLink, NavMenuList, NavMenuTrigger, NavMenuViewport, OuterLayout, ParLg, ParMd, ParSm, ParXl, ParXs, ProfileAvatar, Progress, Select, ShamanPermission, SingleColumnLayout, SmTooltipIcon, Spinner, SplitColumn, StrikeThrough, SuccessText, Switch, Tabs, Tag, TextArea, TimePicker, TintSecondary, Toast, ToastProvider, Tooltip, Underline, WarningText, WrappedCheckbox, WrappedInput, WrappedInputSelect, WrappedRadio, WrappedSelect, WrappedSwitch, WrappedTextArea, breakpoints, danger, dangerBtn, dangerDark, dangerDarkBtn, defaultDarkTheme, defaultLightTheme, font, info, infoDark, neutral, neutralDark, primary, primaryA, primaryBtn, primaryDark, primaryDarkA, primaryDarkBtn, secondary, secondaryA, secondaryBtn, secondaryDark, secondaryDarkA, secondaryDarkBtn, success, successBtn, successDark, successDarkBtn, useBreakpoint, useCopyToClipboard, useDebounce, useToast, warning, warningBtn, warningDark, warningDarkBtn, widthQuery };
