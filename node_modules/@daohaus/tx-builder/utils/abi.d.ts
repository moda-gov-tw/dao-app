import { ABI } from '@daohaus/utils';
import { Keychain, ValidNetwork } from '@daohaus/keychain-utils';
export declare const isProxyABI: (abi: ABI) => boolean;
export declare const getImplementation: ({ address, chainId, abi, rpcs, }: {
    address: string;
    chainId: ValidNetwork;
    abi: ABI;
    rpcs?: Keychain | undefined;
}) => Promise<string | false>;
export declare const processABI: ({ abi, fetchABI, contractAddress, chainId, rpcs, explorerKeys, }: {
    abi: ABI;
    fetchABI: ({ chainId, contractAddress, rpcs, explorerKeys, }: {
        chainId: ValidNetwork;
        contractAddress: string;
        rpcs: Keychain;
        explorerKeys: Keychain;
    }) => Promise<ABI | undefined>;
    contractAddress: string;
    chainId: ValidNetwork;
    rpcs: Keychain;
    explorerKeys: Keychain;
}) => Promise<ABI | undefined>;
export declare const fetchABI: ({ contractAddress, chainId, rpcs, explorerKeys, }: {
    contractAddress: string;
    chainId: ValidNetwork;
    rpcs?: Keychain | undefined;
    explorerKeys?: Keychain | undefined;
}) => Promise<ABI | undefined>;
export declare const getCode: ({ contractAddress, chainId, rpcs, }: {
    contractAddress: string;
    chainId: ValidNetwork;
    rpcs?: Keychain | undefined;
}) => Promise<import("viem").GetBytecodeReturnType>;
