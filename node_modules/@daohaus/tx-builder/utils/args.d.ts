import { ABI, ArbitraryState, ArgType, TXLego, ValidArgType } from '@daohaus/utils';
import { Keychain, PinataApiKeys, ValidNetwork } from '@daohaus/keychain-utils';
import { ArgCallback } from '../TXBuilder';
export declare const isSearchArg: (arg: ValidArgType) => arg is `.${string}`;
export declare const processArg: ({ arg, chainId, safeId, localABIs, appState, rpcs, pinataApiKeys, explorerKeys, }: {
    arg: ValidArgType;
    chainId: ValidNetwork;
    safeId?: string | undefined;
    localABIs: Record<string, ABI>;
    appState: ArbitraryState;
    rpcs: Keychain;
    pinataApiKeys: PinataApiKeys;
    explorerKeys: Keychain;
}) => Promise<ArgType>;
export declare const processArgs: ({ tx, chainId, safeId, localABIs, appState, argCallbackRecord, rpcs, pinataApiKeys, explorerKeys, }: {
    tx: TXLego;
    chainId: ValidNetwork;
    safeId?: string | undefined;
    localABIs: Record<string, ABI>;
    appState: ArbitraryState;
    argCallbackRecord: Record<string, ArgCallback>;
    rpcs: Keychain;
    pinataApiKeys: PinataApiKeys;
    explorerKeys: Keychain;
}) => Promise<ArgType[]>;
