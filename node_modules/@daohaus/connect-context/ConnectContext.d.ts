import { ReactNode } from 'react';
import { PublicClient } from 'wagmi';
import { NetworkConfigs, ValidNetwork } from '@daohaus/keychain-utils';
import { ConnectLifecycleFns, UserProfile } from './utils/types';
export type UserConnectType = {
    networks: NetworkConfigs;
    daoId?: string;
    daoChainId?: string;
    connectWallet: () => Promise<void>;
    disconnect: () => void;
    address?: string;
    chainId?: ValidNetwork;
    validNetwork: boolean;
    isConnecting: boolean;
    isConnected: boolean;
    switchNetwork: (chainId: string) => void;
    profile: UserProfile;
    isProfileLoading: boolean;
    publicClient?: PublicClient;
};
export declare const ConnectContext: import("react").Context<UserConnectType>;
export type ConnectProviderProps = {
    networks?: NetworkConfigs;
    children: ReactNode;
    lifeCycleFns?: ConnectLifecycleFns;
    daoId?: string;
    daoChainId?: string;
};
export declare const ConnectProvider: ({ children, networks, lifeCycleFns, daoChainId, daoId, }: ConnectProviderProps) => JSX.Element;
export declare const useConnect: () => UserConnectType;
