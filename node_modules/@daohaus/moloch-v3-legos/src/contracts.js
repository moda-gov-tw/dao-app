"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CONTRACT = void 0;
const abis_1 = require("@daohaus/abis");
const keychain_utils_1 = require("@daohaus/keychain-utils");
exports.CONTRACT = {
    POSTER: {
        type: 'static',
        contractName: 'Poster',
        abi: abis_1.LOCAL_ABI.POSTER,
        targetAddress: keychain_utils_1.CONTRACT_KEYCHAINS.POSTER,
    },
    ERC_20: {
        type: 'static',
        contractName: 'ERC20',
        abi: abis_1.LOCAL_ABI.ERC20,
        targetAddress: '.tokenAddress',
    },
    ERC_20_FUNDING: {
        type: 'static',
        contractName: 'ERC20',
        abi: abis_1.LOCAL_ABI.ERC20,
        targetAddress: '.formValues.paymentTokenAddress',
    },
    CURRENT_DAO: {
        type: 'static',
        contractName: 'Current DAO (Baal)',
        abi: abis_1.LOCAL_ABI.BAAL,
        targetAddress: '.daoId',
    },
    TRIBUTE_MINION: {
        type: 'static',
        contractName: 'Tribute Minion',
        abi: abis_1.LOCAL_ABI.TRIBUTE_MINION,
        targetAddress: keychain_utils_1.CONTRACT_KEYCHAINS.TRIBUTE_MINION,
    },
    SHARES_ERC20: {
        type: 'static',
        contractName: 'SHARES_ERC20',
        abi: abis_1.LOCAL_ABI.SHARES,
        targetAddress: '.dao.sharesAddress',
    },
    LOOT_ERC20: {
        type: 'static',
        contractName: 'LOOT_ERC20',
        abi: abis_1.LOCAL_ABI.LOOT,
        targetAddress: '.dao.sharesAddress',
    },
    VAULT_SUMMONER: {
        type: 'static',
        contractName: 'VAULT_SUMMONER',
        abi: abis_1.LOCAL_ABI.VAULT_SUMMONER,
        targetAddress: keychain_utils_1.CONTRACT_KEYCHAINS.VAULT_SUMMONER,
    },
    GNOSIS_MODULE: {
        type: 'static',
        contractName: 'GNOSIS_MODULE',
        abi: abis_1.LOCAL_ABI.GNOSIS_MODULE,
        targetAddress: '.formValues.safeAddress',
    },
    GNOSIS_MULTISEND: {
        type: 'static',
        contractName: 'GNOSIS_MULTISEND',
        abi: abis_1.LOCAL_ABI.GNOSIS_MULTISEND,
        targetAddress: keychain_utils_1.CONTRACT_KEYCHAINS.GNOSIS_MULTISEND,
    },
};
//# sourceMappingURL=contracts.js.map