import { Baal, Loot, Shares } from '@daohaus/baal-contracts';
import { ethers } from 'ethers';
import { ContractConfig, ProcessProposalArgs, SubmitProposalArgs } from './types';
export declare class MolochV3Contract {
    molochV3: Baal;
    shares: Shares;
    loot: Loot;
    private constructor();
    static create({ address, provider, }: ContractConfig): Promise<MolochV3Contract>;
    /**
     * Submit proposal
     * @param proposalActions array of action parameters - to address, value, operation, abi, function name, function args
     * @param expiration epoch time in seconds for when the proposal will expire, 0 for no expiration
     * @param baalGas esitmated gas limit for executing the above actions
     * @param details Context for proposal.
     */
    submitProposal(args: SubmitProposalArgs): Promise<ethers.ContractTransaction>;
    /**
     * Process/execute proposal
     * @param id uint256 id of the proposal
     * @param proposalData Multisend encoded transactions or proposal data
     */
    processProposal(args: ProcessProposalArgs): Promise<ethers.ContractTransaction>;
}
