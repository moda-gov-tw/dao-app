import { ethers } from 'ethers';
import { BaalSummoner } from '@daohaus/baal-contracts';
import { ContractNetworkConfig, SummonMolochV3Args } from './types';
import { ValidNetwork } from '@daohaus/keychain-utils';
export declare class MolochV3SummonerContract {
    summoner: BaalSummoner;
    networkId: ValidNetwork;
    private constructor();
    static create({ networkId, provider, }: ContractNetworkConfig): MolochV3SummonerContract;
    /**
     * Deploy dao and safe contracts
     * @param initializationParams encoded share token name and symbol and forwarder, safeAddress, shareToken address (string, string, address, address, address)
     * @param initializationActions encoded functions with args called in summoning
     * * setAdminConfig(bool pauseShares, bool pauseLoot)
     * * setGovernanceConfig (
              uint32 voting,
              uint32 grace,
              uint256 newOffering,
              uint256 quorum,
              uint256 sponsor,
              uint256 minRetention
          )
     * * setShamans(
          address[] calldata _shamans,
          uint256[] calldata _permissions
      )
     * * mintShares(address[] calldata to, uint256[] calldata amount)
     * * minLoot(address[] calldata to, uint256[] calldata amount)
     * * metadata: post(string content, string tag)
     * @param _saltNonce any uint256
     */
    summonMolochV3(args: SummonMolochV3Args): Promise<ethers.ContractTransaction>;
}
