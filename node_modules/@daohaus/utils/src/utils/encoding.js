"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNonce = exports.encodeFunction = exports.encodeValues = void 0;
const viem_1 = require("viem");
const encodeValues = (typesArray, valueArray) => {
    return (0, viem_1.encodeAbiParameters)((0, viem_1.parseAbiParameters)(typesArray.join(',')), valueArray);
};
exports.encodeValues = encodeValues;
const encodeFunction = (abi, fnName, functionArgs) => {
    try {
        if (!abi || !Array.isArray(functionArgs))
            throw new Error('Incorrect params passed to safeEncodeHexFunction in abi.js');
        return (0, viem_1.encodeFunctionData)({
            abi,
            functionName: fnName,
            args: functionArgs,
        });
    }
    catch (error) {
        console.error('error', error);
        return {
            error: true,
            message: 'Could not encode transaction data with the values provided',
        };
    }
};
exports.encodeFunction = encodeFunction;
const getNonce = (length = 24) => {
    let text = '';
    const possible = '0123456789';
    for (let i = 0; i < length; i++) {
        text += possible.charAt(Math.floor(Math.random() * possible.length));
    }
    return text;
};
exports.getNonce = getNonce;
//# sourceMappingURL=encoding.js.map