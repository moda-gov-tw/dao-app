"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatDistanceToNowFromSeconds = exports.formatLongDateFromSeconds = exports.formatDateFromSeconds = exports.formatShortDateTimeFromSeconds = exports.formatDateTimeFromSeconds = void 0;
const date_fns_1 = require("date-fns");
const formatDateTimeFromSeconds = (seconds) => {
    if (!seconds) {
        return;
    }
    return (0, date_fns_1.format)(new Date(Number(seconds) * 1000), 'h:mm aaa MMMM do y');
};
exports.formatDateTimeFromSeconds = formatDateTimeFromSeconds;
const formatShortDateTimeFromSeconds = (seconds) => {
    if (!seconds) {
        return;
    }
    return (0, date_fns_1.format)(new Date(Number(seconds) * 1000), 'MMMM do, p');
};
exports.formatShortDateTimeFromSeconds = formatShortDateTimeFromSeconds;
const formatDateFromSeconds = (seconds) => {
    if (!seconds) {
        return;
    }
    return (0, date_fns_1.format)(new Date(Number(seconds) * 1000), 'M / dd / yy');
};
exports.formatDateFromSeconds = formatDateFromSeconds;
const formatLongDateFromSeconds = (seconds) => {
    if (!seconds) {
        return;
    }
    return (0, date_fns_1.format)(new Date(Number(seconds) * 1000), 'MMMM dd, yyyy');
};
exports.formatLongDateFromSeconds = formatLongDateFromSeconds;
const formatDistanceToNowFromSeconds = (seconds) => {
    if (!seconds) {
        return;
    }
    return (0, date_fns_1.formatDistanceToNow)(new Date(Number(seconds) * 1000), {
        addSuffix: true,
    });
};
exports.formatDistanceToNowFromSeconds = formatDistanceToNowFromSeconds;
//# sourceMappingURL=dates.js.map