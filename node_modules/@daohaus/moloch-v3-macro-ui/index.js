import { jsx, jsxs, Fragment } from 'react/jsx-runtime';
import { Card, widthQuery, ProfileAvatar, Button, ParMd, Link as Link$2, DataMd, Tag, ParXs, H4, AddressDisplay, SingleColumnLayout, DataIndicator, useBreakpoint, H3, ParSm, Tooltip, DataSm, DropdownLinkStyles, MemberCard, MemberCardItem, MemberCardExplorerLink, MemberCardCopyAddress, breakpoints, font, DropdownLabel, Dialog, DropdownMenu, DropdownIconTrigger, DropdownContent, DropdownItem, DialogTrigger, DialogContent, H5, DataXs, ParLg, Loading, Icon, Divider, Bold, DropdownTrigger, Progress, GatedButton, Italic, TintSecondary, useToast, DropdownButtonTrigger, Input } from '@daohaus/ui';
import { charLimit, formatValueTo, fromWei, lowerCaseLootToken, formatLongDateFromSeconds, ZERO_ADDRESS, toWholeUnits, formatPeriods, INFO_COPY, votingPowerPercentage, NETWORK_TOKEN_ETH_ADDRESS, memberUsdValueShare, memberTokenBalanceShare, formatDateFromSeconds, sharesDelegatedToMember, createViemClient, PROPOSAL_TYPE_WARNINGS, formatShortDateTimeFromSeconds, dynamicDecimals, isNumberish, isEthAddress, SENSITIVE_PROPOSAL_TYPES, DAO_METHOD_TO_PROPOSAL_TYPE, PROPOSAL_STATUS, formatDistanceToNowFromSeconds, formatDateTimeFromSeconds, generateGnosisUiLink, getProposalTypeLabel, percentage, checkHasQuorum, getGasCostEstimate, roundedPercentage, formatShares, baalTimeToNow, getProcessingGasLimit, handleErrorMessage, PROP_CARD_HELP, PROPOSAL_TYPE_LABELS, PROPOSAL_FILTERS } from '@daohaus/utils';
import React, { useMemo, useState, useEffect, useRef } from 'react';
import { useCurrentDao, useDaoData, useDaoMember, useProfile, useDaoMembers, useConnectedMember, useDaoProposal, useDaoProposals } from '@daohaus/moloch-v3-hooks';
import styled, { useTheme } from 'styled-components';
import { Link as Link$1 } from 'react-router-dom';
import { RiGithubFill, RiDiscordFill, RiTwitterFill, RiTelegramFill, RiArticleLine, RiLinksFill, RiArrowUpSFill, RiArrowDownSFill, RiMore2Fill, RiErrorWarningLine, RiArrowUpSLine, RiArrowDownSLine, RiTimeLine, RiGasStationLine, RiThumbUpLine, RiThumbDownLine, RiFilterFill } from 'react-icons/ri/index.js';
import { useDHConnect, ExplorerLink } from '@daohaus/connect';
import { getNetwork, isValidNetwork } from '@daohaus/keychain-utils';
import { useTable } from 'react-table';
import { indigoDark, mintDark, tomatoDark, slateDark } from '@radix-ui/colors';
import { FormBuilder } from '@daohaus/form-builder';
import { MolochFields } from '@daohaus/moloch-v3-fields';
import { COMMON_FORMS, TX } from '@daohaus/moloch-v3-legos';
import { LOCAL_ABI } from '@daohaus/abis';
import { isActionError, deepDecodeProposalActions, useTxBuilder } from '@daohaus/tx-builder';
import ReactMarkdown from 'react-markdown';
import { MdOutlineGavel } from 'react-icons/md';
import { statusFilter } from '@daohaus/moloch-v3-data';
import { AiOutlineCheck } from 'react-icons/ai';
import { BiSearch } from 'react-icons/bi';

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global$d =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || commonjsGlobal || Function('return this')();

var objectGetOwnPropertyDescriptor = {};

var fails$g = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

var fails$f = fails$g;

// Detect IE8's incomplete defineProperty implementation
var descriptors = !fails$f(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});

var fails$e = fails$g;

var functionBindNative = !fails$e(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});

var NATIVE_BIND$1 = functionBindNative;

var call$7 = Function.prototype.call;

var functionCall = NATIVE_BIND$1 ? call$7.bind(call$7) : function () {
  return call$7.apply(call$7, arguments);
};

var objectPropertyIsEnumerable = {};

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor$2 && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor$2(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;

var createPropertyDescriptor$4 = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var NATIVE_BIND = functionBindNative;

var FunctionPrototype$1 = Function.prototype;
var call$6 = FunctionPrototype$1.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype$1.bind.bind(call$6, call$6);

var functionUncurryThis = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
  return function () {
    return call$6.apply(fn, arguments);
  };
};

var uncurryThis$h = functionUncurryThis;

var toString$7 = uncurryThis$h({}.toString);
var stringSlice$3 = uncurryThis$h(''.slice);

var classofRaw$2 = function (it) {
  return stringSlice$3(toString$7(it), 8, -1);
};

var uncurryThis$g = functionUncurryThis;
var fails$d = fails$g;
var classof$4 = classofRaw$2;

var $Object$4 = Object;
var split = uncurryThis$g(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var indexedObject = fails$d(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object$4('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof$4(it) == 'String' ? split(it, '') : $Object$4(it);
} : $Object$4;

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
var isNullOrUndefined$2 = function (it) {
  return it === null || it === undefined;
};

var isNullOrUndefined$1 = isNullOrUndefined$2;

var $TypeError$9 = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible$5 = function (it) {
  if (isNullOrUndefined$1(it)) throw $TypeError$9("Can't call method on " + it);
  return it;
};

// toObject with fallback for non-array-like ES3 strings
var IndexedObject$2 = indexedObject;
var requireObjectCoercible$4 = requireObjectCoercible$5;

var toIndexedObject$5 = function (it) {
  return IndexedObject$2(requireObjectCoercible$4(it));
};

var documentAll$2 = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
var IS_HTMLDDA = typeof documentAll$2 == 'undefined' && documentAll$2 !== undefined;

var documentAll_1 = {
  all: documentAll$2,
  IS_HTMLDDA: IS_HTMLDDA
};

var $documentAll$1 = documentAll_1;

var documentAll$1 = $documentAll$1.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
var isCallable$g = $documentAll$1.IS_HTMLDDA ? function (argument) {
  return typeof argument == 'function' || argument === documentAll$1;
} : function (argument) {
  return typeof argument == 'function';
};

var isCallable$f = isCallable$g;
var $documentAll = documentAll_1;

var documentAll = $documentAll.all;

var isObject$7 = $documentAll.IS_HTMLDDA ? function (it) {
  return typeof it == 'object' ? it !== null : isCallable$f(it) || it === documentAll;
} : function (it) {
  return typeof it == 'object' ? it !== null : isCallable$f(it);
};

var global$c = global$d;
var isCallable$e = isCallable$g;

var aFunction = function (argument) {
  return isCallable$e(argument) ? argument : undefined;
};

var getBuiltIn$3 = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global$c[namespace]) : global$c[namespace] && global$c[namespace][method];
};

var uncurryThis$f = functionUncurryThis;

var objectIsPrototypeOf = uncurryThis$f({}.isPrototypeOf);

var engineUserAgent = typeof navigator != 'undefined' && String(navigator.userAgent) || '';

var global$b = global$d;
var userAgent$2 = engineUserAgent;

var process$1 = global$b.process;
var Deno = global$b.Deno;
var versions = process$1 && process$1.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent$2) {
  match = userAgent$2.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent$2.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

var engineV8Version = version;

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = engineV8Version;
var fails$c = fails$g;
var global$a = global$d;

var $String$6 = global$a.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$c(function () {
  var symbol = Symbol();
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
  // of course, fail.
  return !$String$6(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL$2 = symbolConstructorDetection;

var useSymbolAsUid = NATIVE_SYMBOL$2
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';

var getBuiltIn$2 = getBuiltIn$3;
var isCallable$d = isCallable$g;
var isPrototypeOf$2 = objectIsPrototypeOf;
var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;

var $Object$3 = Object;

var isSymbol$2 = USE_SYMBOL_AS_UID$1 ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn$2('Symbol');
  return isCallable$d($Symbol) && isPrototypeOf$2($Symbol.prototype, $Object$3(it));
};

var $String$5 = String;

var tryToString$2 = function (argument) {
  try {
    return $String$5(argument);
  } catch (error) {
    return 'Object';
  }
};

var isCallable$c = isCallable$g;
var tryToString$1 = tryToString$2;

var $TypeError$8 = TypeError;

// `Assert: IsCallable(argument) is true`
var aCallable$4 = function (argument) {
  if (isCallable$c(argument)) return argument;
  throw $TypeError$8(tryToString$1(argument) + ' is not a function');
};

var aCallable$3 = aCallable$4;
var isNullOrUndefined = isNullOrUndefined$2;

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
var getMethod$1 = function (V, P) {
  var func = V[P];
  return isNullOrUndefined(func) ? undefined : aCallable$3(func);
};

var call$5 = functionCall;
var isCallable$b = isCallable$g;
var isObject$6 = isObject$7;

var $TypeError$7 = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
var ordinaryToPrimitive$1 = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable$b(fn = input.toString) && !isObject$6(val = call$5(fn, input))) return val;
  if (isCallable$b(fn = input.valueOf) && !isObject$6(val = call$5(fn, input))) return val;
  if (pref !== 'string' && isCallable$b(fn = input.toString) && !isObject$6(val = call$5(fn, input))) return val;
  throw $TypeError$7("Can't convert object to primitive value");
};

var shared$3 = {exports: {}};

var global$9 = global$d;

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$6 = Object.defineProperty;

var defineGlobalProperty$3 = function (key, value) {
  try {
    defineProperty$6(global$9, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global$9[key] = value;
  } return value;
};

var global$8 = global$d;
var defineGlobalProperty$2 = defineGlobalProperty$3;

var SHARED = '__core-js_shared__';
var store$3 = global$8[SHARED] || defineGlobalProperty$2(SHARED, {});

var sharedStore = store$3;

var store$2 = sharedStore;

(shared$3.exports = function (key, value) {
  return store$2[key] || (store$2[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.32.0',
  mode: 'global',
  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.32.0/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});

var requireObjectCoercible$3 = requireObjectCoercible$5;

var $Object$2 = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
var toObject$5 = function (argument) {
  return $Object$2(requireObjectCoercible$3(argument));
};

var uncurryThis$e = functionUncurryThis;
var toObject$4 = toObject$5;

var hasOwnProperty = uncurryThis$e({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject$4(it), key);
};

var uncurryThis$d = functionUncurryThis;

var id = 0;
var postfix = Math.random();
var toString$6 = uncurryThis$d(1.0.toString);

var uid$2 = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$6(++id + postfix, 36);
};

var global$7 = global$d;
var shared$2 = shared$3.exports;
var hasOwn$a = hasOwnProperty_1;
var uid$1 = uid$2;
var NATIVE_SYMBOL$1 = symbolConstructorDetection;
var USE_SYMBOL_AS_UID = useSymbolAsUid;

var Symbol$1 = global$7.Symbol;
var WellKnownSymbolsStore = shared$2('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$1['for'] || Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid$1;

var wellKnownSymbol$a = function (name) {
  if (!hasOwn$a(WellKnownSymbolsStore, name)) {
    WellKnownSymbolsStore[name] = NATIVE_SYMBOL$1 && hasOwn$a(Symbol$1, name)
      ? Symbol$1[name]
      : createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};

var call$4 = functionCall;
var isObject$5 = isObject$7;
var isSymbol$1 = isSymbol$2;
var getMethod = getMethod$1;
var ordinaryToPrimitive = ordinaryToPrimitive$1;
var wellKnownSymbol$9 = wellKnownSymbol$a;

var $TypeError$6 = TypeError;
var TO_PRIMITIVE = wellKnownSymbol$9('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
var toPrimitive$1 = function (input, pref) {
  if (!isObject$5(input) || isSymbol$1(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call$4(exoticToPrim, input, pref);
    if (!isObject$5(result) || isSymbol$1(result)) return result;
    throw $TypeError$6("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};

var toPrimitive = toPrimitive$1;
var isSymbol = isSymbol$2;

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
var toPropertyKey$3 = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};

var global$6 = global$d;
var isObject$4 = isObject$7;

var document$1 = global$6.document;
// typeof document.createElement is 'object' in old IE
var EXISTS$1 = isObject$4(document$1) && isObject$4(document$1.createElement);

var documentCreateElement$2 = function (it) {
  return EXISTS$1 ? document$1.createElement(it) : {};
};

var DESCRIPTORS$a = descriptors;
var fails$b = fails$g;
var createElement = documentCreateElement$2;

// Thanks to IE8 for its funny defineProperty
var ie8DomDefine = !DESCRIPTORS$a && !fails$b(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});

var DESCRIPTORS$9 = descriptors;
var call$3 = functionCall;
var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
var createPropertyDescriptor$3 = createPropertyDescriptor$4;
var toIndexedObject$4 = toIndexedObject$5;
var toPropertyKey$2 = toPropertyKey$3;
var hasOwn$9 = hasOwnProperty_1;
var IE8_DOM_DEFINE$1 = ie8DomDefine;

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
objectGetOwnPropertyDescriptor.f = DESCRIPTORS$9 ? $getOwnPropertyDescriptor$1 : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject$4(O);
  P = toPropertyKey$2(P);
  if (IE8_DOM_DEFINE$1) try {
    return $getOwnPropertyDescriptor$1(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn$9(O, P)) return createPropertyDescriptor$3(!call$3(propertyIsEnumerableModule$1.f, O, P), O[P]);
};

var objectDefineProperty = {};

var DESCRIPTORS$8 = descriptors;
var fails$a = fails$g;

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
var v8PrototypeDefineBug = DESCRIPTORS$8 && fails$a(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype != 42;
});

var isObject$3 = isObject$7;

var $String$4 = String;
var $TypeError$5 = TypeError;

// `Assert: Type(argument) is Object`
var anObject$7 = function (argument) {
  if (isObject$3(argument)) return argument;
  throw $TypeError$5($String$4(argument) + ' is not an object');
};

var DESCRIPTORS$7 = descriptors;
var IE8_DOM_DEFINE = ie8DomDefine;
var V8_PROTOTYPE_DEFINE_BUG$1 = v8PrototypeDefineBug;
var anObject$6 = anObject$7;
var toPropertyKey$1 = toPropertyKey$3;

var $TypeError$4 = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE$1 = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
objectDefineProperty.f = DESCRIPTORS$7 ? V8_PROTOTYPE_DEFINE_BUG$1 ? function defineProperty(O, P, Attributes) {
  anObject$6(O);
  P = toPropertyKey$1(P);
  anObject$6(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject$6(O);
  P = toPropertyKey$1(P);
  anObject$6(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw $TypeError$4('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var DESCRIPTORS$6 = descriptors;
var definePropertyModule$4 = objectDefineProperty;
var createPropertyDescriptor$2 = createPropertyDescriptor$4;

var createNonEnumerableProperty$4 = DESCRIPTORS$6 ? function (object, key, value) {
  return definePropertyModule$4.f(object, key, createPropertyDescriptor$2(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var makeBuiltIn$3 = {exports: {}};

var DESCRIPTORS$5 = descriptors;
var hasOwn$8 = hasOwnProperty_1;

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS$5 && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn$8(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS$5 || (DESCRIPTORS$5 && getDescriptor(FunctionPrototype, 'name').configurable));

var functionName = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};

var uncurryThis$c = functionUncurryThis;
var isCallable$a = isCallable$g;
var store$1 = sharedStore;

var functionToString = uncurryThis$c(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable$a(store$1.inspectSource)) {
  store$1.inspectSource = function (it) {
    return functionToString(it);
  };
}

var inspectSource$1 = store$1.inspectSource;

var global$5 = global$d;
var isCallable$9 = isCallable$g;

var WeakMap$1 = global$5.WeakMap;

var weakMapBasicDetection = isCallable$9(WeakMap$1) && /native code/.test(String(WeakMap$1));

var shared$1 = shared$3.exports;
var uid = uid$2;

var keys = shared$1('keys');

var sharedKey$3 = function (key) {
  return keys[key] || (keys[key] = uid(key));
};

var hiddenKeys$4 = {};

var NATIVE_WEAK_MAP = weakMapBasicDetection;
var global$4 = global$d;
var isObject$2 = isObject$7;
var createNonEnumerableProperty$3 = createNonEnumerableProperty$4;
var hasOwn$7 = hasOwnProperty_1;
var shared = sharedStore;
var sharedKey$2 = sharedKey$3;
var hiddenKeys$3 = hiddenKeys$4;

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError$1 = global$4.TypeError;
var WeakMap = global$4.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject$2(it) || (state = get(it)).type !== TYPE) {
      throw TypeError$1('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set = function (it, metadata) {
    if (store.has(it)) throw TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store.get(it) || {};
  };
  has = function (it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey$2('state');
  hiddenKeys$3[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn$7(it, STATE)) throw TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty$3(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn$7(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn$7(it, STATE);
  };
}

var internalState = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};

var uncurryThis$b = functionUncurryThis;
var fails$9 = fails$g;
var isCallable$8 = isCallable$g;
var hasOwn$6 = hasOwnProperty_1;
var DESCRIPTORS$4 = descriptors;
var CONFIGURABLE_FUNCTION_NAME$1 = functionName.CONFIGURABLE;
var inspectSource = inspectSource$1;
var InternalStateModule$1 = internalState;

var enforceInternalState = InternalStateModule$1.enforce;
var getInternalState$1 = InternalStateModule$1.get;
var $String$3 = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$5 = Object.defineProperty;
var stringSlice$2 = uncurryThis$b(''.slice);
var replace$1 = uncurryThis$b(''.replace);
var join = uncurryThis$b([].join);

var CONFIGURABLE_LENGTH = DESCRIPTORS$4 && !fails$9(function () {
  return defineProperty$5(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn$2 = makeBuiltIn$3.exports = function (value, name, options) {
  if (stringSlice$2($String$3(name), 0, 7) === 'Symbol(') {
    name = '[' + replace$1($String$3(name), /^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn$6(value, 'name') || (CONFIGURABLE_FUNCTION_NAME$1 && value.name !== name)) {
    if (DESCRIPTORS$4) defineProperty$5(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn$6(options, 'arity') && value.length !== options.arity) {
    defineProperty$5(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn$6(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS$4) defineProperty$5(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwn$6(state, 'source')) {
    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn$2(function toString() {
  return isCallable$8(this) && getInternalState$1(this).source || inspectSource(this);
}, 'toString');

var isCallable$7 = isCallable$g;
var definePropertyModule$3 = objectDefineProperty;
var makeBuiltIn$1 = makeBuiltIn$3.exports;
var defineGlobalProperty$1 = defineGlobalProperty$3;

var defineBuiltIn$4 = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable$7(value)) makeBuiltIn$1(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty$1(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule$3.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};

var objectGetOwnPropertyNames = {};

var ceil = Math.ceil;
var floor$2 = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
var mathTrunc = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor$2 : ceil)(n);
};

var trunc = mathTrunc;

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
var toIntegerOrInfinity$4 = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};

var toIntegerOrInfinity$3 = toIntegerOrInfinity$4;

var max$1 = Math.max;
var min$2 = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
var toAbsoluteIndex$2 = function (index, length) {
  var integer = toIntegerOrInfinity$3(index);
  return integer < 0 ? max$1(integer + length, 0) : min$2(integer, length);
};

var toIntegerOrInfinity$2 = toIntegerOrInfinity$4;

var min$1 = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
var toLength$2 = function (argument) {
  return argument > 0 ? min$1(toIntegerOrInfinity$2(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

var toLength$1 = toLength$2;

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
var lengthOfArrayLike$4 = function (obj) {
  return toLength$1(obj.length);
};

var toIndexedObject$3 = toIndexedObject$5;
var toAbsoluteIndex$1 = toAbsoluteIndex$2;
var lengthOfArrayLike$3 = lengthOfArrayLike$4;

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod$1 = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject$3($this);
    var length = lengthOfArrayLike$3(O);
    var index = toAbsoluteIndex$1(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var arrayIncludes = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod$1(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod$1(false)
};

var uncurryThis$a = functionUncurryThis;
var hasOwn$5 = hasOwnProperty_1;
var toIndexedObject$2 = toIndexedObject$5;
var indexOf = arrayIncludes.indexOf;
var hiddenKeys$2 = hiddenKeys$4;

var push$1 = uncurryThis$a([].push);

var objectKeysInternal = function (object, names) {
  var O = toIndexedObject$2(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn$5(hiddenKeys$2, key) && hasOwn$5(O, key) && push$1(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn$5(O, key = names[i++])) {
    ~indexOf(result, key) || push$1(result, key);
  }
  return result;
};

// IE8- don't enum bug keys
var enumBugKeys$3 = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];

var internalObjectKeys$1 = objectKeysInternal;
var enumBugKeys$2 = enumBugKeys$3;

var hiddenKeys$1 = enumBugKeys$2.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys$1(O, hiddenKeys$1);
};

var objectGetOwnPropertySymbols = {};

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;

var getBuiltIn$1 = getBuiltIn$3;
var uncurryThis$9 = functionUncurryThis;
var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
var anObject$5 = anObject$7;

var concat$1 = uncurryThis$9([].concat);

// all object keys, includes non-enumerable and symbols
var ownKeys$1 = getBuiltIn$1('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject$5(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;
  return getOwnPropertySymbols ? concat$1(keys, getOwnPropertySymbols(it)) : keys;
};

var hasOwn$4 = hasOwnProperty_1;
var ownKeys = ownKeys$1;
var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
var definePropertyModule$2 = objectDefineProperty;

var copyConstructorProperties$2 = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule$2.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn$4(target, key) && !(exceptions && hasOwn$4(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

var fails$8 = fails$g;
var isCallable$6 = isCallable$g;

var replacement = /#|\.prototype\./;

var isForced$1 = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : isCallable$6(detection) ? fails$8(detection)
    : !!detection;
};

var normalize = isForced$1.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced$1.data = {};
var NATIVE = isForced$1.NATIVE = 'N';
var POLYFILL = isForced$1.POLYFILL = 'P';

var isForced_1 = isForced$1;

var global$3 = global$d;
var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
var createNonEnumerableProperty$2 = createNonEnumerableProperty$4;
var defineBuiltIn$3 = defineBuiltIn$4;
var defineGlobalProperty = defineGlobalProperty$3;
var copyConstructorProperties$1 = copyConstructorProperties$2;
var isForced = isForced_1;

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
var _export = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global$3;
  } else if (STATIC) {
    target = global$3[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = (global$3[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor$1(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties$1(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty$2(sourceProperty, 'sham', true);
    }
    defineBuiltIn$3(target, key, sourceProperty, options);
  }
};

var internalObjectKeys = objectKeysInternal;
var enumBugKeys$1 = enumBugKeys$3;

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
var objectKeys$2 = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys$1);
};

var DESCRIPTORS$3 = descriptors;
var uncurryThis$8 = functionUncurryThis;
var call$2 = functionCall;
var fails$7 = fails$g;
var objectKeys$1 = objectKeys$2;
var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
var propertyIsEnumerableModule = objectPropertyIsEnumerable;
var toObject$3 = toObject$5;
var IndexedObject$1 = indexedObject;

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty$4 = Object.defineProperty;
var concat = uncurryThis$8([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
var objectAssign = !$assign || fails$7(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS$3 && $assign({ b: 1 }, $assign(defineProperty$4({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty$4(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] != 7 || objectKeys$1($assign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject$3(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject$1(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat(objectKeys$1(S), getOwnPropertySymbols(S)) : objectKeys$1(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS$3 || call$2(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;

var $$8 = _export;
var assign = objectAssign;

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$$8({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign }, {
  assign: assign
});

var wellKnownSymbol$8 = wellKnownSymbol$a;

var TO_STRING_TAG$3 = wellKnownSymbol$8('toStringTag');
var test$1 = {};

test$1[TO_STRING_TAG$3] = 'z';

var toStringTagSupport = String(test$1) === '[object z]';

var TO_STRING_TAG_SUPPORT = toStringTagSupport;
var isCallable$5 = isCallable$g;
var classofRaw$1 = classofRaw$2;
var wellKnownSymbol$7 = wellKnownSymbol$a;

var TO_STRING_TAG$2 = wellKnownSymbol$7('toStringTag');
var $Object$1 = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw$1(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
var classof$3 = TO_STRING_TAG_SUPPORT ? classofRaw$1 : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = $Object$1(it), TO_STRING_TAG$2)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw$1(O)
    // ES3 arguments fallback
    : (result = classofRaw$1(O)) == 'Object' && isCallable$5(O.callee) ? 'Arguments' : result;
};

var classof$2 = classof$3;

var $String$2 = String;

var toString$5 = function (argument) {
  if (classof$2(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
  return $String$2(argument);
};

var makeBuiltIn = makeBuiltIn$3.exports;
var defineProperty$3 = objectDefineProperty;

var defineBuiltInAccessor$1 = function (target, name, descriptor) {
  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });
  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });
  return defineProperty$3.f(target, name, descriptor);
};

var $$7 = _export;
var DESCRIPTORS$2 = descriptors;
var global$2 = global$d;
var uncurryThis$7 = functionUncurryThis;
var hasOwn$3 = hasOwnProperty_1;
var isCallable$4 = isCallable$g;
var isPrototypeOf$1 = objectIsPrototypeOf;
var toString$4 = toString$5;
var defineBuiltInAccessor = defineBuiltInAccessor$1;
var copyConstructorProperties = copyConstructorProperties$2;

var NativeSymbol = global$2.Symbol;
var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;

if (DESCRIPTORS$2 && isCallable$4(NativeSymbol) && (!('description' in SymbolPrototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString$4(arguments[0]);
    var result = isPrototypeOf$1(SymbolPrototype, this)
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };

  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  SymbolWrapper.prototype = SymbolPrototype;
  SymbolPrototype.constructor = SymbolWrapper;

  var NATIVE_SYMBOL = String(NativeSymbol('test')) == 'Symbol(test)';
  var thisSymbolValue = uncurryThis$7(SymbolPrototype.valueOf);
  var symbolDescriptiveString = uncurryThis$7(SymbolPrototype.toString);
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  var replace = uncurryThis$7(''.replace);
  var stringSlice$1 = uncurryThis$7(''.slice);

  defineBuiltInAccessor(SymbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = thisSymbolValue(this);
      if (hasOwn$3(EmptyStringDescriptionStore, symbol)) return '';
      var string = symbolDescriptiveString(symbol);
      var desc = NATIVE_SYMBOL ? stringSlice$1(string, 7, -1) : replace(string, regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $$7({ global: true, constructor: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}

let _$r = t => t,
  _t$r,
  _t2$h,
  _t3$d,
  _t4$9,
  _t5$8,
  _t6$8,
  _t7$7;
const OverviewCard = styled(Card)(_t$r || (_t$r = _$r`
  width: 64rem;
  padding: 2rem;
  border: none;
  margin-bottom: 3.4rem;
  @media ${0} {
    max-width: 100%;
    min-width: 0;
  }
`), widthQuery.md);
const TokensCard = styled(OverviewCard)(_t2$h || (_t2$h = _$r`
  padding: 2.4rem;
`));
const DataGrid$3 = styled.div(_t3$d || (_t3$d = _$r`
  display: flex;
  width: 100%;
  justify-content: space-between;
  flex-wrap: wrap;

  div {
    padding: 2rem 0;
  }
`));
const DaoProfileContainer = styled.div(_t4$9 || (_t4$9 = _$r`
  width: 100%;
  border-radius: ${0};
  border: 1px ${0} solid;
  background-color: ${0};
  padding: 2.2rem;
  .avatar {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: 1.7rem;
    margin-bottom: 2.7rem;
    p {
      margin-right: auto;
    }
    @media ${0} {
      flex-direction: column;
    }
  }
`), ({
  theme
}) => theme.card.radius, ({
  theme
}) => theme.secondary.step5, ({
  theme
}) => theme.secondary.step3, widthQuery.xs);
const DaoProfileAvatar$1 = styled(ProfileAvatar)(_t5$8 || (_t5$8 = _$r`
  width: 18rem;
  height: 18rem;
`));
const MissingProfileCard = styled(Card)(_t6$8 || (_t6$8 = _$r`
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2.3rem;
`));
const TagListContainer = styled.div(_t7$7 || (_t7$7 = _$r`
  margin-top: 2.8rem;
`));

const missingDaoProfileData = dao => {
  if (!(dao === null || dao === void 0 ? void 0 : dao.profile) || !dao.profile.length) return true;
  return dao.description === '' && dao.avatarImg === '';
};
const daoProfileHasLinks = links => {
  return links === null || links === void 0 ? void 0 : links.some(link => link.url);
};

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

let _$q = t => t,
  _t$q;
const StyledRouterLink$4 = styled(Link$1)(_t$q || (_t$q = _$q`
  text-decoration: none;
  color: unset;
  &:hover {
    text-decoration: none;
  }
`));
const ButtonRouterLink = _a => {
  var {
      to,
      target,
      disabled,
      children,
      linkType,
      hideIcon,
      rel
    } = _a,
    buttonProps = __rest(_a, ["to", "target", "disabled", "children", "linkType", "hideIcon", "rel"]);
  return jsx(StyledRouterLink$4, Object.assign({
    to: to,
    target: target,
    className: "button-link",
    rel: rel
  }, {
    children: jsx(Button, Object.assign({
      disabled: disabled
    }, buttonProps, {
      children: children
    }))
  }));
};

let _$p = t => t,
  _t$p;
const DataGrid$2 = styled.div(_t$p || (_t$p = _$p`
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  align-content: space-between;
  div {
    padding: 2rem 0;
    width: 19.7rem;

    @media ${0} {
      min-width: 100%;
    }
  }
`), widthQuery.sm);

let _$o = t => t,
  _t$o,
  _t2$g,
  _t3$c;
const isPredefinedSettingsLink = link => {
  return link.label && ['Github', 'Discord', 'Telegram', 'Twitter', 'Blog', 'Web'].indexOf(link.label) >= 0;
};
const LinkContainer$1 = styled.div(_t$o || (_t$o = _$o`
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  margin-top: 1.5rem;
`));
const LinkContents = styled.div(_t2$g || (_t2$g = _$o`
  display: flex;
  align-items: self-start;
  gap: 0.5rem;
`));
const IconLinkContainer = styled.div(_t3$c || (_t3$c = _$o`
  display: flex;
  gap: 1.5rem;
  margin: 1.5rem 0;
`));
const MetadataLinkIcons = {
  Github: jsx(RiGithubFill, {
    size: '2.5rem'
  }),
  Discord: jsx(RiDiscordFill, {
    size: '2.5rem'
  }),
  Twitter: jsx(RiTwitterFill, {
    size: '2.5rem'
  }),
  Telegram: jsx(RiTelegramFill, {
    size: '2.5rem'
  }),
  Blog: jsx(RiArticleLine, {
    size: '2.5rem'
  }),
  default: jsx(RiLinksFill, {
    size: '2.5rem'
  })
};
const SettingsLinkList = ({
  links
}) => {
  if (!links) {
    return null;
  }
  return jsxs(Fragment, {
    children: [jsx(ParMd, {
      children: "相關連結"
    }), jsx(LinkContainer$1, {
      children: links.filter(link => link.url).map((link, i) => jsx(Link$2, Object.assign({
        showExternalIcon: false,
        href: link.url
      }, {
        children: jsxs(LinkContents, {
          children: [link.label && MetadataLinkIcons[link.label] || MetadataLinkIcons['default'], jsx(DataMd, {
            children: charLimit(link.url, 28)
          })]
        })
      }), i))
    })]
  });
};
const OverviewIconLinkList = ({
  links
}) => {
  if (!links) {
    return null;
  }
  return jsx(IconLinkContainer, {
    children: links.filter(link => link.url && isPredefinedSettingsLink(link)).map((link, i) => jsx(Link$2, Object.assign({
      showExternalIcon: false,
      href: link.url
    }, {
      children: jsx(LinkContents, {
        children: link.label && MetadataLinkIcons[link.label] || MetadataLinkIcons['default']
      })
    }), i))
  });
};
const OverviewLinkList = ({
  links
}) => {
  if (!links) {
    return null;
  }
  return jsx(LinkContainer$1, {
    children: links.filter(link => link.url && !isPredefinedSettingsLink(link)).map((link, i) => jsx(Link$2, Object.assign({
      showExternalIcon: false,
      href: link.url
    }, {
      children: jsxs(LinkContents, {
        children: [link.label && MetadataLinkIcons[link.label] || MetadataLinkIcons['default'], jsx(DataMd, {
          children: charLimit(link.label, 45)
        })]
      })
    }), i))
  });
};

let _$n = t => t,
  _t$n,
  _t2$f;
styled.div(_t$n || (_t$n = _$n`
  margin-top: 2.8rem;
`));
const TagContainer = styled.div(_t2$f || (_t2$f = _$n`
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  gap: 1rem;
`));
const tagColors = ['violet', 'green', 'blue', 'pink', 'yellow', 'red'];
const TagList = ({
  tags
}) => {
  return jsx(TagContainer, {
    children: tags.filter(Boolean).map(tag => jsx(Tag, Object.assign({
      tagColor: tagColors[tagColors.length * Math.random() | 0]
    }, {
      children: tag
    }), tag))
  });
};

const DaoProfile = ({
  dao
}) => {
  const {
    daoChain,
    daoId
  } = useCurrentDao();
  const missingProfile = useMemo(() => {
    if (!missingDaoProfileData(dao)) return null;
    return jsxs(MissingProfileCard, {
      children: [jsx(ParXs, {
        children: "(\uFF89\u00B4\u30EE`)\uFF89*: \uFF65\uFF9F Add some sparkle with a DAO avatar and description!"
      }), jsx(Link$2, Object.assign({
        href: `/molochv3/${daoChain}/${daoId}/settings`
      }, {
        children: jsx(Button, {
          children: "Go To Settings"
        })
      }))]
    });
  }, [dao, daoChain, daoId]);
  return jsxs(DaoProfileContainer, {
    children: [jsxs("div", Object.assign({
      className: "avatar"
    }, {
      children: [jsx(DaoProfileAvatar$1, {
        address: dao.id,
        image: dao.avatarImg
      }), jsxs("div", {
        children: [jsx(H4, {
          children: charLimit(dao.name, 21)
        }), jsx(AddressDisplay, {
          address: dao.id,
          truncate: true,
          copy: true,
          explorerNetworkId: daoChain
        })]
      })]
    })), missingProfile || jsxs(Fragment, {
      children: [jsx(ParMd, {
        children: dao.description
      }), daoProfileHasLinks(dao.links) && jsxs(Fragment, {
        children: [jsx(OverviewLinkList, {
          links: dao.links
        }), jsx(OverviewIconLinkList, {
          links: dao.links
        })]
      }), jsx(TagListContainer, {
        children: dao.tags && jsx(TagList, {
          tags: dao.tags
        })
      })]
    })]
  });
};

const DaoOverview = ({
  daoChain,
  daoId,
  graphApiKeys
}) => {
  var _a;
  const {
    dao
  } = useDaoData({
    daoChain,
    daoId,
    graphApiKeys
  });
  if (!dao) return null;
  return jsx(SingleColumnLayout, {
    children: dao && jsxs(Fragment, {
      children: [jsxs(OverviewCard, {
        children: [jsx(DaoProfile, {
          dao: dao
        }), jsxs(DataGrid$3, {
          children: [jsx(DataIndicator, {
            label: "金庫總額",
            data: formatValueTo({
              value: dao.fiatTotal,
              decimals: 2,
              format: 'currencyShort'
            })
          }), jsx(DataIndicator, {
            label: "成員數量",
            data: dao.activeMemberCount
          }), jsx(DataIndicator, {
            label: "提案數量",
            data: dao.proposalCount
          }), jsx(DataIndicator, {
            label: "進行中提案",
            data: ((_a = dao.activeProposals) === null || _a === void 0 ? void 0 : _a.length) || '0'
          })]
        })]
      })]
    })
  });
};

let _$m = t => t,
  _t$m,
  _t2$e,
  _t3$b,
  _t4$8,
  _t5$7,
  _t6$7,
  _t7$6,
  _t8$4,
  _t9$3,
  _t10$3,
  _t11$3,
  _t12$3,
  _t13$3,
  _t14$1;
const SettingsContainer = styled(Card)(_t$m || (_t$m = _$m`
  width: 110rem;
  padding: 3rem;
  border: none;
  margin-bottom: 3rem;
  @media ${0} {
    max-width: 100%;
    min-width: 0;
  }
`), widthQuery.lg);
const MetaCardHeader = styled.div(_t2$e || (_t2$e = _$m`
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: wrap;
  margin-bottom: 3rem;
`));
const MetaContent = styled.div(_t3$b || (_t3$b = _$m`
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  flex-wrap: wrap;
  gap: 3.4rem;
  .icon {
    margin-top: 1.2rem;
  }
  .section-middle {
    width: 38rem;
    display: flex;
    flex-direction: column;
    gap: 3rem;
  }
  .links {
    margin: 1.2rem 0;
  }
`));
const DaoProfileAvatar = styled(ProfileAvatar)(_t4$8 || (_t4$8 = _$m`
  width: 8.9rem;
  height: 8.9rem;
`));
const WarningContainer$1 = styled(Card)(_t5$7 || (_t5$7 = _$m`
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  width: 100%;
  padding: 1rem 2rem;
  margin-top: 3rem;
  background-color: ${0};
  border-color: ${0};
  .title {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
  }
`), ({
  theme
}) => theme.warning.step3, ({
  theme
}) => theme.warning.step7);
const GovernanceContainer = styled.div(_t6$7 || (_t6$7 = _$m`
  h4 {
    margin-top: 4rem;
  }
`));
const GovernanceCardHeader = styled.div(_t7$6 || (_t7$6 = _$m`
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: wrap;
  margin-bottom: 3rem;
`));
const TokensHeader = styled.div(_t8$4 || (_t8$4 = _$m`
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  flex-wrap: wrap;
`));
const DataGrid$1 = styled.div(_t9$3 || (_t9$3 = _$m`
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  align-content: space-between;
  div {
    margin-top: 3rem;
    width: 34rem;

    @media ${0} {
      min-width: 100%;
    }
  }
`), widthQuery.sm);
const TokenDataGrid = styled(DataGrid$1)(_t10$3 || (_t10$3 = _$m`
  div {
    width: 22.7rem;
  }
`));
const StyledLink = styled.a(_t11$3 || (_t11$3 = _$m`
  text-decoration: none;
  color: ${0};
  &:hover {
    text-decoration: none;
  }
`), ({
  theme
}) => theme.primary.step10);
const ShamanContainer = styled.div(_t12$3 || (_t12$3 = _$m`
  .tokens {
    margin-top: 3rem;
  }
  h4 {
    margin-top: 4rem;
  }
`));
const ShamanCardHeader = styled.div(_t13$3 || (_t13$3 = _$m`
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: wrap;
  margin-bottom: 3rem;
`));
const ShamanListContainer = styled.div(_t14$1 || (_t14$1 = _$m`
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  align-content: space-between;
  div {
    margin-top: 3rem;

    @media ${0} {
      min-width: 100%;
    }
  }
  .contract {
    width: 60%;
  }
  .manage {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    width: 40%;
  }
`), widthQuery.sm);

const ContractSettings = ({
  dao,
  daoChain
}) => {
  const isMobile = useBreakpoint(widthQuery.sm);
  return jsxs(SettingsContainer, {
    children: [jsx(MetaCardHeader, {
      children: jsx(H3, {
        children: "合約地址"
      })
    }), jsxs(MetaContent, {
      children: [jsxs("div", {
        children: [jsx(ParSm, {
          children: "Moloch v3"
        }), jsx(AddressDisplay, {
          address: dao.id,
          copy: true,
          explorerNetworkId: daoChain,
          truncate: isMobile
        })]
      }), jsxs("div", {
        children: [jsx(ParSm, {
          children: "Gnosis Safe (Treasury)"
        }), jsx(AddressDisplay, {
          address: dao.safeAddress,
          copy: true,
          truncate: isMobile,
          explorerNetworkId: daoChain
        })]
      }), jsxs("div", {
        children: [jsx(ParSm, {
          children: "Voting Token"
        }), jsx(AddressDisplay, {
          address: dao.sharesAddress,
          copy: true,
          truncate: isMobile,
          explorerNetworkId: daoChain
        })]
      }), jsxs("div", {
        children: [jsx(ParSm, {
          children: "Non-Voting Token"
        }), jsx(AddressDisplay, {
          address: dao.lootAddress,
          copy: true,
          truncate: isMobile,
          explorerNetworkId: daoChain
        })]
      })]
    })]
  });
};

const MetadataSettings = ({
  dao,
  daoChain,
  includeLinks
}) => {
  const {
    address
  } = useDHConnect();
  const {
    member
  } = useDaoMember({
    daoId: dao.id,
    daoChain: daoChain,
    memberAddress: address
  });
  const enableActions = useMemo(() => {
    return member && Number(member.shares) > 0;
  }, [member]);
  const isMobile = useBreakpoint(widthQuery.sm);
  return jsxs(SettingsContainer, {
    children: [jsxs(MetaCardHeader, {
      children: [jsx(H3, {
        children: "相關數據"
      }), includeLinks && enableActions && jsx(ButtonRouterLink, Object.assign({
        color: "secondary",
        to: `/molochv3/${daoChain}/${dao.id}/settings/update`
      }, {
        children: "更新DAO資訊"
      }))]
    }), jsxs(MetaContent, {
      children: [jsxs("div", {
        children: [jsx(ParMd, {
          children: "圖像"
        }), jsx("div", Object.assign({
          className: "icon"
        }, {
          children: jsx(DaoProfileAvatar, {
            address: dao.id,
            image: dao.avatarImg
          })
        }))]
      }), jsxs("div", Object.assign({
        className: "section-middle"
      }, {
        children: [jsx(DataIndicator, {
          label: "DAO 名稱",
          data: charLimit(dao.name, 21),
          size: "sm"
        }), jsx(DataIndicator, {
          label: "創立時間",
          data: formatLongDateFromSeconds(dao.createdAt),
          size: "sm"
        }), jsx(DataIndicator, {
          label: "描述",
          data: dao.description,
          size: "sm"
        }), dao.tags && jsx("div", Object.assign({
          className: "tags"
        }, {
          children: jsx(TagList, {
            tags: dao.tags
          })
        }))]
      })), jsxs("div", Object.assign({
        className: "links"
      }, {
        children: [daoProfileHasLinks(dao.links) && jsx(SettingsLinkList, {
          links: dao.links
        }), dao.forwarder !== ZERO_ADDRESS && jsxs(WarningContainer$1, {
          children: [jsxs("div", Object.assign({
            className: "title"
          }, {
            children: [jsx(ParMd, {
              children: "Forwarder Address"
            }), jsx(Tooltip, {
              content: "Forwarder Address is the contract used to sign and send transactions without the original sender paying for gas."
            })]
          })), jsx(AddressDisplay, {
            address: dao.sharesAddress,
            copy: true,
            truncate: isMobile,
            explorerNetworkId: daoChain
          })]
        })]
      }))]
    })]
  });
};

const GovernanceSettings = ({
  dao,
  daoChain,
  includeLinks: _includeLinks = false
}) => {
  const networkData = useMemo(() => {
    if (!daoChain) return null;
    return getNetwork(daoChain);
  }, [daoChain]);
  const defaultValues = useMemo(() => {
    if (!dao) return null;
    return {
      votingPeriod: dao.votingPeriod,
      votingPeriodUnits: 'seconds',
      gracePeriodUnits: 'seconds',
      gracePeriod: dao.gracePeriod,
      quorum: dao.quorumPercent,
      minRetention: dao.minRetentionPercent,
      sponsorThreshold: toWholeUnits(dao.sponsorThreshold),
      newOffering: toWholeUnits(dao.proposalOffering),
      vStake: dao.sharesPaused,
      nvStake: dao.lootPaused
    };
  }, [dao]);
  return jsx(SettingsContainer, {
    children: jsxs(GovernanceContainer, {
      children: [jsxs(GovernanceCardHeader, {
        children: [jsx(H3, {
          children: "治理參數"
        }), _includeLinks && jsx(ButtonRouterLink, Object.assign({
          color: "secondary",
          to: `/molochv3/${daoChain}/${dao.id}/new-proposal?formLego=UPDATE_GOV_SETTINGS&defaultValues=${JSON.stringify(defaultValues)}`
        }, {
          children: "更新治理參數"
        }))]
      }), jsx("div", Object.assign({
        className: "description"
      }, {
        children: jsxs(ParSm, {
          children: [jsx(StyledLink, Object.assign({
            href: "https://moloch.daohaus.club/configuration/governance-configuration",
            target: "_blank",
            rel: "noreferrer"
          }, {
            children: ""
          })), ' ', ""]
        })
      })), jsxs(DataGrid$1, {
        children: [jsx(DataIndicator, {
          size: "sm",
          label: "Voting Period",
          data: formatPeriods(dao.votingPeriod),
          info: INFO_COPY.VOTING_PERIOD
        }), jsx(DataIndicator, {
          size: "sm",
          label: "寬限期",
          data: formatPeriods(dao.gracePeriod),
          info: INFO_COPY.GRACE_PERIOD
        }), jsx(DataIndicator, {
          size: "sm",
          label: "New Offering",
          data: `${fromWei(dao.proposalOffering)} ${networkData === null || networkData === void 0 ? void 0 : networkData.symbol}`,
          info: INFO_COPY.NEW_OFFERING
        })]
      }), jsxs(DataGrid$1, {
        children: [jsx(DataIndicator, {
          size: "sm",
          label: "Quorum %",
          data: formatValueTo({
            value: dao.quorumPercent,
            format: 'percent'
          }),
          info: INFO_COPY.QUORUM
        }), jsx(DataIndicator, {
          size: "sm",
          label: "Min Retention %",
          data: formatValueTo({
            value: dao.minRetentionPercent,
            format: 'percent'
          }),
          info: INFO_COPY.MIN_RETENTION
        }), jsx(DataIndicator, {
          size: "sm",
          label: "Sponsor Threshold",
          data: `${fromWei(dao.sponsorThreshold)} Voting Tokens`,
          info: INFO_COPY.SPONSOR_THRESHOLD
        })]
      })]
    })
  });
};

const ShamanList = ({
  shamen,
  daoChain,
  daoId,
  includeLinks
}) => {
  return jsxs(Fragment, {
    children: [jsxs(ShamanListContainer, {
      children: [jsx("div", Object.assign({
        className: "contract"
      }, {
        children: jsx(DataSm, {
          children: "Contract"
        })
      })), jsx("div", {
        children: jsx(DataSm, {
          children: "Permissions"
        })
      })]
    }), shamen && shamen.map(shaman => jsxs(ShamanListContainer, {
      children: [jsx("span", Object.assign({
        className: "contract"
      }, {
        children: jsx(AddressDisplay, {
          address: shaman.shamanAddress,
          explorerNetworkId: daoChain
        })
      })), jsxs("div", Object.assign({
        className: "manage"
      }, {
        children: [jsx(DataSm, {
          children: shaman.permissions
        }), includeLinks && jsx(ButtonRouterLink, Object.assign({
          size: "sm",
          color: "secondary",
          to: `/molochv3/${daoChain}/${daoId}/new-proposal?formLego=UPDATE_SHAMAN&defaultValues=${JSON.stringify({
            shamanAddress: shaman.shamanAddress,
            shamanPermission: shaman.permissions
          })}`
        }, {
          children: "Manage"
        }))]
      }))]
    }, shaman.id))]
  });
};

const ShamanSettings = ({
  dao,
  daoChain,
  includeLinks: _includeLinks = false
}) => {
  return ;
};

const TokenSettings = ({
  dao,
  daoChain,
  includeLinks: _includeLinks = false
}) => {
  const defaultValues = useMemo(() => {
    if (!dao) return null;
    return {
      votingPeriod: dao.votingPeriod,
      votingPeriodUnits: 'seconds',
      gracePeriodUnits: 'seconds',
      gracePeriod: dao.gracePeriod,
      quorum: dao.quorumPercent,
      minRetention: dao.minRetentionPercent,
      sponsorThreshold: toWholeUnits(dao.sponsorThreshold),
      newOffering: toWholeUnits(dao.proposalOffering),
      vStake: dao.sharesPaused,
      nvStake: dao.lootPaused
    };
  }, [dao]);
  return ;
};

const DaoSettings = ({
  daoChain,
  daoId,
  includeLinks: _includeLinks = false,
  graphApiKeys
}) => {
  const {
    dao
  } = useDaoData({
    daoChain,
    daoId,
    graphApiKeys
  });
  if (!dao) return null;
  return jsxs(Fragment, {
    children: [jsx(MetadataSettings, {
      dao: dao,
      daoChain: daoChain,
      includeLinks: _includeLinks
    }), jsx(ContractSettings, {
      dao: dao,
      daoChain: daoChain
    }), jsx(GovernanceSettings, {
      dao: dao,
      daoChain: daoChain,
      includeLinks: _includeLinks
    }), jsx(TokenSettings, {
      dao: dao,
      daoChain: daoChain,
      includeLinks: _includeLinks
    }), jsx(ShamanSettings, {
      dao: dao,
      daoChain: daoChain,
      includeLinks: _includeLinks
    })]
  });
};

var objectDefineProperties = {};

var DESCRIPTORS$1 = descriptors;
var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
var definePropertyModule$1 = objectDefineProperty;
var anObject$4 = anObject$7;
var toIndexedObject$1 = toIndexedObject$5;
var objectKeys = objectKeys$2;

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
objectDefineProperties.f = DESCRIPTORS$1 && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject$4(O);
  var props = toIndexedObject$1(Properties);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule$1.f(O, key = keys[index++], props[key]);
  return O;
};

var getBuiltIn = getBuiltIn$3;

var html$1 = getBuiltIn('document', 'documentElement');

/* global ActiveXObject -- old IE, WSH */
var anObject$3 = anObject$7;
var definePropertiesModule = objectDefineProperties;
var enumBugKeys = enumBugKeys$3;
var hiddenKeys = hiddenKeys$4;
var html = html$1;
var documentCreateElement$1 = documentCreateElement$2;
var sharedKey$1 = sharedKey$3;

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO$1 = sharedKey$1('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement$1('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO$1] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
var objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject$3(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO$1] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};

var wellKnownSymbol$6 = wellKnownSymbol$a;
var create$1 = objectCreate;
var defineProperty$2 = objectDefineProperty.f;

var UNSCOPABLES = wellKnownSymbol$6('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  defineProperty$2(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create$1(null)
  });
}

// add a key to Array.prototype[@@unscopables]
var addToUnscopables$2 = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};

var $$6 = _export;
var $includes = arrayIncludes.includes;
var fails$6 = fails$g;
var addToUnscopables$1 = addToUnscopables$2;

// FF99+ bug
var BROKEN_ON_SPARSE = fails$6(function () {
  // eslint-disable-next-line es/no-array-prototype-includes -- detection
  return !Array(1).includes();
});

// `Array.prototype.includes` method
// https://tc39.es/ecma262/#sec-array.prototype.includes
$$6({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables$1('includes');

var isObject$1 = isObject$7;
var classof$1 = classofRaw$2;
var wellKnownSymbol$5 = wellKnownSymbol$a;

var MATCH$1 = wellKnownSymbol$5('match');

// `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp
var isRegexp = function (it) {
  var isRegExp;
  return isObject$1(it) && ((isRegExp = it[MATCH$1]) !== undefined ? !!isRegExp : classof$1(it) == 'RegExp');
};

var isRegExp = isRegexp;

var $TypeError$3 = TypeError;

var notARegexp = function (it) {
  if (isRegExp(it)) {
    throw $TypeError$3("The method doesn't accept regular expressions");
  } return it;
};

var wellKnownSymbol$4 = wellKnownSymbol$a;

var MATCH = wellKnownSymbol$4('match');

var correctIsRegexpLogic = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) { /* empty */ }
  } return false;
};

var $$5 = _export;
var uncurryThis$6 = functionUncurryThis;
var notARegExp$1 = notARegexp;
var requireObjectCoercible$2 = requireObjectCoercible$5;
var toString$3 = toString$5;
var correctIsRegExpLogic$1 = correctIsRegexpLogic;

var stringIndexOf = uncurryThis$6(''.indexOf);

// `String.prototype.includes` method
// https://tc39.es/ecma262/#sec-string.prototype.includes
$$5({ target: 'String', proto: true, forced: !correctIsRegExpLogic$1('includes') }, {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~stringIndexOf(
      toString$3(requireObjectCoercible$2(this)),
      toString$3(notARegExp$1(searchString)),
      arguments.length > 1 ? arguments[1] : undefined
    );
  }
});

let _$l = t => t,
  _t$l,
  _t2$d,
  _t3$a,
  _t4$7,
  _t5$6,
  _t6$6,
  _t7$5;
const Table = styled.table(_t$l || (_t$l = _$l`
  width: 100%;
  font-size: 1.6rem;
  line-height: 2.4rem;
  border-collapse: collapse;
  text-align: left;
  margin-bottom: 2rem;
`));
const Thead = styled.thead(_t2$d || (_t2$d = _$l``));
const Th = styled.th(_t3$a || (_t3$a = _$l`
  color: ${0};
  border-bottom: 1px solid ${0};
  padding: 2rem 0.5rem;
`), indigoDark.indigo11, indigoDark.indigo5);
const HeaderCellContainer = styled.div(_t4$7 || (_t4$7 = _$l`
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: center;
  /* gap: 1rem; */
`));
const Tr = styled.tr(_t5$6 || (_t5$6 = _$l``));
const Td = styled.td(_t6$6 || (_t6$6 = _$l`
  padding: 2rem 0.5rem;
`));
const TBody = styled.tbody(_t7$5 || (_t7$5 = _$l``));

let _$k = t => t,
  _t$k;
const SorterContainer = styled.div(_t$k || (_t$k = _$k`
  display: flex;
  flex-direction: column;
  margin-left: 0.5rem;
`));
const ColumnSortIcons = ({
  orderBy,
  handleColumnSort
}) => {
  return jsxs(SorterContainer, {
    children: [jsx(RiArrowUpSFill, {
      onClick: () => handleColumnSort(orderBy, 'asc')
    }), jsx(RiArrowDownSFill, {
      onClick: () => handleColumnSort(orderBy, 'desc')
    })]
  });
};

function DaoTable({
  tableData,
  columns,
  hasNextPaging,
  handleLoadMore,
  handleColumnSort,
  sortableColumns
}) {
  const {
    getTableProps,
    getTableBodyProps,
    headerGroups,
    rows,
    prepareRow
  } = useTable({
    columns: columns,
    data: tableData
  });
  return jsxs(Fragment, {
    children: [jsxs(Table, Object.assign({}, getTableProps, {
      children: [jsx(Thead, {
        children: headerGroups.map(headerGroup => jsx(Tr, Object.assign({}, headerGroup.getHeaderGroupProps(), {
          children: headerGroup.headers.map(column => {
            return jsx(Th, Object.assign({}, column.getHeaderProps(), {
              children: jsxs(HeaderCellContainer, {
                children: [column.render('Header'), sortableColumns.includes(column.id) && handleColumnSort && jsx(ColumnSortIcons, {
                  orderBy: column.id,
                  handleColumnSort: handleColumnSort
                })]
              })
            }));
          })
        })))
      }), jsx(TBody, Object.assign({}, getTableBodyProps(), {
        children: rows.map((row, i) => {
          prepareRow(row);
          return jsx(Tr, Object.assign({}, row.getRowProps(), {
            children: row.cells.map(cell => {
              return jsx(Td, Object.assign({}, cell.getCellProps(), {
                children: cell.render('Cell')
              }));
            })
          }));
        })
      }))]
    })), hasNextPaging && handleLoadMore && jsx(Button, Object.assign({
      color: "secondary",
      variant: "outline",
      size: "sm",
      onClick: handleLoadMore
    }, {
      children: "Load More"
    }))]
  });
}

let _$j = t => t,
  _t$j,
  _t2$c;
const MemberContainer$2 = styled.div(_t$j || (_t$j = _$j`
  button {
    padding-left: 0 !important;
  }
`));
const StyledRouterLink$3 = styled(Link$1)(_t2$c || (_t2$c = _$j`
  ${0}
  &:hover {
    text-decoration: none;
  }
`), DropdownLinkStyles);

const MemberDisplay = ({
  memberAddress,
  daoChain,
  daoId,
  includeLinks: _includeLinks = false
}) => {
  const {
    profile
  } = useProfile({
    address: memberAddress
  });
  const customProfileURI = daoId && daoId && `/molochv3/${daoChain}/${daoId}/members/${memberAddress}`;
  return jsx(MemberContainer$2, {
    children: jsxs(MemberCard, Object.assign({
      fullWidth: true,
      variant: "ghost",
      profile: profile || {
        address: memberAddress
      }
    }, {
      children: [jsx(MemberCardItem, Object.assign({
        asChild: true
      }, {
        children: _includeLinks && jsx(StyledRouterLink$3, Object.assign({
          to: customProfileURI ? customProfileURI : '/'
        }, {
          children: "查看資訊"
        }))
      })), jsx(MemberCardExplorerLink, Object.assign({
        explorerNetworkId: daoChain,
        profileAddress: (profile === null || profile === void 0 ? void 0 : profile.address) || memberAddress
      }, {
        children: "在Etherscan查看"
      })), jsx(MemberCardCopyAddress, Object.assign({
        profileAddress: (profile === null || profile === void 0 ? void 0 : profile.address) || memberAddress
      }, {
        children: "複製地址"
      }))]
    }))
  });
};

const ManageDelegate = ({
  daoChain,
  daoId,
  defaultMember
}) => {
  const {
    refetch
  } = useDaoData();
  const {
    refetch: refetchMembers
  } = useDaoMembers();
  const {
    address
  } = useDHConnect();
  const {
    connectedMember,
    refetch: refetchMember
  } = useConnectedMember({
    daoChain,
    daoId,
    memberAddress: address
  });
  const defaultValues = useMemo(() => {
    if (defaultMember) {
      return {
        delegatingTo: defaultMember
      };
    }
    if (connectedMember && connectedMember.delegatingTo !== connectedMember.memberAddress) {
      return connectedMember;
    }
  }, [connectedMember, defaultMember]);
  const onFormComplete = () => {
    refetch === null || refetch === void 0 ? void 0 : refetch();
    refetchMembers === null || refetchMembers === void 0 ? void 0 : refetchMembers();
    refetchMember === null || refetchMember === void 0 ? void 0 : refetchMember();
  };
  return jsx(FormBuilder, {
    defaultValues: defaultValues,
    form: COMMON_FORMS.MANAGE_DELEGATE,
    customFields: MolochFields,
    lifeCycleFns: {
      onPollSuccess: () => {
        onFormComplete();
      }
    },
    targetNetwork: daoChain
  });
};

let _$i = t => t,
  _t$i,
  _t2$b,
  _t3$9,
  _t4$6,
  _t5$5,
  _t6$5,
  _t7$4,
  _t8$3,
  _t9$2,
  _t10$2,
  _t11$2,
  _t12$2,
  _t13$2,
  _t14,
  _t15;
const MProfileCard = styled(Card)(_t$i || (_t$i = _$i`
  width: 64rem;
  padding: 2rem;
  border: none;
  margin-bottom: 3.4rem;
  @media ${0} {
    max-width: 100%;
    min-width: 0;
  }
`), widthQuery.md);
const ValueRow = styled.div(_t2$b || (_t2$b = _$i`
  width: 64rem;
  padding: 3rem 0;
  text-align: left;
`));
const LoadingContainer$2 = styled.div(_t3$9 || (_t3$9 = _$i`
  display: flex;
  flex-direction: column;
  align-items: center;
`));
const AlertContainer$3 = styled(Card)(_t4$6 || (_t4$6 = _$i`
  display: flex;
  gap: 3rem;
  width: 100%;
  justify-content: center;
  align-items: center;
  margin-bottom: 3rem;
  padding: 2.3rem 2.5rem;
  border: none;
  min-height: 23.8rem;

  @media ${0} {
    gap: 2rem;
    height: auto;
    margin-bottom: 2rem;
  }
`), widthQuery.sm);
const AvatarLarge = styled(ProfileAvatar)(_t5$5 || (_t5$5 = _$i`
  height: 12rem;
  width: 12rem;
`));
const ProfileContainer = styled.div(_t6$5 || (_t6$5 = _$i`
  display: flex;
  flex-direction: column;
  gap: 1.2rem;
  background: ${0};
  padding: 2.8rem;
  min-height: 30rem;
  border-radius: 0.8rem;
  border: 0.1rem solid ${0};
`), indigoDark.indigo5, indigoDark.indigo5);
const PSubContainer = styled.div(_t7$4 || (_t7$4 = _$i`
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
`));
const ProfileNameContainer = styled.div(_t8$3 || (_t8$3 = _$i`
  display: flex;
  gap: 1rem;
`));
const ProfileMetadataContainer = styled.div(_t9$2 || (_t9$2 = _$i`
  display: flex;
  gap: 1rem;
  flex-direction: column;
  align-items: flex-start;
  gap: 2rem;

  @media (min-width: ${0}) {
    flex-direction: row;
    align-items: center;
  }
`), breakpoints.xs);
const ProfileDataGrid = styled.div(_t10$2 || (_t10$2 = _$i`
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  align-content: space-between;
  div {
    padding: 2rem 0;
    width: 18rem;

    @media ${0} {
      min-width: 100%;
    }
  }
`), widthQuery.sm);
styled(Button)(_t11$2 || (_t11$2 = _$i`
  padding: 0 4px 0 4px;

  &[data-state='open'] {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  svg.icon-right {
    color: ${0};
  }

  svg.icon-left {
    margin-right: 0;
    width: 5rem;
  }
`), ({
  theme
}) => theme.primary.step9);
const ProfileMenuLink = styled(Link$1)(_t12$2 || (_t12$2 = _$i`
  ${0}
  font-weight: ${0};
`), DropdownLinkStyles, font.weight.bold);
const ProfileMenuText = styled(DropdownLabel)(_t13$2 || (_t13$2 = _$i`
  border-radius: 2px;
  color: ${0};
  font-weight: ${0};
  cursor: pointer;
  display: flex;
  padding: 1rem;
  transition: 0.2s all;
  width: 100%;
  font-size: ${0};

  svg {
    margin-left: 0.3rem;
  }

  &:hover {
    background-color: ${0};
    border-color: ${0};
    text-decoration: none;
  }

  &.disabled {
    color: ${0};
  }
`), props => props.theme.secondary.step12, font.weight.bold, font.size.md, props => props.theme.secondary.step4, props => props.theme.secondary.step8, props => props.theme.secondary.step11);
const MemberContainer$1 = styled.div(_t14 || (_t14 = _$i`
  button {
    padding-left: 0 !important;
  }
`));
const StyledRouterLink$2 = styled(Link$1)(_t15 || (_t15 = _$i`
  ${0}
  &:hover {
    text-decoration: none;
  }
`), DropdownLinkStyles);

const MemberProfileAvatar = ({
  memberAddress,
  memberProfile,
  daoChain,
  daoId,
  allowLinks: _allowLinks = false
}) => {
  const {
    profile: currentProfile
  } = useProfile({
    address: !memberProfile ? memberAddress : ''
  });
  return jsx(MemberContainer$1, {
    children: jsxs(MemberCard, Object.assign({
      fullWidth: true,
      variant: "ghost",
      profile: memberProfile || currentProfile || {
        address: memberAddress
      }
    }, {
      children: [_allowLinks && jsx(MemberCardItem, Object.assign({
        asChild: true
      }, {
        children: jsx(StyledRouterLink$2, Object.assign({
          to: daoId ? `/molochv3/${daoChain}/${daoId}/member/${memberAddress}` : '/'
        }, {
          children: "查看資訊"
        }))
      })), jsx(MemberCardExplorerLink, Object.assign({
        explorerNetworkId: daoChain,
        profileAddress: (memberProfile === null || memberProfile === void 0 ? void 0 : memberProfile.address) || memberAddress
      }, {
        children: "在Etherscan查看"
      })), jsx(MemberCardCopyAddress, Object.assign({
        profileAddress: (memberProfile === null || memberProfile === void 0 ? void 0 : memberProfile.address) || memberAddress
      }, {
        children: "複製地址"
      }))]
    }))
  });
};

const MemberProfileMenu = ({
  daoChain,
  daoId,
  memberAddress,
  allowLinks: _allowLinks = false,
  allowMemberMenu: _allowMemberMenu = false
}) => {
  const {
    address
  } = useDHConnect();
  const {
    connectedMember
  } = useConnectedMember({
    daoChain,
    daoId,
    memberAddress: address
  });
  const enableActions = useMemo(() => {
    return connectedMember && (connectedMember === null || connectedMember === void 0 ? void 0 : connectedMember.memberAddress) !== memberAddress && Number(connectedMember.shares) > 0;
  }, [connectedMember, memberAddress]);
  const isMenuForConnectedMember = useMemo(() => {
    return (connectedMember === null || connectedMember === void 0 ? void 0 : connectedMember.memberAddress) === memberAddress;
  }, [connectedMember, memberAddress]);
  if (!connectedMember || !_allowMemberMenu) return null;
  return jsxs(Dialog, {
    children: [jsxs(DropdownMenu, {
      children: [jsx(DropdownIconTrigger, {
        Icon: RiMore2Fill,
        color: "primary",
        variant: "ghost"
      }), jsxs(DropdownContent, Object.assign({
        side: "left"
      }, {
        children: [isMenuForConnectedMember && jsxs(Fragment, {
          children: [jsx(DropdownItem, Object.assign({
            asChild: true
          }, {
            children: jsx(DialogTrigger, Object.assign({
              asChild: true
            }, {
              children: jsx(ProfileMenuText, {
                children: "Delegate"
              })
            }))
          }), "delegate"), _allowLinks && jsx(DropdownItem, Object.assign({
            asChild: true
          }, {
            children: jsx(ProfileMenuLink, Object.assign({
              to: `/molochV3/${daoChain}/${daoId}/members/ragequit`
            }, {
              children: "Rage Quit"
            }))
          }), "ragequit")]
        }), !isMenuForConnectedMember && jsxs(Fragment, {
          children: [jsx(DropdownItem, Object.assign({
            asChild: true
          }, {
            children: jsx(DialogTrigger, Object.assign({
              asChild: true
            }, {
              children: jsx(ProfileMenuText, Object.assign({
                className: enableActions ? '' : 'disabled'
              }, {
                children: "代議給此成員"
              }))
            }))
          }), "delegateTo"), _allowLinks && jsx(DropdownItem, Object.assign({
            asChild: true
          }, {
            children: jsx(ProfileMenuLink, Object.assign({
              className: enableActions ? '' : 'disabled',
              to: `/molochV3/${daoChain}/${daoId}/new-proposal?formLego=GUILDKICK&defaultValues=${JSON.stringify({
                memberAddress: memberAddress
              })}`
            }, {
              children: "踢除此成員"
            }))
          }), "guildkick")]
        })]
      }))]
    }), jsx(DialogContent, Object.assign({
      title: "代議管理"
    }, {
      children: jsx(ManageDelegate, {
        daoChain: daoChain,
        daoId: daoId,
        defaultMember: !isMenuForConnectedMember ? memberAddress : undefined
      })
    }))]
  });
};

let _$h = t => t,
  _t$h,
  _t2$a,
  _t3$8;
const Container = styled.div(_t$h || (_t$h = _$h`
  display: flex;
  flex-direction: column;
  gap: 1rem;
`));
const DataIndicatorContainer = styled.div(_t2$a || (_t2$a = _$h`
  display: flex;
  flex-direction: column;
`));
const DataIndicatorLabelMd = styled(ParMd)(_t3$8 || (_t3$8 = _$h`
  margin-bottom: 0.5rem;
  opacity: 0.9;
`));
const MemberProfile = ({
  daoChain,
  dao,
  profile,
  membership,
  allowLinks: _allowLinks = false,
  allowMemberMenu: _allowMemberMenu = false
}) => {
  return jsxs(ProfileContainer, {
    children: [jsxs(PSubContainer, {
      children: [jsxs(ProfileMetadataContainer, {
        children: [jsx(AvatarLarge, {
          image: (profile === null || profile === void 0 ? void 0 : profile.avatar) || '',
          size: "lg",
          alt: "profile image",
          address: profile.address
        }), jsxs(Container, {
          children: [jsx(ProfileNameContainer, {
            children: (profile === null || profile === void 0 ? void 0 : profile.ens) && jsx(H5, {
              children: (profile === null || profile === void 0 ? void 0 : profile.ens) || ''
            })
          }), membership && jsx(AddressDisplay, {
            address: membership.memberAddress,
            truncate: true,
            textOverride: profile === null || profile === void 0 ? void 0 : profile.ens,
            copy: true
          }), membership && jsxs(DataXs, Object.assign({
            as: "span"
          }, {
            children: ["加入時間 ", formatLongDateFromSeconds(membership === null || membership === void 0 ? void 0 : membership.createdAt)]
          }))]
        })]
      }), membership && jsx(MemberProfileMenu, {
        daoChain: daoChain,
        daoId: dao.id,
        memberAddress: membership.memberAddress,
        allowLinks: _allowLinks,
        allowMemberMenu: _allowMemberMenu
      })]
    }), membership && dao && jsxs(Fragment, {
      children: [jsxs(ProfileDataGrid, {
        children: [jsx(DataIndicator, {
          label: "權力",
          data: formatValueTo({
            value: votingPowerPercentage((dao === null || dao === void 0 ? void 0 : dao.totalShares) || '0', membership.delegateShares),
            decimals: 2,
            format: 'percent'
          })
        }), jsx(DataIndicator, {
          label: "可投票代幣",
          data: formatValueTo({
            value: fromWei(membership.shares),
            decimals: 2,
            format: 'number'
          })
        }), jsx(DataIndicator, {
          label: "不可投票代幣",
          data: formatValueTo({
            value: fromWei(membership.loot),
            decimals: 2,
            format: 'number'
          })
        })]
      }), membership.delegatingTo !== membership.memberAddress && jsxs(DataIndicatorContainer, {
        children: [jsx(DataIndicatorLabelMd, {
          children: "代議給"
        }), jsx(MemberProfileAvatar, {
          daoChain: daoChain,
          daoId: dao.id,
          memberAddress: membership.delegatingTo,
          allowLinks: _allowLinks
        })]
      })]
    })]
  });
};

const MemberTokens = ({
  daoChain,
  dao,
  member
}) => {
  const {
    networks
  } = useDHConnect();
  const treasury = useMemo(() => {
    if (dao) {
      return dao.vaults.find(v => v.safeAddress === dao.safeAddress) || undefined;
    }
    return undefined;
  }, [dao]);
  const tableData = useMemo(() => {
    if (dao && member && treasury) {
      return treasury.tokenBalances.filter(bal => Number(bal.balance)).map(bal => {
        var _a, _b;
        return {
          token: {
            address: bal.tokenAddress || NETWORK_TOKEN_ETH_ADDRESS,
            name: charLimit((_a = bal.token) === null || _a === void 0 ? void 0 : _a.name, 21)
          },
          fiatBalance: formatValueTo({
            value: memberUsdValueShare(bal.fiatBalance, dao.totalShares || 0, dao.totalLoot || 0, member.shares || 0, member.loot || 0),
            decimals: 2,
            format: 'currency'
          }),
          balance: formatValueTo({
            value: memberTokenBalanceShare(bal.balance, dao.totalShares || 0, dao.totalLoot || 0, member.shares || 0, member.loot || 0, ((_b = bal.token) === null || _b === void 0 ? void 0 : _b.decimals) || 18),
            format: 'number'
          })
        };
      });
    } else {
      return null;
    }
  }, [dao, member, treasury]);
  const columns = useMemo(() => [], [daoChain, networks]);
  if (treasury && tableData && columns) return jsx(DaoTable, {
    tableData: tableData,
    columns: columns,
    sortableColumns: []
  });
  return null;
};

const MemberProfileCard = ({
  daoChain,
  daoId,
  member,
  allowLinks: _allowLinks = false,
  allowMemberMenu: _allowMemberMenu = false
}) => {
  const {
    dao,
    isLoading: isLoadingDao
  } = useDaoData({
    daoChain,
    daoId
  });
  const {
    profile: currentProfile,
    isLoading: isLoadingProfile
  } = useProfile({
    address: (member === null || member === void 0 ? void 0 : member.memberAddress) || ''
  });
  if (!member || !dao && !isLoadingDao || !currentProfile && !isLoadingProfile) return jsx(AlertContainer$3, {
    children: jsx(ParLg, Object.assign({
      className: "warn"
    }, {
      children: "Member Profile Not Found"
    }))
  });
  return jsxs(MProfileCard, {
    children: [(!dao || !member || !currentProfile) && jsx(LoadingContainer$2, {
      children: jsx(Loading, {
        size: 120
      })
    }), dao && member && currentProfile && jsxs(Fragment, {
      children: [jsx(MemberProfile, {
        daoChain: daoChain,
        dao: dao,
        profile: currentProfile,
        membership: member,
        allowLinks: _allowLinks,
        allowMemberMenu: _allowMemberMenu
      }), jsx(MemberTokens, {
        daoChain: daoChain,
        dao: dao,
        member: member
      })]
    })]
  });
};

let _$g = t => t,
  _t$g,
  _t2$9;
const MembersOverviewCard = styled(Card)(_t$g || (_t$g = _$g`
  background-color: ${0};
  border: none;
  padding: 3rem;
  width: 100%;
`), ({
  theme
}) => theme.secondary.step3);
const DataGrid = styled.div(_t2$9 || (_t2$9 = _$g`
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  align-content: space-between;
  div {
    padding: 2rem 0;
    width: 19.7rem;

    @media ${0} {
      min-width: 100%;
    }
  }
`), widthQuery.sm);
const MembersOverview = ({
  dao
}) => {
  var _a;
  return ;
};

let _$f = t => t,
  _t$f,
  _t2$8,
  _t3$7,
  _t4$5;
const MemberContainer = styled(Card)(_t$f || (_t$f = _$f`
  padding: 3rem;
  border: none;
  margin-bottom: 3rem;
  min-height: 20rem;
  width: 100%;
  overflow-x: auto;
  th {
    min-width: 10rem;
  }
  .hide-sm {
    button {
      padding-left: 0.5rem;
    }
  }
  @media ${0} {
    max-width: 100%;
    min-width: 0;
  }
  @media ${0} {
    .hide-sm {
      display: none;
    }
  }
`), widthQuery.lg, widthQuery.md);
const ActionContainer = styled.div(_t2$8 || (_t2$8 = _$f`
  display: flex;
  gap: 1rem;
`));
const LoadingContainer$1 = styled.div(_t3$7 || (_t3$7 = _$f`
  display: flex;
  flex-direction: column;
  align-items: center;
`));
const AlertContainer$2 = styled(Card)(_t4$5 || (_t4$5 = _$f`
  display: flex;
  gap: 3rem;
  width: 100%;
  justify-content: center;
  align-items: center;
  margin-bottom: 3rem;
  padding: 2.3rem 2.5rem;
  border: none;
  min-height: 23.8rem;

  @media ${0} {
    gap: 2rem;
    height: auto;
    margin-bottom: 2rem;
  }
`), widthQuery.sm);

const MemberList = ({
  daoChain,
  daoId,
  allowLinks: _allowLinks = false,
  allowMemberMenu: _allowMemberMenu = false
}) => {
  const {
    dao,
    isLoading: isLoadingDao
  } = useDaoData();
  const {
    members,
    isLoading: isLoadingMembers,
    fetchNextPage,
    hasNextPage,
    orderMembers
  } = useDaoMembers();
  console.log('members', members, hasNextPage);
  const isMd = useBreakpoint(widthQuery.md);
  const tableData = useMemo(() => {
    if (members) {
      const filteredMembers = members.filter(member => member !== undefined);
      return (filteredMembers === null || filteredMembers === void 0 ? void 0 : filteredMembers.length) ? filteredMembers : [];
    }
    return [];
  }, [members]);
  const columns = useMemo(() => [{
    Header: '成員',
    accessor: 'memberAddress',
    Cell: ({
      value
    }) => {
      return jsx(MemberProfileAvatar, {
        daoChain: daoChain,
        daoId: daoId,
        memberAddress: value,
        allowLinks: _allowLinks
      });
    }
  }, {
    Header: () => {
      return jsx("div", Object.assign({
        className: "hide-sm"
      }, {
        children: "加入時間"
      }));
    },
    accessor: 'createdAt',
    Cell: ({
      value
    }) => {
      return jsx("div", Object.assign({
        className: "hide-sm"
      }, {
        children: formatDateFromSeconds(value)
      }));
    }
  }, {
    Header: () => {
      return jsx("div", Object.assign({
        className: "hide-sm"
      }, {
        children: "權力"
      }));
    },
    accessor: 'delegateShares',
    Cell: ({
      value,
      row
    }) => {
      const delegatedShares = sharesDelegatedToMember(row.original.delegateShares, row.original.shares);
      return jsxs("div", Object.assign({
        className: "hide-sm"
      }, {
        children: [votingPowerPercentage((dao === null || dao === void 0 ? void 0 : dao.totalShares) || '0', value), ' %', Number(delegatedShares) > 0 && jsx(Tooltip, {
          content: `${formatValueTo({
            value: fromWei(delegatedShares),
            decimals: 2,
            format: 'number'
          })} voting tokens are delegated to this member`,
          side: "bottom"
        })]
      }));
    }
  }, {
    Header: () => {
      return jsx("div", Object.assign({
        className: "hide-sm"
      }, {
        children: "代議給"
      }));
    },
    accessor: 'delegatingTo',
    Cell: ({
      value,
      row
    }) => {
      return jsx("div", Object.assign({
        className: "hide-sm"
      }, {
        children: value === row.original.memberAddress ? '--' : jsx(AddressDisplay, {
          address: value,
          truncate: true
        })
      }));
    }
  }, {
    Header: () => {
      return jsx(Fragment, {
        children: "投票權重"
      });
    },
    accessor: 'shares',
    Cell: ({
      value
    }) => {
      return jsx("div", {
        children: formatValueTo({
          value: fromWei(value),
          decimals: 2,
          format: 'number'
        })
      });
    }
  }, {
    Header: () => {
      return jsx("div", {
        children: "非投票權重"
      });
    },
    accessor: 'loot',
    Cell: ({
      value
    }) => {
      return jsx("div", {
        children: formatValueTo({
          value: fromWei(value),
          decimals: 2,
          format: 'number'
        })
      });
    }
  }, {
    accessor: 'id',
    Cell: ({
      row
    }) => {
      return jsx(ActionContainer, {
        children: jsx(MemberProfileMenu, {
          daoChain: daoChain,
          daoId: daoId,
          memberAddress: row.original.memberAddress,
          allowLinks: _allowLinks,
          allowMemberMenu: _allowMemberMenu
        })
      });
    }
  }], [daoChain, dao, _allowLinks, daoId, _allowMemberMenu]);
  const handleColumnSort = (orderBy, orderDirection) => {
    orderMembers({
      orderBy: orderBy,
      orderDirection
    });
  };
  if (!dao && !isLoadingDao || !members && !isLoadingMembers) return jsx(AlertContainer$2, {
    children: jsx(ParLg, Object.assign({
      className: "warn"
    }, {
      children: "No Members Found"
    }))
  });
  return jsxs(MemberContainer, {
    children: [!dao && isLoadingDao && jsx(LoadingContainer$1, {
      children: jsx(Loading, {
        size: 120
      })
    }), dao && jsx(MembersOverview, {
      dao: dao
    }), dao && members && tableData && columns && jsx(DaoTable, {
      tableData: tableData,
      columns: columns,
      hasNextPaging: hasNextPage,
      handleLoadMore: () => fetchNextPage(),
      handleColumnSort: handleColumnSort,
      sortableColumns: isMd ? ['loot', 'shares'] : ['createdAt', 'shares', 'loot', 'delegateShares']
    }), dao && isLoadingMembers && jsx(LoadingContainer$1, {
      children: jsx(Loading, {
        size: 120
      })
    })]
  });
};

let _$e = t => t,
  _t$e,
  _t2$7,
  _t3$6;
const OverviewContainer$1 = styled.div(_t$e || (_t$e = _$e`
  display: flex;
  flex-direction: column;
  margin-top: 1rem;
  width: 100%;
  padding: 2.8rem 3.6rem;

  border-radius: ${0};
  border: 1px ${0} solid;
  background-color: ${0};

  .description {
    word-break: break-word;
    img {
      max-width: 100%;
    }
  }

  .proposal-link {
    margin-top: 1.2rem;
  }
`), ({
  theme
}) => theme.card.radius, ({
  theme
}) => theme.secondary.step5, ({
  theme
}) => theme.secondary.step3);
const DataContainer = styled.div(_t2$7 || (_t2$7 = _$e`
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  flex-wrap: wrap;
  gap: 3rem;
  margin-top: 3rem;
`));
const StyledRouterLink$1 = styled(Link$1)(_t3$6 || (_t3$6 = _$e`
  ${0}
  &:hover {
    text-decoration: none;
  }
`), DropdownLinkStyles);

var iterators = {};

var fails$5 = fails$g;

var correctPrototypeGetter = !fails$5(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});

var hasOwn$2 = hasOwnProperty_1;
var isCallable$3 = isCallable$g;
var toObject$2 = toObject$5;
var sharedKey = sharedKey$3;
var CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;

var IE_PROTO = sharedKey('IE_PROTO');
var $Object = Object;
var ObjectPrototype = $Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
var objectGetPrototypeOf = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {
  var object = toObject$2(O);
  if (hasOwn$2(object, IE_PROTO)) return object[IE_PROTO];
  var constructor = object.constructor;
  if (isCallable$3(constructor) && object instanceof constructor) {
    return constructor.prototype;
  } return object instanceof $Object ? ObjectPrototype : null;
};

var fails$4 = fails$g;
var isCallable$2 = isCallable$g;
var isObject = isObject$7;
var getPrototypeOf$1 = objectGetPrototypeOf;
var defineBuiltIn$2 = defineBuiltIn$4;
var wellKnownSymbol$3 = wellKnownSymbol$a;

var ITERATOR$2 = wellKnownSymbol$3('iterator');
var BUGGY_SAFARI_ITERATORS$1 = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype$2, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf$1(getPrototypeOf$1(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$2 = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype$2) || fails$4(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype$2[ITERATOR$2].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$2 = {};

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if (!isCallable$2(IteratorPrototype$2[ITERATOR$2])) {
  defineBuiltIn$2(IteratorPrototype$2, ITERATOR$2, function () {
    return this;
  });
}

var iteratorsCore = {
  IteratorPrototype: IteratorPrototype$2,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1
};

var defineProperty$1 = objectDefineProperty.f;
var hasOwn$1 = hasOwnProperty_1;
var wellKnownSymbol$2 = wellKnownSymbol$a;

var TO_STRING_TAG$1 = wellKnownSymbol$2('toStringTag');

var setToStringTag$2 = function (target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;
  if (target && !hasOwn$1(target, TO_STRING_TAG$1)) {
    defineProperty$1(target, TO_STRING_TAG$1, { configurable: true, value: TAG });
  }
};

var IteratorPrototype$1 = iteratorsCore.IteratorPrototype;
var create = objectCreate;
var createPropertyDescriptor$1 = createPropertyDescriptor$4;
var setToStringTag$1 = setToStringTag$2;
var Iterators$2 = iterators;

var returnThis$1 = function () { return this; };

var iteratorCreateConstructor = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype$1, { next: createPropertyDescriptor$1(+!ENUMERABLE_NEXT, next) });
  setToStringTag$1(IteratorConstructor, TO_STRING_TAG, false);
  Iterators$2[TO_STRING_TAG] = returnThis$1;
  return IteratorConstructor;
};

var uncurryThis$5 = functionUncurryThis;
var aCallable$2 = aCallable$4;

var functionUncurryThisAccessor = function (object, key, method) {
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    return uncurryThis$5(aCallable$2(Object.getOwnPropertyDescriptor(object, key)[method]));
  } catch (error) { /* empty */ }
};

var isCallable$1 = isCallable$g;

var $String$1 = String;
var $TypeError$2 = TypeError;

var aPossiblePrototype$1 = function (argument) {
  if (typeof argument == 'object' || isCallable$1(argument)) return argument;
  throw $TypeError$2("Can't set " + $String$1(argument) + ' as a prototype');
};

/* eslint-disable no-proto -- safe */
var uncurryThisAccessor = functionUncurryThisAccessor;
var anObject$2 = anObject$7;
var aPossiblePrototype = aPossiblePrototype$1;

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
var objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject$2(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);

var $$4 = _export;
var call$1 = functionCall;
var FunctionName = functionName;
var isCallable = isCallable$g;
var createIteratorConstructor = iteratorCreateConstructor;
var getPrototypeOf = objectGetPrototypeOf;
var setPrototypeOf = objectSetPrototypeOf;
var setToStringTag = setToStringTag$2;
var createNonEnumerableProperty$1 = createNonEnumerableProperty$4;
var defineBuiltIn$1 = defineBuiltIn$4;
var wellKnownSymbol$1 = wellKnownSymbol$a;
var Iterators$1 = iterators;
var IteratorsCore = iteratorsCore;

var PROPER_FUNCTION_NAME$1 = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR$1 = wellKnownSymbol$1('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

var iteratorDefine = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR$1]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR$1])) {
          defineBuiltIn$1(CurrentIteratorPrototype, ITERATOR$1, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true);
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (PROPER_FUNCTION_NAME$1 && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if (CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty$1(IterablePrototype, 'name', VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() { return call$1(nativeIterator, this); };
    }
  }

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        defineBuiltIn$1(IterablePrototype, KEY, methods[KEY]);
      }
    } else $$4({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  // define iterator
  if (IterablePrototype[ITERATOR$1] !== defaultIterator) {
    defineBuiltIn$1(IterablePrototype, ITERATOR$1, defaultIterator, { name: DEFAULT });
  }
  Iterators$1[NAME] = defaultIterator;

  return methods;
};

// `CreateIterResultObject` abstract operation
// https://tc39.es/ecma262/#sec-createiterresultobject
var createIterResultObject$1 = function (value, done) {
  return { value: value, done: done };
};

var toIndexedObject = toIndexedObject$5;
var addToUnscopables = addToUnscopables$2;
var Iterators = iterators;
var InternalStateModule = internalState;
var defineProperty = objectDefineProperty.f;
var defineIterator = iteratorDefine;
var createIterResultObject = createIterResultObject$1;
var DESCRIPTORS = descriptors;

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
var es_array_iterator = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return createIterResultObject(undefined, true);
  }
  if (kind == 'keys') return createIterResultObject(index, false);
  if (kind == 'values') return createIterResultObject(target[index], false);
  return createIterResultObject([index, target[index]], false);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
var values = Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

// V8 ~ Chrome 45- bug
if (DESCRIPTORS && values.name !== 'values') try {
  defineProperty(values, 'name', { value: 'values' });
} catch (error) { /* empty */ }

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
var domIterables = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};

// in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`
var documentCreateElement = documentCreateElement$2;

var classList = documentCreateElement('span').classList;
var DOMTokenListPrototype$1 = classList && classList.constructor && classList.constructor.prototype;

var domTokenListPrototype = DOMTokenListPrototype$1 === Object.prototype ? undefined : DOMTokenListPrototype$1;

var global$1 = global$d;
var DOMIterables = domIterables;
var DOMTokenListPrototype = domTokenListPrototype;
var ArrayIteratorMethods = es_array_iterator;
var createNonEnumerableProperty = createNonEnumerableProperty$4;
var wellKnownSymbol = wellKnownSymbol$a;

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

var handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  handlePrototype(global$1[COLLECTION_NAME] && global$1[COLLECTION_NAME].prototype, COLLECTION_NAME);
}

handlePrototype(DOMTokenListPrototype, 'DOMTokenList');

var classofRaw = classofRaw$2;
var uncurryThis$4 = functionUncurryThis;

var functionUncurryThisClause = function (fn) {
  // Nashorn bug:
  //   https://github.com/zloirock/core-js/issues/1128
  //   https://github.com/zloirock/core-js/issues/1130
  if (classofRaw(fn) === 'Function') return uncurryThis$4(fn);
};

var $$3 = _export;
var uncurryThis$3 = functionUncurryThisClause;
var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
var toLength = toLength$2;
var toString$2 = toString$5;
var notARegExp = notARegexp;
var requireObjectCoercible$1 = requireObjectCoercible$5;
var correctIsRegExpLogic = correctIsRegexpLogic;

// eslint-disable-next-line es/no-string-prototype-endswith -- safe
var nativeEndsWith = uncurryThis$3(''.endsWith);
var slice = uncurryThis$3(''.slice);
var min = Math.min;

var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG = !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.endsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.endswith
$$3({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = toString$2(requireObjectCoercible$1(this));
    notARegExp(searchString);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = that.length;
    var end = endPosition === undefined ? len : min(toLength(endPosition), len);
    var search = toString$2(searchString);
    return nativeEndsWith
      ? nativeEndsWith(that, search, end)
      : slice(that, end - search.length, end) === search;
  }
});

var anObject$1 = anObject$7;

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
var regexpFlags = function () {
  var that = anObject$1(this);
  var result = '';
  if (that.hasIndices) result += 'd';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.unicodeSets) result += 'v';
  if (that.sticky) result += 'y';
  return result;
};

var call = functionCall;
var hasOwn = hasOwnProperty_1;
var isPrototypeOf = objectIsPrototypeOf;
var regExpFlags = regexpFlags;

var RegExpPrototype$1 = RegExp.prototype;

var regexpGetFlags = function (R) {
  var flags = R.flags;
  return flags === undefined && !('flags' in RegExpPrototype$1) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype$1, R)
    ? call(regExpFlags, R) : flags;
};

var PROPER_FUNCTION_NAME = functionName.PROPER;
var defineBuiltIn = defineBuiltIn$4;
var anObject = anObject$7;
var $toString = toString$5;
var fails$3 = fails$g;
var getRegExpFlags = regexpGetFlags;

var TO_STRING = 'toString';
var RegExpPrototype = RegExp.prototype;
var nativeToString = RegExpPrototype[TO_STRING];

var NOT_GENERIC = fails$3(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = PROPER_FUNCTION_NAME && nativeToString.name != TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.es/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  defineBuiltIn(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject(this);
    var pattern = $toString(R.source);
    var flags = $toString(getRegExpFlags(R));
    return '/' + pattern + '/' + flags;
  }, { unsafe: true });
}

var aCallable$1 = aCallable$4;
var toObject$1 = toObject$5;
var IndexedObject = indexedObject;
var lengthOfArrayLike$2 = lengthOfArrayLike$4;

var $TypeError$1 = TypeError;

// `Array.prototype.{ reduce, reduceRight }` methods implementation
var createMethod = function (IS_RIGHT) {
  return function (that, callbackfn, argumentsLength, memo) {
    aCallable$1(callbackfn);
    var O = toObject$1(that);
    var self = IndexedObject(O);
    var length = lengthOfArrayLike$2(O);
    var index = IS_RIGHT ? length - 1 : 0;
    var i = IS_RIGHT ? -1 : 1;
    if (argumentsLength < 2) while (true) {
      if (index in self) {
        memo = self[index];
        index += i;
        break;
      }
      index += i;
      if (IS_RIGHT ? index < 0 : length <= index) {
        throw $TypeError$1('Reduce of empty array with no initial value');
      }
    }
    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
      memo = callbackfn(memo, self[index], index, O);
    }
    return memo;
  };
};

var arrayReduce = {
  // `Array.prototype.reduce` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduce
  left: createMethod(false),
  // `Array.prototype.reduceRight` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduceright
  right: createMethod(true)
};

var fails$2 = fails$g;

var arrayMethodIsStrict$2 = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails$2(function () {
    // eslint-disable-next-line no-useless-call -- required for testing
    method.call(null, argument || function () { return 1; }, 1);
  });
};

var classof = classofRaw$2;

var engineIsNode = typeof process != 'undefined' && classof(process) == 'process';

var $$2 = _export;
var $reduce = arrayReduce.left;
var arrayMethodIsStrict$1 = arrayMethodIsStrict$2;
var CHROME_VERSION = engineV8Version;
var IS_NODE = engineIsNode;

// Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;
var FORCED$2 = CHROME_BUG || !arrayMethodIsStrict$1('reduce');

// `Array.prototype.reduce` method
// https://tc39.es/ecma262/#sec-array.prototype.reduce
$$2({ target: 'Array', proto: true, forced: FORCED$2 }, {
  reduce: function reduce(callbackfn /* , initialValue */) {
    var length = arguments.length;
    return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);
  }
});

const isMintProposal = (actionData, dao) => {
  return actionData.some(action => {
    if (isActionError(action)) return false;
    const isDao = action.to.toLowerCase() === dao.id.toLocaleLowerCase();
    const isMint = action.name === 'mintShares' || action.name === 'mintLoot';
    return isDao && isMint;
  });
};
const isTributeProposal = proposal => {
  return proposal.tributeEscrowRecipient !== null;
};
const isFundingProposal = actionData => {
  return actionData.some(action => {
    return !isActionError(action) && action.name === 'transfer';
  });
};
const getValueFromMintOrTransferAction = (actionData, decimals = 18) => {
  if (actionData.params[0].name !== 'to' && !['amount', '_value', 'wad'].includes(actionData.params[1].name)) {
    return 'decoding error';
  }
  const value = actionData.params[1].type.endsWith('[]') ? actionData.params[1].value.toString().split(',').map(v => BigInt(v)) : [BigInt(actionData.params[1].value.toString())];
  return formatValueTo({
    value: toWholeUnits(value.reduce((val, accValue) => accValue + val, BigInt(0)).toString(), decimals),
    decimals: 2,
    format: 'numberShort'
  });
};
const getValueFromTributeData = proposal => {
  if (!proposal.tributeOffered || !proposal.tributeTokenDecimals) {
    return 'decoding err';
  }
  return `${formatValueTo({
    value: toWholeUnits(proposal.tributeOffered, Number(proposal.tributeTokenDecimals)),
    decimals: 2,
    format: 'numberShort'
  })} ${proposal.tributeTokenSymbol}`;
};
const getRecipientAddressFromMintOrTransferAction = actionData => {
  if (actionData.params[0].name !== 'to' && !['amount', '_value', 'wad'].includes(actionData.params[1].name)) {
    return 'decoding error';
  }
  return Array.isArray(actionData.params[0].value) ? actionData.params[0].value[0].toString() : actionData.params[0].value.toString();
};
const addTributeData = (proposal, actionData, dao) => {
  let data = [];
  const sharesAction = actionData.find(action => {
    return !isActionError(action) && action.name === 'mintShares';
  });
  if (sharesAction && !isActionError(sharesAction)) {
    data = [...data, {
      displayType: 'data',
      label: 'Voting Tokens Requested',
      value: `${getValueFromMintOrTransferAction(sharesAction)} ${dao.shareTokenSymbol}`
    }];
  }
  const lootAction = actionData.find(action => {
    return !isActionError(action) && action.name === 'mintLoot';
  });
  if (lootAction && !isActionError(lootAction)) {
    data = [...data, {
      displayType: 'data',
      label: 'Non-Voting Tokens Requested',
      value: `${getValueFromMintOrTransferAction(lootAction)} ${dao.lootTokenSymbol}`
    }];
  }
  return [...data, {
    displayType: 'data',
    label: 'Tribute Amount',
    value: getValueFromTributeData(proposal)
  }];
};
const addMintData = (actionData, dao) => {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  let data = [];
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  let recipient = {};
  const sharesAction = actionData.find(action => {
    return !isActionError(action) && action.name === 'mintShares';
  });
  const lootAction = actionData.find(action => {
    return !isActionError(action) && action.name === 'mintLoot';
  });
  if (sharesAction && !isActionError(sharesAction)) {
    data = [...data, {
      displayType: 'data',
      label: 'Voting Tokens Requested',
      value: `${getValueFromMintOrTransferAction(sharesAction)} ${dao.shareTokenSymbol}`
    }];
    recipient = {
      displayType: 'member',
      label: 'Recipient',
      value: getRecipientAddressFromMintOrTransferAction(sharesAction)
    };
  }
  if (lootAction && !isActionError(lootAction)) {
    data = [...data, {
      displayType: 'data',
      label: 'Non-Voting Tokens Requested',
      value: `${getValueFromMintOrTransferAction(lootAction)} ${dao.lootTokenSymbol}`
    }];
    recipient = {
      displayType: 'member',
      label: 'Recipient',
      value: getRecipientAddressFromMintOrTransferAction(lootAction)
    };
  }
  return [...data, recipient];
};
const addFundingData = (actionData, daoChain) => __awaiter(void 0, void 0, void 0, function* () {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  let data = [];
  if (!isActionError(actionData[0])) {
    const recipient = {
      displayType: 'member',
      label: 'Recipient',
      value: getRecipientAddressFromMintOrTransferAction(actionData[0])
    };
    const tokenData = yield fetchTokenData({
      actionData: actionData[0],
      chainId: daoChain
    });
    const amount = {
      displayType: 'data',
      label: 'Funding Amount',
      value: `${getValueFromMintOrTransferAction(actionData[0], tokenData === null || tokenData === void 0 ? void 0 : tokenData.decimals)} ${tokenData === null || tokenData === void 0 ? void 0 : tokenData.symbol}`
    };
    data = [recipient, amount];
  }
  return data;
});
const fetchTokenData = ({
  actionData,
  chainId,
  rpcs
}) => __awaiter(void 0, void 0, void 0, function* () {
  const tokenAddress = actionData.to;
  const client = createViemClient({
    chainId,
    rpcs
  });
  try {
    const decimals = yield client.readContract({
      abi: LOCAL_ABI.ERC20,
      address: tokenAddress,
      functionName: 'decimals'
    });
    const symbol = yield client.readContract({
      abi: LOCAL_ABI.ERC20,
      address: tokenAddress,
      functionName: 'symbol'
    });
    return {
      tokenAddress,
      decimals,
      symbol
    };
  } catch (_a) {
    console.log('token fetch error');
  }
});
const formatAddtionalDataPoints = (proposal, actionData, dao, daoChain) => __awaiter(void 0, void 0, void 0, function* () {
  if (isTributeProposal(proposal)) {
    return addTributeData(proposal, actionData, dao);
  }
  // NOTE: this check must come after tribute prop
  if (isMintProposal(actionData, dao)) {
    return addMintData(actionData, dao);
  }
  if (isFundingProposal(actionData)) {
    return addFundingData(actionData, daoChain);
  }
});

const MemberDataPoint = ({
  dataPoint,
  includeLinks: _includeLinks = false,
  daoChain,
  daoId
}) => {
  const {
    profile
  } = useProfile({
    address: dataPoint.value
  });
  return jsxs("div", {
    children: [jsx(ParMd, {
      children: dataPoint.label
    }), jsxs(MemberCard, Object.assign({
      variant: "ghost",
      profile: profile || {
        address: dataPoint.value
      }
    }, {
      children: [_includeLinks && jsx(MemberCardItem, Object.assign({
        asChild: true
      }, {
        children: jsx(StyledRouterLink$1, Object.assign({
          to: `/molochV3/${daoChain}/${daoId}/member/${dataPoint.value}`
        }, {
          children: "查看資訊"
        }))
      })), jsx(MemberCardExplorerLink, Object.assign({
        explorerNetworkId: daoChain,
        profileAddress: dataPoint.value
      }, {
        children: "在Etherscan查看"
      })), jsx(MemberCardCopyAddress, Object.assign({
        profileAddress: dataPoint.value
      }, {
        children: "複製地址"
      }))]
    }))]
  }, dataPoint.label);
};

const ProposalAddtionalDetails = ({
  daoChain,
  daoId,
  proposal,
  includeLinks: _includeLinks = false,
  actionData
}) => {
  const {
    dao
  } = useDaoData();
  const [addtionalData, setAddtionalData] = useState();
  useEffect(() => {
    const fetchData = () => __awaiter(void 0, void 0, void 0, function* () {
      if (!proposal || !actionData || !dao) return;
      const addData = yield formatAddtionalDataPoints(proposal, actionData, dao, daoChain);
      setAddtionalData(addData);
    });
    fetchData();
  }, [actionData, proposal, dao, daoChain]);
  if (!addtionalData) return null;
  return jsx(DataContainer, {
    children: addtionalData.map(dataPoint => {
      if (dataPoint.displayType === 'data') {
        return jsx(DataIndicator, {
          label: dataPoint.label,
          data: dataPoint.value,
          size: "sm"
        }, dataPoint.label);
      }
      if (dataPoint.displayType === 'member') {
        return jsx(MemberDataPoint, {
          daoId: daoId,
          daoChain: daoChain,
          dataPoint: dataPoint,
          includeLinks: _includeLinks
        }, dataPoint.label);
      }
      return null;
    })
  });
};

let _$d = t => t,
  _t$d,
  _t2$6,
  _t3$5,
  _t4$4,
  _t5$4,
  _t6$4,
  _t7$3,
  _t8$2,
  _t9$1,
  _t10$1,
  _t11$1,
  _t12$1,
  _t13$1;
const MainContainer = styled.div(_t$d || (_t$d = _$d`
  padding: 0rem 2.6rem;
`));
const LoadingContainer = styled.div(_t2$6 || (_t2$6 = _$d`
  display: flex;
  justify-content: center;
`));
const TitleContainer = styled.div(_t3$5 || (_t3$5 = _$d`
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
`));
const DisplayContainer = styled.div(_t4$4 || (_t4$4 = _$d`
  margin-top: 2rem;

  .display-segment {
    display: flex;
    flex-direction: column;
    padding-bottom: 1.5rem;
  }

  .data {
    word-break: break-all;
    margin-bottom: 2rem;
    .space,
    .address-display {
      margin-bottom: 2rem;
    }
  }
  .value-box {
    display: flex;
  }
  .spaced-divider {
    margin-bottom: 2rem;
  }
`));
const AlertContainer$1 = styled.div(_t5$4 || (_t5$4 = _$d`
  margin-bottom: 2rem;
`));
const WarningContainer = styled(Card)(_t6$4 || (_t6$4 = _$d`
  display: flex;
  width: 100%;
  background-color: ${0};
  border-color: ${0};
`), ({
  theme,
  $error,
  $warning
}) => $error && theme.danger.step3 || $warning && theme.warning.step3, ({
  theme,
  $error,
  $warning
}) => $error && theme.danger.step7 || $warning && theme.warning.step7);
const StyledParXs = styled(ParXs)(_t7$3 || (_t7$3 = _$d`
  color: ${0};
`), ({
  theme,
  $error,
  $warning
}) => $error && theme.danger.step12 || $warning && theme.warning.step12);
styled.div(_t8$2 || (_t8$2 = _$d`
  margin-top: 2rem;
`));
const WarningIcon$1 = styled(RiErrorWarningLine)(_t9$1 || (_t9$1 = _$d`
  color: ${0};
  height: 2.5rem;
  width: 2.5rem;
`), ({
  theme
}) => theme.warning.step9);
const IconContainer = styled.div(_t10$1 || (_t10$1 = _$d`
  margin-right: 1rem;
`));
const MessageContainer = styled.div(_t11$1 || (_t11$1 = _$d``));
const StyledUpArrow$1 = styled(RiArrowUpSLine)(_t12$1 || (_t12$1 = _$d`
  font-size: 3rem;
  font-weight: 900;
  color: ${0};
`), ({
  theme
}) => theme.primary.step10);
const StyledDownArrow$1 = styled(RiArrowDownSLine)(_t13$1 || (_t13$1 = _$d`
  font-size: 3rem;
  font-weight: 900;
  color: ${0};
`), ({
  theme
}) => theme.primary.step10);

const ProposalWarning = ({
  proposalType,
  decodeError: _decodeError = false,
  txHash,
  proposalActionConfig,
  daoChain
}) => {
  var _a;
  const warningMessage = useMemo(() => {
    var _a;
    if (_decodeError) {
      return PROPOSAL_TYPE_WARNINGS.ERROR_CANNOT_DECODE;
    } else {
      return proposalType && ((_a = proposalActionConfig === null || proposalActionConfig === void 0 ? void 0 : proposalActionConfig.proposalTypeWarning) === null || _a === void 0 ? void 0 : _a[proposalType]);
    }
  }, [proposalType, _decodeError, proposalActionConfig]);
  const hasWarning = _decodeError || proposalType && ((_a = proposalActionConfig === null || proposalActionConfig === void 0 ? void 0 : proposalActionConfig.sensitiveProposalTypes) === null || _a === void 0 ? void 0 : _a[proposalType]) || warningMessage === PROPOSAL_TYPE_WARNINGS.ERROR_UNKOWN;
  // TODO: activate this feature when errors use cases arise
  const hasError = false;
  if (!hasWarning) return null;
  return jsxs(WarningContainer, Object.assign({
    className: "container",
    "$error": hasError,
    "$warning": hasWarning
  }, {
    children: [jsx(IconContainer, {
      children: jsx(Icon, Object.assign({
        label: "Warning"
      }, {
        children: jsx(WarningIcon$1, {})
      }))
    }), jsxs(MessageContainer, {
      children: [jsx(StyledParXs, Object.assign({
        "$error": hasError,
        "$warning": hasWarning
      }, {
        children: warningMessage
      })), _decodeError || hasError ]
    })]
  }));
};

let _$c = t => t,
  _t$c;
const Spacer = styled.div(_t$c || (_t$c = _$c`
  margin-bottom: 2rem;
`));
const ProposalDetails = ({
  daoChain,
  daoId,
  proposal,
  includeLinks: _includeLinks = false,
  actionData,
  decodeError: _decodeError = false,
  proposalActionConfig
}) => {
  var _a;
  const {
    networks
  } = useDHConnect();
  const {
    profile: submitterProfile
  } = useProfile({
    address: proposal.createdBy
  });
  return jsxs(OverviewContainer$1, {
    children: [jsx(ReactMarkdown, Object.assign({
      className: "description"
    }, {
      children: proposal.description
    })), proposal.contentURI && jsx(Link$2, Object.assign({
      href: proposal.contentURI,
      className: "proposal-link"
    }, {
      children: "Link"
    })), jsxs(DataContainer, {
      children: [jsxs("div", {
        children: [jsx(ParMd, {
          children: "發起人"
        }), jsxs(MemberCard, Object.assign({
          variant: "ghost",
          profile: submitterProfile || {
            address: proposal.createdBy
          }
        }, {
          children: [_includeLinks && jsx(MemberCardItem, Object.assign({
            asChild: true
          }, {
            children: jsx(StyledRouterLink$1, Object.assign({
              to: `/molochV3/${daoChain}/${daoId}/proposal/${proposal.proposalId}`
            }, {
              children: "查看資訊"
            }))
          })), jsx(MemberCardExplorerLink, Object.assign({
            explorerNetworkId: daoChain,
            profileAddress: (submitterProfile === null || submitterProfile === void 0 ? void 0 : submitterProfile.address) || proposal.createdBy
          }, {
            children: "在Etherscan查看"
          })), jsx(MemberCardCopyAddress, Object.assign({
            profileAddress: (submitterProfile === null || submitterProfile === void 0 ? void 0 : submitterProfile.address) || proposal.createdBy
          }, {
            children: "複製地址"
          }))]
        }))]
      }), jsx(DataIndicator, {
        label: "過期時間",
        data: Number(proposal.expiration) ? formatShortDateTimeFromSeconds(proposal.expiration) : '--',
        size: "sm"
      })]
    }), proposal.proposedBy && proposal.proposedBy !== proposal.createdBy && jsx(DataContainer, Object.assign({
      style: {
        marginTop: '1rem'
      }
    }, {
      children: jsxs("div", {
        children: [jsx(ParMd, {
          children: "Through Contract"
        }), jsxs(MemberCard, Object.assign({
          variant: "ghost",
          profile: {
            address: proposal.proposedBy
          }
        }, {
          children: [_includeLinks && jsx(MemberCardItem, Object.assign({
            asChild: true
          }, {
            children: jsx(StyledRouterLink$1, Object.assign({
              to: `/molochv3/${daoChain}/${daoId}/members/${proposal.proposedBy}`
            }, {
              children: "查看資訊"
            }))
          })), jsx(MemberCardExplorerLink, Object.assign({
            explorerNetworkId: daoChain,
            profileAddress: proposal.proposedBy
          }, {
            children: "在Etherscan查看"
          })), jsx(MemberCardCopyAddress, Object.assign({
            profileAddress: proposal.proposedBy
          }, {
            children: "複製地址"
          }))]
        }))]
      })
    })), Number(proposal.proposalOffering) > 0 && jsx(DataIndicator, {
      label: "提案正在提出",
      data: formatValueTo({
        value: fromWei(proposal.proposalOffering),
        format: 'number',
        unit: (_a = networks === null || networks === void 0 ? void 0 : networks[daoChain]) === null || _a === void 0 ? void 0 : _a.symbol,
        decimals: dynamicDecimals({
          baseUnits: Number(proposal.proposalOffering)
        })
      }),
      size: "sm"
    }), jsx(ProposalAddtionalDetails, {
      daoChain: daoChain,
      daoId: daoId,
      proposal: proposal,
      includeLinks: _includeLinks,
      actionData: actionData
    }), jsx(Spacer, {}), jsx(ProposalWarning, {
      proposalType: proposal.proposalType,
      decodeError: _decodeError,
      txHash: proposal.txHash,
      daoChain: daoChain,
      proposalActionConfig: proposalActionConfig
    })]
  });
};

const ActionAlert = ({
  action,
  daoId,
  proposalType,
  proposalActionConfig,
  daoChain
}) => {
  var _a, _b;
  const actionType = (_a = proposalActionConfig === null || proposalActionConfig === void 0 ? void 0 : proposalActionConfig.actionToProposalType) === null || _a === void 0 ? void 0 : _a[action.name];
  // Show Action Warning IFF action.to === daoId || actionType != proposal.proposalType
  // e.g. calling sensitive dao methods through tx builder proposal
  if (actionType && proposalType && (action.to === daoId || proposalType !== actionType) && ((_b = proposalActionConfig === null || proposalActionConfig === void 0 ? void 0 : proposalActionConfig.sensitiveProposalTypes) === null || _b === void 0 ? void 0 : _b[actionType])) {
    return jsx(AlertContainer$1, {
      children: jsx(ProposalWarning, {
        proposalActionConfig: proposalActionConfig,
        proposalType: actionType,
        txHash: '',
        daoChain: daoChain
      })
    });
  }
  return null;
};

const ValueDisplay = ({
  argValue,
  argType,
  network,
  isMobile
}) => {
  if (Array.isArray(argValue)) {
    const displayValue = argType === 'tuple' ? Object.entries(Object.assign({}, argValue)).filter(entry => !isNumberish(entry[0])) : argValue;
    return jsx(Fragment, {
      children: displayValue.map((value, index) => {
        return jsxs("div", Object.assign({
          className: "space"
        }, {
          children: [jsx(ValueDisplay, {
            argValue: Array.isArray(value) ? `${value[0]}: ${value[1]}` : value,
            argType: argType,
            network: network
          }), index + 1 < (argValue === null || argValue === void 0 ? void 0 : argValue.length) && jsx(Divider, {})]
        }), `argValue${index}`);
      })
    });
  }
  if (isEthAddress(argValue)) {
    return jsx(AddressDisplay, {
      address: argValue,
      copy: true,
      explorerNetworkId: network,
      className: "space",
      truncate: isMobile
    });
  }
  if (typeof argValue === 'boolean') {
    return jsx(DataSm, Object.assign({
      className: "space"
    }, {
      children: `${argValue}`
    }));
  }
  if (typeof argValue === 'string' || typeof argValue === 'number') {
    return jsx(DataSm, Object.assign({
      className: "space"
    }, {
      children: argValue
    }));
  }
  return jsx(DataSm, Object.assign({
    className: "space"
  }, {
    children: argValue.toString()
  }));
};

const ProposalActionData = ({
  daoChain,
  daoId,
  proposal,
  proposalActionConfig: _proposalActionConfig = {
    sensitiveProposalTypes: SENSITIVE_PROPOSAL_TYPES,
    actionToProposalType: DAO_METHOD_TO_PROPOSAL_TYPE,
    proposalTypeWarning: PROPOSAL_TYPE_WARNINGS
  },
  actionData,
  decodeError: _decodeError = false
}) => {
  return jsxs(MainContainer, {
    children: [jsxs(DisplayContainer, {
      children: [jsxs(TitleContainer, {
        children: [jsx(ParMd, {
          children: jsx(Bold, {
            children: "All Actions"
          })
        }), !actionData && jsx(LoadingContainer, {
          children: jsx(Loading, {
            size: 20
          })
        })]
      }), actionData === null || actionData === void 0 ? void 0 : actionData.map((action, index) => {
        return jsxs("div", {
          children: [jsx(ActionSection, {
            index: index,
            action: action,
            daoId: daoId,
            daoChain: daoChain,
            proposal: proposal,
            proposalActionConfig: _proposalActionConfig,
            actionHeader: `${index + 1}.`
          }), jsx(SubActions, {
            daoChain: daoChain,
            daoId: daoId,
            proposal: proposal,
            proposalActionConfig: _proposalActionConfig,
            action: action,
            index: index,
            actionHeader: `-`
          })]
        }, index);
      })]
    }), _decodeError && jsx(ProposalWarning, {
      proposalType: proposal.proposalType,
      decodeError: _decodeError,
      txHash: proposal.txHash,
      proposalActionConfig: _proposalActionConfig,
      daoChain: daoChain
    })]
  });
};
const SubActions = ({
  action,
  index,
  actionHeader,
  daoChain,
  daoId,
  proposal,
  proposalActionConfig
}) => {
  if (isActionError(action) || !action.decodedActions || action.decodedActions.length === 0) {
    return null;
  }
  return jsx(Fragment, {
    children: action.decodedActions.map((subAction, i) => jsxs("div", {
      children: [jsx(ActionSection, {
        daoChain: daoChain,
        daoId: daoId,
        proposal: proposal,
        proposalActionConfig: proposalActionConfig,
        action: subAction,
        index: index,
        actionHeader: `-`
      }), jsx(SubActions, {
        daoChain: daoChain,
        daoId: daoId,
        proposal: proposal,
        proposalActionConfig: proposalActionConfig,
        action: subAction,
        index: index,
        actionHeader: actionHeader
      })]
    }, i))
  });
};
const ActionToggle = ({
  action,
  actionHeader,
  children
}) => {
  const [open, setOpen] = useState(false);
  const handleToggle = () => {
    setOpen(prevState => !prevState);
  };
  return jsxs(Fragment, {
    children: [jsxs(TitleContainer, {
      children: [jsxs(ParLg, Object.assign({
        className: "space"
      }, {
        children: [actionHeader, " ", 'name' in action ? action.name : 'Decoding Error']
      })), open && jsx("div", Object.assign({
        onClick: handleToggle
      }, {
        children: jsx(StyledUpArrow$1, {})
      })), !open && jsx("div", Object.assign({
        onClick: handleToggle
      }, {
        children: jsx(StyledDownArrow$1, {})
      }))]
    }), open && jsx("div", Object.assign({
      className: "data"
    }, {
      children: children
    }))]
  });
};
const ActionSectionError = ({
  action,
  index
}) => {
  return jsxs("div", Object.assign({
    className: "display-segment data"
  }, {
    children: [jsxs(H4, Object.assign({
      className: "space"
    }, {
      children: ["Action ", index + 1, ": Error"]
    })), jsx(DataSm, Object.assign({
      className: "space"
    }, {
      children: action.message
    })), jsx(Divider, {
      className: "space"
    }), jsx(DataSm, Object.assign({
      className: "space"
    }, {
      children: jsx(Bold, {
        children: "HEX DATA:"
      })
    })), jsx(DataSm, Object.assign({
      className: "space"
    }, {
      children: action.data
    }))]
  }), `${action.message}-${index}`);
};
const ActionSection = ({
  action,
  index,
  actionHeader,
  daoChain,
  daoId,
  proposal,
  proposalActionConfig
}) => {
  var _a;
  const network = isValidNetwork(daoChain) ? daoChain : undefined;
  const isMobile = useBreakpoint(widthQuery.sm);
  if (isActionError(action)) {
    return jsx(ActionSectionError, {
      index: index,
      action: action
    });
  }
  return jsx("div", Object.assign({
    className: "display-segment"
  }, {
    children: jsx(ActionToggle, Object.assign({
      actionHeader: actionHeader,
      action: action
    }, {
      children: jsxs(Fragment, {
        children: [jsx(ActionAlert, {
          action: action,
          daoId: daoId,
          daoChain: daoChain,
          proposalType: proposal.proposalType,
          proposalActionConfig: proposalActionConfig
        }), jsx(DataSm, Object.assign({
          className: "space"
        }, {
          children: jsx(Bold, {
            children: "TARGET"
          })
        })), jsx(AddressDisplay, {
          className: "space",
          address: action.to,
          copy: true,
          explorerNetworkId: network,
          truncate: isMobile
        }), jsx(DataSm, Object.assign({
          className: "space"
        }, {
          children: jsx(Bold, {
            children: "VALUE"
          })
        })), jsx(DataSm, Object.assign({
          className: "space"
        }, {
          children: action.value
        })), jsx(Divider, {
          className: "spaced-divider"
        }), (_a = action.params) === null || _a === void 0 ? void 0 : _a.map((arg, index) => {
          return jsxs("div", Object.assign({
            className: "data"
          }, {
            children: [jsxs(DataSm, Object.assign({
              className: "space"
            }, {
              children: [jsxs(Bold, {
                children: ["PARAM", index + 1, ":", ' ']
              }), arg.name]
            })), jsxs(DataSm, Object.assign({
              className: "space"
            }, {
              children: [jsx(Bold, {
                children: "TYPE: "
              }), arg.type]
            })), jsx(DataSm, Object.assign({
              className: "space"
            }, {
              children: jsx(Bold, {
                children: "VALUE: "
              })
            })), jsx(ValueDisplay, {
              argValue: arg.value,
              argType: arg.type,
              network: network,
              isMobile: isMobile
            }), jsx(Divider, {})]
          }), `${arg.name}-${index}`);
        })]
      })
    }))
  }), `action_${index}`);
};

const ProposalDetailsContainer = ({
  daoChain,
  daoId,
  proposal,
  includeLinks: _includeLinks = false,
  proposalActionConfig: _proposalActionConfig = {
    sensitiveProposalTypes: SENSITIVE_PROPOSAL_TYPES,
    actionToProposalType: DAO_METHOD_TO_PROPOSAL_TYPE,
    proposalTypeWarning: PROPOSAL_TYPE_WARNINGS
  },
  txLegos: _txLegos = TX
}) => {
  const [decodeError, setDecodeError] = useState(false);
  const [actionData, setActionData] = useState();
  const [actionsMeta, setActionsMeta] = useState();
  useEffect(() => {
    var _a, _b;
    if (proposal === null || proposal === void 0 ? void 0 : proposal.proposalType) {
      const txLego = (_b = (_a = _txLegos[proposal.proposalType]) === null || _a === void 0 ? void 0 : _a.args) === null || _b === void 0 ? void 0 : _b.find(tx => tx.type === 'multicall');
      setActionsMeta(txLego && txLego.actions);
    }
  }, [proposal === null || proposal === void 0 ? void 0 : proposal.proposalType, _txLegos]);
  useEffect(() => {
    let shouldUpdate = true;
    const fetchPropActions = (chainId, actionData, _actionMeta) => __awaiter(void 0, void 0, void 0, function* () {
      const proposalActions = yield deepDecodeProposalActions({
        chainId,
        actionData
      });
      if (shouldUpdate) {
        setActionData(proposalActions);
        setDecodeError(proposalActions.length === 0 || proposalActions.some(action => isActionError(action)));
      }
    });
    if (!isValidNetwork(daoChain) || !proposal) return;
    fetchPropActions(daoChain, proposal.proposalData);
    return () => {
      shouldUpdate = false;
    };
  }, [daoChain, proposal, actionsMeta]);
  return jsxs(Fragment, {
    children: [jsx(ProposalDetails, {
      daoChain: daoChain,
      daoId: daoId,
      proposal: proposal,
      actionData: actionData,
      decodeError: decodeError,
      includeLinks: _includeLinks,
      proposalActionConfig: _proposalActionConfig
    }), jsx(ProposalActionData, {
      daoChain: daoChain,
      daoId: daoId,
      proposal: proposal,
      actionData: actionData,
      actionsMeta: actionsMeta,
      decodeError: decodeError,
      proposalActionConfig: _proposalActionConfig
    })]
  });
};

const buildProposalHistory = ({
  proposal,
  networkData
}) => {
  if (proposal.status === PROPOSAL_STATUS.unsponsored) {
    return buildUnsponsoredElements({
      proposal,
      networkData
    });
  }
  if (proposal.status === PROPOSAL_STATUS.cancelled) {
    return buildCancelledElements({
      proposal,
      networkData
    });
  }
  if (proposal.status === PROPOSAL_STATUS.voting) {
    return buildVotingElements({
      proposal,
      networkData
    });
  }
  if (proposal.status === PROPOSAL_STATUS.grace) {
    return buildGraceElements({
      proposal,
      networkData
    });
  }
  if (proposal.status === PROPOSAL_STATUS.needsProcessing) {
    return buildNeedsProcessingElements({
      proposal,
      networkData
    });
  }
  if (proposal.status === PROPOSAL_STATUS.actionFailed || proposal.status === PROPOSAL_STATUS.passed) {
    return buildCompletedElements({
      proposal,
      networkData
    });
  }
  if (proposal.status === PROPOSAL_STATUS.failed) {
    return buildFailedElements({
      proposal,
      networkData
    });
  }
  if (proposal.status === PROPOSAL_STATUS.expired) {
    return buildExpiredElements({
      proposal,
      networkData
    });
  }
  return [{
    title: 'Pending',
    active: false,
    canExpand: false
  }];
};
const buildExpiredElements = ({
  proposal,
  networkData
}) => {
  return [buildSubmitted({
    proposal,
    networkData
  }), buildSponsored({
    proposal
  }), buildVotingPast({
    proposal
  }), buildGracePast({
    proposal
  }), {
    title: '提案已過期',
    text: formatShortDateTimeFromSeconds(proposal.expiration),
    active: false,
    canExpand: false
  }];
};
const buildFailedElements = ({
  proposal,
  networkData
}) => {
  return [buildSubmitted({
    proposal,
    networkData
  }), buildSponsored({
    proposal
  }), buildVotingPast({
    proposal
  }), buildGracePast({
    proposal
  }), {
    title: '提案失敗',
    active: false,
    canExpand: false
  }];
};
const buildCompletedElements = ({
  proposal,
  networkData
}) => {
  return [buildSubmitted({
    proposal,
    networkData
  }), buildSponsored({
    proposal
  }), buildVotingPast({
    proposal
  }), buildGracePast({
    proposal
  }), {
    title: `提案完成`,
    active: false,
    canExpand: true,
    dataElements: [{
      dataType: 'member',
      label: 'Executed By',
      data: proposal.processedBy || '--'
    }],
    txHash: proposal.processTxHash
  }];
};
const buildNeedsProcessingElements = ({
  proposal,
  networkData
}) => {
  return [buildSubmitted({
    proposal,
    networkData
  }), buildSponsored({
    proposal
  }), buildVotingPast({
    proposal
  }), buildGracePast({
    proposal
  }), {
    title: '提案完成',
    active: proposal.status === PROPOSAL_STATUS.needsProcessing,
    text: `Waiting to be executed...`,
    canExpand: false
  }];
};
const buildGraceElements = ({
  proposal,
  networkData
}) => {
  return [buildSubmitted({
    proposal,
    networkData
  }), buildSponsored({
    proposal
  }), buildVotingPast({
    proposal
  }), {
    title: '寬限期',
    active: proposal.status === PROPOSAL_STATUS.grace,
    text: `寬限期結束於 ${formatDistanceToNowFromSeconds(proposal.graceEnds)}`,
    canExpand: false
  }, buildCompletedFuture({
    proposal
  })];
};
const buildVotingElements = ({
  proposal,
  networkData
}) => {
  return [buildSubmitted({
    proposal,
    networkData
  }), buildSponsored({
    proposal
  }), {
    title: '投票進行中',
    active: proposal.status === PROPOSAL_STATUS.voting,
    text: `${formatValueTo({
      value: fromWei(proposal.yesBalance),
      decimals: 2,
      format: 'numberShort'
    })} Yes / ${formatValueTo({
      value: fromWei(proposal.noBalance),
      decimals: 2,
      format: 'numberShort'
    })} No -- 投票結束 ${formatDistanceToNowFromSeconds(proposal.votingEnds)}`,
    canExpand: false,
    showVotesButton: true
  }, buildCompletedFuture({
    proposal
  })];
};
const buildCancelledElements = ({
  proposal,
  networkData
}) => {
  return [buildSubmitted({
    proposal,
    networkData
  }), buildSponsored({
    proposal
  }), buildVotingPast({
    proposal
  }), {
    title: '提案已取消',
    active: false,
    canExpand: false
  }];
};
const buildUnsponsoredElements = ({
  proposal,
  networkData
}) => {
  return [buildSubmitted({
    proposal,
    networkData
  }), {
    title: 'Waiting on Sponsor',
    active: false,
    canExpand: false
  }, {
    title: 'Voting Period',
    text: `Voting will last ${formatPeriods(proposal.votingPeriod)}`,
    active: false,
    canExpand: false
  }, buildGraceFuture({
    proposal
  }), buildCompletedFuture({
    proposal
  })];
};
const buildGraceFuture = ({
  proposal
}) => {
  return {
    title: '寬限期',
    text: `寬限至 ${formatPeriods(proposal.gracePeriod)}`,
    active: false,
    canExpand: false
  };
};
const buildGracePast = ({
  proposal
}) => {
  return {
    title: '寬限期',
    active: false,
    text: formatDateTimeFromSeconds(proposal.graceEnds),
    canExpand: false
  };
};
const buildVotingPast = ({
  proposal
}) => {
  return {
    title: '投票結束',
    active: false,
    text: `${formatValueTo({
      value: fromWei(proposal.yesBalance),
      decimals: 2,
      format: 'numberShort'
    })} Yes / ${formatValueTo({
      value: fromWei(proposal.noBalance),
      decimals: 2,
      format: 'numberShort'
    })} No`,
    canExpand: false,
    showVotesButton: true
  };
};
const buildCompletedFuture = ({
  proposal
}) => {
  return {
    title: '提案完成',
    text: proposal.expiration !== '0' ? `提案將結束於 ${formatShortDateTimeFromSeconds(proposal.expiration)}` : undefined,
    active: false,
    canExpand: false
  };
};
const buildSponsored = ({
  proposal
}) => {
  return {
    title: '贊助',
    active: false,
    text: formatDateTimeFromSeconds(proposal.sponsorTxAt),
    canExpand: true,
    dataElements: [{
      dataType: 'member',
      label: '贊助人',
      data: proposal.sponsor || '--'
    }],
    txHash: proposal.sponsorTxHash
  };
};
const buildSubmitted = ({
  proposal,
  networkData
}) => {
  return {
    title: '送出',
    active: proposal.status === PROPOSAL_STATUS.unsponsored,
    text: formatDateTimeFromSeconds(proposal.createdAt),
    canExpand: true,
    dataElements: [{
      dataType: 'member',
      label: '發起人',
      data: proposal.createdBy
    }, {
      dataType: 'dataIndicator',
      label: '提案中',
      data: `${fromWei(proposal.proposalOffering)} ${networkData === null || networkData === void 0 ? void 0 : networkData.symbol}`
    }],
    txHash: proposal.txHash
  };
};

let _$b = t => t,
  _t$b,
  _t2$5,
  _t3$4,
  _t4$3,
  _t5$3,
  _t6$3,
  _t7$2,
  _t8$1,
  _t9,
  _t10,
  _t11,
  _t12,
  _t13;
const HistoryListContainer = styled.div(_t$b || (_t$b = _$b`
  min-width: 40.5rem;
  @media ${0} {
    max-width: 100%;
    min-width: 0;
  }
`), widthQuery.xs);
const ElementContainer = styled.div(_t2$5 || (_t2$5 = _$b`
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  padding: 2rem 0;
  border-bottom: 1px solid #ffffff16;
`));
const VisibleContainer = styled.div(_t3$4 || (_t3$4 = _$b`
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-start;
`));
const ContentContainer = styled.div(_t4$3 || (_t4$3 = _$b`
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  gap: 1rem;
`));
const StyledTitle = styled(Bold)(_t5$3 || (_t5$3 = _$b`
  color: ${0};
`), ({
  theme,
  $active
}) => $active && theme.primary.step10);
const StyledUpArrow = styled(RiArrowUpSLine)(_t6$3 || (_t6$3 = _$b`
  font-size: 4.8rem;
  font-weight: 900;
  color: ${0};
`), ({
  theme
}) => theme.primary.step10);
const StyledDownArrow = styled(RiArrowDownSLine)(_t7$2 || (_t7$2 = _$b`
  font-size: 4.8rem;
  font-weight: 900;
  color: ${0};
`), ({
  theme
}) => theme.primary.step10);
const LinkContainer = styled.div(_t8$1 || (_t8$1 = _$b`
  display: flex;
  justify-content: flex-end;
  width: 100%;
  margin-top: 2.5rem;
`));
const VotesButton = styled(Button)(_t9 || (_t9 = _$b`
  min-width: 10.6rem;
`));
const ExpandedDataGrid = styled.div(_t10 || (_t10 = _$b`
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  margin-top: 2.4rem;
`));
const VotesListContainer = styled.div(_t11 || (_t11 = _$b`
  display: flex;
  flex-direction: column;
`));
const VotesContainer = styled.div(_t12 || (_t12 = _$b`
  display: flex;
  flex-direction: column;
  gap: 4rem;
  margin-top: 3rem;
  min-width: 50rem;
  max-height: 50rem;
  @media ${0} {
    min-width: 100%;
  }
  overflow: auto;
  padding-right: 1rem;
`), widthQuery.sm);
const VoteContainer = styled.div(_t13 || (_t13 = _$b`
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  margin: 3rem 0;
  @media ${0} {
    margin: 1.2rem 0;
  }
`), widthQuery.sm);

const VoteList = ({
  votes,
  proposal,
  daoChain,
  daoId,
  includeLinks: _includeLinks = false
}) => {
  return jsxs(VotesListContainer, {
    children: [jsx(VotesContainer, {
      children: votes === null || votes === void 0 ? void 0 : votes.map(vote => jsxs("div", {
        children: [jsx(ParMd, {
          children: formatShortDateTimeFromSeconds(vote.createdAt)
        }), jsxs(VoteContainer, {
          children: [jsx(MemberDisplay, {
            daoId: daoId,
            daoChain: daoChain,
            memberAddress: vote.member.memberAddress,
            includeLinks: _includeLinks
          }), jsxs(DataMd, {
            children: [vote.approved ? '贊同' : '反對', " -", ' ', formatValueTo({
              value: fromWei(vote.balance),
              decimals: 2,
              format: 'numberShort'
            })]
          })]
        })]
      }, vote.id))
    }), jsxs(VoteContainer, {
      children: [jsx(ParMd, {
        children: "Total"
      }), jsxs(DataMd, {
        children: [formatValueTo({
          value: fromWei(proposal.yesBalance),
          decimals: 2,
          format: 'numberShort'
        }), ' ', "Yes /", ' ', formatValueTo({
          value: fromWei(proposal.noBalance),
          decimals: 2,
          format: 'numberShort'
        }), "No"]
      })]
    })]
  });
};

const DataPoint = ({
  data,
  daoChain,
  daoId,
  includeLinks
}) => {
  if (data.dataType === 'member') {
    return jsxs("div", {
      children: [jsx(ParMd, {
        children: data.label
      }), jsx(MemberDisplay, {
        daoId: daoId,
        daoChain: daoChain,
        memberAddress: data.data,
        includeLinks: includeLinks
      })]
    });
  }
  if (data.dataType === 'dataIndicator') {
    return jsx(DataIndicator, {
      label: data.label,
      data: data.data
    });
  }
  return null;
};
const ProposalHistoryCard = ({
  element,
  proposal,
  daoChain,
  daoId,
  includeLinks: _includeLinks = false
}) => {
  const isMobile = useBreakpoint(widthQuery.sm);
  const [open, setOpen] = useState(false);
  const handleToggle = () => {
    setOpen(prevState => !prevState);
  };
  const hasProposalVotes = proposal && proposal.votes && proposal.votes.length > 0;
  const totalVotes = hasProposalVotes ? formatValueTo({
    value: Number(fromWei(proposal.yesBalance)) + Number(fromWei(proposal.noBalance)),
    decimals: 0,
    format: 'numberShort',
    separator: ''
  }) : '0';
  return jsxs(ElementContainer, {
    children: [jsxs(VisibleContainer, {
      children: [jsxs(ContentContainer, {
        children: [jsx(ParLg, {
          children: jsx(StyledTitle, Object.assign({
            "$active": element.active
          }, {
            children: element.title
          }))
        }), element.text && jsx(ParMd, {
          children: element.text
        })]
      }), element.canExpand && open && jsx("div", Object.assign({
        onClick: handleToggle
      }, {
        children: jsx(StyledUpArrow, {})
      })), element.canExpand && !open && jsx("div", Object.assign({
        onClick: handleToggle
      }, {
        children: jsx(StyledDownArrow, {})
      })), element.showVotesButton && hasProposalVotes && jsxs(Dialog, {
        children: [jsx(DialogTrigger, Object.assign({
          asChild: true
        }, {
          children: jsx(VotesButton, Object.assign({
            color: "secondary",
            size: "sm"
          }, {
            children: "顯示投票情況"
          }))
        })), jsx(DialogContent, Object.assign({
          alignButtons: "end",
          rightButton: {
            $closeDialog: true,
            fullWidth: isMobile
          },
          title: `提案投票 (${totalVotes})`
        }, {
          children: jsx(VoteList, {
            votes: proposal.votes,
            proposal: proposal,
            daoId: daoId,
            daoChain: daoChain,
            includeLinks: _includeLinks
          })
        }))]
      })]
    }), element.canExpand && open && jsxs(Fragment, {
      children: [jsx(ExpandedDataGrid, {
        children: element.dataElements && element.dataElements.map(data => jsx(DataPoint, {
          data: data,
          daoChain: daoChain,
          daoId: daoId,
          includeLinks: _includeLinks
        }, data.label))
      }), element.txHash && jsx(LinkContainer, {
        children: jsx(ExplorerLink, Object.assign({
          address: element.txHash,
          chainId: daoChain,
          type: "tx"
        }, {
          children: "查看 Transaction"
        }))
      })]
    })]
  });
};

const ProposalHistory = ({
  proposalId,
  daoChain,
  daoId,
  includeLinks: _includeLinks = false,
  graphApiKeys
}) => {
  const {
    proposal
  } = useDaoProposal({
    proposalId,
    daoChain: daoChain,
    daoId,
    graphApiKeys
  });
  const historyData = useMemo(() => {
    if (!proposal || !daoChain) return null;
    return buildProposalHistory({
      proposal,
      networkData: getNetwork(daoChain)
    });
  }, [proposal, daoChain]);
  if (!proposal || !daoChain || !daoId || !historyData) return null;
  return jsx(HistoryListContainer, {
    children: historyData.map(element => {
      return jsx(ProposalHistoryCard, {
        proposal: proposal,
        element: element,
        daoChain: daoChain,
        daoId: daoId,
        includeLinks: _includeLinks
      }, element.title);
    })
  });
};

let _$a = t => t,
  _t$a,
  _t2$4,
  _t3$3,
  _t4$2,
  _t5$2,
  _t6$2;
const SafeContainer = styled(Card)(_t$a || (_t$a = _$a`
  padding: 3rem;
  width: 100%;
  border: none;
  margin-bottom: 3rem;
  @media ${0} {
    max-width: 100%;
    min-width: 0;
  }
`), widthQuery.lg);
const SafeOverviewCard = styled(Card)(_t2$4 || (_t2$4 = _$a`
  background-color: ${0};
  border: none;
  padding: 3rem;
  width: 100%;
`), ({
  theme
}) => theme.secondary.step3);
const SafeCardHeader = styled.div(_t3$3 || (_t3$3 = _$a`
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: wrap;
  margin-bottom: 3rem;

  .right-section {
    display: flex;
  }

  .safe-link {
    padding: 0.9rem;
    background-color: ${0};
    border-radius: 4px;
  }
`), ({
  theme
}) => theme.secondary.step5);
const TagSection = styled.div(_t4$2 || (_t4$2 = _$a`
  display: flex;
  align-items: center;
  gap: 1.8rem;
`));
const SafeActionMenuTrigger = styled(Button)(_t5$2 || (_t5$2 = _$a`
  width: 0.5rem;

  &[data-state='open'] {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  svg.icon-left {
    color: ${0};
    margin-right: 0;
    margin: 5rem;
  }
`), ({
  theme
}) => theme.primary.step9);
const SafeActionMenuLink = styled(Link$1)(_t6$2 || (_t6$2 = _$a`
  ${0}
  font-weight: ${0};
`), DropdownLinkStyles, font.weight.bold);

const SafeActionMenu = ({
  ragequittable,
  safeAddress,
  daoChain,
  daoId
}) => {
  const {
    address
  } = useDHConnect();
  const networkData = useMemo(() => {
    if (!daoChain) return null;
    return getNetwork(daoChain);
  }, [daoChain]);
  // must be connected to view action menu
  if (!address) return null;
  return jsxs(DropdownMenu, {
    children: [jsx(DropdownTrigger, Object.assign({
      asChild: true
    }, {
      children: jsx(SafeActionMenuTrigger, {
        IconRight: RiMore2Fill,
        size: "sm",
        variant: "ghost"
      })
    })), jsxs(DropdownContent, {
      children: [jsx(DropdownItem, Object.assign({
        asChild: true
      }, {
        children: jsx(SafeActionMenuLink, Object.assign({
          to: `/molochv3/${daoChain}/${daoId}/new-proposal?formLego=${ragequittable ? 'TRANSFER_ERC20' : `TRANSFER_ERC20_SIDECAR&defaultValues={"safeAddress":"${safeAddress}"}`}`
        }, {
          children: "傳送 ERC-20"
        }))
      }), "erc20"), jsx(DropdownItem, Object.assign({
        asChild: true
      }, {
        children: jsxs(SafeActionMenuLink, Object.assign({
          to: `/molochv3/${daoChain}/${daoId}/new-proposal?formLego=${ragequittable ? 'TRANSFER_NETWORK_TOKEN' : `TRANSFER_NETWORK_TOKEN_SIDECAR&defaultValues={"safeAddress":"${safeAddress}"}`}`
        }, {
          children: ["傳送 ", networkData === null || networkData === void 0 ? void 0 : networkData.symbol]
        }))
      }), "eth"), jsx(DropdownItem, Object.assign({
        asChild: true
      }), "txbuilder")]
    })]
  });
};

const SafeCard = ({
  dao,
  safe,
  daoChain,
  includeLinks: _includeLinks = false
}) => {
  const isTreasury = useMemo(() => {
    return safe.safeAddress === dao.safeAddress;
  }, [safe, dao]);
  return jsx(SafeContainer, {
    children: jsxs(SafeOverviewCard, {
      children: [jsxs(SafeCardHeader, {
        children: [jsxs("div", {
          children: [jsx(H4, {
            children: "金庫資訊"
          }), jsxs(TagSection, {
            children: [jsx(AddressDisplay, {
              address: safe.safeAddress,
              truncate: true,
              copy: true,
              explorerNetworkId: daoChain
            }), isTreasury && jsx(Tag, Object.assign({
              tagColor: "pink"
            }, {
              children: "可退款"
            }))]
          })]
        }), jsxs("div", Object.assign({
          className: "right-section"
        }, {
          children: [jsx("div", Object.assign({
            className: "safe-link"
          }, {
            children: jsx(Link$2, Object.assign({
              href: generateGnosisUiLink({
                chainId: daoChain,
                address: safe.safeAddress
              })
            }, {
              children: jsx(ParXs, {
                children: jsx(Bold, {
                  children: "Safe"
                })
              })
            }))
          })), _includeLinks && jsx(SafeActionMenu, {
            ragequittable: safe.ragequittable,
            safeAddress: safe.safeAddress,
            daoChain: daoChain,
            daoId: dao.id
          })]
        }))]
      }), jsxs(DataGrid$2, {
        children: [jsx(DataIndicator, {
          label: "資產",
          data: formatValueTo({
            value: safe.fiatTotal,
            decimals: 2,
            format: 'currencyShort'
          })
        }), jsx(DataIndicator, {
          label: "代幣數量",
          data: safe.tokenBalances.length
        })]
      })]
    })
  });
};

var tryToString = tryToString$2;

var $TypeError = TypeError;

var deletePropertyOrThrow$1 = function (O, P) {
  if (!delete O[P]) throw $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));
};

var toPropertyKey = toPropertyKey$3;
var definePropertyModule = objectDefineProperty;
var createPropertyDescriptor = createPropertyDescriptor$4;

var createProperty$1 = function (object, key, value) {
  var propertyKey = toPropertyKey(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};

var toAbsoluteIndex = toAbsoluteIndex$2;
var lengthOfArrayLike$1 = lengthOfArrayLike$4;
var createProperty = createProperty$1;

var $Array = Array;
var max = Math.max;

var arraySliceSimple = function (O, start, end) {
  var length = lengthOfArrayLike$1(O);
  var k = toAbsoluteIndex(start, length);
  var fin = toAbsoluteIndex(end === undefined ? length : end, length);
  var result = $Array(max(fin - k, 0));
  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);
  result.length = n;
  return result;
};

var arraySlice = arraySliceSimple;

var floor$1 = Math.floor;

var mergeSort = function (array, comparefn) {
  var length = array.length;
  var middle = floor$1(length / 2);
  return length < 8 ? insertionSort(array, comparefn) : merge(
    array,
    mergeSort(arraySlice(array, 0, middle), comparefn),
    mergeSort(arraySlice(array, middle), comparefn),
    comparefn
  );
};

var insertionSort = function (array, comparefn) {
  var length = array.length;
  var i = 1;
  var element, j;

  while (i < length) {
    j = i;
    element = array[i];
    while (j && comparefn(array[j - 1], element) > 0) {
      array[j] = array[--j];
    }
    if (j !== i++) array[j] = element;
  } return array;
};

var merge = function (array, left, right, comparefn) {
  var llength = left.length;
  var rlength = right.length;
  var lindex = 0;
  var rindex = 0;

  while (lindex < llength || rindex < rlength) {
    array[lindex + rindex] = (lindex < llength && rindex < rlength)
      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]
      : lindex < llength ? left[lindex++] : right[rindex++];
  } return array;
};

var arraySort = mergeSort;

var userAgent$1 = engineUserAgent;

var firefox = userAgent$1.match(/firefox\/(\d+)/i);

var engineFfVersion = !!firefox && +firefox[1];

var UA = engineUserAgent;

var engineIsIeOrEdge = /MSIE|Trident/.test(UA);

var userAgent = engineUserAgent;

var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);

var engineWebkitVersion = !!webkit && +webkit[1];

var $$1 = _export;
var uncurryThis$2 = functionUncurryThis;
var aCallable = aCallable$4;
var toObject = toObject$5;
var lengthOfArrayLike = lengthOfArrayLike$4;
var deletePropertyOrThrow = deletePropertyOrThrow$1;
var toString$1 = toString$5;
var fails$1 = fails$g;
var internalSort = arraySort;
var arrayMethodIsStrict = arrayMethodIsStrict$2;
var FF = engineFfVersion;
var IE_OR_EDGE = engineIsIeOrEdge;
var V8 = engineV8Version;
var WEBKIT = engineWebkitVersion;

var test = [];
var nativeSort = uncurryThis$2(test.sort);
var push = uncurryThis$2(test.push);

// IE8-
var FAILS_ON_UNDEFINED = fails$1(function () {
  test.sort(undefined);
});
// V8 bug
var FAILS_ON_NULL = fails$1(function () {
  test.sort(null);
});
// Old WebKit
var STRICT_METHOD = arrayMethodIsStrict('sort');

var STABLE_SORT = !fails$1(function () {
  // feature detection can be too slow, so check engines versions
  if (V8) return V8 < 70;
  if (FF && FF > 3) return;
  if (IE_OR_EDGE) return true;
  if (WEBKIT) return WEBKIT < 603;

  var result = '';
  var code, chr, value, index;

  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)
  for (code = 65; code < 76; code++) {
    chr = String.fromCharCode(code);

    switch (code) {
      case 66: case 69: case 70: case 72: value = 3; break;
      case 68: case 71: value = 4; break;
      default: value = 2;
    }

    for (index = 0; index < 47; index++) {
      test.push({ k: chr + index, v: value });
    }
  }

  test.sort(function (a, b) { return b.v - a.v; });

  for (index = 0; index < test.length; index++) {
    chr = test[index].k.charAt(0);
    if (result.charAt(result.length - 1) !== chr) result += chr;
  }

  return result !== 'DGBEFHACIJK';
});

var FORCED$1 = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;

var getSortCompare = function (comparefn) {
  return function (x, y) {
    if (y === undefined) return -1;
    if (x === undefined) return 1;
    if (comparefn !== undefined) return +comparefn(x, y) || 0;
    return toString$1(x) > toString$1(y) ? 1 : -1;
  };
};

// `Array.prototype.sort` method
// https://tc39.es/ecma262/#sec-array.prototype.sort
$$1({ target: 'Array', proto: true, forced: FORCED$1 }, {
  sort: function sort(comparefn) {
    if (comparefn !== undefined) aCallable(comparefn);

    var array = toObject(this);

    if (STABLE_SORT) return comparefn === undefined ? nativeSort(array) : nativeSort(array, comparefn);

    var items = [];
    var arrayLength = lengthOfArrayLike(array);
    var itemsLength, index;

    for (index = 0; index < arrayLength; index++) {
      if (index in array) push(items, array[index]);
    }

    internalSort(items, getSortCompare(comparefn));

    itemsLength = lengthOfArrayLike(items);
    index = 0;

    while (index < itemsLength) array[index] = items[index++];
    while (index < arrayLength) deletePropertyOrThrow(array, index++);

    return array;
  }
});

const SafesList = ({
  daoChain,
  daoId,
  includeLinks: _includeLinks = false,
  graphApiKeys
}) => {
  const {
    dao
  } = useDaoData({
    daoChain,
    daoId,
    graphApiKeys
  });
  if (!dao) return null;
  return jsx(Fragment, {
    children: dao.vaults.sort((a, b) => Number(b.ragequittable) - Number(a.ragequittable)).map(vault => dao && vault && jsx(SafeCard, {
      dao: dao,
      daoChain: daoChain,
      safe: vault,
      includeLinks: _includeLinks
    }, vault.id))
  });
};

let _$9 = t => t,
  _t$9,
  _t2$3,
  _t3$2,
  _t4$1,
  _t5$1,
  _t6$1,
  _t7$1,
  _t8;
const OverviewBox = styled.div(_t$9 || (_t$9 = _$9`
  display: flex;
  flex-direction: column;
  margin-bottom: 1.1rem;
  height: 100%;
  .title {
    margin-top: ${0};
    margin-bottom: 2rem;
  }
  .description {
    margin-bottom: auto;
  }
  @media ${0} {
    .description {
      margin-bottom: 2rem;
    }
  }
`), ({
  $allowLinks
}) => $allowLinks ? '0' : '1.5rem', widthQuery.md);
const SubmittedContainer = styled.div(_t2$3 || (_t2$3 = _$9`
  display: flex;
  align-items: center;
  margin-top: 2rem;
  .submitted-by {
    margin-right: 1rem;
  }
  @media ${0} {
    flex-direction: column;
  }
`), widthQuery.sm);
const StyledRouterLink = styled(Link$1)(_t3$2 || (_t3$2 = _$9`
  ${0}
  &:hover {
    text-decoration: none;
  }
`), DropdownLinkStyles);
const ProposalCardOverview = ({
  loading,
  proposal,
  proposalTypes,
  sensitiveProposalTypes,
  customProposalTypeLabels,
  daoChain,
  daoId,
  allowLinks
}) => {
  const theme = useTheme();
  const isMobile = useBreakpoint(widthQuery.sm);
  const isMd = useBreakpoint(widthQuery.md);
  const {
    profile: submitterProfile
  } = useProfile({
    address: proposal.createdBy
  });
  return jsxs(OverviewBox, Object.assign({
    "$allowLinks": allowLinks
  }, {
    children: [jsx(OverviewHeader, {
      loading: loading,
      proposal: proposal,
      proposalTypes: proposalTypes,
      sensitiveProposalTypes: sensitiveProposalTypes,
      customProposalTypeLabels: customProposalTypeLabels,
      daoChain: daoChain,
      daoId: daoId,
      allowLinks: allowLinks
    }), jsx(ParLg, Object.assign({
      className: "title"
    }, {
      children: proposal.title
    })), jsx(ParMd, Object.assign({
      className: "description",
      color: theme.secondary.step11
    }, {
      children: charLimit(proposal.description, 145)
    })), isMd && allowLinks && jsx(StyledRouterLink, Object.assign({
      to: `/molochV3/${daoChain}/${daoId}/proposal/${proposal.proposalId}`
    }, {
      children: jsx(Button, Object.assign({
        color: "secondary",
        size: "sm",
        fullWidth: isMobile,
        disabled: loading
      }, {
        children: "查看更多"
      }))
    })), jsxs(SubmittedContainer, {
      children: [jsx(ParMd, Object.assign({
        color: theme.secondary.step11,
        className: "submitted-by"
      }, {
        children: "發起人"
      })), jsxs(MemberCard, Object.assign({
        variant: "ghost",
        profile: submitterProfile || {
          address: proposal.createdBy
        }
      }, {
        children: [allowLinks && jsx(MemberCardItem, Object.assign({
          asChild: true
        }, {
          children: jsx(StyledRouterLink, Object.assign({
            to: `/molochV3/${daoChain}/${daoId}/proposal/${proposal.proposalId}`
          }, {
            children: "查看資訊"
          }))
        })), jsx(MemberCardExplorerLink, Object.assign({
          explorerNetworkId: daoChain,
          profileAddress: (submitterProfile === null || submitterProfile === void 0 ? void 0 : submitterProfile.address) || proposal.createdBy
        }, {
          children: "在Etherscan查看"
        })), jsx(MemberCardCopyAddress, Object.assign({
          profileAddress: (submitterProfile === null || submitterProfile === void 0 ? void 0 : submitterProfile.address) || proposal.createdBy
        }, {
          children: "複製地址"
        }))]
      })), proposal.proposedBy && proposal.proposedBy !== proposal.createdBy && jsxs(Fragment, {
        children: [jsx(ParMd, Object.assign({
          color: theme.secondary.step11,
          className: "submitted-by"
        }, {
          children: "through"
        })), jsxs(MemberCard, Object.assign({
          variant: "ghost",
          profile: {
            address: proposal.proposedBy
          }
        }, {
          children: [allowLinks && jsx(MemberCardItem, Object.assign({
            asChild: true
          }, {
            children: jsx(StyledRouterLink, Object.assign({
              to: `/molochv3/${daoChain}/${daoId}/members/${proposal.proposedBy}`
            }, {
              children: "查看資訊"
            }))
          })), jsx(MemberCardExplorerLink, Object.assign({
            explorerNetworkId: daoChain,
            profileAddress: proposal.proposedBy
          }, {
            children: "在Etherscan查看"
          })), jsx(MemberCardCopyAddress, Object.assign({
            profileAddress: proposal.proposedBy
          }, {
            children: "複製地址"
          }))]
        }))]
      })]
    })]
  }));
};
const OverviewContainer = styled.div(_t4$1 || (_t4$1 = _$9`
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  @media ${0} {
    align-items: center;
    margin-bottom: 2rem;
  }
`), widthQuery.md);
const HeaderContainer = styled.div(_t5$1 || (_t5$1 = _$9`
  display: flex;
`));
const StyledPropType = styled.span(_t6$1 || (_t6$1 = _$9`
  color: ${0};
`), ({
  theme,
  $warning
}) => $warning && theme.warning.step9);
const WarningIcon = styled(RiErrorWarningLine)(_t7$1 || (_t7$1 = _$9`
  color: ${0};
  height: 2rem;
  width: 2rem;
  margin-right: 0.5rem;
`), ({
  theme
}) => theme.warning.step9);
const PropIdText = styled(ParSm)(_t8 || (_t8 = _$9`
  margin-right: 0.5rem;
`));
const OverviewHeader = ({
  loading,
  proposal,
  proposalTypes,
  sensitiveProposalTypes,
  customProposalTypeLabels,
  daoChain,
  daoId,
  allowLinks
}) => {
  const theme = useTheme();
  const isMobile = useBreakpoint(widthQuery.md);
  return jsx(OverviewContainer, {
    children: isMobile ? jsxs(Fragment, {
      children: [jsxs(HeaderContainer, {
        children: [jsxs(PropIdText, Object.assign({
          color: theme.secondary.step11
        }, {
          children: [proposal.proposalId, " |"]
        })), sensitiveProposalTypes[proposal.proposalType] && jsx(Icon, Object.assign({
          label: "Warning"
        }, {
          children: jsx(WarningIcon, {})
        })), jsx(ParSm, Object.assign({
          color: sensitiveProposalTypes[proposal.proposalType] ? theme.warning.step9 : theme.secondary.step11
        }, {
          children: getProposalTypeLabel(proposal.proposalType, Object.assign(Object.assign({}, proposalTypes), customProposalTypeLabels))
        }))]
      }), jsx(Tooltip, {
        content: formatShortDateTimeFromSeconds(proposal.createdAt),
        triggerEl: jsx(RiTimeLine, {
          color: theme.secondary.step9,
          size: "1.6rem"
        })
      })]
    }) : jsxs(Fragment, {
      children: [jsxs(HeaderContainer, {
        children: [jsxs(PropIdText, Object.assign({
          color: theme.secondary.step11
        }, {
          children: [proposal.proposalId, " |"]
        })), sensitiveProposalTypes[proposal.proposalType] && jsx(Icon, Object.assign({
          label: "Warning"
        }, {
          children: jsx(WarningIcon, {})
        })), jsxs(ParSm, Object.assign({
          color: theme.secondary.step11
        }, {
          children: [jsx(StyledPropType, Object.assign({
            "$warning": sensitiveProposalTypes[proposal.proposalType]
          }, {
            children: getProposalTypeLabel(proposal.proposalType, Object.assign(Object.assign({}, proposalTypes), customProposalTypeLabels))
          })), ' ', "| ", formatShortDateTimeFromSeconds(proposal.createdAt)]
        }))]
      }), allowLinks && jsx(StyledRouterLink, Object.assign({
        to: `/molochV3/${daoChain}/${daoId}/proposal/${proposal.proposalId}`
      }, {
        children: jsx(Button, Object.assign({
          color: "secondary",
          size: "sm",
          disabled: loading
        }, {
          children: "查看更多"
        }))
      }))]
    })
  });
};

let _$8 = t => t,
  _t$8;
const VoteBarBox = styled.div(_t$8 || (_t$8 = _$8`
  width: 100%;
  margin-bottom: 1.2rem;
`));
const VotingBar = ({
  proposal
}) => {
  const percentages = useMemo(() => {
    return [{
      percentage: `${percentage(Number(proposal.yesBalance), Number(proposal.dao.totalShares))}%`,
      color: mintDark.mint10
    }, {
      percentage: `${percentage(Number(proposal.noBalance), Number(proposal.dao.totalShares))}%`,
      color: tomatoDark.tomato10
    }];
  }, [proposal]);
  return jsx(VoteBarBox, {
    children: jsx(Progress, {
      backgroundColor: slateDark.slate8,
      progressSection: percentages
    })
  });
};

var uncurryThis$1 = functionUncurryThis;

// `thisNumberValue` abstract operation
// https://tc39.es/ecma262/#sec-thisnumbervalue
var thisNumberValue$1 = uncurryThis$1(1.0.valueOf);

var toIntegerOrInfinity$1 = toIntegerOrInfinity$4;
var toString = toString$5;
var requireObjectCoercible = requireObjectCoercible$5;

var $RangeError$1 = RangeError;

// `String.prototype.repeat` method implementation
// https://tc39.es/ecma262/#sec-string.prototype.repeat
var stringRepeat = function repeat(count) {
  var str = toString(requireObjectCoercible(this));
  var result = '';
  var n = toIntegerOrInfinity$1(count);
  if (n < 0 || n == Infinity) throw $RangeError$1('Wrong number of repetitions');
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;
  return result;
};

var $ = _export;
var uncurryThis = functionUncurryThis;
var toIntegerOrInfinity = toIntegerOrInfinity$4;
var thisNumberValue = thisNumberValue$1;
var $repeat = stringRepeat;
var fails = fails$g;

var $RangeError = RangeError;
var $String = String;
var floor = Math.floor;
var repeat = uncurryThis($repeat);
var stringSlice = uncurryThis(''.slice);
var nativeToFixed = uncurryThis(1.0.toFixed);

var pow = function (x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};

var log = function (x) {
  var n = 0;
  var x2 = x;
  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }
  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  } return n;
};

var multiply = function (data, n, c) {
  var index = -1;
  var c2 = c;
  while (++index < 6) {
    c2 += n * data[index];
    data[index] = c2 % 1e7;
    c2 = floor(c2 / 1e7);
  }
};

var divide = function (data, n) {
  var index = 6;
  var c = 0;
  while (--index >= 0) {
    c += data[index];
    data[index] = floor(c / n);
    c = (c % n) * 1e7;
  }
};

var dataToString = function (data) {
  var index = 6;
  var s = '';
  while (--index >= 0) {
    if (s !== '' || index === 0 || data[index] !== 0) {
      var t = $String(data[index]);
      s = s === '' ? t : s + repeat('0', 7 - t.length) + t;
    }
  } return s;
};

var FORCED = fails(function () {
  return nativeToFixed(0.00008, 3) !== '0.000' ||
    nativeToFixed(0.9, 0) !== '1' ||
    nativeToFixed(1.255, 2) !== '1.25' ||
    nativeToFixed(1000000000000000128.0, 0) !== '1000000000000000128';
}) || !fails(function () {
  // V8 ~ Android 4.3-
  nativeToFixed({});
});

// `Number.prototype.toFixed` method
// https://tc39.es/ecma262/#sec-number.prototype.tofixed
$({ target: 'Number', proto: true, forced: FORCED }, {
  toFixed: function toFixed(fractionDigits) {
    var number = thisNumberValue(this);
    var fractDigits = toIntegerOrInfinity(fractionDigits);
    var data = [0, 0, 0, 0, 0, 0];
    var sign = '';
    var result = '0';
    var e, z, j, k;

    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation
    if (fractDigits < 0 || fractDigits > 20) throw $RangeError('Incorrect fraction digits');
    // eslint-disable-next-line no-self-compare -- NaN check
    if (number != number) return 'NaN';
    if (number <= -1e21 || number >= 1e21) return $String(number);
    if (number < 0) {
      sign = '-';
      number = -number;
    }
    if (number > 1e-21) {
      e = log(number * pow(2, 69, 1)) - 69;
      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if (e > 0) {
        multiply(data, 0, z);
        j = fractDigits;
        while (j >= 7) {
          multiply(data, 1e7, 0);
          j -= 7;
        }
        multiply(data, pow(10, j, 1), 0);
        j = e - 1;
        while (j >= 23) {
          divide(data, 1 << 23);
          j -= 23;
        }
        divide(data, 1 << j);
        multiply(data, 1, 1);
        divide(data, 2);
        result = dataToString(data);
      } else {
        multiply(data, 0, z);
        multiply(data, 1 << -e, 0);
        result = dataToString(data) + repeat('0', fractDigits);
      }
    }
    if (fractDigits > 0) {
      k = result.length;
      result = sign + (k <= fractDigits
        ? '0.' + repeat('0', fractDigits - k) + result
        : stringSlice(result, 0, k - fractDigits) + '.' + stringSlice(result, k - fractDigits));
    } else {
      result = sign + result;
    } return result;
  }
});

let _$7 = t => t,
  _t$7,
  _t2$2,
  _t3$1,
  _t4,
  _t5,
  _t6,
  _t7;
const TemplateBox = styled.div(_t$7 || (_t$7 = _$7`
  display: flex;
  flex-direction: column;
  height: 100%;

  .top-section {
    display: flex;
    margin-bottom: 2.4rem;
    justify-content: space-between;
    @media ${0} {
      margin-bottom: 1.2rem;
    }
  }
  .middle-section {
    height: 100%;
    margin-bottom: auto;
    @media ${0} {
      margin-bottom: 2rem;
    }
  }
  .bottom-section {
    margin-top: auto;
  }
`), widthQuery.sm, widthQuery.sm);
const QuorumBox = styled.div(_t2$2 || (_t2$2 = _$7`
  display: flex;
  align-items: center;
  svg {
    margin-right: 1.2rem;
  }
`));
const QuorumDisplay = ({
  yesPerc,
  daoQuorum
}) => {
  const theme = useTheme();
  return jsx(Tooltip, {
    triggerEl: jsxs(QuorumBox, {
      children: [jsx(MdOutlineGavel, {
        color: theme.secondary.step11,
        size: "1.4rem"
      }), ' ', jsxs(ParMd, Object.assign({
        color: theme.secondary.step11
      }, {
        children: [Number(yesPerc).toFixed(0), "/", daoQuorum, "%"]
      })), ' ']
    }),
    content: `DAO must meet a quorum of ${daoQuorum}% to pass a proposal.`,
    side: "bottom"
  });
};
const VerdictBox = styled.div(_t3$1 || (_t3$1 = _$7`
  display: flex;
  align-items: center;
  svg {
    margin-right: 0.6rem;
  }
`));
const ProposalPass = ({
  text
}) => {
  const theme = useTheme();
  return jsxs(VerdictBox, {
    children: [jsx(RiThumbUpLine, {
      size: "1.6rem",
      color: theme.secondary.step11
    }), jsx(ParMd, Object.assign({
      color: theme.secondary.step11
    }, {
      children: text
    }))]
  });
};
const ProposalFail = ({
  text
}) => {
  const theme = useTheme();
  return jsxs(VerdictBox, {
    children: [jsx(RiThumbDownLine, {
      size: "1.6rem",
      color: theme.secondary.step11
    }), jsx(ParMd, Object.assign({
      color: theme.secondary.step11
    }, {
      children: text
    }))]
  });
};
const Verdict = ({
  passed,
  appendText: _appendText = ''
}) => {
  return passed ? jsx(ProposalPass, {
    text: `提案通過${_appendText}`
  }) : jsx(ProposalFail, {
    text: `提案失敗${_appendText}`
  });
};
const VoteStatus = ({
  passing
}) => {
  return passing ? jsx(ProposalPass, {
    text: "提案即將通過"
  }) : jsx(ProposalFail, {
    text: "提案即將失敗"
  });
};
const VotingResults = ({
  isVoting,
  proposal
}) => {
  const hasQuorum = checkHasQuorum({
    yesVotes: Number(proposal.yesBalance),
    totalShares: Number(proposal.dao.totalShares),
    quorumPercent: Number(proposal.dao.quorumPercent)
  });
  const didPass = Number(proposal.yesBalance) > Number(proposal.noBalance) && hasQuorum;
  return isVoting ? jsx(VoteStatus, {
    passing: didPass
  }) : jsx(Verdict, {
    passed: didPass
  });
};
const ActionTemplate = ({
  helperDisplay,
  statusDisplay,
  main,
  proposal
}) => {
  const theme = useTheme();
  const isMobile = useBreakpoint(widthQuery.sm);
  const displayUI = useMemo(() => {
    if (typeof statusDisplay === 'string') {
      return jsx(ParMd, {
        children: statusDisplay
      });
    }
    return statusDisplay;
  }, [statusDisplay]);
  const helperUI = useMemo(() => {
    if (typeof helperDisplay === 'string') {
      return jsxs(ParMd, Object.assign({
        color: theme.secondary.step11
      }, {
        children: [' ', jsx(Italic, {
          children: helperDisplay
        })]
      }));
    }
    return helperDisplay;
  }, [helperDisplay, theme]);
  const hideQuorum = proposal.dao.quorumPercent === '0';
  const yesPerc = percentage(Number(proposal.yesBalance), Number(proposal.dao.totalShares));
  return jsxs(TemplateBox, {
    children: [jsxs("div", Object.assign({
      className: "top-section"
    }, {
      children: [displayUI, isMobile || hideQuorum || jsx(QuorumDisplay, {
        yesPerc: yesPerc,
        daoQuorum: proposal.dao.quorumPercent
      })]
    })), jsx("div", Object.assign({
      className: "middle-section"
    }, {
      children: main
    })), jsx("div", Object.assign({
      className: "bottom-section"
    }, {
      children: helperUI
    }))]
  });
};
const GasBox = styled.div(_t4 || (_t4 = _$7`
  display: flex;
  align-items: center;
  svg {
    margin-right: 1.2rem;
    padding: 0;
  }
`));
const GasDisplay = ({
  gasAmt,
  daoChain
}) => {
  var _a, _b;
  const theme = useTheme();
  const [estimate, setEstimate] = useState();
  const {
    networks
  } = useDHConnect();
  useEffect(() => {
    const getGasEst = () => __awaiter(void 0, void 0, void 0, function* () {
      if (gasAmt) {
        const est = yield getGasCostEstimate(gasAmt, daoChain);
        const estEth = est && Number(toWholeUnits(est.toFixed())).toFixed(10);
        setEstimate(estEth);
      }
    });
    if (daoChain && gasAmt) {
      getGasEst();
    }
  }, [daoChain, gasAmt]);
  const isArbitrum = daoChain === '0xa4b1';
  let content;
  if (isArbitrum) {
    content = `Gas estimate: ${estimate} ${daoChain && ((_a = networks === null || networks === void 0 ? void 0 : networks[daoChain]) === null || _a === void 0 ? void 0 : _a.symbol)}. Due to the way Arbitrum handles gas prices the fee displayed in your wallet may be higher than the actual cost. In most cases the majority of gas is refunded`;
  } else if (!estimate) {
    content = `Unable to estimate gas for this execution transaction. It might be best to manually set a high gas limit. In most cases the majority of gas is refunded`;
  } else {
    content = `If gas is less than ${estimate} ${daoChain && ((_b = networks === null || networks === void 0 ? void 0 : networks[daoChain]) === null || _b === void 0 ? void 0 : _b.symbol)}, the proposal will likely fail.`;
  }
  return jsx(Tooltip, {
    triggerEl: jsxs(GasBox, {
      children: [jsx(RiGasStationLine, {
        color: theme.primary.step9,
        size: "1.6rem"
      }), jsx(ParMd, Object.assign({
        color: theme.primary.step9
      }, {
        children: "Min. gas required"
      }))]
    }),
    content: content,
    side: "bottom"
  });
};
const VoteUpButton = styled(GatedButton)(_t5 || (_t5 = _$7`
  background-color: ${0};
  border: 1px solid ${0};
  color: ${0};
  min-width: 7rem;

  &:hover {
    background-color: ${0};
    border: 1px solid ${0};
  }
  :focus {
    background-color: ${0};
    border: 1px solid ${0};
  }
  :active {
    background-color: ${0};
    border: 1px solid ${0};
  }
  :disabled {
    background-color: ${0};
    border: 1px solid ${0};
  }
`), mintDark.mint10, mintDark.mint10, mintDark.mint1, mintDark.mint11, mintDark.mint11, mintDark.mint11, mintDark.mint11, mintDark.mint10, mintDark.mint10, mintDark.mint12, mintDark.mint12);
const VoteDownButton = styled(GatedButton)(_t6 || (_t6 = _$7`
  background-color: ${0};
  border: 1px solid ${0};
  color: ${0};
  min-width: 7rem;

  &:hover {
    background-color: ${0};
    border: 1px solid ${0};
  }
  :focus {
    background-color: ${0};
    border: 1px solid ${0};
  }
  :active {
    background-color: ${0};
    border: 1px solid ${0};
  }
  :disabled {
    background-color: ${0};
    border: 1px solid ${0};
  }
`), tomatoDark.tomato10, tomatoDark.tomato10, tomatoDark.tomato1, tomatoDark.tomato11, tomatoDark.tomato11, tomatoDark.tomato11, tomatoDark.tomato11, tomatoDark.tomato10, tomatoDark.tomato10, tomatoDark.tomato12, tomatoDark.tomato12);
const VoteBox = styled.div(_t7 || (_t7 = _$7`
  display: flex;
  align-items: center;
  justify-content: space-between;
`));

let _$6 = t => t,
  _t$6;
const Link = styled(ExplorerLink)(_t$6 || (_t$6 = _$6`
  font-size: inherit;
`));
const ActionFailed = ({
  proposal,
  daoChain
}) => {
  return jsx(ActionTemplate, {
    proposal: proposal,
    statusDisplay: "External Action Failed",
    main: jsx(VotingBar, {
      proposal: proposal
    }),
    helperDisplay: jsx(ParSm, {
      children: jsxs(Italic, {
        children: ["The external contract interaction failed. See", ' ', jsx(Link, Object.assign({
          address: proposal.processTxHash,
          type: "tx",
          chainId: daoChain
        }, {
          children: "transaction details"
        })), ' ', "for more information."]
      })
    })
  });
};

const Cancelled = ({
  proposal
}) => {
  return jsx(ActionTemplate, {
    proposal: proposal,
    statusDisplay: "提案已取消",
    main: jsx(VotingBar, {
      proposal: proposal
    })
  });
};

const Expired = ({
  proposal
}) => {
  return jsx(ActionTemplate, {
    proposal: proposal,
    statusDisplay: "提案已過期",
    main: jsxs(Fragment, {
      children: [jsx(VotingBar, {
        proposal: proposal
      }), jsx(Verdict, {
        passed: false
      }), ' ']
    })
  });
};

const getFailReason = ({
  proposal,
  userApproved,
  userVotePower
}) => {
  if (!checkHasQuorum({
    yesVotes: Number(proposal.yesBalance),
    quorumPercent: Number(proposal.dao.quorumPercent),
    totalShares: Number(proposal.dao.totalShares)
  })) {
    return '未達法定人數';
  }
  if (userApproved && userVotePower) {
    return `你投了 ${userApproved ? '贊同' : '反對'} (${formatShares(userVotePower)})`;
  }
  return undefined;
};
const Failed = ({
  proposal
}) => {
  const {
    address
  } = useDHConnect();
  const percentNo = roundedPercentage(Number(proposal.noBalance), Number(proposal.dao.totalShares));
  const userVoteData = useMemo(() => {
    var _a;
    if (address && proposal) {
      return (_a = proposal === null || proposal === void 0 ? void 0 : proposal.votes) === null || _a === void 0 ? void 0 : _a.find(voteData => {
        var _a, _b, _c, _d;
        return ((_c = (_b = (_a = voteData === null || voteData === void 0 ? void 0 : voteData.member) === null || _a === void 0 ? void 0 : _a.memberAddress) === null || _b === void 0 ? void 0 : _b.toLowerCase) === null || _c === void 0 ? void 0 : _c.call(_b)) === ((_d = address === null || address === void 0 ? void 0 : address.toLowerCase) === null || _d === void 0 ? void 0 : _d.call(address));
      });
    }
  }, [address, proposal]);
  const failDisplay = useMemo(() => {
    return getFailReason({
      proposal,
      userApproved: userVoteData === null || userVoteData === void 0 ? void 0 : userVoteData.approved,
      userVotePower: userVoteData === null || userVoteData === void 0 ? void 0 : userVoteData.balance
    });
  }, [proposal, userVoteData]);
  return jsx(ActionTemplate, {
    proposal: proposal,
    statusDisplay: "提案失敗",
    main: jsxs(Fragment, {
      children: [jsx(VotingBar, {
        proposal: proposal
      }), jsx(Verdict, {
        passed: false,
        appendText: ` - ${percentNo}% No`
      })]
    }),
    helperDisplay: failDisplay
  });
};

const GracePeriod = ({
  proposal
}) => {
  const {
    address
  } = useDHConnect();
  const userVoteData = useMemo(() => {
    var _a;
    if (address && proposal) {
      return (_a = proposal === null || proposal === void 0 ? void 0 : proposal.votes) === null || _a === void 0 ? void 0 : _a.find(voteData => {
        var _a, _b, _c, _d;
        return ((_c = (_b = (_a = voteData === null || voteData === void 0 ? void 0 : voteData.member) === null || _a === void 0 ? void 0 : _a.memberAddress) === null || _b === void 0 ? void 0 : _b.toLowerCase) === null || _c === void 0 ? void 0 : _c.call(_b)) === ((_d = address === null || address === void 0 ? void 0 : address.toLowerCase) === null || _d === void 0 ? void 0 : _d.call(address));
      });
    }
  }, [address, proposal]);
  const readableTime = useMemo(() => {
    return baalTimeToNow(proposal.graceEnds);
  }, [proposal]);
  const userVoteDisplay = userVoteData && `你投了 ${userVoteData.approved ? '贊同' : '反對'} (${formatShares(userVoteData.balance)})`;
  return jsx(ActionTemplate, {
    proposal: proposal,
    statusDisplay: jsxs(ParMd, {
      children: ["Grace ends in ", jsx(TintSecondary, {
        children: readableTime
      })]
    }),
    main: jsxs(Fragment, {
      children: [jsx(VotingBar, {
        proposal: proposal
      }), jsx(VotingResults, {
        proposal: proposal,
        isVoting: false
      })]
    }),
    helperDisplay: userVoteDisplay
  });
};

const Passed = ({
  proposal
}) => {
  const {
    address
  } = useDHConnect();
  const userVoteData = useMemo(() => {
    var _a;
    if (address && proposal) {
      return (_a = proposal === null || proposal === void 0 ? void 0 : proposal.votes) === null || _a === void 0 ? void 0 : _a.find(voteData => {
        var _a, _b, _c, _d;
        return ((_c = (_b = (_a = voteData === null || voteData === void 0 ? void 0 : voteData.member) === null || _a === void 0 ? void 0 : _a.memberAddress) === null || _b === void 0 ? void 0 : _b.toLowerCase) === null || _c === void 0 ? void 0 : _c.call(_b)) === ((_d = address === null || address === void 0 ? void 0 : address.toLowerCase) === null || _d === void 0 ? void 0 : _d.call(address));
      });
    }
  }, [address, proposal]);
  const percentYes = roundedPercentage(Number(proposal.yesBalance), Number(proposal.dao.totalShares));
  const userVoteDisplay = userVoteData && `你投了 ${userVoteData.approved ? '贊同' : '反對'} (${formatShares(userVoteData.balance)})`;
  return jsx(ActionTemplate, {
    proposal: proposal,
    statusDisplay: "提案通過",
    main: jsxs(Fragment, {
      children: [jsx(VotingBar, {
        proposal: proposal
      }), jsx(Verdict, {
        passed: true,
        appendText: ` - ${percentYes}% Yes`
      })]
    }),
    helperDisplay: userVoteDisplay
  });
};

const CONTRACT = {
  CURRENT_DAO: {
    type: 'static',
    contractName: 'Current DAO (Baal)',
    abi: LOCAL_ABI.BAAL,
    targetAddress: '.daoId'
  }
};
const ACTION_TX = {
  SPONSOR: {
    id: 'SPONSOR',
    contract: CONTRACT.CURRENT_DAO,
    method: 'sponsorProposal'
  },
  VOTE: {
    id: 'VOTE',
    contract: CONTRACT.CURRENT_DAO,
    method: 'submitVote'
  },
  PROCESS: {
    id: 'PROCESS',
    contract: CONTRACT.CURRENT_DAO,
    method: 'processProposal'
  },
  CANCEL: {
    id: 'CANCEL',
    contract: CONTRACT.CURRENT_DAO,
    method: 'cancelProposal'
  }
};

let _$5 = t => t,
  _t$5;
const ProcessBox = styled.div(_t$5 || (_t$5 = _$5`
  display: flex;
  justify-content: flex-start;
  .execute {
    margin-left: auto;
  }
  @media ${0} {
    flex-direction: column;
    gap: 1.2rem;
    .execute {
      min-width: 0;
      width: 100%;
    }
  }
`), widthQuery.sm);
const eligibableStatuses = [0, 6, 7, 3];
const checkCanProcess = ({
  daoId,
  daoChain,
  prevProposalId,
  setCanProcess
}) => __awaiter(void 0, void 0, void 0, function* () {
  try {
    // const state = await createContract({
    //   address: daoId,
    //   abi: LOCAL_ABI.BAAL,
    //   chainId: daoChain,
    // })['state'](prevProposalId);
    const client = createViemClient({
      chainId: daoChain
    });
    const state = yield client.readContract({
      abi: LOCAL_ABI.BAAL,
      address: daoId,
      functionName: 'state',
      args: [prevProposalId]
    });
    console.log('state', state);
    setCanProcess(eligibableStatuses.some(status => status === state) ? true : 'Another proposal in the DAO needs to executed first.');
  } catch (error) {
    setCanProcess('Network Error. Could not check for Proposal status');
  }
});
const ReadyForProcessing = ({
  lifeCycleFnsOverride,
  proposal,
  daoChain,
  daoId
}) => {
  const {
    chainId
  } = useDHConnect();
  const {
    fireTransaction
  } = useTxBuilder();
  const {
    errorToast,
    defaultToast,
    successToast
  } = useToast();
  const isMobile = useBreakpoint(widthQuery.sm);
  const [canProcess, setCanProcess] = React.useState('Checking execution data.');
  const [isLoading, setIsLoading] = React.useState(false);
  const processProposal = () => __awaiter(void 0, void 0, void 0, function* () {
    var _a;
    const {
      proposalId,
      proposalData,
      actionGasEstimate
    } = proposal;
    // Usually a proposal actionGasEstimate === 0 when the safe vault takes longer to
    // be indexed by the Gnosis API (a DAO was recently summonned)
    // or when a proposal is submitted through a 3rd party contract with baalGas->0 (e.g. TributeMinion)
    if (!proposalId) return;
    setIsLoading(true);
    (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onActionTriggered) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride);
    yield fireTransaction({
      tx: Object.assign(Object.assign({}, ACTION_TX.PROCESS), {
        staticArgs: [proposalId, proposalData],
        staticOverrides: {
          gasLimit: getProcessingGasLimit(actionGasEstimate, chainId)
        }
      }),
      lifeCycleFns: {
        onTxError: error => {
          var _a;
          const errMsg = handleErrorMessage({
            error
          });
          errorToast({
            title: 'Execution Failed',
            description: errMsg
          });
          (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onTxError) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride, error);
          setIsLoading(false);
        },
        onTxSuccess: (...args) => {
          var _a;
          defaultToast({
            title: 'Execution Success',
            description: 'Please wait for subgraph to sync'
          });
          (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onTxSuccess) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride, ...args);
        },
        onPollError: error => {
          var _a;
          const errMsg = handleErrorMessage({
            error
          });
          errorToast({
            title: 'Poll Error',
            description: errMsg
          });
          (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onPollError) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride, error);
          setIsLoading(false);
        },
        onPollSuccess: (...args) => {
          var _a;
          successToast({
            title: '提案執行成功',
            description: '提案已執行'
          });
          (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onPollSuccess) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride, ...args);
          setIsLoading(false);
        }
      }
    });
  });
  useEffect(() => {
    if (daoId && isValidNetwork(daoChain)) {
      checkCanProcess({
        daoChain,
        daoId,
        prevProposalId: proposal.prevProposalId,
        setCanProcess
      });
    }
  }, [proposal, daoId, daoChain]);
  const isConnectedToDao = chainId === daoChain ? true : 'You are not connected to the same network as the DAO';
  const isNotLoading = !isLoading ? true : 'Please wait for transaction to complete';
  const percentYes = roundedPercentage(Number(proposal.yesBalance), Number(proposal.dao.totalShares));
  const failedQuroum = !checkHasQuorum({
    yesVotes: Number(proposal.yesBalance),
    quorumPercent: Number(proposal.dao.quorumPercent),
    totalShares: Number(proposal.dao.totalShares)
  });
  return jsx(ActionTemplate, {
    proposal: proposal,
    statusDisplay: "Ready for Execution",
    main: jsxs(Fragment, {
      children: [jsx(VotingBar, {
        proposal: proposal
      }), jsx(Verdict, {
        passed: !failedQuroum,
        appendText: !failedQuroum ? ` - ${percentYes}% Yes` : ' - 未達法定人數'
      })]
    }),
    helperDisplay: jsxs(ProcessBox, {
      children: [Number(proposal.actionGasEstimate) > 0 && jsx(GasDisplay, {
        gasAmt: proposal.actionGasEstimate,
        daoChain: daoChain
      }), jsx(GatedButton, Object.assign({
        size: "sm",
        onClick: processProposal,
        className: "execute",
        rules: [isConnectedToDao, isNotLoading, canProcess],
        fullWidth: isMobile
      }, {
        children: "Execute"
      }))]
    })
  });
};

const Unsponsored = ({
  lifeCycleFnsOverride,
  proposal,
  daoChain,
  daoId
}) => {
  const {
    address
  } = useDHConnect();
  const {
    fireTransaction
  } = useTxBuilder();
  const {
    connectedMember
  } = useConnectedMember({
    daoChain,
    daoId,
    memberAddress: address
  });
  const {
    chainId
  } = useDHConnect();
  const {
    errorToast,
    defaultToast,
    successToast
  } = useToast();
  const [isLoading, setIsLoading] = React.useState(false);
  const {
    dao
  } = useDaoData();
  const isMobile = useBreakpoint(widthQuery.sm);
  const theme = useTheme();
  const handleSponsor = () => {
    var _a;
    const {
      proposalId
    } = proposal;
    if (!proposalId) return;
    setIsLoading(true);
    (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onActionTriggered) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride);
    fireTransaction({
      tx: Object.assign(Object.assign({}, ACTION_TX.SPONSOR), {
        staticArgs: [proposalId]
      }),
      lifeCycleFns: {
        onTxError: error => {
          var _a;
          const errMsg = handleErrorMessage({
            error
          });
          errorToast({
            title: 'Sponsor Failed',
            description: errMsg
          });
          (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onTxError) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride, error);
          setIsLoading(false);
        },
        onTxSuccess: (...args) => {
          var _a;
          defaultToast({
            title: 'Sponsor Success',
            description: 'Please wait for subgraph to sync'
          });
          (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onTxSuccess) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride, ...args);
        },
        onPollError: error => {
          var _a;
          const errMsg = handleErrorMessage({
            error
          });
          errorToast({
            title: 'Poll Error',
            description: errMsg
          });
          (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onPollError) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride, error);
          setIsLoading(false);
        },
        onPollSuccess: (...args) => {
          var _a;
          successToast({
            title: '贊助成功',
            description: '提案已被贊助'
          });
          (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onPollSuccess) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride, ...args);
          setIsLoading(false);
        }
      }
    });
  };
  const hasDelegatedShares = useMemo(() => {
    if (dao && isNumberish(connectedMember === null || connectedMember === void 0 ? void 0 : connectedMember.delegateShares) && isNumberish(dao.sponsorThreshold)) {
      return Number(connectedMember === null || connectedMember === void 0 ? void 0 : connectedMember.delegateShares) >= Number(dao === null || dao === void 0 ? void 0 : dao.sponsorThreshold) ? true : `${fromWei(dao.sponsorThreshold)} delegated voting stake tokens are required to sponsor this proposal.`;
    }
    return 'Subgraph data not loading or is not in sync';
  }, [dao, connectedMember]);
  const isConnectedToDao = chainId === daoChain ? true : 'You are not connected to the same network as the DAO';
  const notDelegating = useMemo(() => {
    if ((connectedMember === null || connectedMember === void 0 ? void 0 : connectedMember.delegatingTo) && isNumberish(connectedMember === null || connectedMember === void 0 ? void 0 : connectedMember.delegateShares)) {
      return Number(connectedMember.delegateShares) > 0 ? true : 'You cannot sponsor a proposal as you have delegated your voting power';
    }
    return 'Connect your wallet';
  }, [connectedMember]);
  return jsx(ActionTemplate, {
    statusDisplay: "Needs a Sponsor",
    proposal: proposal,
    main: jsxs(Fragment, {
      children: [jsx(VotingBar, {
        proposal: proposal
      }), jsx(GatedButton, Object.assign({
        size: "sm",
        rules: [hasDelegatedShares, isConnectedToDao, notDelegating],
        onClick: handleSponsor,
        fullWidth: isMobile
      }, {
        children: isLoading ? jsx(Loading, {
          size: 20
        }) : 'Sponsor Proposal'
      }))]
    }),
    helperDisplay: jsxs(ParSm, Object.assign({
      color: theme.secondary.step11
    }, {
      children: [jsx(Italic, {
        children: PROP_CARD_HELP.UNSPONSORED
      }), typeof notDelegating === 'string' && jsxs(Italic, {
        children: [" ", notDelegating]
      })]
    }))
  });
};

const HasVoted = ({
  proposal,
  approved,
  userVoteBalance,
  readableTime
}) => {
  const voterHelperText = `你投了 ${approved ? '贊同' : '反對'} (${formatShares(userVoteBalance || '0')})`;
  return jsx(ActionTemplate, {
    proposal: proposal,
    statusDisplay: jsxs(ParMd, {
      children: ["投票時間尚餘 ", jsx(TintSecondary, {
        children: readableTime
      })]
    }),
    main: jsxs(Fragment, {
      children: [jsx(VotingBar, {
        proposal: proposal
      }), jsx(VotingResults, {
        proposal: proposal,
        isVoting: true
      })]
    }),
    helperDisplay: voterHelperText
  });
};

var Vote;
(function (Vote) {
  Vote["Yes"] = "yes";
  Vote["No"] = "no";
})(Vote || (Vote = {}));
const HasNotVoted = ({
  lifeCycleFnsOverride,
  proposal,
  readableTime,
  daoChain,
  daoId
}) => {
  const {
    chainId
  } = useDHConnect();
  const {
    address
  } = useDHConnect();
  const {
    connectedMember
  } = useConnectedMember({
    daoChain,
    daoId,
    memberAddress: address
  });
  // const { connectedMember } = useConnectedMember();
  const {
    fireTransaction
  } = useTxBuilder();
  const {
    errorToast,
    defaultToast,
    successToast
  } = useToast();
  const [isLoading, setIsLoading] = React.useState(false);
  const handleVote = e => __awaiter(void 0, void 0, void 0, function* () {
    var _a;
    const {
      proposalId
    } = proposal;
    const vote = e.currentTarget.value;
    if (!proposalId || !vote) return;
    const voteValue = vote === Vote.Yes ? true : false;
    setIsLoading(true);
    (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onActionTriggered) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride);
    yield fireTransaction({
      tx: Object.assign(Object.assign({}, ACTION_TX.VOTE), {
        staticArgs: [proposalId, voteValue]
      }),
      lifeCycleFns: {
        onTxError: error => {
          var _a;
          const errMsg = handleErrorMessage({
            error
          });
          errorToast({
            title: 'Vote Failed',
            description: errMsg
          });
          (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onTxError) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride, error);
          setIsLoading(false);
        },
        onTxSuccess: (...args) => {
          var _a;
          defaultToast({
            title: 'Vote Success',
            description: 'Please wait for subgraph to sync'
          });
          (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onTxSuccess) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride, ...args);
        },
        onPollError: error => {
          var _a;
          const errMsg = handleErrorMessage({
            error
          });
          errorToast({
            title: 'Poll Error',
            description: errMsg
          });
          (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onPollError) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride, error);
          setIsLoading(false);
        },
        onPollSuccess: (...args) => {
          var _a;
          successToast({
            title: '投票成功',
            description: '提案已被贊助'
          });
          (_a = lifeCycleFnsOverride === null || lifeCycleFnsOverride === void 0 ? void 0 : lifeCycleFnsOverride.onPollSuccess) === null || _a === void 0 ? void 0 : _a.call(lifeCycleFnsOverride, ...args);
          setIsLoading(false);
        }
      }
    });
  });
  const readableVotePower = connectedMember && Number(connectedMember === null || connectedMember === void 0 ? void 0 : connectedMember.delegateShares) ? `參與投票 (${formatShares(connectedMember.delegateShares)})` : undefined;
  const hasShares = Number(connectedMember === null || connectedMember === void 0 ? void 0 : connectedMember.delegateShares) ? true : 'You must have voting tokens to vote';
  const isConnectedToDao = chainId === daoChain ? true : 'You are not connected to the same network as the DAO';
  const isNotLoading = !isLoading ? true : 'Please wait for transaction to complete';
  return jsx(ActionTemplate, {
    proposal: proposal,
    statusDisplay: jsxs(ParMd, {
      children: ["投票時間尚餘 ", jsx(TintSecondary, {
        children: readableTime
      })]
    }),
    main: jsxs("div", {
      children: [jsx(VotingBar, {
        proposal: proposal
      }), jsxs(VoteBox, {
        children: [jsxs(VoteDownButton, Object.assign({
          size: "sm",
          rules: [hasShares, isConnectedToDao, isNotLoading],
          value: Vote.No,
          onClick: handleVote
        }, {
          children: ["反對 (", formatShares(proposal.noBalance), ")"]
        })), jsxs(VoteUpButton, Object.assign({
          size: "sm",
          rules: [hasShares, isConnectedToDao, isNotLoading],
          value: Vote.Yes,
          onClick: handleVote
        }, {
          children: ["贊同 (", formatShares(proposal.yesBalance), ")"]
        }))]
      })]
    }),
    helperDisplay: readableVotePower
  });
};

const VotingPeriod = ({
  lifeCycleFnsOverride,
  proposal,
  daoChain,
  daoId
}) => {
  const {
    address
  } = useDHConnect();
  const readableTime = useMemo(() => {
    return baalTimeToNow(proposal.votingEnds);
  }, [proposal]);
  const userVoteData = useMemo(() => {
    var _a;
    if (address && proposal) {
      return (_a = proposal === null || proposal === void 0 ? void 0 : proposal.votes) === null || _a === void 0 ? void 0 : _a.find(voteData => {
        var _a, _b, _c, _d;
        return ((_c = (_b = (_a = voteData === null || voteData === void 0 ? void 0 : voteData.member) === null || _a === void 0 ? void 0 : _a.memberAddress) === null || _b === void 0 ? void 0 : _b.toLowerCase) === null || _c === void 0 ? void 0 : _c.call(_b)) === ((_d = address === null || address === void 0 ? void 0 : address.toLowerCase) === null || _d === void 0 ? void 0 : _d.call(address));
      });
    }
  }, [address, proposal]);
  return userVoteData ? jsx(HasVoted, {
    proposal: proposal,
    approved: userVoteData === null || userVoteData === void 0 ? void 0 : userVoteData.approved,
    readableTime: readableTime,
    userVoteBalance: userVoteData === null || userVoteData === void 0 ? void 0 : userVoteData.balance
  }) : jsx(HasNotVoted, {
    daoId: daoId,
    daoChain: daoChain,
    lifeCycleFnsOverride: lifeCycleFnsOverride,
    proposal: proposal,
    readableTime: readableTime
  });
};

let _$4 = t => t,
  _t$4;
const ActionBox = styled.div(_t$4 || (_t$4 = _$4`
  display: flex;
  flex-direction: column;
  height: 100%;
  min-height: 19.2rem;
  width: 100%;
  @media ${0} {
    min-height: 0;
  }
`), widthQuery.sm);
const ProposalActions = ({
  lifeCycleFnsOverride,
  proposal,
  daoChain,
  daoId
}) => {
  if (proposal.status === PROPOSAL_STATUS.cancelled) {
    return jsx(ActionBox, {
      children: jsx(Cancelled, {
        proposal: proposal
      })
    });
  }
  if (proposal.status === PROPOSAL_STATUS.unsponsored) {
    return jsx(ActionBox, {
      children: jsx(Unsponsored, {
        lifeCycleFnsOverride: lifeCycleFnsOverride,
        proposal: proposal,
        daoChain: daoChain,
        daoId: daoId
      })
    });
  }
  if (proposal.status === PROPOSAL_STATUS.voting) {
    return jsx(ActionBox, {
      children: jsx(VotingPeriod, {
        lifeCycleFnsOverride: lifeCycleFnsOverride,
        proposal: proposal,
        daoChain: daoChain,
        daoId: daoId
      })
    });
  }
  if (proposal.status === PROPOSAL_STATUS.grace) {
    return jsx(ActionBox, {
      children: jsx(GracePeriod, {
        proposal: proposal
      })
    });
  }
  if (proposal.status === PROPOSAL_STATUS.needsProcessing) {
    return jsx(ActionBox, {
      children: jsx(ReadyForProcessing, {
        lifeCycleFnsOverride: lifeCycleFnsOverride,
        proposal: proposal,
        daoChain: daoChain,
        daoId: daoId
      })
    });
  }
  if (proposal.status === PROPOSAL_STATUS.passed) {
    return jsx(ActionBox, {
      children: jsx(Passed, {
        proposal: proposal
      })
    });
  }
  if (proposal.status === PROPOSAL_STATUS.failed) {
    return jsx(ActionBox, {
      children: jsx(Failed, {
        proposal: proposal
      })
    });
  }
  if (proposal.status === PROPOSAL_STATUS.actionFailed) {
    return jsx(ActionBox, {
      children: jsx(ActionFailed, {
        proposal: proposal,
        daoChain: daoChain
      })
    });
  }
  if (proposal.status === PROPOSAL_STATUS.expired) {
    return jsx(ActionBox, {
      children: jsx(Expired, {
        proposal: proposal
      })
    });
  }
  return jsx(ActionBox, {
    children: jsx(ActionTemplate, {
      proposal: proposal,
      statusDisplay: "Status Pending",
      main: jsxs(ParMd, {
        children: [proposal.status, " Proposal Status"]
      })
    })
  });
};

let _$3 = t => t,
  _t$3,
  _t2$1,
  _t3;
const ProposalCardContainer = styled(Card)(_t$3 || (_t$3 = _$3`
  display: flex;
  gap: 3rem;
  width: 100%;

  margin-bottom: 3rem;
  padding: 2.3rem 2.5rem;
  border: none;
  min-height: 23.8rem;
  @media ${0} {
    gap: 2rem;
    flex-direction: column;
    height: auto;
    margin-bottom: 2rem;
  }
`), widthQuery.sm);
const LeftCard = styled.div(_t2$1 || (_t2$1 = _$3`
  width: 100%;
  @media ${0} {
    width: 100%;
    max-width: 100%;
    min-width: 0;
  }
`), widthQuery.sm);
const RightCard = styled.div(_t3 || (_t3 = _$3`
  width: 32rem;
  min-width: 32rem;

  @media ${0} {
    max-width: 100%;
    min-width: 0;
  }
`), widthQuery.sm);
const ProposalCard = ({
  proposal,
  sensitiveProposalTypes: _sensitiveProposalTypes = SENSITIVE_PROPOSAL_TYPES,
  proposalTypes: _proposalTypes = PROPOSAL_TYPE_LABELS,
  daoChain,
  daoId,
  allowLinks: _allowLinks = false,
  customProposalTypeLabels,
  onSuccess,
  onError
}) => {
  const [actionLoading, setActionLoading] = useState(false);
  const lifeCycleFnsOverride = {
    onActionTriggered: () => setActionLoading(true),
    onPollError: () => {
      onError === null || onError === void 0 ? void 0 : onError();
      setActionLoading(false);
    },
    onPollSuccess: () => {
      onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess();
      setActionLoading(false);
    },
    onTxError: () => {
      onError === null || onError === void 0 ? void 0 : onError();
      setActionLoading(false);
    }
  };
  return jsxs(ProposalCardContainer, {
    children: [jsx(LeftCard, {
      children: jsx(ProposalCardOverview, {
        loading: actionLoading,
        proposal: proposal,
        sensitiveProposalTypes: _sensitiveProposalTypes,
        proposalTypes: _proposalTypes,
        customProposalTypeLabels: customProposalTypeLabels,
        daoChain: daoChain,
        daoId: daoId,
        allowLinks: _allowLinks
      })
    }), jsx(RightCard, {
      children: jsx(ProposalActions, {
        lifeCycleFnsOverride: lifeCycleFnsOverride,
        proposal: proposal,
        daoChain: daoChain,
        daoId: daoId
      })
    })]
  });
};

let _$2 = t => t,
  _t$2;
const IconFilter = styled(RiFilterFill)(_t$2 || (_t$2 = _$2`
  height: 1.8rem;
  width: 1.8rem;
  display: flex;
  fill: ${0};
  &:hover {
    fill: ${0};
  }
`), props => props.theme.secondary.step10, props => props.theme.secondary.step10);
const FilterDropdown = ({
  filter,
  toggleFilter
}) => {
  return jsxs(DropdownMenu, {
    children: [jsx(DropdownButtonTrigger, Object.assign({
      color: "secondary",
      IconLeft: IconFilter
    }, {
      children: filter ? `${PROPOSAL_FILTERS[filter]}` : '篩選'
    })), jsx(DropdownContent, Object.assign({
      align: "start"
    }, {
      children: Object.keys(PROPOSAL_FILTERS).map(filterKey => {
        return jsx(DropdownItem, Object.assign({
          asChild: true
        }, {
          children: jsx(Button, Object.assign({
            color: "secondary",
            justify: "flex-start",
            fullWidth: true,
            value: filterKey,
            onClick: toggleFilter,
            IconRight: filter === filterKey ? AiOutlineCheck : undefined,
            className: filter === filterKey ? 'selected' : ''
          }, {
            children: PROPOSAL_FILTERS[filterKey]
          }))
        }), filterKey);
      })
    }))]
  });
};

let _$1 = t => t,
  _t$1;
const AlertContainer = styled(Card)(_t$1 || (_t$1 = _$1`
  display: flex;
  gap: 3rem;
  width: 100%;
  justify-content: center;
  align-items: center;
  margin-bottom: 3rem;
  padding: 2.3rem 2.5rem;
  border: none;
  min-height: 23.8rem;

  @media ${0} {
    gap: 2rem;
    height: auto;
    margin-bottom: 2rem;
  }
`), widthQuery.sm);
const ListAlert = ({
  children
}) => {
  const message = useMemo(() => {
    return typeof children === 'string' ? jsx("div", {
      children: jsx(ParLg, Object.assign({
        className: "warn"
      }, {
        children: children
      }))
    }) : children;
  }, [children]);
  return jsx(AlertContainer, {
    children: message
  });
};

function useDebounce(value, delay) {
  const [debouncedValue, setDebouncedValue] = useState(value);
  useEffect(() => {
    const timer = setTimeout(() => setDebouncedValue(value), delay || 500);
    return () => {
      clearTimeout(timer);
    };
  }, [value, delay]);
  return debouncedValue;
}

const SearchInput = _a => {
  var {
      searchTerm,
      setSearchTerm,
      totalItems,
      noun = {
        singular: 'proposal',
        plural: 'proposals'
      }
    } = _a,
    inputProps = __rest(_a, ["searchTerm", "setSearchTerm", "totalItems", "noun"]);
  const [localSearchTerm, setLocalSearchTerm] = useState('');
  const debouncedSearchTerm = useDebounce(localSearchTerm, 700);
  useEffect(() => {
    if (localSearchTerm !== searchTerm) {
      setSearchTerm(localSearchTerm);
    }
    // TODO: I don't want to fire on these others!!
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [debouncedSearchTerm]);
  const handleSearchTermChange = event => {
    setLocalSearchTerm(prevState => prevState === event.target.value ? '' : event.target.value);
  };
  return jsx(Input, Object.assign({
    icon: BiSearch,
    id: "table-search",
    placeholder: `Search ${totalItems} ${totalItems === 1 ? noun.singular : noun.plural}`,
    onChange: handleSearchTermChange,
    defaultValue: localSearchTerm
  }, inputProps));
};

let _ = t => t,
  _t,
  _t2;
const handleNewFilter = ({
  filterTag,
  dao
}) => {
  if (!filterTag) return;
  const votingPlusGraceDuration = Number(dao === null || dao === void 0 ? void 0 : dao.votingPeriod) + Number(dao === null || dao === void 0 ? void 0 : dao.gracePeriod);
  return statusFilter(PROPOSAL_STATUS[filterTag], votingPlusGraceDuration);
};
const handleSearchFilter = ({
  term
}) => {
  return {
    title_contains_nocase: term
  };
};
const ProposalList = ({
  rightActionEl,
  sensitiveProposalTypes: _sensitiveProposalTypes = SENSITIVE_PROPOSAL_TYPES,
  proposalTypes: _proposalTypes = PROPOSAL_TYPE_LABELS,
  customProposalTypeLabels,
  header,
  onSuccess: onSuccessFromProps,
  onError,
  allowLinks: _allowLinks = false
}) => {
  const {
    proposals,
    isLoading: isLoadingProposals,
    fetchNextPage,
    hasNextPage,
    filterProposals,
    refetch: refetchProposals
  } = useDaoProposals();
  const {
    dao,
    isLoading: isLoadingDao,
    refetch: refetchDao
  } = useDaoData();
  const {
    refetch: refetchMembers
  } = useDaoMembers();
  const {
    daoId,
    daoChain
  } = useCurrentDao();
  const onSuccess = () => {
    // Like MolochContext, this will refetch all on each proposal action
    // we can make this more efficient as needed
    refetchProposals === null || refetchProposals === void 0 ? void 0 : refetchProposals();
    refetchDao === null || refetchDao === void 0 ? void 0 : refetchDao();
    refetchMembers === null || refetchMembers === void 0 ? void 0 : refetchMembers();
    onSuccessFromProps === null || onSuccessFromProps === void 0 ? void 0 : onSuccessFromProps();
  };
  if (!daoId || !daoChain) {
    return jsx(ProposalControls, {
      children: "Current DAO not found"
    });
  }
  if (isLoadingProposals || isLoadingDao) return jsx(ProposalControls, Object.assign({
    header: header,
    rightActionEl: rightActionEl
  }, {
    children: jsx(Loading, {
      size: 120
    })
  }));
  if (!proposals || proposals.length === 0) {
    return jsx(ProposalControls, Object.assign({
      header: header,
      rightActionEl: rightActionEl,
      dao: dao,
      filterProposals: filterProposals
    }, {
      children: jsx(ListAlert, {
        children: "No Proposals Found"
      })
    }));
  }
  return jsxs(ProposalControls, Object.assign({
    filterProposals: filterProposals,
    rightActionEl: rightActionEl,
    header: header,
    dao: dao
  }, {
    children: [proposals === null || proposals === void 0 ? void 0 : proposals.map(proposal => jsx(ProposalCard, {
      proposal: proposal,
      onSuccess: onSuccess,
      onError: onError,
      daoChain: daoChain,
      daoId: daoId,
      sensitiveProposalTypes: _sensitiveProposalTypes,
      proposalTypes: _proposalTypes,
      customProposalTypeLabels: customProposalTypeLabels,
      allowLinks: _allowLinks
    }, proposal.proposalId)), hasNextPage && jsx(Button, Object.assign({
      onClick: () => fetchNextPage(),
      disabled: !hasNextPage,
      variant: "outline",
      size: "sm"
    }, {
      children: "查看更多提案"
    }))]
  }));
};
const ProposalControls = ({
  filterProposals,
  rightActionEl,
  header,
  children,
  dao
}) => {
  const {
    daoId
  } = useCurrentDao();
  const [searchTerm, setSearchTerm] = useState('');
  const [filterTag, setFilter] = useState('');
  const lastFilter = useRef({
    searchTerm,
    filterTag
  });
  useEffect(() => {
    if (!dao || !daoId || !filterProposals) return;
    if (lastFilter.current.searchTerm === searchTerm && lastFilter.current.filterTag === filterTag) return;
    const statusFilter = handleNewFilter({
      filterTag,
      dao
    });
    const searchFilter = handleSearchFilter({
      term: searchTerm
    });
    filterProposals(Object.assign(Object.assign({
      dao: daoId
    }, statusFilter), searchFilter));
    lastFilter.current = {
      searchTerm,
      filterTag
    };
  }, [searchTerm, filterTag, dao, daoId, filterProposals]);
  const handleFilter = e => {
    setFilter(prevState => e.currentTarget.value === prevState ? '' : e.currentTarget.value);
  };
  return jsxs(SingleColumnLayout, Object.assign({
    title: header
  }, {
    children: [jsxs(ActionsContainer, {
      children: [jsxs(SearchFilterContainer, {
        children: [jsx(SearchInput, {
          searchTerm: searchTerm,
          setSearchTerm: setSearchTerm,
          totalItems: Number(dao === null || dao === void 0 ? void 0 : dao.proposalCount) || 0,
          noun: {
            singular: 'proposal',
            plural: 'proposals'
          }
        }), jsx(FilterDropdown, {
          filter: filterTag,
          toggleFilter: handleFilter
        })]
      }), rightActionEl]
    }), children]
  }));
};
const ActionsContainer = styled.div(_t || (_t = _`
  width: 100%;
  display: flex;
  justify-content: space-between;
  margin-bottom: 3rem;
  @media ${0} {
    flex-direction: column;
    gap: 2rem;
  }
`), widthQuery.sm);
const SearchFilterContainer = styled.div(_t2 || (_t2 = _`
  display: flex;
  gap: 2rem;
  @media ${0} {
    flex-direction: column;
  }
`), widthQuery.sm);

export { Container, ContractSettings, DaoOverview, DaoProfile, DaoSettings, DaoTable, DataIndicatorContainer, DataIndicatorLabelMd, GovernanceSettings, ManageDelegate, MemberDataPoint, MemberDisplay, MemberList, MemberProfile, MemberProfileAvatar, MemberProfileCard, MemberProfileMenu, MemberTokens, MembersOverview, MetadataSettings, OverviewHeader, ProposalActionData, ProposalActions, ProposalAddtionalDetails, ProposalCard, ProposalCardOverview, ProposalDetails, ProposalDetailsContainer, ProposalHistory, ProposalList, SafeCard, SafesList, ShamanList, ShamanSettings, TokenSettings, VoteList };
