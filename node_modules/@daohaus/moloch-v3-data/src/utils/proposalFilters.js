"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.statusFilter = void 0;
const utils_1 = require("@daohaus/utils");
const statusFilter = (status, votingPlusGraceDuration) => {
    const now = `${(0, utils_1.nowInSeconds)().toFixed()}`;
    switch (status) {
        case utils_1.PROPOSAL_STATUS['unsponsored']: {
            if (!votingPlusGraceDuration) {
                return;
            }
            const expirationTime = (Number(now) + Number(votingPlusGraceDuration)).toFixed();
            return {
                sponsored: false,
                cancelled: false,
                expirationQueryField_gt: expirationTime,
            };
        }
        case utils_1.PROPOSAL_STATUS['cancelled']: {
            return { cancelled: true };
        }
        case utils_1.PROPOSAL_STATUS['passed']: {
            return { passed: true, actionFailed: false };
        }
        case utils_1.PROPOSAL_STATUS['actionFailed']: {
            return { actionFailed: true };
        }
        case utils_1.PROPOSAL_STATUS['voting']: {
            return { votingStarts_lte: now, votingEnds_gt: now };
        }
        case utils_1.PROPOSAL_STATUS['grace']: {
            return { votingEnds_lte: now, graceEnds_gt: now };
        }
        case utils_1.PROPOSAL_STATUS['expired']: {
            if (!votingPlusGraceDuration) {
                return;
            }
            const expirationTime = (Number(now) + Number(votingPlusGraceDuration)).toFixed();
            return {
                cancelled: false,
                expiration_gt: '0',
                expiration_lt: `${expirationTime}`,
            };
        }
        case utils_1.PROPOSAL_STATUS['needsProcessing']: {
            return { processed: false, currentlyPassing: true, graceEnds_lt: now };
        }
        case utils_1.PROPOSAL_STATUS['failed']: {
            if (!votingPlusGraceDuration) {
                return;
            }
            return {
                currentlyPassing: false,
                graceEnds_lt: now,
                sponsored: true,
                passed: false,
            };
        }
        default: {
            return;
        }
    }
};
exports.statusFilter = statusFilter;
//# sourceMappingURL=proposalFilters.js.map