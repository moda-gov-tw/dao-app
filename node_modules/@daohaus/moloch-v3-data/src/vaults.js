"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.listTokenBalances = void 0;
const tslib_1 = require("tslib");
const viem_1 = require("viem");
const data_fetch_utils_1 = require("@daohaus/data-fetch-utils");
const keychain_utils_1 = require("@daohaus/keychain-utils");
const utils_1 = require("./utils");
const listTokenBalances = ({ networkId, safeAddress, }) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
    const url = keychain_utils_1.ENDPOINTS['GNOSIS_API'][networkId];
    if (!url) {
        return {
            error: (0, data_fetch_utils_1.formatFetchError)({ type: 'INVALID_NETWORK_ERROR' }),
        };
    }
    try {
        const res = yield data_fetch_utils_1.fetch.get(`${url}/safes/${(0, viem_1.getAddress)(safeAddress)}/balances/usd/`);
        return { data: (0, utils_1.transformTokenBalances)(res, safeAddress) };
    }
    catch (err) {
        return {
            error: (0, data_fetch_utils_1.formatFetchError)({ type: 'GNOSIS_ERROR', errorObject: err }),
        };
    }
});
exports.listTokenBalances = listTokenBalances;
//# sourceMappingURL=vaults.js.map